<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SBK Site</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/sidechannel/</link><description>Recent content on SBK Site</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/docs/security/practice/picoctf/crypto/sidechannel/index.xml" rel="self" type="application/rss+xml"/><item><title>PicoCTF - PowerAnalysis Part 1 / Part 2</title><link>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/sidechannel/picoctf---poweranalysis-part-1-_-part-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/practice/picoctf/crypto/sidechannel/picoctf---poweranalysis-part-1-_-part-2/</guid><description>&lt;h1 id="picoctf---poweranalysis-part-1--part-2">
 PicoCTF - PowerAnalysis Part 1 / Part 2
 &lt;a class="anchor" href="#picoctf---poweranalysis-part-1--part-2">#&lt;/a>
&lt;/h1>
&lt;h2 id="background">
 Background
 &lt;a class="anchor" href="#background">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://hackmd.io/@SBK6401/HJNScTc-T">Simple Welcome 0x13(2023 HW - Power Analysis):two:&lt;/a>&lt;/p>
&lt;h2 id="recon">
 Recon
 &lt;a class="anchor" href="#recon">#&lt;/a>
&lt;/h2>
&lt;p>這一題幾乎就和上課教的差不多，只是因為有雜訊，所以要慎選trace point，我是直接看第一個trace的分布，決定採用300~400的point，而不管是利用自己刻的correlation coefficient還是用scipy的pearsonr都一樣可以順利解出key但是如果像homework一樣用numpy的corrcoef會有兩個bytes和正解不一樣，超哭，找超久(10/18更新，如果用自己刻的也是要碰用氣，所以如果可以的話，多送幾個trace，或者多用幾個算correlation coefficient的library)
&lt;img src="https://hackmd.io/_uploads/SJ4YLRnZT.jpg" alt="" />&lt;/p>
&lt;ul>
&lt;li>Part 2的部分幾乎一模一樣，就只是他先幫你紀錄好所有的trace，再讓我們做後續的分析&lt;/li>
&lt;/ul>
&lt;h2 id="exploit">
 Exploit
 &lt;a class="anchor" href="#exploit">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>首先先把資料從server拉下來，在存成json
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pwn &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> string &lt;span style="color:#f92672">import&lt;/span> ascii_letters, digits
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> tqdm &lt;span style="color:#f92672">import&lt;/span> trange
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">gen_plaintext&lt;/span>(length):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(random&lt;span style="color:#f92672">.&lt;/span>choice(ascii_letters &lt;span style="color:#f92672">+&lt;/span> digits) &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(length))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pt &lt;span style="color:#f92672">=&lt;/span> [gen_plaintext(&lt;span style="color:#ae81ff">16&lt;/span>) &lt;span style="color:#66d9ef">for&lt;/span> _ &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">50&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(pt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>json_file &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#66d9ef">None&lt;/span>] &lt;span style="color:#f92672">*&lt;/span> len(pt)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> trange(len(pt)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r &lt;span style="color:#f92672">=&lt;/span> remote(&lt;span style="color:#e6db74">&amp;#39;saturn.picoctf.net&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">52339&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r&lt;span style="color:#f92672">.&lt;/span>sendlineafter(&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;hex: &amp;#39;&lt;/span>, pt[i]&lt;span style="color:#f92672">.&lt;/span>encode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>hex()&lt;span style="color:#f92672">.&lt;/span>encode())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r&lt;span style="color:#f92672">.&lt;/span>recvuntil(&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;power measurement result: &amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pm &lt;span style="color:#f92672">=&lt;/span> r&lt;span style="color:#f92672">.&lt;/span>recvline()&lt;span style="color:#f92672">.&lt;/span>decode()&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> json_file[i] &lt;span style="color:#f92672">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> json_file[i][&lt;span style="color:#e6db74">&amp;#34;pt&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> [ord(digit) &lt;span style="color:#66d9ef">for&lt;/span> digit &lt;span style="color:#f92672">in&lt;/span> pt[i]]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> json_file[i][&lt;span style="color:#e6db74">&amp;#34;pm&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> pm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> r&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>json_object &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>dumps(json_file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;./Crypto/PowerAnalysis- Part 1/trace.json&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> outfile:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> outfile&lt;span style="color:#f92672">.&lt;/span>write(json_object)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>然後再去解析AES key
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> tqdm &lt;span style="color:#f92672">import&lt;/span> trange
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> numpy &lt;span style="color:#66d9ef">as&lt;/span> np
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> copy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> string &lt;span style="color:#f92672">import&lt;/span> ascii_letters, digits
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> numpy &lt;span style="color:#f92672">import&lt;/span> corrcoef
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> matplotlib.pyplot &lt;span style="color:#66d9ef">as&lt;/span> plt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> scipy.stats &lt;span style="color:#f92672">import&lt;/span> pearsonr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jsonFile &lt;span style="color:#f92672">=&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;./PicoCTF/Crypto/PowerAnalysis- Part 1/trace.json&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>j &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>load(jsonFile)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s_box &lt;span style="color:#f92672">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x63&lt;/span>, &lt;span style="color:#ae81ff">0x7C&lt;/span>, &lt;span style="color:#ae81ff">0x77&lt;/span>, &lt;span style="color:#ae81ff">0x7B&lt;/span>, &lt;span style="color:#ae81ff">0xF2&lt;/span>, &lt;span style="color:#ae81ff">0x6B&lt;/span>, &lt;span style="color:#ae81ff">0x6F&lt;/span>, &lt;span style="color:#ae81ff">0xC5&lt;/span>, &lt;span style="color:#ae81ff">0x30&lt;/span>, &lt;span style="color:#ae81ff">0x01&lt;/span>, &lt;span style="color:#ae81ff">0x67&lt;/span>, &lt;span style="color:#ae81ff">0x2B&lt;/span>, &lt;span style="color:#ae81ff">0xFE&lt;/span>, &lt;span style="color:#ae81ff">0xD7&lt;/span>, &lt;span style="color:#ae81ff">0xAB&lt;/span>, &lt;span style="color:#ae81ff">0x76&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xCA&lt;/span>, &lt;span style="color:#ae81ff">0x82&lt;/span>, &lt;span style="color:#ae81ff">0xC9&lt;/span>, &lt;span style="color:#ae81ff">0x7D&lt;/span>, &lt;span style="color:#ae81ff">0xFA&lt;/span>, &lt;span style="color:#ae81ff">0x59&lt;/span>, &lt;span style="color:#ae81ff">0x47&lt;/span>, &lt;span style="color:#ae81ff">0xF0&lt;/span>, &lt;span style="color:#ae81ff">0xAD&lt;/span>, &lt;span style="color:#ae81ff">0xD4&lt;/span>, &lt;span style="color:#ae81ff">0xA2&lt;/span>, &lt;span style="color:#ae81ff">0xAF&lt;/span>, &lt;span style="color:#ae81ff">0x9C&lt;/span>, &lt;span style="color:#ae81ff">0xA4&lt;/span>, &lt;span style="color:#ae81ff">0x72&lt;/span>, &lt;span style="color:#ae81ff">0xC0&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xB7&lt;/span>, &lt;span style="color:#ae81ff">0xFD&lt;/span>, &lt;span style="color:#ae81ff">0x93&lt;/span>, &lt;span style="color:#ae81ff">0x26&lt;/span>, &lt;span style="color:#ae81ff">0x36&lt;/span>, &lt;span style="color:#ae81ff">0x3F&lt;/span>, &lt;span style="color:#ae81ff">0xF7&lt;/span>, &lt;span style="color:#ae81ff">0xCC&lt;/span>, &lt;span style="color:#ae81ff">0x34&lt;/span>, &lt;span style="color:#ae81ff">0xA5&lt;/span>, &lt;span style="color:#ae81ff">0xE5&lt;/span>, &lt;span style="color:#ae81ff">0xF1&lt;/span>, &lt;span style="color:#ae81ff">0x71&lt;/span>, &lt;span style="color:#ae81ff">0xD8&lt;/span>, &lt;span style="color:#ae81ff">0x31&lt;/span>, &lt;span style="color:#ae81ff">0x15&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x04&lt;/span>, &lt;span style="color:#ae81ff">0xC7&lt;/span>, &lt;span style="color:#ae81ff">0x23&lt;/span>, &lt;span style="color:#ae81ff">0xC3&lt;/span>, &lt;span style="color:#ae81ff">0x18&lt;/span>, &lt;span style="color:#ae81ff">0x96&lt;/span>, &lt;span style="color:#ae81ff">0x05&lt;/span>, &lt;span style="color:#ae81ff">0x9A&lt;/span>, &lt;span style="color:#ae81ff">0x07&lt;/span>, &lt;span style="color:#ae81ff">0x12&lt;/span>, &lt;span style="color:#ae81ff">0x80&lt;/span>, &lt;span style="color:#ae81ff">0xE2&lt;/span>, &lt;span style="color:#ae81ff">0xEB&lt;/span>, &lt;span style="color:#ae81ff">0x27&lt;/span>, &lt;span style="color:#ae81ff">0xB2&lt;/span>, &lt;span style="color:#ae81ff">0x75&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x09&lt;/span>, &lt;span style="color:#ae81ff">0x83&lt;/span>, &lt;span style="color:#ae81ff">0x2C&lt;/span>, &lt;span style="color:#ae81ff">0x1A&lt;/span>, &lt;span style="color:#ae81ff">0x1B&lt;/span>, &lt;span style="color:#ae81ff">0x6E&lt;/span>, &lt;span style="color:#ae81ff">0x5A&lt;/span>, &lt;span style="color:#ae81ff">0xA0&lt;/span>, &lt;span style="color:#ae81ff">0x52&lt;/span>, &lt;span style="color:#ae81ff">0x3B&lt;/span>, &lt;span style="color:#ae81ff">0xD6&lt;/span>, &lt;span style="color:#ae81ff">0xB3&lt;/span>, &lt;span style="color:#ae81ff">0x29&lt;/span>, &lt;span style="color:#ae81ff">0xE3&lt;/span>, &lt;span style="color:#ae81ff">0x2F&lt;/span>, &lt;span style="color:#ae81ff">0x84&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x53&lt;/span>, &lt;span style="color:#ae81ff">0xD1&lt;/span>, &lt;span style="color:#ae81ff">0x00&lt;/span>, &lt;span style="color:#ae81ff">0xED&lt;/span>, &lt;span style="color:#ae81ff">0x20&lt;/span>, &lt;span style="color:#ae81ff">0xFC&lt;/span>, &lt;span style="color:#ae81ff">0xB1&lt;/span>, &lt;span style="color:#ae81ff">0x5B&lt;/span>, &lt;span style="color:#ae81ff">0x6A&lt;/span>, &lt;span style="color:#ae81ff">0xCB&lt;/span>, &lt;span style="color:#ae81ff">0xBE&lt;/span>, &lt;span style="color:#ae81ff">0x39&lt;/span>, &lt;span style="color:#ae81ff">0x4A&lt;/span>, &lt;span style="color:#ae81ff">0x4C&lt;/span>, &lt;span style="color:#ae81ff">0x58&lt;/span>, &lt;span style="color:#ae81ff">0xCF&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xD0&lt;/span>, &lt;span style="color:#ae81ff">0xEF&lt;/span>, &lt;span style="color:#ae81ff">0xAA&lt;/span>, &lt;span style="color:#ae81ff">0xFB&lt;/span>, &lt;span style="color:#ae81ff">0x43&lt;/span>, &lt;span style="color:#ae81ff">0x4D&lt;/span>, &lt;span style="color:#ae81ff">0x33&lt;/span>, &lt;span style="color:#ae81ff">0x85&lt;/span>, &lt;span style="color:#ae81ff">0x45&lt;/span>, &lt;span style="color:#ae81ff">0xF9&lt;/span>, &lt;span style="color:#ae81ff">0x02&lt;/span>, &lt;span style="color:#ae81ff">0x7F&lt;/span>, &lt;span style="color:#ae81ff">0x50&lt;/span>, &lt;span style="color:#ae81ff">0x3C&lt;/span>, &lt;span style="color:#ae81ff">0x9F&lt;/span>, &lt;span style="color:#ae81ff">0xA8&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x51&lt;/span>, &lt;span style="color:#ae81ff">0xA3&lt;/span>, &lt;span style="color:#ae81ff">0x40&lt;/span>, &lt;span style="color:#ae81ff">0x8F&lt;/span>, &lt;span style="color:#ae81ff">0x92&lt;/span>, &lt;span style="color:#ae81ff">0x9D&lt;/span>, &lt;span style="color:#ae81ff">0x38&lt;/span>, &lt;span style="color:#ae81ff">0xF5&lt;/span>, &lt;span style="color:#ae81ff">0xBC&lt;/span>, &lt;span style="color:#ae81ff">0xB6&lt;/span>, &lt;span style="color:#ae81ff">0xDA&lt;/span>, &lt;span style="color:#ae81ff">0x21&lt;/span>, &lt;span style="color:#ae81ff">0x10&lt;/span>, &lt;span style="color:#ae81ff">0xFF&lt;/span>, &lt;span style="color:#ae81ff">0xF3&lt;/span>, &lt;span style="color:#ae81ff">0xD2&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xCD&lt;/span>, &lt;span style="color:#ae81ff">0x0C&lt;/span>, &lt;span style="color:#ae81ff">0x13&lt;/span>, &lt;span style="color:#ae81ff">0xEC&lt;/span>, &lt;span style="color:#ae81ff">0x5F&lt;/span>, &lt;span style="color:#ae81ff">0x97&lt;/span>, &lt;span style="color:#ae81ff">0x44&lt;/span>, &lt;span style="color:#ae81ff">0x17&lt;/span>, &lt;span style="color:#ae81ff">0xC4&lt;/span>, &lt;span style="color:#ae81ff">0xA7&lt;/span>, &lt;span style="color:#ae81ff">0x7E&lt;/span>, &lt;span style="color:#ae81ff">0x3D&lt;/span>, &lt;span style="color:#ae81ff">0x64&lt;/span>, &lt;span style="color:#ae81ff">0x5D&lt;/span>, &lt;span style="color:#ae81ff">0x19&lt;/span>, &lt;span style="color:#ae81ff">0x73&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x60&lt;/span>, &lt;span style="color:#ae81ff">0x81&lt;/span>, &lt;span style="color:#ae81ff">0x4F&lt;/span>, &lt;span style="color:#ae81ff">0xDC&lt;/span>, &lt;span style="color:#ae81ff">0x22&lt;/span>, &lt;span style="color:#ae81ff">0x2A&lt;/span>, &lt;span style="color:#ae81ff">0x90&lt;/span>, &lt;span style="color:#ae81ff">0x88&lt;/span>, &lt;span style="color:#ae81ff">0x46&lt;/span>, &lt;span style="color:#ae81ff">0xEE&lt;/span>, &lt;span style="color:#ae81ff">0xB8&lt;/span>, &lt;span style="color:#ae81ff">0x14&lt;/span>, &lt;span style="color:#ae81ff">0xDE&lt;/span>, &lt;span style="color:#ae81ff">0x5E&lt;/span>, &lt;span style="color:#ae81ff">0x0B&lt;/span>, &lt;span style="color:#ae81ff">0xDB&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xE0&lt;/span>, &lt;span style="color:#ae81ff">0x32&lt;/span>, &lt;span style="color:#ae81ff">0x3A&lt;/span>, &lt;span style="color:#ae81ff">0x0A&lt;/span>, &lt;span style="color:#ae81ff">0x49&lt;/span>, &lt;span style="color:#ae81ff">0x06&lt;/span>, &lt;span style="color:#ae81ff">0x24&lt;/span>, &lt;span style="color:#ae81ff">0x5C&lt;/span>, &lt;span style="color:#ae81ff">0xC2&lt;/span>, &lt;span style="color:#ae81ff">0xD3&lt;/span>, &lt;span style="color:#ae81ff">0xAC&lt;/span>, &lt;span style="color:#ae81ff">0x62&lt;/span>, &lt;span style="color:#ae81ff">0x91&lt;/span>, &lt;span style="color:#ae81ff">0x95&lt;/span>, &lt;span style="color:#ae81ff">0xE4&lt;/span>, &lt;span style="color:#ae81ff">0x79&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xE7&lt;/span>, &lt;span style="color:#ae81ff">0xC8&lt;/span>, &lt;span style="color:#ae81ff">0x37&lt;/span>, &lt;span style="color:#ae81ff">0x6D&lt;/span>, &lt;span style="color:#ae81ff">0x8D&lt;/span>, &lt;span style="color:#ae81ff">0xD5&lt;/span>, &lt;span style="color:#ae81ff">0x4E&lt;/span>, &lt;span style="color:#ae81ff">0xA9&lt;/span>, &lt;span style="color:#ae81ff">0x6C&lt;/span>, &lt;span style="color:#ae81ff">0x56&lt;/span>, &lt;span style="color:#ae81ff">0xF4&lt;/span>, &lt;span style="color:#ae81ff">0xEA&lt;/span>, &lt;span style="color:#ae81ff">0x65&lt;/span>, &lt;span style="color:#ae81ff">0x7A&lt;/span>, &lt;span style="color:#ae81ff">0xAE&lt;/span>, &lt;span style="color:#ae81ff">0x08&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xBA&lt;/span>, &lt;span style="color:#ae81ff">0x78&lt;/span>, &lt;span style="color:#ae81ff">0x25&lt;/span>, &lt;span style="color:#ae81ff">0x2E&lt;/span>, &lt;span style="color:#ae81ff">0x1C&lt;/span>, &lt;span style="color:#ae81ff">0xA6&lt;/span>, &lt;span style="color:#ae81ff">0xB4&lt;/span>, &lt;span style="color:#ae81ff">0xC6&lt;/span>, &lt;span style="color:#ae81ff">0xE8&lt;/span>, &lt;span style="color:#ae81ff">0xDD&lt;/span>, &lt;span style="color:#ae81ff">0x74&lt;/span>, &lt;span style="color:#ae81ff">0x1F&lt;/span>, &lt;span style="color:#ae81ff">0x4B&lt;/span>, &lt;span style="color:#ae81ff">0xBD&lt;/span>, &lt;span style="color:#ae81ff">0x8B&lt;/span>, &lt;span style="color:#ae81ff">0x8A&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x70&lt;/span>, &lt;span style="color:#ae81ff">0x3E&lt;/span>, &lt;span style="color:#ae81ff">0xB5&lt;/span>, &lt;span style="color:#ae81ff">0x66&lt;/span>, &lt;span style="color:#ae81ff">0x48&lt;/span>, &lt;span style="color:#ae81ff">0x03&lt;/span>, &lt;span style="color:#ae81ff">0xF6&lt;/span>, &lt;span style="color:#ae81ff">0x0E&lt;/span>, &lt;span style="color:#ae81ff">0x61&lt;/span>, &lt;span style="color:#ae81ff">0x35&lt;/span>, &lt;span style="color:#ae81ff">0x57&lt;/span>, &lt;span style="color:#ae81ff">0xB9&lt;/span>, &lt;span style="color:#ae81ff">0x86&lt;/span>, &lt;span style="color:#ae81ff">0xC1&lt;/span>, &lt;span style="color:#ae81ff">0x1D&lt;/span>, &lt;span style="color:#ae81ff">0x9E&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0xE1&lt;/span>, &lt;span style="color:#ae81ff">0xF8&lt;/span>, &lt;span style="color:#ae81ff">0x98&lt;/span>, &lt;span style="color:#ae81ff">0x11&lt;/span>, &lt;span style="color:#ae81ff">0x69&lt;/span>, &lt;span style="color:#ae81ff">0xD9&lt;/span>, &lt;span style="color:#ae81ff">0x8E&lt;/span>, &lt;span style="color:#ae81ff">0x94&lt;/span>, &lt;span style="color:#ae81ff">0x9B&lt;/span>, &lt;span style="color:#ae81ff">0x1E&lt;/span>, &lt;span style="color:#ae81ff">0x87&lt;/span>, &lt;span style="color:#ae81ff">0xE9&lt;/span>, &lt;span style="color:#ae81ff">0xCE&lt;/span>, &lt;span style="color:#ae81ff">0x55&lt;/span>, &lt;span style="color:#ae81ff">0x28&lt;/span>, &lt;span style="color:#ae81ff">0xDF&lt;/span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [&lt;span style="color:#ae81ff">0x8C&lt;/span>, &lt;span style="color:#ae81ff">0xA1&lt;/span>, &lt;span style="color:#ae81ff">0x89&lt;/span>, &lt;span style="color:#ae81ff">0x0D&lt;/span>, &lt;span style="color:#ae81ff">0xBF&lt;/span>, &lt;span style="color:#ae81ff">0xE6&lt;/span>, &lt;span style="color:#ae81ff">0x42&lt;/span>, &lt;span style="color:#ae81ff">0x68&lt;/span>, &lt;span style="color:#ae81ff">0x41&lt;/span>, &lt;span style="color:#ae81ff">0x99&lt;/span>, &lt;span style="color:#ae81ff">0x2D&lt;/span>, &lt;span style="color:#ae81ff">0x0F&lt;/span>, &lt;span style="color:#ae81ff">0xB0&lt;/span>, &lt;span style="color:#ae81ff">0x54&lt;/span>, &lt;span style="color:#ae81ff">0xBB&lt;/span>, &lt;span style="color:#ae81ff">0x16&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">data_preprocess&lt;/span>(json_data):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pt_col &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ct_col = []&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> trace_col &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> bytes &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">16&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_pt_col &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># tmp_ct_col = []&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> trace_idx &lt;span style="color:#f92672">in&lt;/span> range(len(json_data)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_pt_col&lt;span style="color:#f92672">.&lt;/span>append(json_data[trace_idx][&lt;span style="color:#e6db74">&amp;#39;pt&amp;#39;&lt;/span>][bytes])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># tmp_ct_col.append(json_data[trace_idx][&amp;#39;ct&amp;#39;][bytes])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pt_col&lt;span style="color:#f92672">.&lt;/span>append(tmp_pt_col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ct_col.append(tmp_ct_col)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> point &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">300&lt;/span>, &lt;span style="color:#ae81ff">400&lt;/span>):&lt;span style="color:#75715e">#len(json_data[0][&amp;#39;pm&amp;#39;])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_trace_col &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> trace_idx &lt;span style="color:#f92672">in&lt;/span> range(len(json_data)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp_trace_col&lt;span style="color:#f92672">.&lt;/span>append(json_data[trace_idx][&lt;span style="color:#e6db74">&amp;#39;pm&amp;#39;&lt;/span>][point])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> trace_col&lt;span style="color:#f92672">.&lt;/span>append(tmp_trace_col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> pt_col, trace_col
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">sbox_preprocess&lt;/span>(pt_col):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_result_tmp &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> sbox_key &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">256&lt;/span>): &lt;span style="color:#75715e"># 總共有256個sbox key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> trace &lt;span style="color:#f92672">in&lt;/span> range(len(pt_col)): &lt;span style="color:#75715e"># 有50個trace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tmp&lt;span style="color:#f92672">.&lt;/span>append(pt_col[trace] &lt;span style="color:#f92672">^&lt;/span> sbox_key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_result_tmp&lt;span style="color:#f92672">.&lt;/span>append(tmp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sbox_result_tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">choose_sbox&lt;/span>(sbox_result_tmp):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_result &lt;span style="color:#f92672">=&lt;/span> copy&lt;span style="color:#f92672">.&lt;/span>deepcopy(sbox_result_tmp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> sbox_key &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">256&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> trace &lt;span style="color:#f92672">in&lt;/span> range(&lt;span style="color:#ae81ff">50&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hex_value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">{0:0&amp;gt;2x}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(sbox_result_tmp[sbox_key][trace])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x, y &lt;span style="color:#f92672">=&lt;/span> hex_value[&lt;span style="color:#ae81ff">0&lt;/span>], hex_value[&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_result[sbox_key][trace] &lt;span style="color:#f92672">=&lt;/span> s_box[int(x, &lt;span style="color:#ae81ff">16&lt;/span>)][int(y, &lt;span style="color:#ae81ff">16&lt;/span>)]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sbox_result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">cal_hamming_weight&lt;/span>(sbox_result_col):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hw_model &lt;span style="color:#f92672">=&lt;/span> copy&lt;span style="color:#f92672">.&lt;/span>deepcopy(sbox_result_col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(len(sbox_result_col)): &lt;span style="color:#75715e"># 256&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#f92672">in&lt;/span> range(len(sbox_result_col[i])): &lt;span style="color:#75715e"># 50&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hw_model[i][j] &lt;span style="color:#f92672">=&lt;/span> bin(sbox_result_col[i][j])&lt;span style="color:#f92672">.&lt;/span>count(&lt;span style="color:#e6db74">&amp;#39;1&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> hw_model
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">cal_correlation&lt;/span>(hw_model_col_result, trace_col):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> correlation_result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> trange(len(hw_model_col_result)):&lt;span style="color:#75715e">#(ascii_letters + digits).encode():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> j &lt;span style="color:#f92672">in&lt;/span> range(biggest_length):&lt;span style="color:#75715e">#len(trace_col)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># correlation_result.append(corrcoef(hw_model_col_result[i], trace_col[j])[0, -1])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># correlation_result.append(pearsonr(hw_model_col_result[i], trace_col[j])[0])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> correlation_result&lt;span style="color:#f92672">.&lt;/span>append(run_pearson_correlation(hw_model_col_result[i], trace_col[j]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> correlation_result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run_pearson_correlation&lt;/span>(x, y):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mean_x &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>mean(x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mean_y &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>mean(y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> covariance &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>sum((x &lt;span style="color:#f92672">-&lt;/span> mean_x) &lt;span style="color:#f92672">*&lt;/span> (y &lt;span style="color:#f92672">-&lt;/span> mean_y))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std_dev_x &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>sqrt(np&lt;span style="color:#f92672">.&lt;/span>sum((x &lt;span style="color:#f92672">-&lt;/span> mean_x)&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> std_dev_y &lt;span style="color:#f92672">=&lt;/span> np&lt;span style="color:#f92672">.&lt;/span>sqrt(np&lt;span style="color:#f92672">.&lt;/span>sum((y &lt;span style="color:#f92672">-&lt;/span> mean_y)&lt;span style="color:#f92672">**&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> correlation &lt;span style="color:#f92672">=&lt;/span> covariance &lt;span style="color:#f92672">/&lt;/span> (std_dev_x &lt;span style="color:#f92672">*&lt;/span> std_dev_y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> correlation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">display_pt&lt;/span>(offset:int, data_offset &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>, len(j[&lt;span style="color:#ae81ff">0&lt;/span>][&lt;span style="color:#e6db74">&amp;#34;pm&amp;#34;&lt;/span>]))):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plt&lt;span style="color:#f92672">.&lt;/span>plot(range(data_offset[&lt;span style="color:#ae81ff">0&lt;/span>], data_offset[&lt;span style="color:#ae81ff">1&lt;/span>]), j[offset][&lt;span style="color:#e6db74">&amp;#34;pm&amp;#34;&lt;/span>][data_offset[&lt;span style="color:#ae81ff">0&lt;/span>]:data_offset[&lt;span style="color:#ae81ff">1&lt;/span>]])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plt&lt;span style="color:#f92672">.&lt;/span>savefig(fname&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;./PicoCTF/Crypto/PowerAnalysis- Part 1/pt_&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> str(offset) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.jpg&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plt&lt;span style="color:#f92672">.&lt;/span>clf()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># display_pt(1, (0, 700))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># display_pt(1)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pt_col, trace_col &lt;span style="color:#f92672">=&lt;/span> data_preprocess(j)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flag &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>biggest_length &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>&lt;span style="color:#75715e">#len(trace_col)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> idx &lt;span style="color:#f92672">in&lt;/span> trange(&lt;span style="color:#ae81ff">16&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sbox_preprocess_result &lt;span style="color:#f92672">=&lt;/span> sbox_preprocess(pt_col[idx])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> choose_sbox_result &lt;span style="color:#f92672">=&lt;/span> choose_sbox(sbox_preprocess_result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hw_model_col_result &lt;span style="color:#f92672">=&lt;/span> cal_hamming_weight(choose_sbox_result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> correlation_result &lt;span style="color:#f92672">=&lt;/span> cal_correlation(hw_model_col_result, trace_col)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_idx &lt;span style="color:#f92672">=&lt;/span> correlation_result&lt;span style="color:#f92672">.&lt;/span>index(max(correlation_result))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># flag += (ascii_letters + digits)[key_idx // biggest_length]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">from&lt;/span> Crypto.Util.number &lt;span style="color:#f92672">import&lt;/span> long_to_bytes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flag &lt;span style="color:#f92672">+=&lt;/span> long_to_bytes(key_idx &lt;span style="color:#f92672">//&lt;/span> biggest_length)&lt;span style="color:#f92672">.&lt;/span>hex()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#39;The key of AES is: &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> flag )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>Flag: &lt;code>picoCTF{4999139026d84bf20427eb48d4edec53}&lt;/code>&lt;/p></description></item></channel></rss>