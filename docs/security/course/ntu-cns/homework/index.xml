<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SBK Site</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/</link><description>Recent content on SBK Site</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/docs/security/course/ntu-cns/homework/index.xml" rel="self" type="application/rss+xml"/><item><title>Cryptography and Network Security – Homework 1</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-1/</guid><description>&lt;h1 id="cryptography-and-network-security--homework-1">
 Cryptography and Network Security – Homework 1
 &lt;a class="anchor" href="#cryptography-and-network-security--homework-1">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/Tq2dPdTKQv6p3AvNbmyNig">&lt;img src="https://hackmd.io/Tq2dPdTKQv6p3AvNbmyNig/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler TOC
[TOC]
:::
:::info
&lt;a href="https://hackmd.io/@uqzWTXyyTk6IYTBwcPwnoA/BJZNQfcTo">Official Solution&lt;/a>
:::
Student ID: &lt;code>R11921A16&lt;/code>
Name: 何秉學&lt;/p>
&lt;h2 id="handwriting">
 Handwriting
 &lt;a class="anchor" href="#handwriting">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-cia">
 1. CIA
 &lt;a class="anchor" href="#1-cia">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>Ans:&lt;/strong>
&lt;strong>Confidentiality&lt;/strong> means all of the sensitive messages or information that can be protected so that just the people who have the authentication can edit or browse the information.&lt;/p>
&lt;p>&lt;strong>Integrity&lt;/strong> refers to the completeness of the message you transferred and ensured that the message is not altered by an unauthenticated person.&lt;/p></description></item><item><title>Cryptography and Network Security – Homework 2</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-2/</guid><description>&lt;h1 id="cryptography-and-network-security--homework-2">
 Cryptography and Network Security – Homework 2
 &lt;a class="anchor" href="#cryptography-and-network-security--homework-2">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/JauWo5dWQFS1wnZZjTPqow">&lt;img src="https://hackmd.io/JauWo5dWQFS1wnZZjTPqow/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler TOC
[TOC]
:::
Student ID: &lt;code>R11921A16&lt;/code>
Name: 何秉學&lt;/p>
&lt;h2 id="handwriting">
 Handwriting
 &lt;a class="anchor" href="#handwriting">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-syn-cookies">
 1. SYN Cookies
 &lt;a class="anchor" href="#1-syn-cookies">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>Ans:
This strategy involves the creation of a cookie by the server. In order to avoid the risk of dropping connections when the backlog has been filled, the server responds to each connection request with a SYN-ACK packet but then drops the SYN request from the backlog, removing the request from memory and leaving the port open and ready to make a new connection. If the connection is a legitimate request, and a final ACK packet is sent from the client machine back to the server, the server will then reconstruct (with some limitations) the SYN backlog queue entry. While this mitigation effort does lose some information about the TCP connection, it is better than allowing denial-of-service to occur to legitimate users as a result of an attack.&lt;/p></description></item><item><title>Cryptography and Network Security – Homework 3</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--homework-3/</guid><description>&lt;h1 id="cryptography-and-network-security--homework-3">
 Cryptography and Network Security – Homework 3
 &lt;a class="anchor" href="#cryptography-and-network-security--homework-3">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/JO7xByQgQWK67eU0goHMeA">&lt;img src="https://hackmd.io/JO7xByQgQWK67eU0goHMeA/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>:::spoiler TOC
[TOC]
:::&lt;/p>
&lt;h2 id="1-ddos">
 1. DDoS
 &lt;a class="anchor" href="#1-ddos">#&lt;/a>
&lt;/h2>
&lt;h3 id="1">
 1)
 &lt;a class="anchor" href="#1">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Hint: You can use I/O Graphs to find the time that the flow starts to burst. Then you can find the first packet near there.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ans: Using I/O graph in &lt;code>Statistic/I/O Graphs&lt;/code> in wireshark, then you can figure out the whole trend of this network flow.
:::spoiler Result Screenshot
&lt;img src="https://hackmd.io/_uploads/rJk-LueL3.jpg" alt="" />
:::
Also, you can set the different scale of the graph and figure out the attack time precisely. I set the &lt;code>Interval=100ms&lt;/code> and find the increasing time at &lt;code>24.8s&lt;/code> which is &lt;code>No.55862&lt;/code> packet shown as below.
:::spoiler Result Screenshot
&lt;img src="https://hackmd.io/_uploads/ryG7POxL2.png" alt="" />
:::
Thus, the attack time should be at &lt;font color="FF0000">&lt;code>24.945277&lt;/code>&lt;/font> and the victim is &lt;font color="FF0000">&lt;code>192.168.232.95&lt;/code>&lt;/font>
:::spoiler Result Screenshot
&lt;img src="https://hackmd.io/_uploads/Syurtue8h.png" alt="" />
:::&lt;/p></description></item><item><title>Cryptography and Network Security – HW0</title><link>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--hw0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/course/ntu-cns/homework/cryptography-and-network-security--hw0/</guid><description>&lt;h1 id="cryptography-and-network-security--hw0">
 Cryptography and Network Security – HW0
 &lt;a class="anchor" href="#cryptography-and-network-security--hw0">#&lt;/a>
&lt;/h1>
&lt;p>&lt;a href="https://hackmd.io/_JU7eHmcRF-v8G6yQ3YHWQ">&lt;img src="https://hackmd.io/_JU7eHmcRF-v8G6yQ3YHWQ/badge" alt="hackmd-github-sync-badge" />&lt;/a>&lt;/p>
&lt;h2 id="reading-topic-the-tangled-web-of-password-reuse">
 Reading Topic: The Tangled Web of Password Reuse
 &lt;a class="anchor" href="#reading-topic-the-tangled-web-of-password-reuse">#&lt;/a>
&lt;/h2>
&lt;h6 id="tags-ntucns">
 tags: &lt;code>NTUCNS&lt;/code>
 &lt;a class="anchor" href="#tags-ntucns">#&lt;/a>
&lt;/h6>
&lt;p>Name: 何秉學	Student ID: R11921A16&lt;/p>
&lt;h2 id="summary">
 Summary
 &lt;a class="anchor" href="#summary">#&lt;/a>
&lt;/h2>
&lt;p>Password security is a critical issue that we may pay attention. However, most people choose easy-remembered strings as their online-service password, which may cause the users to re-used the password as a different online service. Unfortunately, the number of network attacks is increasing, and attackers contain tons of users&amp;rsquo; information including re-used passwords. They tried to propose a guessing password algorithm including character sequence, deletions, insertion, capitalization, reversal, leet-speak, and substring movement to guess a series of candidate passwords that users may use at different websites according to a set of leaked passwords. Their prototype guessing algorithm is able to crack approximately 10% of the nonidentical password pairs in less than 10 attempts and approximately 30% such pairs in less than 100 attempts.&lt;/p></description></item></channel></rss>