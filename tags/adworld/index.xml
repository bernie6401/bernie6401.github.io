<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Adworld :: Tag :: SBK Hugo Site</title><link>https://bernie6401.github.io/tags/adworld/index.html</link><description/><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/tags/adworld/index.xml" rel="self" type="application/rss+xml"/><item><title>Adworld - 3-1</title><link>https://bernie6401.github.io/security/practice/adworld/misc/adworld---3-1/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/practice/adworld/misc/adworld---3-1/index.html</guid><description>Adworld - 3-1 Recon 這一題很簡單，和之前幾題有點像
用file看一下給的檔案是一個.rar壓縮檔，改個副檔名後解壓縮出現另外一個檔案 再用file看一下是一個pcapng檔案，用wireshark分析 用一些基本的技巧(Follow TCP Stream/Extract Object…)看tcp stream，會發現一個bash的command紀錄，有一個python enc/dec flow，和一串base64的string，除此之外還可以用extract object把一些file dump下來，發現是另外一個加密的flag.rar檔案，我們的任務就是要從這個pcapng檔案中把加密的密碼找出來 用python腳本解密base64 string，會輸出b'passwd={No_One_Can_Decrypt_Me}\x00\x00' 解密壓縮檔flag就出來了 Exploit Write Byte Data
from base64 import b64decode import zipfile f = open('./basezip.txt', 'r').read().split(',')[-1] f1 = open('./cipher.zip', 'wb') f1.write(b64decode(f)) print(bytes.fromhex(b64decode(f).hex()).decode('cp437')) f1.close() Decrypt Part
from Crypto.Cipher import AES import base64 IV = b'QWERTYUIOPASDFGH' str1 = '19aaFYsQQKr+hVX6hl2smAUQ5a767TsULEUebWSajEo=' def decrypt(encrypted): aes = AES.new(IV, AES.MODE_CBC, IV) return aes.decrypt(encrypted) def encrypt(message): length = 16 count = len(message) padding = length - (count % length) message = message + '\0' * padding aes = AES.new(IV, AES.MODE_CBC, IV) return aes.encrypt(message) str = 'this is a test' example = decrypt(base64.b64decode(str1)) print(example) Reference 【攻防世界AD】Misc进阶区：3-1</description></item><item><title>Adworld - miao~</title><link>https://bernie6401.github.io/security/practice/adworld/misc/adworld---miao~/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/practice/adworld/misc/adworld---miao~/index.html</guid><description>Adworld - miao~ Recon 這題也是看了別人的WP1和官解
Exploit 用foremost搜索或救援檔案(神奇的解法，一開始完全想不到)
$ foremost -v miao\~.jpg Foremost version 1.5.7 by Jesse Kornblum, Kris Kendall, and Nick Mikus Audit File Foremost started at Sat Jul 15 15:21:29 2023 Invocation: foremost -v miao~.jpg Output directory: /home/sbk6401/CTF/Adworld/Misc/miao~/output Configuration file: /etc/foremost.conf Processing: miao~.jpg |------------------------------------------------------------------ File: miao~.jpg Start: Sat Jul 15 15:21:29 2023 Length: 1 MB (1242752 bytes) Num Name (bs=512) Size File Offset Comment 0: 00000000.jpg 55 KB 0 1: 00000111.wav 1 MB 57212 *| Finish: Sat Jul 15 15:21:29 2023 2 FILES EXTRACTED jpg:= 1 rif:= 1 ------------------------------------------------------------------ Foremost finished at Sat Jul 15 15:21:29 2023 可以看到抓到其中有一個.wav檔案</description></item><item><title>Adworld - Misc文件類型</title><link>https://bernie6401.github.io/security/practice/adworld/misc/adworld---misc%E6%96%87%E4%BB%B6%E9%A1%9E%E5%9E%8B/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/practice/adworld/misc/adworld---misc%E6%96%87%E4%BB%B6%E9%A1%9E%E5%9E%8B/index.html</guid><description>Adworld - Misc文件類型 Source Code 3436455341425F554573444242514141 41414941416C64434658714F7737634B 4141414143594141414149414141415A 6D78685A7935306548524C79306C4D72 7A5A49536B303253457778546B6B304D 6A5130546A593353445531534573784E 544D3054374A494E552B7A7241554155 45734241685141464141414141674143 56304956656F374474776F414141414A 674141414167414A4141414141414141 414167414141414141414141475A7359 57637564486830436741674141414141 41414241426741477845666B39697132 41456245522B54324B725941514A462B 34725971746742554573464267414141 41414241414541576741414145344141 4141414141 Recon 這一題有一點通靈，沒有很喜歡
首先給的cipher很明顯是ascii的hex 轉換過後也很明顯是base64 在轉換過後，只有底線後面的部分要轉換成hex 如果把東西print出來的話會看到flag.txt的字樣，感覺上是一個file的byte code，到file signature去看會發現magic header是一個zip file，uncompress之後就會發現flag.txt Exploit import base64 ciphercipher = bytes.fromhex(cipher).decode('utf-8').split("_")[1] cipher = base64.b64decode(cipher + "==") f = open("./cipher.zip", "wb") f.write(cipher) f.close() import zipfile with zipfile.ZipFile('./cipher.zip', 'r') as zip_ref: zip_ref.extractall('./') f = open('./flag.txt', 'r').read() print(f) $ python exp.py flag{0bec0ad3da2113c70e50fd5617b8e7f9} Reference XCTF-MISC-Misc文件類型</description></item><item><title>Adworld - pure_color</title><link>https://bernie6401.github.io/security/practice/adworld/misc/adworld---pure_color/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/practice/adworld/misc/adworld---pure_color/index.html</guid><description>Adworld - pure_color tags: Adworld CTF Misc Challenge: https://adworld.xctf.org.cn/challenges/details?hash=f216ffab-e01d-46b8-9d4d-d91ab5229eed_2&amp;task_category_id=1
Background 【Day21】隱寫技術 Steganography 图片隐写查看神器stegsolve使用方法 zardus/ctf-tools - stegsolve
Exploit - Basic Steganography</description></item><item><title>Adworld - 心儀的公司</title><link>https://bernie6401.github.io/security/practice/adworld/misc/adworld---%E5%BF%83%E5%84%80%E7%9A%84%E5%85%AC%E5%8F%B8/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/practice/adworld/misc/adworld---%E5%BF%83%E5%84%80%E7%9A%84%E5%85%AC%E5%8F%B8/index.html</guid><description>Adworld - 心儀的公司 tags: Adworld CTF Misc Challenge: https://adworld.xctf.org.cn/challenges/details?hash=ed5d10bf-be47-4e61-b04e-3a9ccb73ff95_2&amp;task_category_id=1
Exploit $ strings webshell.pcapng | grep "{" ... fl4g:{ftop_Is_Waiting_4_y} Reference 心仪的公司writeup 【CTF视频合辑】MISC-流量分析题大集合(第一辑)</description></item><item><title>Adworld - 適合作為桌面</title><link>https://bernie6401.github.io/security/practice/adworld/misc/adworld---%E9%81%A9%E5%90%88%E4%BD%9C%E7%82%BA%E6%A1%8C%E9%9D%A2/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/practice/adworld/misc/adworld---%E9%81%A9%E5%90%88%E4%BD%9C%E7%82%BA%E6%A1%8C%E9%9D%A2/index.html</guid><description>Adworld - 適合作為桌面 tags: Adworld CTF Misc Challenge: 適合作為桌面
Background Day8 Python基礎-pyc是什麼
Exploit Analyze Steganography QR Code Reader
t seems a byte code of a file.
HxD It can be disassembled by pyc tools.
pyc disassemble :::spoiler
def flag(): str = [ 102, 108, 97, 103, 123, 51, 56, 97, 53, 55, 48, 51, 50, 48, 56, 53, 52, 52, 49, 101, 55, 125, ] flag = "" for i in str: flag += chr(i) print flag :::</description></item></channel></rss>