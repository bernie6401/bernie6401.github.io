<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BalsnCTF :: Tag :: SBK Hugo Site</title><link>https://bernie6401.github.io/tags/balsnctf/index.html</link><description/><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/tags/balsnctf/index.xml" rel="self" type="application/rss+xml"/><item><title>BalsnCTF 2023</title><link>https://bernie6401.github.io/security/competition/balsnctf-2023/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/competition/balsnctf-2023/index.html</guid><description>BalsnCTF 2023 Reverse Lucky Source code :::spoiler IDA Main Function
__int64 main_fn() { __int64 idx; // r15 int v1; // ebp __int64 v2; // rbx unsigned __int64 v3; // r14 int v4; // r9d int v5; // r9d char v6; // al __int64 v7; // rdx unsigned int v9; // [rsp+Ch] [rbp-9Ch] BYREF char v10[32]; // [rsp+10h] [rbp-98h] BYREF __int128 user_input[2]; // [rsp+30h] [rbp-78h] BYREF __int64 v12; // [rsp+50h] [rbp-58h] char v13; // [rsp+58h] [rbp-50h] unsigned __int64 v14; // [rsp+68h] [rbp-40h] idx = 10000000000000000LL; v1 = 0; v14 = __readfsqword(0x28u); v2 = sub_40C2B0("/dev/urandom", &amp;unk_498004); do { sub_40C3B0(&amp;v9, 4uLL, 1LL, v2); v3 = v9 % 100000000uLL; sub_40C3B0(&amp;v9, 4uLL, 1LL, v2); v1 -= (v3 * v3 + v9 % 100000000uLL * (v9 % 100000000uLL) > 9999999999999999LL) - 1; --idx; } while ( idx ); sub_44A050(v10, 1u, 30LL, "%lu", 4 * v1 - 0x4F430000, v4); v13 = 0; v6 = 0x73; v12 = 0LL; memset(user_input, 0, sizeof(user_input)); while ( 1 ) { v7 = idx &amp; 0xF; *(user_input + idx++) = v10[v7] ^ v6; if ( idx == 40 ) break; v6 = byte_498040[idx]; } if ( LOBYTE(user_input[0]) == 'B' &amp;&amp; *(user_input + 1) == 'NSLA' &amp;&amp; BYTE5(user_input[0]) == '{' &amp;&amp; HIBYTE(v12) == '}' ) sub_44A130(1, "Lucky! flag is %s\n", user_input, byte_498040, user_input, v5); else (sub_40C4B0)("Not so lucky ...", 1LL, v7, byte_498040, user_input); if ( v14 != __readfsqword(0x28u) ) (sub_44A220)(); return 0LL; } :::</description></item></channel></rss>