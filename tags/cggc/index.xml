<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CGGC :: Tag :: SBK Hugo Site</title><link>https://bernie6401.github.io/tags/cggc/index.html</link><description/><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/tags/cggc/index.xml" rel="self" type="application/rss+xml"/><item><title>CGGC 2023 初賽</title><link>https://bernie6401.github.io/security/competition/cggc-2023-%E5%88%9D%E8%B3%BD/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/security/competition/cggc-2023-%E5%88%9D%E8%B3%BD/index.html</guid><description>CGGC 2023 初賽 隊名: 王凡補習班 名次 這一次參賽雖然打出來的不多，但重點還是有學到很多東西，感謝@davidchen學長帶我飛，我覺得互相交流之後的這種隱形的貢獻也是很重要的 GaoYi Source code :::spoiler IDA main function
int __cdecl main(int argc, const char **argv, const char **envp) { // [COLLAPSED LOCAL DECLARATIONS. PRESS KEYPAD CTRL-"+" TO EXPAND] setvbuf(stdout, 0LL, 2LL, 0LL); puts(TITLE); puts("Welcome to the Charitable Lag Vegas!"); puts("Anyone can participate with three million US dollars."); puts("You play with 52 cards with (S)pades, (C)lub, (H)earts, (D)iamond."); puts("[+] Game 1: Predict the first 8 cards I draw in exact order."); puts("[+] Input example: \"C8\"."); v47 = 0; for ( i = 0; i &lt;= 7; ++i ) { printf((unsigned int)"Card %c: ", i + 49, v3, v4, v5, v6, flag[0]); fgets(&amp;input[32 * i], 32LL, stdin); if ( !(unsigned int)isACard((__int64)&amp;input[32 * i]) ) --v47; } for ( j = 0; j &lt;= 7; ++j ) { if ( (unsigned __int64)j_strlen_ifunc(&amp;input[32 * j]) > 1 ) { v7 = j == 7 &amp;&amp; input[224] == 'H'; v8 = !j &amp;&amp; input[2] == '0'; v9 = v8 + v7; v10 = j == 1 &amp;&amp; input[32] == 'S'; v11 = v10 + v9; v12 = !j &amp;&amp; input[0] == 'H'; v13 = v12 + v11; v14 = j == 1 &amp;&amp; input[33] == '2'; v15 = v14 + v13; v16 = j == 4 &amp;&amp; input[129] == '7'; v17 = v16 + v15; v18 = j == 2 &amp;&amp; input[64] == 'C'; v19 = v18 + v17; v20 = j == 3 &amp;&amp; input[96] == 'S'; v21 = v20 + v19; v22 = j == 6 &amp;&amp; input[192] == 'H'; v23 = v22 + v21; v24 = j == 2 &amp;&amp; input[65] == '8'; v25 = v24 + v23; v26 = j == 3 &amp;&amp; input[97] == '5'; v27 = v26 + v25; v28 = j == 5 &amp;&amp; input[160] == 'S'; v29 = v28 + v27; v30 = j == 4 &amp;&amp; input[128] == 'S'; v31 = v30 + v29; v32 = j == 5 &amp;&amp; input[161] == 'A'; v33 = v32 + v31; v34 = j == 6 &amp;&amp; input[193] == '2'; v35 = v34 + v33; v36 = j == 7 &amp;&amp; input[225] == 'A'; v44 = v35 + v36; v47 += v35 + v36; } else { --v47; } } if ( v47 > 15 ) { puts("[+] Stage 2: Predict the final card I draw."); fgets(flag, 32LL, stdin); if ( (unsigned int)isACard((__int64)flag) &amp;&amp; (unsigned __int64)j_strlen_ifunc(flag) > 1 &amp;&amp; flag[0] == 'H' &amp;&amp; flag[1] == '2' ) { printf((unsigned int)"Congrats! Here is your flag: ", 32, v38, v39, v40, v41, flag[0]); readFlag(); return 0; } else { puts("You failed."); return 0; } } else { puts("You failed."); return 0; } } :::</description></item></channel></rss>