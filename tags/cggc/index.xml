<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CGGC on SBK Hugo Site</title><link>https://bernie6401.github.io/tags/cggc/</link><description>Recent content in CGGC on SBK Hugo Site</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/tags/cggc/index.xml" rel="self" type="application/rss+xml"/><item><title>CGGC 2023 初賽</title><link>https://bernie6401.github.io/docs/security/competition/cggc-2023-%E5%88%9D%E8%B3%BD/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/security/competition/cggc-2023-%E5%88%9D%E8%B3%BD/</guid><description>&lt;h1 id="cggc-2023-初賽">
 CGGC 2023 初賽
 &lt;a class="anchor" href="#cggc-2023-%e5%88%9d%e8%b3%bd">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>隊名: 王凡補習班&lt;/li>
&lt;li>名次
&lt;img src="https://hackmd.io/_uploads/ryb_H_FrT.png" alt="圖片" />
這一次參賽雖然打出來的不多，但重點還是有學到很多東西，感謝@davidchen學長帶我飛，我覺得互相交流之後的這種隱形的貢獻也是很重要的&lt;/li>
&lt;/ul>
&lt;h2 id="gaoyi">
 GaoYi
 &lt;a class="anchor" href="#gaoyi">#&lt;/a>
&lt;/h2>
&lt;h3 id="source-code">
 Source code
 &lt;a class="anchor" href="#source-code">#&lt;/a>
&lt;/h3>
&lt;p>:::spoiler IDA main function&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#66d9ef">__cdecl&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>argv, &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">**&lt;/span>envp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// [COLLAPSED LOCAL DECLARATIONS. PRESS KEYPAD CTRL-&amp;#34;+&amp;#34; TO EXPAND]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setvbuf(stdout, &lt;span style="color:#ae81ff">0LL&lt;/span>, &lt;span style="color:#ae81ff">2LL&lt;/span>, &lt;span style="color:#ae81ff">0LL&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(TITLE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Welcome to the Charitable Lag Vegas!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;Anyone can participate with three million US dollars.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;You play with 52 cards with (S)pades, (C)lub, (H)earts, (D)iamond.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;[+] Game 1: Predict the first 8 cards I draw in exact order.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;[+] Input example: &lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">C8&lt;/span>&lt;span style="color:#ae81ff">\&amp;#34;&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v47 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( i &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; i &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#e6db74">&amp;#34;Card %c: &amp;#34;&lt;/span>, i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">49&lt;/span>, v3, v4, v5, v6, flag[&lt;span style="color:#ae81ff">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fgets(&lt;span style="color:#f92672">&amp;amp;&lt;/span>input[&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">*&lt;/span> i], &lt;span style="color:#ae81ff">32LL&lt;/span>, stdin);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>(&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)isACard((&lt;span style="color:#66d9ef">__int64&lt;/span>)&lt;span style="color:#f92672">&amp;amp;&lt;/span>input[&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">*&lt;/span> i]) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">--&lt;/span>v47;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> ( j &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; j &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>j )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)j_strlen_ifunc(&lt;span style="color:#f92672">&amp;amp;&lt;/span>input[&lt;span style="color:#ae81ff">32&lt;/span> &lt;span style="color:#f92672">*&lt;/span> j]) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v7 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">224&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v8 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>j &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v9 &lt;span style="color:#f92672">=&lt;/span> v8 &lt;span style="color:#f92672">+&lt;/span> v7;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v10 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">32&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;S&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v11 &lt;span style="color:#f92672">=&lt;/span> v10 &lt;span style="color:#f92672">+&lt;/span> v9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v12 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>j &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v13 &lt;span style="color:#f92672">=&lt;/span> v12 &lt;span style="color:#f92672">+&lt;/span> v11;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v14 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">33&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;2&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v15 &lt;span style="color:#f92672">=&lt;/span> v14 &lt;span style="color:#f92672">+&lt;/span> v13;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v16 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">129&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;7&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v17 &lt;span style="color:#f92672">=&lt;/span> v16 &lt;span style="color:#f92672">+&lt;/span> v15;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v18 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">64&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;C&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v19 &lt;span style="color:#f92672">=&lt;/span> v18 &lt;span style="color:#f92672">+&lt;/span> v17;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v20 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">96&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;S&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v21 &lt;span style="color:#f92672">=&lt;/span> v20 &lt;span style="color:#f92672">+&lt;/span> v19;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v22 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">192&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v23 &lt;span style="color:#f92672">=&lt;/span> v22 &lt;span style="color:#f92672">+&lt;/span> v21;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v24 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">65&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;8&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v25 &lt;span style="color:#f92672">=&lt;/span> v24 &lt;span style="color:#f92672">+&lt;/span> v23;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v26 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">97&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;5&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v27 &lt;span style="color:#f92672">=&lt;/span> v26 &lt;span style="color:#f92672">+&lt;/span> v25;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v28 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">160&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;S&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v29 &lt;span style="color:#f92672">=&lt;/span> v28 &lt;span style="color:#f92672">+&lt;/span> v27;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v30 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">128&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;S&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v31 &lt;span style="color:#f92672">=&lt;/span> v30 &lt;span style="color:#f92672">+&lt;/span> v29;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v32 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">161&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v33 &lt;span style="color:#f92672">=&lt;/span> v32 &lt;span style="color:#f92672">+&lt;/span> v31;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v34 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">193&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;2&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v35 &lt;span style="color:#f92672">=&lt;/span> v34 &lt;span style="color:#f92672">+&lt;/span> v33;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v36 &lt;span style="color:#f92672">=&lt;/span> j &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> input[&lt;span style="color:#ae81ff">225&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v44 &lt;span style="color:#f92672">=&lt;/span> v35 &lt;span style="color:#f92672">+&lt;/span> v36;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> v47 &lt;span style="color:#f92672">+=&lt;/span> v35 &lt;span style="color:#f92672">+&lt;/span> v36;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">--&lt;/span>v47;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( v47 &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;[+] Stage 2: Predict the final card I draw.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fgets(flag, &lt;span style="color:#ae81ff">32LL&lt;/span>, stdin);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ( (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)isACard((&lt;span style="color:#66d9ef">__int64&lt;/span>)flag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">__int64&lt;/span>)j_strlen_ifunc(flag) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> flag[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;H&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> flag[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;2&amp;#39;&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf((&lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>)&lt;span style="color:#e6db74">&amp;#34;Congrats! Here is your flag: &amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">32&lt;/span>, v38, v39, v40, v41, flag[&lt;span style="color:#ae81ff">0&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> readFlag();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;You failed.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> puts(&lt;span style="color:#e6db74">&amp;#34;You failed.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>:::&lt;/p></description></item></channel></rss>