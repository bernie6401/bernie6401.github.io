<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LeetCode on SBK Hugo Site</title><link>https://bernie6401.github.io/tags/leetcode/</link><description>Recent content in LeetCode on SBK Hugo Site</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://bernie6401.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml"/><item><title>LeetCode - Two Sum</title><link>https://bernie6401.github.io/docs/leetcode/easy/leetcode---two-sum/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/leetcode/easy/leetcode---two-sum/</guid><description>&lt;h1 id="leetcode---two-sum">
 LeetCode - Two Sum
 &lt;a class="anchor" href="#leetcode---two-sum">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon--description">
 Recon &amp;amp; Description
 &lt;a class="anchor" href="#recon--description">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Description
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.&lt;/p>
&lt;p>You may assume that each input would have exactly one solution, and you may not use the same element twice.&lt;/p>
&lt;p>You can return the answer in any order.&lt;/p>
&lt;p>Example 1:&lt;/p>
&lt;pre tabindex="0">&lt;code>Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
&lt;/code>&lt;/pre>&lt;p>Example 2:&lt;/p></description></item><item><title>LeetCode - Valid Parentheses</title><link>https://bernie6401.github.io/docs/leetcode/easy/leetcode---valid-parentheses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bernie6401.github.io/docs/leetcode/easy/leetcode---valid-parentheses/</guid><description>&lt;h1 id="leetcode---valid-parentheses">
 LeetCode - Valid Parentheses
 &lt;a class="anchor" href="#leetcode---valid-parentheses">#&lt;/a>
&lt;/h1>
&lt;h2 id="recon--description">
 Recon &amp;amp; Description
 &lt;a class="anchor" href="#recon--description">#&lt;/a>
&lt;/h2>
&lt;p>:::spoiler Description
Given a string s containing just the characters &amp;lsquo;(&amp;rsquo;, &amp;lsquo;)&amp;rsquo;, &amp;lsquo;{&amp;rsquo;, &amp;lsquo;}&amp;rsquo;, &amp;lsquo;[&amp;rsquo; and &amp;lsquo;]&amp;rsquo;, determine if the input string is valid.&lt;/p>
&lt;p>An input string is valid if:&lt;/p>
&lt;pre>&lt;code>Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
&lt;/code>&lt;/pre>
&lt;p>Example 1:&lt;/p></description></item></channel></rss>